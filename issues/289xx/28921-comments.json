[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28921).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "created_at" : "2023-11-20T22:12:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28921#issuecomment-1819887472",
      "id" : 1819887472,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28921",
      "node_id" : "IC_kwDOABII585seUdw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1819887472/reactions"
      },
      "updated_at" : "2023-11-20T22:12:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1819887472",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28921#discussion_r1400158381"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1400158381"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    DataStream stream{};\r\n```\r\n\r\nThe values are ignored either way, so it seems better to remove them. `CDataStream` will go away anyway, soon.",
      "commit_id" : "118d60e95cc5c8c0d5a88c0d16904355c7e0c5f6",
      "created_at" : "2023-11-21T08:00:15Z",
      "diff_hunk" : "@@ -0,0 +1,108 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_IPC_CAPNP_COMMON_TYPES_H\n+#define BITCOIN_IPC_CAPNP_COMMON_TYPES_H\n+\n+#include <clientversion.h>\n+#include <streams.h>\n+#include <univalue.h>\n+\n+#include <cstddef>\n+#include <mp/proxy-types.h>\n+#include <type_traits>\n+#include <utility>\n+\n+namespace ipc {\n+namespace capnp {\n+//! Use SFINAE to define Serializeable<T> trait which is true if type T has a\n+//! Serialize(stream) method, false otherwise.\n+template <typename T>\n+struct Serializable {\n+private:\n+    template <typename C>\n+    static std::true_type test(decltype(std::declval<C>().Serialize(std::declval<std::nullptr_t&>()))*);\n+    template <typename>\n+    static std::false_type test(...);\n+\n+public:\n+    static constexpr bool value = decltype(test<T>(nullptr))::value;\n+};\n+\n+//! Use SFINAE to define Unserializeable<T> trait which is true if type T has\n+//! an Unserialize(stream) method, false otherwise.\n+template <typename T>\n+struct Unserializable {\n+private:\n+    template <typename C>\n+    static std::true_type test(decltype(std::declval<C>().Unserialize(std::declval<std::nullptr_t&>()))*);\n+    template <typename>\n+    static std::false_type test(...);\n+\n+public:\n+    static constexpr bool value = decltype(test<T>(nullptr))::value;\n+};\n+} // namespace capnp\n+} // namespace ipc\n+\n+//! Functions to serialize / deserialize common bitcoin types.\n+namespace mp {\n+//! Overload multiprocess library's CustomBuildField hook to allow any\n+//! serializable object to be stored in a capnproto Data field or passed to a\n+//! canproto interface. Use Priority<1> so this hook has medium priority, and\n+//! higher priority hooks could take precedence over this one.\n+template <typename LocalType, typename Value, typename Output>\n+void CustomBuildField(\n+    TypeList<LocalType>, Priority<1>, InvokeContext& invoke_context, Value&& value, Output&& output,\n+    // Enable if serializeable and if LocalType is not cv or reference\n+    // qualified. If LocalType is cv or reference qualified, it is important to\n+    // fall back to lower-priority Priority<0> implementation of this function\n+    // that strips cv references, to prevent this CustomBuildField overload from\n+    // taking precedence over more narrow overloads for specific LocalTypes.\n+    typename std::enable_if_t<ipc::capnp::Serializable<LocalType>::value &&\n+                              std::is_same_v<LocalType, std::remove_cv_t<std::remove_reference_t<LocalType>>>>* enable = nullptr)\n+{\n+    CDataStream stream(SER_NETWORK, CLIENT_VERSION);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28921#discussion_r1400158381",
      "id" : 1400158381,
      "line" : 66,
      "node_id" : "PRRC_kwDOABII585TdLit",
      "original_commit_id" : "118d60e95cc5c8c0d5a88c0d16904355c7e0c5f6",
      "original_line" : 66,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/ipc/capnp/common-types.h",
      "position" : 66,
      "pull_request_review_id" : 1741322101,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28921",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1400158381/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-21T08:00:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1400158381",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28921#discussion_r1400551468"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1400551468"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This type of interface where we pass serialized objects (using our serialization) via capnp data obviously fits in quite well with our code base, but I am wondering if this is a nice design for external use? since now anybody using it needs capnp and our serialization format.\r\n\r\nI might have missed prior discussion on this, is the plan to gradually convert more of the interface to native capnp types?\r\n\r\n---\r\n\r\nI really like this conversion glue by the way (i.e. `$Proxy.wrap`, etc.)! I've been working on a clone of https://github.com/google/libprotobuf-mutator for capnp, which I eventually would like to use to fuzz the multi-process interfaces. Conversion from capnp to c++ types is always a bit annoying, so your work on this could integrate quite well I think.",
      "commit_id" : "118d60e95cc5c8c0d5a88c0d16904355c7e0c5f6",
      "created_at" : "2023-11-21T12:47:54Z",
      "diff_hunk" : "@@ -0,0 +1,18 @@\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+@0xd71b0fc8727fdf83;\n+\n+using Cxx = import \"/capnp/c++.capnp\";\n+$Cxx.namespace(\"gen\");\n+\n+using Proxy = import \"/mp/proxy.capnp\";\n+$Proxy.include(\"test/ipc_test.h\");\n+$Proxy.includeTypes(\"ipc/capnp/common-types.h\");\n+\n+interface FooInterface $Proxy.wrap(\"FooImplementation\") {\n+    add @0 (a :Int32, b :Int32) -> (result :Int32);\n+    passOutPoint @1 (arg :Data) -> (result :Data);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28921#discussion_r1400551468",
      "id" : 1400551468,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII585Tergs",
      "original_commit_id" : "118d60e95cc5c8c0d5a88c0d16904355c7e0c5f6",
      "original_line" : 16,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/test/ipc_test.capnp",
      "position" : 16,
      "pull_request_review_id" : 1741945816,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28921",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1400551468/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-21T12:47:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1400551468",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   }
]
