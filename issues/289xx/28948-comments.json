[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28948).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28886](https://github.com/bitcoin/bitcoin/pull/28886) (refactor: Replace sets of txiter with CTxMemPoolEntryRefs by TheCharlatan)\n* [#28690](https://github.com/bitcoin/bitcoin/pull/28690) (build: Introduce internal kernel library by TheCharlatan)\n* [#28335](https://github.com/bitcoin/bitcoin/pull/28335) (RFC: Remove boost usage from kernel api / headers by TheCharlatan)\n* [#25038](https://github.com/bitcoin/bitcoin/pull/25038) (policy: nVersion=3 and Package RBF by glozow)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-11-27T15:17:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28948#issuecomment-1828035445",
      "id" : 1828035445,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28948",
      "node_id" : "IC_kwDOABII585s9Zt1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1828035445/reactions"
      },
      "updated_at" : "2023-11-27T21:02:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1828035445",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1406359885"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406359885"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Use `Wtxid`?",
      "commit_id" : "8e7f1ac3d3c19f143eb129089cfe7321e782ec93",
      "created_at" : "2023-11-27T15:41:52Z",
      "diff_hunk" : "@@ -0,0 +1,59 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_V3_POLICY_H\n+#define BITCOIN_POLICY_V3_POLICY_H\n+\n+#include <consensus/amount.h>\n+#include <policy/packages.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <txmempool.h>\n+\n+#include <string>\n+\n+// This module enforces rules for transactions with nVersion=3 (\"V3 transactions\") which help make\n+// RBF abilities more robust.\n+\n+// V3 only allows 1 parent and 1 child.\n+/** Maximum number of transactions including an unconfirmed tx and its descendants. */\n+static constexpr unsigned int V3_DESCENDANT_LIMIT{2};\n+/** Maximum number of transactions including a V3 tx and all its mempool ancestors. */\n+static constexpr unsigned int V3_ANCESTOR_LIMIT{2};\n+\n+/** Maximum weight of a tx which spends from an unconfirmed V3 transaction. */\n+static constexpr int64_t V3_CHILD_MAX_WEIGHT{4000};\n+// Since these limits are within the default ancestor/descendant limits, there is no need to\n+// additionally check ancestor/descendant limits for V3 transactions.\n+static_assert(V3_CHILD_MAX_WEIGHT + MAX_STANDARD_TX_WEIGHT <= DEFAULT_ANCESTOR_SIZE_LIMIT_KVB * WITNESS_SCALE_FACTOR * 1000);\n+static_assert(V3_CHILD_MAX_WEIGHT + MAX_STANDARD_TX_WEIGHT <= DEFAULT_DESCENDANT_SIZE_LIMIT_KVB * WITNESS_SCALE_FACTOR * 1000);\n+\n+/** Any two unconfirmed transactions with a dependency relationship must either both be V3 or both\n+ * non-V3. Check this rule for any list of unconfirmed transactions.\n+ * @returns a tuple (parent wtxid, child wtxid, bool) where one is V3 but the other is not, if at\n+ * least one such pair exists. The bool represents whether the child is v3 or not. There may be\n+ * other such pairs that are not returned.\n+ * Otherwise std::nullopt.\n+ */\n+std::optional<std::tuple<uint256, uint256, bool>> CheckV3Inheritance(const Package& package);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1406359885",
      "id" : 1406359885,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585T01lN",
      "original_commit_id" : "18406ecbd5080864154c6a2fc756e6b96ff4caf0",
      "original_line" : 39,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/policy/v3_policy.h",
      "position" : null,
      "pull_request_review_id" : 1750753834,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406359885/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-27T15:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406359885",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1406361767"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406361767"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Are these txids/wtxids?",
      "commit_id" : "8e7f1ac3d3c19f143eb129089cfe7321e782ec93",
      "created_at" : "2023-11-27T15:42:53Z",
      "diff_hunk" : "@@ -0,0 +1,59 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_V3_POLICY_H\n+#define BITCOIN_POLICY_V3_POLICY_H\n+\n+#include <consensus/amount.h>\n+#include <policy/packages.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <txmempool.h>\n+\n+#include <string>\n+\n+// This module enforces rules for transactions with nVersion=3 (\"V3 transactions\") which help make\n+// RBF abilities more robust.\n+\n+// V3 only allows 1 parent and 1 child.\n+/** Maximum number of transactions including an unconfirmed tx and its descendants. */\n+static constexpr unsigned int V3_DESCENDANT_LIMIT{2};\n+/** Maximum number of transactions including a V3 tx and all its mempool ancestors. */\n+static constexpr unsigned int V3_ANCESTOR_LIMIT{2};\n+\n+/** Maximum weight of a tx which spends from an unconfirmed V3 transaction. */\n+static constexpr int64_t V3_CHILD_MAX_WEIGHT{4000};\n+// Since these limits are within the default ancestor/descendant limits, there is no need to\n+// additionally check ancestor/descendant limits for V3 transactions.\n+static_assert(V3_CHILD_MAX_WEIGHT + MAX_STANDARD_TX_WEIGHT <= DEFAULT_ANCESTOR_SIZE_LIMIT_KVB * WITNESS_SCALE_FACTOR * 1000);\n+static_assert(V3_CHILD_MAX_WEIGHT + MAX_STANDARD_TX_WEIGHT <= DEFAULT_DESCENDANT_SIZE_LIMIT_KVB * WITNESS_SCALE_FACTOR * 1000);\n+\n+/** Any two unconfirmed transactions with a dependency relationship must either both be V3 or both\n+ * non-V3. Check this rule for any list of unconfirmed transactions.\n+ * @returns a tuple (parent wtxid, child wtxid, bool) where one is V3 but the other is not, if at\n+ * least one such pair exists. The bool represents whether the child is v3 or not. There may be\n+ * other such pairs that are not returned.\n+ * Otherwise std::nullopt.\n+ */\n+std::optional<std::tuple<uint256, uint256, bool>> CheckV3Inheritance(const Package& package);\n+\n+/** Every transaction that spends an unconfirmed V3 transaction must also be V3. */\n+std::optional<std::string> CheckV3Inheritance(const CTransactionRef& ptx,\n+                                              const CTxMemPool::setEntries& ancestors);\n+\n+/** The following rules apply to V3 transactions:\n+ * 1. Tx with all of its ancestors (including non-nVersion=3) must be within V3_ANCESTOR_SIZE_LIMIT_KVB.\n+ * 2. Tx with all of its ancestors must be within V3_ANCESTOR_LIMIT.\n+ *\n+ * If a V3 tx has V3 ancestors,\n+ * 1. Each V3 ancestor and its descendants must be within V3_DESCENDANT_LIMIT.\n+ * 2. The tx must be within V3_CHILD_MAX_SIZE.\n+ *\n+ * @returns an error string if any V3 rule was violated, otherwise std::nullopt.\n+ */\n+std::optional<std::string> ApplyV3Rules(const CTransactionRef& ptx,\n+                                        const CTxMemPool::setEntries& ancestors,\n+                                        const std::set<uint256>& direct_conflicts);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1406361767",
      "id" : 1406361767,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585T02Cn",
      "original_commit_id" : "18406ecbd5080864154c6a2fc756e6b96ff4caf0",
      "original_line" : 57,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/policy/v3_policy.h",
      "position" : null,
      "pull_request_review_id" : 1750753834,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406361767/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-27T15:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406361767",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1406442920"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406442920"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed to specify `Txid`. I assume we want a \"update as we touch these lines\" kind of thing so I added a preceding commit to make `m_conflicts` a `std::set<Txid>` instead of uint256, and updated other places as necessary to compile.",
      "commit_id" : "8e7f1ac3d3c19f143eb129089cfe7321e782ec93",
      "created_at" : "2023-11-27T16:38:28Z",
      "diff_hunk" : "@@ -0,0 +1,59 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_V3_POLICY_H\n+#define BITCOIN_POLICY_V3_POLICY_H\n+\n+#include <consensus/amount.h>\n+#include <policy/packages.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <txmempool.h>\n+\n+#include <string>\n+\n+// This module enforces rules for transactions with nVersion=3 (\"V3 transactions\") which help make\n+// RBF abilities more robust.\n+\n+// V3 only allows 1 parent and 1 child.\n+/** Maximum number of transactions including an unconfirmed tx and its descendants. */\n+static constexpr unsigned int V3_DESCENDANT_LIMIT{2};\n+/** Maximum number of transactions including a V3 tx and all its mempool ancestors. */\n+static constexpr unsigned int V3_ANCESTOR_LIMIT{2};\n+\n+/** Maximum weight of a tx which spends from an unconfirmed V3 transaction. */\n+static constexpr int64_t V3_CHILD_MAX_WEIGHT{4000};\n+// Since these limits are within the default ancestor/descendant limits, there is no need to\n+// additionally check ancestor/descendant limits for V3 transactions.\n+static_assert(V3_CHILD_MAX_WEIGHT + MAX_STANDARD_TX_WEIGHT <= DEFAULT_ANCESTOR_SIZE_LIMIT_KVB * WITNESS_SCALE_FACTOR * 1000);\n+static_assert(V3_CHILD_MAX_WEIGHT + MAX_STANDARD_TX_WEIGHT <= DEFAULT_DESCENDANT_SIZE_LIMIT_KVB * WITNESS_SCALE_FACTOR * 1000);\n+\n+/** Any two unconfirmed transactions with a dependency relationship must either both be V3 or both\n+ * non-V3. Check this rule for any list of unconfirmed transactions.\n+ * @returns a tuple (parent wtxid, child wtxid, bool) where one is V3 but the other is not, if at\n+ * least one such pair exists. The bool represents whether the child is v3 or not. There may be\n+ * other such pairs that are not returned.\n+ * Otherwise std::nullopt.\n+ */\n+std::optional<std::tuple<uint256, uint256, bool>> CheckV3Inheritance(const Package& package);\n+\n+/** Every transaction that spends an unconfirmed V3 transaction must also be V3. */\n+std::optional<std::string> CheckV3Inheritance(const CTransactionRef& ptx,\n+                                              const CTxMemPool::setEntries& ancestors);\n+\n+/** The following rules apply to V3 transactions:\n+ * 1. Tx with all of its ancestors (including non-nVersion=3) must be within V3_ANCESTOR_SIZE_LIMIT_KVB.\n+ * 2. Tx with all of its ancestors must be within V3_ANCESTOR_LIMIT.\n+ *\n+ * If a V3 tx has V3 ancestors,\n+ * 1. Each V3 ancestor and its descendants must be within V3_DESCENDANT_LIMIT.\n+ * 2. The tx must be within V3_CHILD_MAX_SIZE.\n+ *\n+ * @returns an error string if any V3 rule was violated, otherwise std::nullopt.\n+ */\n+std::optional<std::string> ApplyV3Rules(const CTransactionRef& ptx,\n+                                        const CTxMemPool::setEntries& ancestors,\n+                                        const std::set<uint256>& direct_conflicts);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1406442920",
      "id" : 1406442920,
      "in_reply_to_id" : 1406361767,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585T1J2o",
      "original_commit_id" : "18406ecbd5080864154c6a2fc756e6b96ff4caf0",
      "original_line" : 57,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/policy/v3_policy.h",
      "position" : null,
      "pull_request_review_id" : 1750885461,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406442920/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-27T16:38:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406442920",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1406442992"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406442992"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated this file to use `Txid`/`Wtxid` instead of uint256 everywhere.",
      "commit_id" : "8e7f1ac3d3c19f143eb129089cfe7321e782ec93",
      "created_at" : "2023-11-27T16:38:31Z",
      "diff_hunk" : "@@ -0,0 +1,59 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_V3_POLICY_H\n+#define BITCOIN_POLICY_V3_POLICY_H\n+\n+#include <consensus/amount.h>\n+#include <policy/packages.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <txmempool.h>\n+\n+#include <string>\n+\n+// This module enforces rules for transactions with nVersion=3 (\"V3 transactions\") which help make\n+// RBF abilities more robust.\n+\n+// V3 only allows 1 parent and 1 child.\n+/** Maximum number of transactions including an unconfirmed tx and its descendants. */\n+static constexpr unsigned int V3_DESCENDANT_LIMIT{2};\n+/** Maximum number of transactions including a V3 tx and all its mempool ancestors. */\n+static constexpr unsigned int V3_ANCESTOR_LIMIT{2};\n+\n+/** Maximum weight of a tx which spends from an unconfirmed V3 transaction. */\n+static constexpr int64_t V3_CHILD_MAX_WEIGHT{4000};\n+// Since these limits are within the default ancestor/descendant limits, there is no need to\n+// additionally check ancestor/descendant limits for V3 transactions.\n+static_assert(V3_CHILD_MAX_WEIGHT + MAX_STANDARD_TX_WEIGHT <= DEFAULT_ANCESTOR_SIZE_LIMIT_KVB * WITNESS_SCALE_FACTOR * 1000);\n+static_assert(V3_CHILD_MAX_WEIGHT + MAX_STANDARD_TX_WEIGHT <= DEFAULT_DESCENDANT_SIZE_LIMIT_KVB * WITNESS_SCALE_FACTOR * 1000);\n+\n+/** Any two unconfirmed transactions with a dependency relationship must either both be V3 or both\n+ * non-V3. Check this rule for any list of unconfirmed transactions.\n+ * @returns a tuple (parent wtxid, child wtxid, bool) where one is V3 but the other is not, if at\n+ * least one such pair exists. The bool represents whether the child is v3 or not. There may be\n+ * other such pairs that are not returned.\n+ * Otherwise std::nullopt.\n+ */\n+std::optional<std::tuple<uint256, uint256, bool>> CheckV3Inheritance(const Package& package);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1406442992",
      "id" : 1406442992,
      "in_reply_to_id" : 1406359885,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585T1J3w",
      "original_commit_id" : "18406ecbd5080864154c6a2fc756e6b96ff4caf0",
      "original_line" : 39,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/policy/v3_policy.h",
      "position" : null,
      "pull_request_review_id" : 1750885588,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406442992/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-27T16:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406442992",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Changed tx_pool and tx_package_eval fuzzer to sometimes create v3 transactions, and check v3 invariants at the end of each iteration.",
      "created_at" : "2023-11-27T16:38:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28948#issuecomment-1828199453",
      "id" : 1828199453,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28948",
      "node_id" : "IC_kwDOABII585s-Bwd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1828199453/reactions"
      },
      "updated_at" : "2023-11-27T16:56:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1828199453",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```\r\n$ echo \"ACVL/gA+Pj4+Pj4+3D4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPT09//8AAP/8AAAAigAAAAAAAAAAAAAAAAAAAAAAAAD6AAAAAAAIAQk9AAAAAAAAAAAAAAAAAAAAABMA9wAAAAYiACkAAAAAAAAAAAD///8AAPkAAAAkAAAAAACiAGxpbWl0YW739/f3Y2VzdG9yc2lSemUAAAAmAKMAAP9kZQBi4nUxZ2xvZ2ZpbGUAJgD/AA==\" | base64 --decode > tx_pool-bbe7bc3c2a6d0cb1a21c48506cd16fdb807ae3cf.crash\r\n$ FUZZ=tx_pool ./src/test/fuzz/fuzz tx_pool-bbe7bc3c2a6d0cb1a21c48506cd16fdb807ae3cf.crash\r\nINFO: Running with entropic power schedule (0xFF, 100).\r\nINFO: Seed: 1136977254\r\nINFO: Loaded 1 modules   (572973 inline 8-bit counters): 572973 [0x563877bfae70, 0x563877c86c9d), \r\nINFO: Loaded 1 PC tables (572973 PCs): 572973 [0x563877c86ca0,0x563878544f70), \r\n/workdir/fuzz_bins/fuzz_libfuzzer: Running 1 inputs 1 time(s) each.\r\nRunning: /workdir/crashes/crash-bbe7bc3c2a6d0cb1a21c48506cd16fdb807ae3cf\r\ntest/fuzz/tx_pool.cpp:114 Finish: Assertion `entry.GetModFeesWithDescendants() > 0' failed.\r\n==1877== ERROR: libFuzzer: deadly signal\r\n    #0 0x5638764b4c88 in __sanitizer_print_stack_trace (/workdir/fuzz_bins/fuzz_libfuzzer+0x14b4c88) (BuildId: 7fbfcc32a58adde3cb3dcfe8229731b5bb30d71d)\r\n    #1 0x56387648c04c in fuzzer::PrintStackTrace() crtstuff.c\r\n    #2 0x563876471e67 in fuzzer::Fuzzer::CrashCallback() crtstuff.c\r\n    #3 0x7f168cc0850f  (/lib/x86_64-linux-gnu/libc.so.6+0x3c50f) (BuildId: 8a1bf172e710f8ca0c1576912c057b45f90d90d8)\r\n    #4 0x7f168cc560fb  (/lib/x86_64-linux-gnu/libc.so.6+0x8a0fb) (BuildId: 8a1bf172e710f8ca0c1576912c057b45f90d90d8)\r\n    #5 0x7f168cc08471 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x3c471) (BuildId: 8a1bf172e710f8ca0c1576912c057b45f90d90d8)\r\n    #6 0x7f168cbf24b1 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x264b1) (BuildId: 8a1bf172e710f8ca0c1576912c057b45f90d90d8)\r\n    #7 0x5638778c6167 in assertion_fail(std::basic_string_view<char, std::char_traits<char>>, int, std::basic_string_view<char, std::char_traits<char>>, std::basic_string_view<char, std::char_traits<char>>) check.cpp\r\n    #8 0x56387682def1 in (anonymous namespace)::Finish(FuzzedDataProvider&, (anonymous namespace)::MockedTxPool&, Chainstate&) tx_pool.cpp\r\n    #9 0x563876832e79 in (anonymous namespace)::tx_pool_fuzz_target(Span<unsigned char const>) tx_pool.cpp\r\n    #10 0x5638768972c7 in LLVMFuzzerTestOneInput fuzz.cpp\r\n    #11 0x563876473334 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) crtstuff.c\r\n    #12 0x56387645c263 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) crtstuff.c\r\n    #13 0x563876461e86 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) crtstuff.c\r\n    #14 0x56387648c9d6 in main crtstuff.c\r\n    #15 0x7f168cbf36c9  (/lib/x86_64-linux-gnu/libc.so.6+0x276c9) (BuildId: 8a1bf172e710f8ca0c1576912c057b45f90d90d8)\r\n    #16 0x7f168cbf3784 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x27784) (BuildId: 8a1bf172e710f8ca0c1576912c057b45f90d90d8)\r\n    #17 0x563876456cd0 in _start (/workdir/fuzz_bins/fuzz_libfuzzer+0x1456cd0) (BuildId: 7fbfcc32a58adde3cb3dcfe8229731b5bb30d71d)\r\n\r\nNOTE: libFuzzer has rudimentary signal handlers.\r\n      Combine libFuzzer with AddressSanitizer or similar for better crash reports.\r\nSUMMARY: libFuzzer: deadly signal\r\n```",
      "created_at" : "2023-11-27T18:02:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28948#issuecomment-1828351782",
      "id" : 1828351782,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28948",
      "node_id" : "IC_kwDOABII585s-m8m",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1828351782/reactions"
      },
      "updated_at" : "2023-11-27T18:02:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1828351782",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Even though we don't have cluster limits, we are able to treat these transactions as having as having a maximum cluster size of 2. \r\n\r\nI donât think adopting cluster limits instead of max ancestors / descendants limits change anything for V3 packages. What matters is the overall weight limit of the package (4000 WU for a child), as this limit draws an anti-pinning security bound on the lowest off-chain payment that one can afford to burn as an absolute fee . Limit to be evaluated in function of network mempools congestion. Removing the absolute fee replacement rules I think would simplify current pinning analysis - though sounds this is beyond the scope of this proposal.",
      "created_at" : "2023-11-28T00:07:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28948#issuecomment-1828842996",
      "id" : 1828842996,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28948",
      "node_id" : "IC_kwDOABII585tAe30",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1828842996/reactions"
      },
      "updated_at" : "2023-11-28T00:07:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1828842996",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1408171165"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408171165"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If `bypass_limits` is set for a single submission, this can fail since no trimming is done after that.",
      "commit_id" : "d79f36b1ecb2f26e3dd199e2bf1a0346627994ba",
      "created_at" : "2023-11-28T18:02:18Z",
      "diff_hunk" : "@@ -301,5 +302,21 @@ FUZZ_TARGET(tx_package_eval, .init = initialize_tx_pool)\n     UnregisterSharedValidationInterface(outpoints_updater);\n \n     WITH_LOCK(::cs_main, tx_pool.check(chainstate.CoinsTip(), chainstate.m_chain.Height() + 1));\n+    LOCK(tx_pool.cs);\n+    for (const auto& tx_info : tx_pool.infoAll()) {\n+        const auto& entry = *Assert(tx_pool.GetEntry(tx_info.tx->GetHash()));\n+        if (tx_info.tx->nVersion == 3) {\n+            // Check that special v3 ancestor/descendant limits and rules are always respected\n+            Assert(entry.GetCountWithDescendants() <= V3_DESCENDANT_LIMIT);\n+            Assert(entry.GetCountWithAncestors() <= V3_ANCESTOR_LIMIT);\n+            if (entry.GetCountWithAncestors() > 1) {\n+                Assert(entry.GetTxWeight() <= V3_CHILD_MAX_WEIGHT);\n+            }\n+        }\n+        // Transactions with fees of 0 or lower should be proactively trimmed.\n+        if (tx_pool.m_min_relay_feerate.GetFeePerK() > 0) {\n+            Assert(entry.GetModFeesWithDescendants() > 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1408171165",
      "id" : 1408171165,
      "line" : 318,
      "node_id" : "PRRC_kwDOABII585T7vyd",
      "original_commit_id" : "d79f36b1ecb2f26e3dd199e2bf1a0346627994ba",
      "original_line" : 318,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/test/fuzz/package_eval.cpp",
      "position" : 34,
      "pull_request_review_id" : 1753556814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408171165/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-28T18:02:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408171165",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1408277869"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408277869"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We need to limit the sigops-adjusted size of the child, since that effects the effectiveness of a potential pin. This difference can be up to 20x for really strange scripts.\r\n\r\nSimplest but perhaps controversial would be to disallow v3 transactions to have sigops-adjusted size different than bip141 vsize, Other solution would be to directly feed in the adjusted vsize and check against that instead of weight.",
      "commit_id" : "d79f36b1ecb2f26e3dd199e2bf1a0346627994ba",
      "created_at" : "2023-11-28T19:19:45Z",
      "diff_hunk" : "@@ -0,0 +1,107 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <policy/v3_policy.h>\n+\n+#include <coins.h>\n+#include <consensus/amount.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+\n+#include <numeric>\n+#include <vector>\n+\n+std::optional<std::tuple<Wtxid, Wtxid, bool>> CheckV3Inheritance(const Package& package)\n+{\n+    assert(std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx != nullptr;}));\n+    // If all transactions are V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion == 3;})) {\n+        return std::nullopt;\n+    }\n+    // If all transactions are non-V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion != 3;})) {\n+        return std::nullopt;\n+    }\n+    // Look for a V3 transaction spending a non-V3 or vice versa.\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> v3_txid_to_wtxid;\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> non_v3_txid_to_wtxid;\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        } else {\n+            non_v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        }\n+    }\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = non_v3_txid_to_wtxid.find(input.prevout.hash); it != non_v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), true);\n+                }\n+            }\n+        } else {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = v3_txid_to_wtxid.find(input.prevout.hash); it != v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), false);\n+                }\n+            }\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> CheckV3Inheritance(const CTransactionRef& ptx,\n+                                              const CTxMemPool::setEntries& ancestors)\n+{\n+    for (const auto& entry : ancestors) {\n+        if (ptx->nVersion != 3 && entry->GetTx().nVersion == 3) {\n+            return strprintf(\"tx that spends from %s must be nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        } else if (ptx->nVersion == 3 && entry->GetTx().nVersion != 3) {\n+            return strprintf(\"v3 tx cannot spend from %s which is not nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> ApplyV3Rules(const CTransactionRef& ptx,\n+                                        const CTxMemPool::setEntries& ancestors,\n+                                        const std::set<Txid>& direct_conflicts)\n+{\n+    // These rules only apply to transactions with nVersion=3.\n+    if (ptx->nVersion != 3) return std::nullopt;\n+\n+    if (ancestors.size() + 1 > V3_ANCESTOR_LIMIT) {\n+        return strprintf(\"tx %s would have too many ancestors\", ptx->GetWitnessHash().ToString());\n+    }\n+    if (ancestors.empty()) {\n+        return std::nullopt;\n+    } else {\n+        const auto tx_weight{GetTransactionWeight(*ptx)};\n+        // If this transaction spends V3 parents, it cannot be too large.\n+        if (tx_weight > V3_CHILD_MAX_WEIGHT) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1408277869",
      "id" : 1408277869,
      "line" : 84,
      "node_id" : "PRRC_kwDOABII585T8J1t",
      "original_commit_id" : "8ae62c58cf53792b4fb87d6eec4d6f224e7c2571",
      "original_line" : 84,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/policy/v3_policy.cpp",
      "position" : 84,
      "pull_request_review_id" : 1753714068,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408277869/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-28T19:19:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408277869",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1408287424"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408287424"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes definitely\r\n\r\n> disallow v3 transactions to have sigops-adjusted size different than bip141 vsize\r\n\r\nI actually think this is more complicated than adding a sigop limit, since we'd need to define what sigop-adjusted size is. Or just word it as \"number of sigops times this constant cannot be larger than the weight\" I guess.",
      "commit_id" : "d79f36b1ecb2f26e3dd199e2bf1a0346627994ba",
      "created_at" : "2023-11-28T19:29:24Z",
      "diff_hunk" : "@@ -0,0 +1,107 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <policy/v3_policy.h>\n+\n+#include <coins.h>\n+#include <consensus/amount.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+\n+#include <numeric>\n+#include <vector>\n+\n+std::optional<std::tuple<Wtxid, Wtxid, bool>> CheckV3Inheritance(const Package& package)\n+{\n+    assert(std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx != nullptr;}));\n+    // If all transactions are V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion == 3;})) {\n+        return std::nullopt;\n+    }\n+    // If all transactions are non-V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion != 3;})) {\n+        return std::nullopt;\n+    }\n+    // Look for a V3 transaction spending a non-V3 or vice versa.\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> v3_txid_to_wtxid;\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> non_v3_txid_to_wtxid;\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        } else {\n+            non_v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        }\n+    }\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = non_v3_txid_to_wtxid.find(input.prevout.hash); it != non_v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), true);\n+                }\n+            }\n+        } else {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = v3_txid_to_wtxid.find(input.prevout.hash); it != v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), false);\n+                }\n+            }\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> CheckV3Inheritance(const CTransactionRef& ptx,\n+                                              const CTxMemPool::setEntries& ancestors)\n+{\n+    for (const auto& entry : ancestors) {\n+        if (ptx->nVersion != 3 && entry->GetTx().nVersion == 3) {\n+            return strprintf(\"tx that spends from %s must be nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        } else if (ptx->nVersion == 3 && entry->GetTx().nVersion != 3) {\n+            return strprintf(\"v3 tx cannot spend from %s which is not nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> ApplyV3Rules(const CTransactionRef& ptx,\n+                                        const CTxMemPool::setEntries& ancestors,\n+                                        const std::set<Txid>& direct_conflicts)\n+{\n+    // These rules only apply to transactions with nVersion=3.\n+    if (ptx->nVersion != 3) return std::nullopt;\n+\n+    if (ancestors.size() + 1 > V3_ANCESTOR_LIMIT) {\n+        return strprintf(\"tx %s would have too many ancestors\", ptx->GetWitnessHash().ToString());\n+    }\n+    if (ancestors.empty()) {\n+        return std::nullopt;\n+    } else {\n+        const auto tx_weight{GetTransactionWeight(*ptx)};\n+        // If this transaction spends V3 parents, it cannot be too large.\n+        if (tx_weight > V3_CHILD_MAX_WEIGHT) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1408287424",
      "id" : 1408287424,
      "in_reply_to_id" : 1408277869,
      "line" : 84,
      "node_id" : "PRRC_kwDOABII585T8MLA",
      "original_commit_id" : "8ae62c58cf53792b4fb87d6eec4d6f224e7c2571",
      "original_line" : 84,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/policy/v3_policy.cpp",
      "position" : 84,
      "pull_request_review_id" : 1753729645,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408287424/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-28T19:29:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408287424",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1408289426"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408289426"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah true. I forgot that we do an atmp here too. I don't think we should do `bypass_limits` though - couldn't that cause the result to deviate from the package eval result?",
      "commit_id" : "d79f36b1ecb2f26e3dd199e2bf1a0346627994ba",
      "created_at" : "2023-11-28T19:31:03Z",
      "diff_hunk" : "@@ -301,5 +302,21 @@ FUZZ_TARGET(tx_package_eval, .init = initialize_tx_pool)\n     UnregisterSharedValidationInterface(outpoints_updater);\n \n     WITH_LOCK(::cs_main, tx_pool.check(chainstate.CoinsTip(), chainstate.m_chain.Height() + 1));\n+    LOCK(tx_pool.cs);\n+    for (const auto& tx_info : tx_pool.infoAll()) {\n+        const auto& entry = *Assert(tx_pool.GetEntry(tx_info.tx->GetHash()));\n+        if (tx_info.tx->nVersion == 3) {\n+            // Check that special v3 ancestor/descendant limits and rules are always respected\n+            Assert(entry.GetCountWithDescendants() <= V3_DESCENDANT_LIMIT);\n+            Assert(entry.GetCountWithAncestors() <= V3_ANCESTOR_LIMIT);\n+            if (entry.GetCountWithAncestors() > 1) {\n+                Assert(entry.GetTxWeight() <= V3_CHILD_MAX_WEIGHT);\n+            }\n+        }\n+        // Transactions with fees of 0 or lower should be proactively trimmed.\n+        if (tx_pool.m_min_relay_feerate.GetFeePerK() > 0) {\n+            Assert(entry.GetModFeesWithDescendants() > 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1408289426",
      "id" : 1408289426,
      "in_reply_to_id" : 1408171165,
      "line" : 318,
      "node_id" : "PRRC_kwDOABII585T8MqS",
      "original_commit_id" : "d79f36b1ecb2f26e3dd199e2bf1a0346627994ba",
      "original_line" : 318,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/test/fuzz/package_eval.cpp",
      "position" : 34,
      "pull_request_review_id" : 1753732264,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408289426/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-28T19:31:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408289426",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1408290515"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408290515"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yeah I don't think we need to ever",
      "commit_id" : "d79f36b1ecb2f26e3dd199e2bf1a0346627994ba",
      "created_at" : "2023-11-28T19:32:13Z",
      "diff_hunk" : "@@ -301,5 +302,21 @@ FUZZ_TARGET(tx_package_eval, .init = initialize_tx_pool)\n     UnregisterSharedValidationInterface(outpoints_updater);\n \n     WITH_LOCK(::cs_main, tx_pool.check(chainstate.CoinsTip(), chainstate.m_chain.Height() + 1));\n+    LOCK(tx_pool.cs);\n+    for (const auto& tx_info : tx_pool.infoAll()) {\n+        const auto& entry = *Assert(tx_pool.GetEntry(tx_info.tx->GetHash()));\n+        if (tx_info.tx->nVersion == 3) {\n+            // Check that special v3 ancestor/descendant limits and rules are always respected\n+            Assert(entry.GetCountWithDescendants() <= V3_DESCENDANT_LIMIT);\n+            Assert(entry.GetCountWithAncestors() <= V3_ANCESTOR_LIMIT);\n+            if (entry.GetCountWithAncestors() > 1) {\n+                Assert(entry.GetTxWeight() <= V3_CHILD_MAX_WEIGHT);\n+            }\n+        }\n+        // Transactions with fees of 0 or lower should be proactively trimmed.\n+        if (tx_pool.m_min_relay_feerate.GetFeePerK() > 0) {\n+            Assert(entry.GetModFeesWithDescendants() > 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1408290515",
      "id" : 1408290515,
      "in_reply_to_id" : 1408171165,
      "line" : 318,
      "node_id" : "PRRC_kwDOABII585T8M7T",
      "original_commit_id" : "d79f36b1ecb2f26e3dd199e2bf1a0346627994ba",
      "original_line" : 318,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/test/fuzz/package_eval.cpp",
      "position" : 34,
      "pull_request_review_id" : 1753734001,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408290515/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-28T19:32:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408290515",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   }
]
