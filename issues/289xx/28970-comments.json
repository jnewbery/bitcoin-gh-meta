[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28970).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [theStack](https://github.com/bitcoin/bitcoin/pull/28970#pullrequestreview-1970039534), [murchandamus](https://github.com/bitcoin/bitcoin/pull/28970#pullrequestreview-1977655865) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29641](https://github.com/bitcoin/bitcoin/pull/29641) (scripted-diff: Use LogInfo/LogDebug over LogPrintf/LogPrint by maflcko)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-11-29T16:25:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#issuecomment-1832270655",
      "id" : 1832270655,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
      "node_id" : "IC_kwDOABII585tNjs_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832270655/reactions"
      },
      "updated_at" : "2024-04-03T19:51:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832270655",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-12-11T12:53:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#issuecomment-1850023578",
      "id" : 1850023578,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
      "node_id" : "IC_kwDOABII585uRR6a",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850023578/reactions"
      },
      "updated_at" : "2023-12-11T12:53:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850023578",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased and fixed CI. This is in draft because I'm focusing on v3 stuff, can be reviewed for its approach.",
      "created_at" : "2023-12-11T19:31:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#issuecomment-1850749413",
      "id" : 1850749413,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
      "node_id" : "IC_kwDOABII585uUDHl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850749413/reactions"
      },
      "updated_at" : "2023-12-11T19:31:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850749413",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ready for un-draft?",
      "created_at" : "2024-02-22T14:43:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#issuecomment-1959598347",
      "id" : 1959598347,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
      "node_id" : "IC_kwDOABII5850zRkL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1959598347/reactions"
      },
      "updated_at" : "2024-02-22T14:43:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1959598347",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1506244026"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506244026"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I know it's populated due to this being accepted, but I think `Assume(result.m_replaced_transactions.has_value())` would be a good belt and suspenders to avoid UB in case of regression e.g., we redefined std::nulltopt mean no replacements",
      "commit_id" : "19015e3c9aed5709e776ef15bf9e73f126c7ea29",
      "created_at" : "2024-02-28T16:26:15Z",
      "diff_hunk" : "@@ -3047,17 +3076,7 @@ bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n \n         if (result.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n             LogPrint(BCLog::TXPACKAGES, \"   accepted orphan tx %s (wtxid=%s)\\n\", orphanHash.ToString(), orphan_wtxid.ToString());\n-            LogPrint(BCLog::MEMPOOL, \"AcceptToMemoryPool: peer=%d: accepted %s (wtxid=%s) (poolsz %u txn, %u kB)\\n\",\n-                peer.m_id,\n-                orphanHash.ToString(),\n-                orphan_wtxid.ToString(),\n-                m_mempool.size(), m_mempool.DynamicMemoryUsage() / 1000);\n-            RelayTransaction(orphanHash, porphanTx->GetWitnessHash());\n-            m_orphanage.AddChildrenToWorkSet(*porphanTx);\n-            m_orphanage.EraseTx(orphanHash);\n-            for (const CTransactionRef& removedTx : result.m_replaced_transactions.value()) {\n-                AddToCompactExtraTransactions(removedTx);\n-            }\n+            ProcessValidTx(porphanTx, peer.m_id, result.m_replaced_transactions.value());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1506244026",
      "id" : 1506244026,
      "line" : 3264,
      "node_id" : "PRRC_kwDOABII585Zx3W6",
      "original_commit_id" : "bbf1b836fa9e82142c534c6d7b07389326434bde",
      "original_line" : 3079,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 266,
      "pull_request_review_id" : 1906612532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506244026/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-04T15:25:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506244026",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1506255820"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506255820"
         }
      },
      "author_association" : "MEMBER",
      "body" : "this doesn't return a boolean",
      "commit_id" : "19015e3c9aed5709e776ef15bf9e73f126c7ea29",
      "created_at" : "2024-02-28T16:34:41Z",
      "diff_hunk" : "@@ -582,6 +582,15 @@ class PeerManagerImpl final : public PeerManager\n      */\n     bool MaybeDiscourageAndDisconnect(CNode& pnode, Peer& peer);\n \n+    enum class InvalidTxTask : uint8_t {\n+        NONE,\n+        ADD_ORPHAN,\n+    };\n+    /** Handle a transaction whose result was MempoolAcceptResult::ResultType::INVALID.\n+     * @returns true if this transaction is an orphan we should try to resolve. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1506255820",
      "id" : 1506255820,
      "line" : 591,
      "node_id" : "PRRC_kwDOABII585Zx6PM",
      "original_commit_id" : "3eddfb2147754c734c325e4ee0158872448a0a61",
      "original_line" : 590,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 10,
      "pull_request_review_id" : 1906612532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506255820/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-04T15:25:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506255820",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1506260613"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506260613"
         }
      },
      "author_association" : "MEMBER",
      "body" : "copy/paste error? isn't this already done in `ProcessValidTx` just above?",
      "commit_id" : "19015e3c9aed5709e776ef15bf9e73f126c7ea29",
      "created_at" : "2024-02-28T16:38:15Z",
      "diff_hunk" : "@@ -4297,28 +4373,22 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         if (result.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n             ProcessValidTx(ptx, pfrom.GetId(), result.m_replaced_transactions.value());\n             pfrom.m_last_tx_time = GetTime<std::chrono::seconds>();\n-        }\n-        else if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS)\n-        {\n-            bool fRejectedParents = false; // It may be the case that the orphans parents have all been rejected\n-\n-            // Deduplicate parent txids, so that we don't have to loop over\n-            // the same parent txid more than once down below.\n-            std::vector<uint256> unique_parents;\n-            unique_parents.reserve(tx.vin.size());\n-            for (const CTxIn& txin : tx.vin) {\n-                // We start with all parents, and then remove duplicates below.\n-                unique_parents.push_back(txin.prevout.hash);\n+            for (const CTransactionRef& removedTx : result.m_replaced_transactions.value()) {\n+                AddToCompactExtraTransactions(removedTx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1506260613",
      "id" : 1506260613,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Zx7aF",
      "original_commit_id" : "3eddfb2147754c734c325e4ee0158872448a0a61",
      "original_line" : 4377,
      "original_position" : 210,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1906612532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506260613/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-04T15:25:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506260613",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1511275969"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511275969"
         }
      },
      "author_association" : "MEMBER",
      "body" : "previously `MISSING_INPUTS` would have resulted in a continuation of the loop. A side-effect of this change is that we will detect if the orphan was rejected due to `m_recent_rejects` entries of its parents, which seems like a strict improvement?",
      "commit_id" : "19015e3c9aed5709e776ef15bf9e73f126c7ea29",
      "created_at" : "2024-03-04T14:43:38Z",
      "diff_hunk" : "@@ -3078,54 +3193,15 @@ bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n             LogPrint(BCLog::TXPACKAGES, \"   accepted orphan tx %s (wtxid=%s)\\n\", orphanHash.ToString(), orphan_wtxid.ToString());\n             ProcessValidTx(porphanTx, peer.m_id, result.m_replaced_transactions.value());\n             return true;\n-        } else if (state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n-            if (state.IsInvalid()) {\n-                LogPrint(BCLog::TXPACKAGES, \"   invalid orphan tx %s (wtxid=%s) from peer=%d. %s\\n\",\n-                    orphanHash.ToString(),\n-                    orphan_wtxid.ToString(),\n-                    peer.m_id,\n-                    state.ToString());\n-                LogPrint(BCLog::MEMPOOLREJ, \"%s (wtxid=%s) from peer=%d was not accepted: %s\\n\",\n-                    orphanHash.ToString(),\n-                    orphan_wtxid.ToString(),\n-                    peer.m_id,\n-                    state.ToString());\n-                // Maybe punish peer that gave us an invalid orphan tx\n-                MaybePunishNodeForTx(peer.m_id, state);\n-            }\n-            // Has inputs but not accepted to mempool\n-            // Probably non-standard or insufficient fee\n-            LogPrint(BCLog::TXPACKAGES, \"   removed orphan tx %s (wtxid=%s)\\n\", orphanHash.ToString(), orphan_wtxid.ToString());\n-            if (state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {\n-                // We can add the wtxid of this transaction to our reject filter.\n-                // Do not add txids of witness transactions or witness-stripped\n-                // transactions to the filter, as they can have been malleated;\n-                // adding such txids to the reject filter would potentially\n-                // interfere with relay of valid transactions from peers that\n-                // do not support wtxid-based relay. See\n-                // https://github.com/bitcoin/bitcoin/issues/8279 for details.\n-                // We can remove this restriction (and always add wtxids to\n-                // the filter even for witness stripped transactions) once\n-                // wtxid-based relay is broadly deployed.\n-                // See also comments in https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443419034\n-                // for concerns around weakening security of unupgraded nodes\n-                // if we start doing this too early.\n-                m_recent_rejects.insert(porphanTx->GetWitnessHash().ToUint256());\n-                // If the transaction failed for TX_INPUTS_NOT_STANDARD,\n-                // then we know that the witness was irrelevant to the policy\n-                // failure, since this check depends only on the txid\n-                // (the scriptPubKey being spent is covered by the txid).\n-                // Add the txid to the reject filter to prevent repeated\n-                // processing of this transaction in the event that child\n-                // transactions are later received (resulting in\n-                // parent-fetching by txid via the orphan-handling logic).\n-                if (state.GetResult() == TxValidationResult::TX_INPUTS_NOT_STANDARD && porphanTx->HasWitness()) {\n-                    // We only add the txid if it differs from the wtxid, to\n-                    // avoid wasting entries in the rolling bloom filter.\n-                    m_recent_rejects.insert(porphanTx->GetHash().ToUint256());\n-                }\n-            }\n-            m_orphanage.EraseTx(orphanHash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1511275969",
      "id" : 1511275969,
      "line" : 3109,
      "node_id" : "PRRC_kwDOABII585aFD3B",
      "original_commit_id" : "3eddfb2147754c734c325e4ee0158872448a0a61",
      "original_line" : 3128,
      "original_position" : 180,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 327,
      "pull_request_review_id" : 1906612532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511275969/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-04T15:25:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511275969",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1511279226"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511279226"
         }
      },
      "author_association" : "MEMBER",
      "body" : "future work: might make sense to delete this transaction from the orphanage as well in this case if it exists so we don't try it with other peer?",
      "commit_id" : "19015e3c9aed5709e776ef15bf9e73f126c7ea29",
      "created_at" : "2024-03-04T14:45:50Z",
      "diff_hunk" : "@@ -3036,6 +3045,112 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\n     return;\n }\n \n+PeerManagerImpl::InvalidTxTask PeerManagerImpl::ProcessInvalidTx(const CTransactionRef& tx, NodeId nodeid, const TxValidationState& state)\n+{\n+    AssertLockHeld(cs_main);\n+    AssertLockNotHeld(m_peer_mutex);\n+    LogPrint(BCLog::MEMPOOLREJ, \"%s (wtxid=%s) from peer=%d was not accepted: %s\\n\",\n+             tx->GetHash().ToString(),\n+             tx->GetWitnessHash().ToString(),\n+             nodeid,\n+             state.ToString());\n+    // Maybe punish peer that gave us an tx\n+    MaybePunishNodeForTx(nodeid, state);\n+\n+    switch (state.GetResult()) {\n+    case TxValidationResult::TX_RESULT_UNSET:\n+    case TxValidationResult::TX_NO_MEMPOOL:\n+    {\n+        // This function should only be called when a transaction fails validation.\n+        Assume(false);\n+        return InvalidTxTask::NONE;\n+    }\n+    case TxValidationResult::TX_UNKNOWN:\n+    {\n+        // Transaction was not validated; we don't know that it is invalid. Do not add it to any\n+        // rejection caches or forget about it yet.\n+        return InvalidTxTask::NONE;\n+    }\n+    case TxValidationResult::TX_WITNESS_STRIPPED:\n+    {\n+        // Do not add txids of witness transactions or witness-stripped\n+        // transactions to the filter, as they can have been malleated;\n+        // adding such txids to the reject filter would potentially\n+        // interfere with relay of valid transactions from peers that\n+        // do not support wtxid-based relay. See\n+        // https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+        // We can remove this restriction (and always add wtxids to\n+        // the filter even for witness stripped transactions) once\n+        // wtxid-based relay is broadly deployed.\n+        // See also comments in https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443419034\n+        // for concerns around weakening security of unupgraded nodes\n+        // if we start doing this too early.\n+        return InvalidTxTask::NONE;\n+    }\n+    case TxValidationResult::TX_MISSING_INPUTS:\n+    {\n+        if (std::any_of(tx->vin.cbegin(), tx->vin.cend(),\n+            [&](const auto& input) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+            { return m_recent_rejects.contains(input.prevout.hash.ToUint256()); })) {\n+            LogPrint(BCLog::MEMPOOL, \"not keeping orphan with rejected parents %s (wtxid=%s)\\n\",\n+                     tx->GetHash().ToString(),\n+                     tx->GetWitnessHash().ToString());\n+            // We will continue to reject this tx since it has rejected\n+            // parents so avoid re-requesting it from other peers.\n+            // Here we add both the txid and the wtxid, as we know that\n+            // regardless of what witness is provided, we will not accept\n+            // this, so we don't need to allow for redownload of this txid\n+            // from any of our non-wtxidrelay peers.\n+            m_recent_rejects.insert(tx->GetHash().ToUint256());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1511279226",
      "id" : 1511279226,
      "line" : 3137,
      "node_id" : "PRRC_kwDOABII585aFEp6",
      "original_commit_id" : "3eddfb2147754c734c325e4ee0158872448a0a61",
      "original_line" : 3104,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 145,
      "pull_request_review_id" : 1906612532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511279226/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-04T15:25:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511279226",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1511306814"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511306814"
         }
      },
      "author_association" : "MEMBER",
      "body" : "we used to call `m_orphanage.EraseTx(orphanHash);` for each non-`TX_MISSING_INPUTS` possibility, but due to early return we don't. Can we sync this back up or justify each case this has changed for?",
      "commit_id" : "19015e3c9aed5709e776ef15bf9e73f126c7ea29",
      "created_at" : "2024-03-04T15:02:59Z",
      "diff_hunk" : "@@ -3036,6 +3045,112 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\n     return;\n }\n \n+PeerManagerImpl::InvalidTxTask PeerManagerImpl::ProcessInvalidTx(const CTransactionRef& tx, NodeId nodeid, const TxValidationState& state)\n+{\n+    AssertLockHeld(cs_main);\n+    AssertLockNotHeld(m_peer_mutex);\n+    LogPrint(BCLog::MEMPOOLREJ, \"%s (wtxid=%s) from peer=%d was not accepted: %s\\n\",\n+             tx->GetHash().ToString(),\n+             tx->GetWitnessHash().ToString(),\n+             nodeid,\n+             state.ToString());\n+    // Maybe punish peer that gave us an tx\n+    MaybePunishNodeForTx(nodeid, state);\n+\n+    switch (state.GetResult()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1511306814",
      "id" : 1511306814,
      "line" : 3086,
      "node_id" : "PRRC_kwDOABII585aFLY-",
      "original_commit_id" : "3eddfb2147754c734c325e4ee0158872448a0a61",
      "original_line" : 3060,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 94,
      "pull_request_review_id" : 1906612532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511306814/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-04T15:25:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511306814",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1511328011"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511328011"
         }
      },
      "author_association" : "MEMBER",
      "body" : "with changes, we now add to extra txns even if witness stripped; seems wrong",
      "commit_id" : "19015e3c9aed5709e776ef15bf9e73f126c7ea29",
      "created_at" : "2024-03-04T15:13:39Z",
      "diff_hunk" : "@@ -4342,63 +4412,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n \n                 // DoS prevention: do not allow m_orphanage to grow unbounded (see CVE-2012-3789)\n                 m_orphanage.LimitOrphans(m_opts.max_orphan_txs, m_rng);\n-            } else {\n-                LogPrint(BCLog::MEMPOOL, \"not keeping orphan with rejected parents %s (wtxid=%s)\\n\",\n-                         tx.GetHash().ToString(),\n-                         tx.GetWitnessHash().ToString());\n-                // We will continue to reject this tx since it has rejected\n-                // parents so avoid re-requesting it from other peers.\n-                // Here we add both the txid and the wtxid, as we know that\n-                // regardless of what witness is provided, we will not accept\n-                // this, so we don't need to allow for redownload of this txid\n-                // from any of our non-wtxidrelay peers.\n-                m_recent_rejects.insert(tx.GetHash().ToUint256());\n-                m_recent_rejects.insert(tx.GetWitnessHash().ToUint256());\n-                m_txrequest.ForgetTxHash(tx.GetHash());\n-                m_txrequest.ForgetTxHash(tx.GetWitnessHash());\n+            } else if (RecursiveDynamicUsage(*ptx) < 100000) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1511328011",
      "id" : 1511328011,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585aFQkL",
      "original_commit_id" : "3eddfb2147754c734c325e4ee0158872448a0a61",
      "original_line" : 4415,
      "original_position" : 254,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1906612532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511328011/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-04T15:25:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511328011",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1511344657"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511344657"
         }
      },
      "author_association" : "MEMBER",
      "body" : "this is never set",
      "commit_id" : "19015e3c9aed5709e776ef15bf9e73f126c7ea29",
      "created_at" : "2024-03-04T15:24:06Z",
      "diff_hunk" : "@@ -0,0 +1,223 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+            \"-whitelist=noban@127.0.0.1\",  # immediate tx relay\n+        ]] * self.num_nodes\n+        self.supports_cli = False\n+\n+    def raise_network_minfee(self):\n+        filler_wallet = MiniWallet(self.nodes[0])\n+        relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n+        num_big_transactions = 75\n+        # Generate coins to spend and wait for them to mature\n+        self.generate(filler_wallet, num_big_transactions)\n+        self.generate(filler_wallet, 100)\n+\n+        self.log.debug(\"Create a mempool tx that will be evicted\")\n+        tx_to_be_evicted_id = filler_wallet.send_self_transfer(from_node=self.nodes[1], fee_rate=relayfee)[\"txid\"]\n+\n+        # Increase the tx fee rate to give the subsequent transactions a higher priority in the mempool\n+        # The tx has an approx. vsize of 65k, i.e. multiplying the previous fee rate (in sats/kvB)\n+        # by 130 should result in a fee that corresponds to 2x of that fee rate\n+        base_fee = relayfee * 130\n+\n+        self.log.debug(\"Fill up the mempool with txs with higher fee rate\")\n+        txouts = gen_return_txouts()\n+        with self.nodes[0].assert_debug_log([\"rolling minimum fee bumped\"]):\n+            for batch_of_txid in range(num_big_transactions):\n+                fee = (batch_of_txid + 1) * base_fee\n+                create_lots_of_big_transactions(filler_wallet, self.nodes[0], fee, 1, txouts)\n+\n+        self.log.debug(\"Wait for the network to sync mempools\")\n+        self.sync_mempools()\n+        assert tx_to_be_evicted_id not in self.nodes[0].getrawmempool()\n+\n+        self.log.debug(\"Check that all nodes' mempool minimum feerate is above min relay feerate\")\n+        for node in self.nodes:\n+            assert_equal(node.getmempoolinfo()['minrelaytxfee'], FEERATE_1SAT_VB)\n+            assert_greater_than(node.getmempoolinfo()['mempoolminfee'], FEERATE_1SAT_VB)\n+\n+    def create_packages(self):\n+        # Basic 1-parent-1-child package\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+        package_hex_basic = [low_fee_parent[\"hex\"], high_fee_child[\"hex\"]]\n+        self.packages_to_submit.append(package_hex_basic)\n+        # Child should already be in orphanage\n+        self.transactions_to_presend[1] = [high_fee_child[\"tx\"]]\n+        # Parent would have been previously rejected\n+        self.transactions_to_presend[3] = [low_fee_parent[\"tx\"]]\n+\n+    def test_individual_logic(self):\n+        node = self.nodes[0]\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        low_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=2*FEERATE_1SAT_VB)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+\n+        peer1 = node.add_p2p_connection(P2PInterface())\n+        peer2 = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check that tx caches low feerate rejections\")\n+        parent_wtxid_int = int(low_fee_parent[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        peer1.wait_for_getdata([parent_wtxid_int])\n+        peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+\n+        # Send again from peer2, check that it is ignored\n+        with node.assert_debug_log([f\"got inv: wtx {low_fee_parent['wtxid']}  have\"]):\n+            peer2.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        assert \"getdata\" not in peer2.last_message\n+\n+        self.log.info(\"Check that the node doesn't try to validate a failed package again\")\n+        # Send the (orphan) child that has a higher feerate but not enough to bump the parent\n+        low_child_wtxid_int = int(low_fee_child[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=low_child_wtxid_int)]))\n+        peer1.wait_for_getdata([low_child_wtxid_int])\n+        peer1.send_and_ping(msg_tx(low_fee_child[\"tx\"]))\n+        # Node should request the orphan's missing parent. It has seen this parent before, but only\n+        # cached the failure by wtxid, not txid.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer1.wait_for_getdata([parent_txid_int])\n+        failed_expected_logs_1p1c = []\n+        failed_expected_logs_1p1c.append(f\"found tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in reconsiderable rejects, looking for child in orphanage\")\n+        failed_expected_logs_1p1c.append(f\"found child {low_fee_child['txid']} (wtxid={low_fee_child['wtxid']}) of tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in orphanage, trying package evaluation\")\n+        failed_expected_logs_1p1c.append(f\"removed orphan tx {low_fee_child['txid']} (wtxid={low_fee_child['wtxid']})\")\n+\n+        with node.assert_debug_log(failed_expected_logs_1p1c):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        # The transactions do not get accepted due to low feerate\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+        assert low_fee_child[\"txid\"] not in node.getrawmempool()\n+\n+        # If peer2 announces the low feerate child, it should be ignored\n+        with node.assert_debug_log([f\"got inv: wtx {low_fee_child['wtxid']}  have\"]):\n+            peer2.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=low_child_wtxid_int)]))\n+        assert \"getdata\" not in peer2.last_message\n+        # If either peer sends the parent again, package evaluation should not be attempted\n+        with node.assert_debug_log([f\"didn't evaluate package for {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}), no eligible child found\"]):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        with node.assert_debug_log([f\"didn't evaluate package for {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}), no eligible child found\"]):\n+            peer2.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        self.log.info(\"Check that the node groups a low-feerate tx with its single child in orphanage\")\n+        # Send the high feerate (orphan) child\n+        high_child_wtxid_int = int(high_fee_child[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=high_child_wtxid_int)]))\n+        peer1.wait_for_getdata([high_child_wtxid_int])\n+        peer1.send_and_ping(msg_tx(high_fee_child[\"tx\"]))\n+        # Node should request the orphan's parent, even though it has already been rejected, both by\n+        # itself and with a child. This is necessary, otherwise high_fee_child can be censored.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer1.wait_for_getdata([parent_txid_int])\n+        expected_logs_1p1c = []\n+        expected_logs_1p1c.append(f\"found tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in reconsiderable rejects, looking for child in orphanage\")\n+        expected_logs_1p1c.append(f\"found child {high_fee_child['txid']} (wtxid={high_fee_child['wtxid']}) of tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in orphanage, trying package evaluation\")\n+        with node.assert_debug_log(expected_logs_1p1c):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        # Both transactions should now be in mempool\n+        node_mempool = node.getrawmempool()\n+        assert low_fee_parent[\"txid\"] in node_mempool\n+        assert high_fee_child[\"txid\"] in node_mempool\n+\n+        peer1.peer_disconnect()\n+        peer2.peer_disconnect()\n+        self.sync_all()\n+\n+    def run_test(self):\n+        self.ctr = 0\n+        self.wallet = MiniWallet(self.nodes[1])\n+        self.generate(self.wallet, 120)\n+\n+        self.log.info(\"Fill mempools with large transactions to raise mempool minimum feerates\")\n+        self.raise_network_minfee()\n+\n+        self.log.info(\"Check 1p1c validation logic on a single node\")\n+        self.test_individual_logic()\n+\n+        self.log.info(\"Check end-to-end package relay across multiple nodes\")\n+        self.packages_to_submit = []\n+        self.transactions_to_presend = [[]] * self.num_nodes\n+        self.replacement_packages = []",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1511344657",
      "id" : 1511344657,
      "line" : 181,
      "node_id" : "PRRC_kwDOABII585aFUoR",
      "original_commit_id" : "19015e3c9aed5709e776ef15bf9e73f126c7ea29",
      "original_line" : 181,
      "original_position" : 181,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : 181,
      "pull_request_review_id" : 1906612532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511344657/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-04T15:25:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511344657",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1511599258"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511599258"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 19015e3c9aed5709e776ef15bf9e73f126c7ea29: It seems to be using 3 nodes instead of 4. Or am I missing something?\r\n\r\nE.g.:\r\n\r\n```diff\r\ndiff --git a/test/functional/p2p_1p1c_package_relay.py b/test/functional/p2p_1p1c_package_relay.py\r\nindex 6a3ba7c3df..dda671dede 100755\r\n--- a/test/functional/p2p_1p1c_package_relay.py\r\n+++ b/test/functional/p2p_1p1c_package_relay.py\r\n@@ -36,7 +36,7 @@ FEERATE_1SAT_VB = Decimal(\"0.00001000\")\r\n class PackageRelayTest(BitcoinTestFramework):\r\n     def set_test_params(self):\r\n         self.setup_clean_chain = True\r\n-        self.num_nodes = 4\r\n+        self.num_nodes = 3\r\n         self.extra_args = [[\r\n             \"-datacarriersize=100000\",\r\n             \"-maxmempool=5\",\r\n@@ -85,7 +85,7 @@ class PackageRelayTest(BitcoinTestFramework):\r\n         # Child should already be in orphanage\r\n         self.transactions_to_presend[1] = [high_fee_child[\"tx\"]]\r\n         # Parent would have been previously rejected\r\n-        self.transactions_to_presend[3] = [low_fee_parent[\"tx\"]]\r\n+        self.transactions_to_presend[2] = [low_fee_parent[\"tx\"]]\r\n \r\n     def test_individual_logic(self):\r\n         node = self.nodes[0]\r\n@@ -213,7 +213,7 @@ class PackageRelayTest(BitcoinTestFramework):\r\n \r\n         self.log.info(\"Submit replacement package to node3\")\r\n         for package_hex in self.replacement_packages:\r\n-            self.nodes[3].submitpackage(package_hex)\r\n+            self.nodes[2].submitpackage(package_hex)\r\n \r\n         self.log.info(\"Wait for mempools to sync\")\r\n         self.sync_mempools(timeout=20)\r\n```",
      "commit_id" : "19015e3c9aed5709e776ef15bf9e73f126c7ea29",
      "created_at" : "2024-03-04T18:36:26Z",
      "diff_hunk" : "@@ -0,0 +1,223 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1511599258",
      "id" : 1511599258,
      "line" : 39,
      "node_id" : "PRRC_kwDOABII585aGSya",
      "original_commit_id" : "19015e3c9aed5709e776ef15bf9e73f126c7ea29",
      "original_line" : 39,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : 39,
      "pull_request_review_id" : 1915025042,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511599258/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-04T18:36:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511599258",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1512661556"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1512661556"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The idea is this is a \"network\" test to see that the package propagates across multiple hops. 1 node is the sender, 1 node pre-receives the parent, 1 node pre-receives the child, and 1 node pre-receives nothing.",
      "commit_id" : "19015e3c9aed5709e776ef15bf9e73f126c7ea29",
      "created_at" : "2024-03-05T11:23:41Z",
      "diff_hunk" : "@@ -0,0 +1,223 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1512661556",
      "id" : 1512661556,
      "in_reply_to_id" : 1511599258,
      "line" : 39,
      "node_id" : "PRRC_kwDOABII585aKWI0",
      "original_commit_id" : "19015e3c9aed5709e776ef15bf9e73f126c7ea29",
      "original_line" : 39,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : 39,
      "pull_request_review_id" : 1916618959,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1512661556/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-05T11:28:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1512661556",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Working on pulling the first 2 commits out into a separate PR.",
      "created_at" : "2024-03-05T11:24:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#issuecomment-1978540390",
      "id" : 1978540390,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
      "node_id" : "IC_kwDOABII58517iFm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1978540390/reactions"
      },
      "updated_at" : "2024-03-05T11:24:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1978540390",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1512689796"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1512689796"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Got it, thank you.",
      "commit_id" : "19015e3c9aed5709e776ef15bf9e73f126c7ea29",
      "created_at" : "2024-03-05T11:48:03Z",
      "diff_hunk" : "@@ -0,0 +1,223 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1512689796",
      "id" : 1512689796,
      "in_reply_to_id" : 1511599258,
      "line" : 39,
      "node_id" : "PRRC_kwDOABII585aKdCE",
      "original_commit_id" : "19015e3c9aed5709e776ef15bf9e73f126c7ea29",
      "original_line" : 39,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : 39,
      "pull_request_review_id" : 1916664022,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1512689796/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-05T11:48:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1512689796",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1514657717"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1514657717"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@sdaftuar honestly this comment/link doesn't make sense to me. If it's witness-stripped, we can't add it to `m_recent_rejects` since that would blind us to any real version of the tx?",
      "commit_id" : "19015e3c9aed5709e776ef15bf9e73f126c7ea29",
      "created_at" : "2024-03-06T15:11:18Z",
      "diff_hunk" : "@@ -3036,6 +3045,112 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\n     return;\n }\n \n+PeerManagerImpl::InvalidTxTask PeerManagerImpl::ProcessInvalidTx(const CTransactionRef& tx, NodeId nodeid, const TxValidationState& state)\n+{\n+    AssertLockHeld(cs_main);\n+    AssertLockNotHeld(m_peer_mutex);\n+    LogPrint(BCLog::MEMPOOLREJ, \"%s (wtxid=%s) from peer=%d was not accepted: %s\\n\",\n+             tx->GetHash().ToString(),\n+             tx->GetWitnessHash().ToString(),\n+             nodeid,\n+             state.ToString());\n+    // Maybe punish peer that gave us an tx\n+    MaybePunishNodeForTx(nodeid, state);\n+\n+    switch (state.GetResult()) {\n+    case TxValidationResult::TX_RESULT_UNSET:\n+    case TxValidationResult::TX_NO_MEMPOOL:\n+    {\n+        // This function should only be called when a transaction fails validation.\n+        Assume(false);\n+        return InvalidTxTask::NONE;\n+    }\n+    case TxValidationResult::TX_UNKNOWN:\n+    {\n+        // Transaction was not validated; we don't know that it is invalid. Do not add it to any\n+        // rejection caches or forget about it yet.\n+        return InvalidTxTask::NONE;\n+    }\n+    case TxValidationResult::TX_WITNESS_STRIPPED:\n+    {\n+        // Do not add txids of witness transactions or witness-stripped\n+        // transactions to the filter, as they can have been malleated;\n+        // adding such txids to the reject filter would potentially\n+        // interfere with relay of valid transactions from peers that\n+        // do not support wtxid-based relay. See\n+        // https://github.com/bitcoin/bitcoin/issues/8279 for details.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1514657717",
      "id" : 1514657717,
      "line" : 3107,
      "node_id" : "PRRC_kwDOABII585aR9e1",
      "original_commit_id" : "3eddfb2147754c734c325e4ee0158872448a0a61",
      "original_line" : 3081,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 115,
      "pull_request_review_id" : 1920028235,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1514657717/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-06T15:11:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1514657717",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1514698744"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1514698744"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I had to remind myself of how this works, but the concern contemplated in that comment is that if the **only** copy of a non-witness-stripped version of a transaction is from a node that has not yet upgraded to wtxid-based-relay, then an adversary could blind us to that transaction by relaying a witness-stripped version of it (and then, since txid==wtxid for witness-stripped transactions, the hash that we'd use to fetch the transaction from the non-wtxid-relay peer who has the correct version would be in our `m_recent_rejects`, and we wouldn't ever request it).\r\n\r\nAt the time that I wrote that comment, I think I also said that once wtxid-based-relay is sufficiently deployed, that we could stop worrying about this...  I don't recall when wtxid-relay was deployed but maybe we're at that point already?\r\n\r\nThere's another link to a comment thread in the PR that implemented wtxid-relay which discusses the potential impact on downstream projects, so maybe if we were to make a behavior change we should communicate that in advance so that no one is surprised.",
      "commit_id" : "19015e3c9aed5709e776ef15bf9e73f126c7ea29",
      "created_at" : "2024-03-06T15:34:20Z",
      "diff_hunk" : "@@ -3036,6 +3045,112 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\n     return;\n }\n \n+PeerManagerImpl::InvalidTxTask PeerManagerImpl::ProcessInvalidTx(const CTransactionRef& tx, NodeId nodeid, const TxValidationState& state)\n+{\n+    AssertLockHeld(cs_main);\n+    AssertLockNotHeld(m_peer_mutex);\n+    LogPrint(BCLog::MEMPOOLREJ, \"%s (wtxid=%s) from peer=%d was not accepted: %s\\n\",\n+             tx->GetHash().ToString(),\n+             tx->GetWitnessHash().ToString(),\n+             nodeid,\n+             state.ToString());\n+    // Maybe punish peer that gave us an tx\n+    MaybePunishNodeForTx(nodeid, state);\n+\n+    switch (state.GetResult()) {\n+    case TxValidationResult::TX_RESULT_UNSET:\n+    case TxValidationResult::TX_NO_MEMPOOL:\n+    {\n+        // This function should only be called when a transaction fails validation.\n+        Assume(false);\n+        return InvalidTxTask::NONE;\n+    }\n+    case TxValidationResult::TX_UNKNOWN:\n+    {\n+        // Transaction was not validated; we don't know that it is invalid. Do not add it to any\n+        // rejection caches or forget about it yet.\n+        return InvalidTxTask::NONE;\n+    }\n+    case TxValidationResult::TX_WITNESS_STRIPPED:\n+    {\n+        // Do not add txids of witness transactions or witness-stripped\n+        // transactions to the filter, as they can have been malleated;\n+        // adding such txids to the reject filter would potentially\n+        // interfere with relay of valid transactions from peers that\n+        // do not support wtxid-based relay. See\n+        // https://github.com/bitcoin/bitcoin/issues/8279 for details.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1514698744",
      "id" : 1514698744,
      "in_reply_to_id" : 1514657717,
      "line" : 3107,
      "node_id" : "PRRC_kwDOABII585aSHf4",
      "original_commit_id" : "3eddfb2147754c734c325e4ee0158872448a0a61",
      "original_line" : 3081,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 115,
      "pull_request_review_id" : 1920093386,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1514698744/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-06T15:34:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1514698744",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1514744423"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1514744423"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It seems like the comment thread is concerned with what happens if:\r\n(1) the sender is using non-wtxidrelay (and thus only announces transactions by txid),\r\n(2) all of its peers are caching witness-stripped rejections by wtxid (i.e. txid),\r\n(3) there is an attacker trying to censor the sender's tx by sending witness-stripped versions of the tx ahead of the sender.\r\n\r\nThis isn't a problem if (1) isn't true, i.e. the sender is using wtxidrelay, e.g. any non-eol version of Bitcoin Core. If we see that the vast majority of nodes (that send transactions) are sending a `wtxidrelay` message, perhaps it would be safe to remove the special casing (with a message to downstream projects)?\r\n\r\nEdit: perhaps not, if btcd is an example of (1)? https://github.com/btcsuite/btcd/blob/a4f447006e7538f9e3d5ae90f54700c97fea9c3d/peer/peer.go#L2214",
      "commit_id" : "19015e3c9aed5709e776ef15bf9e73f126c7ea29",
      "created_at" : "2024-03-06T16:00:50Z",
      "diff_hunk" : "@@ -3036,6 +3045,112 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\n     return;\n }\n \n+PeerManagerImpl::InvalidTxTask PeerManagerImpl::ProcessInvalidTx(const CTransactionRef& tx, NodeId nodeid, const TxValidationState& state)\n+{\n+    AssertLockHeld(cs_main);\n+    AssertLockNotHeld(m_peer_mutex);\n+    LogPrint(BCLog::MEMPOOLREJ, \"%s (wtxid=%s) from peer=%d was not accepted: %s\\n\",\n+             tx->GetHash().ToString(),\n+             tx->GetWitnessHash().ToString(),\n+             nodeid,\n+             state.ToString());\n+    // Maybe punish peer that gave us an tx\n+    MaybePunishNodeForTx(nodeid, state);\n+\n+    switch (state.GetResult()) {\n+    case TxValidationResult::TX_RESULT_UNSET:\n+    case TxValidationResult::TX_NO_MEMPOOL:\n+    {\n+        // This function should only be called when a transaction fails validation.\n+        Assume(false);\n+        return InvalidTxTask::NONE;\n+    }\n+    case TxValidationResult::TX_UNKNOWN:\n+    {\n+        // Transaction was not validated; we don't know that it is invalid. Do not add it to any\n+        // rejection caches or forget about it yet.\n+        return InvalidTxTask::NONE;\n+    }\n+    case TxValidationResult::TX_WITNESS_STRIPPED:\n+    {\n+        // Do not add txids of witness transactions or witness-stripped\n+        // transactions to the filter, as they can have been malleated;\n+        // adding such txids to the reject filter would potentially\n+        // interfere with relay of valid transactions from peers that\n+        // do not support wtxid-based relay. See\n+        // https://github.com/bitcoin/bitcoin/issues/8279 for details.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1514744423",
      "id" : 1514744423,
      "in_reply_to_id" : 1514657717,
      "line" : 3107,
      "node_id" : "PRRC_kwDOABII585aSSpn",
      "original_commit_id" : "3eddfb2147754c734c325e4ee0158872448a0a61",
      "original_line" : 3081,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 115,
      "pull_request_review_id" : 1920164662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1514744423/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-06T16:18:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1514744423",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--85328a0da195eb286784d51f73fa0af9-->\n\nð§ At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/22437958726</sub>",
      "created_at" : "2024-03-08T14:23:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#issuecomment-1985784443",
      "id" : 1985784443,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
      "node_id" : "IC_kwDOABII5852XKp7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1985784443/reactions"
      },
      "updated_at" : "2024-03-08T14:23:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1985784443",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1517789807"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517789807"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Rewrote to be more strict refactor to give reviewers less to think about. I do think it makes sense that if a parent has been rejected since the last time we looked at this orphan, we get rid of it, but I suppose we can think about that later.",
      "commit_id" : "ec8f6acc9c596bab7acd86429d7c2624acec4bbd",
      "created_at" : "2024-03-08T14:30:30Z",
      "diff_hunk" : "@@ -3078,54 +3193,15 @@ bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n             LogPrint(BCLog::TXPACKAGES, \"   accepted orphan tx %s (wtxid=%s)\\n\", orphanHash.ToString(), orphan_wtxid.ToString());\n             ProcessValidTx(porphanTx, peer.m_id, result.m_replaced_transactions.value());\n             return true;\n-        } else if (state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n-            if (state.IsInvalid()) {\n-                LogPrint(BCLog::TXPACKAGES, \"   invalid orphan tx %s (wtxid=%s) from peer=%d. %s\\n\",\n-                    orphanHash.ToString(),\n-                    orphan_wtxid.ToString(),\n-                    peer.m_id,\n-                    state.ToString());\n-                LogPrint(BCLog::MEMPOOLREJ, \"%s (wtxid=%s) from peer=%d was not accepted: %s\\n\",\n-                    orphanHash.ToString(),\n-                    orphan_wtxid.ToString(),\n-                    peer.m_id,\n-                    state.ToString());\n-                // Maybe punish peer that gave us an invalid orphan tx\n-                MaybePunishNodeForTx(peer.m_id, state);\n-            }\n-            // Has inputs but not accepted to mempool\n-            // Probably non-standard or insufficient fee\n-            LogPrint(BCLog::TXPACKAGES, \"   removed orphan tx %s (wtxid=%s)\\n\", orphanHash.ToString(), orphan_wtxid.ToString());\n-            if (state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {\n-                // We can add the wtxid of this transaction to our reject filter.\n-                // Do not add txids of witness transactions or witness-stripped\n-                // transactions to the filter, as they can have been malleated;\n-                // adding such txids to the reject filter would potentially\n-                // interfere with relay of valid transactions from peers that\n-                // do not support wtxid-based relay. See\n-                // https://github.com/bitcoin/bitcoin/issues/8279 for details.\n-                // We can remove this restriction (and always add wtxids to\n-                // the filter even for witness stripped transactions) once\n-                // wtxid-based relay is broadly deployed.\n-                // See also comments in https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443419034\n-                // for concerns around weakening security of unupgraded nodes\n-                // if we start doing this too early.\n-                m_recent_rejects.insert(porphanTx->GetWitnessHash().ToUint256());\n-                // If the transaction failed for TX_INPUTS_NOT_STANDARD,\n-                // then we know that the witness was irrelevant to the policy\n-                // failure, since this check depends only on the txid\n-                // (the scriptPubKey being spent is covered by the txid).\n-                // Add the txid to the reject filter to prevent repeated\n-                // processing of this transaction in the event that child\n-                // transactions are later received (resulting in\n-                // parent-fetching by txid via the orphan-handling logic).\n-                if (state.GetResult() == TxValidationResult::TX_INPUTS_NOT_STANDARD && porphanTx->HasWitness()) {\n-                    // We only add the txid if it differs from the wtxid, to\n-                    // avoid wasting entries in the rolling bloom filter.\n-                    m_recent_rejects.insert(porphanTx->GetHash().ToUint256());\n-                }\n-            }\n-            m_orphanage.EraseTx(orphanHash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1517789807",
      "id" : 1517789807,
      "in_reply_to_id" : 1511275969,
      "line" : 3109,
      "node_id" : "PRRC_kwDOABII585ad6Jv",
      "original_commit_id" : "3eddfb2147754c734c325e4ee0158872448a0a61",
      "original_line" : 3109,
      "original_position" : 180,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 340,
      "pull_request_review_id" : 1925001479,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517789807/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-08T14:30:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517789807",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1517790259"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517790259"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Old behavior should be preserved now",
      "commit_id" : "ec8f6acc9c596bab7acd86429d7c2624acec4bbd",
      "created_at" : "2024-03-08T14:30:50Z",
      "diff_hunk" : "@@ -3036,6 +3045,112 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\n     return;\n }\n \n+PeerManagerImpl::InvalidTxTask PeerManagerImpl::ProcessInvalidTx(const CTransactionRef& tx, NodeId nodeid, const TxValidationState& state)\n+{\n+    AssertLockHeld(cs_main);\n+    AssertLockNotHeld(m_peer_mutex);\n+    LogPrint(BCLog::MEMPOOLREJ, \"%s (wtxid=%s) from peer=%d was not accepted: %s\\n\",\n+             tx->GetHash().ToString(),\n+             tx->GetWitnessHash().ToString(),\n+             nodeid,\n+             state.ToString());\n+    // Maybe punish peer that gave us an tx\n+    MaybePunishNodeForTx(nodeid, state);\n+\n+    switch (state.GetResult()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1517790259",
      "id" : 1517790259,
      "in_reply_to_id" : 1511306814,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ad6Qz",
      "original_commit_id" : "3eddfb2147754c734c325e4ee0158872448a0a61",
      "original_line" : 3060,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1925002258,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517790259/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-08T14:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517790259",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1517791171"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517791171"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixed",
      "commit_id" : "ec8f6acc9c596bab7acd86429d7c2624acec4bbd",
      "created_at" : "2024-03-08T14:31:34Z",
      "diff_hunk" : "@@ -4342,63 +4412,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n \n                 // DoS prevention: do not allow m_orphanage to grow unbounded (see CVE-2012-3789)\n                 m_orphanage.LimitOrphans(m_opts.max_orphan_txs, m_rng);\n-            } else {\n-                LogPrint(BCLog::MEMPOOL, \"not keeping orphan with rejected parents %s (wtxid=%s)\\n\",\n-                         tx.GetHash().ToString(),\n-                         tx.GetWitnessHash().ToString());\n-                // We will continue to reject this tx since it has rejected\n-                // parents so avoid re-requesting it from other peers.\n-                // Here we add both the txid and the wtxid, as we know that\n-                // regardless of what witness is provided, we will not accept\n-                // this, so we don't need to allow for redownload of this txid\n-                // from any of our non-wtxidrelay peers.\n-                m_recent_rejects.insert(tx.GetHash().ToUint256());\n-                m_recent_rejects.insert(tx.GetWitnessHash().ToUint256());\n-                m_txrequest.ForgetTxHash(tx.GetHash());\n-                m_txrequest.ForgetTxHash(tx.GetWitnessHash());\n+            } else if (RecursiveDynamicUsage(*ptx) < 100000) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1517791171",
      "id" : 1517791171,
      "in_reply_to_id" : 1511328011,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ad6fD",
      "original_commit_id" : "3eddfb2147754c734c325e4ee0158872448a0a61",
      "original_line" : 4415,
      "original_position" : 254,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1925003669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517791171/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-08T14:31:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517791171",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1519481765"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1519481765"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixed",
      "commit_id" : "ec8f6acc9c596bab7acd86429d7c2624acec4bbd",
      "created_at" : "2024-03-11T10:19:32Z",
      "diff_hunk" : "@@ -4297,28 +4373,22 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         if (result.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n             ProcessValidTx(ptx, pfrom.GetId(), result.m_replaced_transactions.value());\n             pfrom.m_last_tx_time = GetTime<std::chrono::seconds>();\n-        }\n-        else if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS)\n-        {\n-            bool fRejectedParents = false; // It may be the case that the orphans parents have all been rejected\n-\n-            // Deduplicate parent txids, so that we don't have to loop over\n-            // the same parent txid more than once down below.\n-            std::vector<uint256> unique_parents;\n-            unique_parents.reserve(tx.vin.size());\n-            for (const CTxIn& txin : tx.vin) {\n-                // We start with all parents, and then remove duplicates below.\n-                unique_parents.push_back(txin.prevout.hash);\n+            for (const CTransactionRef& removedTx : result.m_replaced_transactions.value()) {\n+                AddToCompactExtraTransactions(removedTx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1519481765",
      "id" : 1519481765,
      "in_reply_to_id" : 1506260613,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585akXOl",
      "original_commit_id" : "3eddfb2147754c734c325e4ee0158872448a0a61",
      "original_line" : 4377,
      "original_position" : 210,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1927446729,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1519481765/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T10:19:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1519481765",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Opened #29619 for the first 2 commits, moving this to draft.",
      "created_at" : "2024-03-11T10:54:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#issuecomment-1988160421",
      "id" : 1988160421,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
      "node_id" : "IC_kwDOABII5852gOul",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1988160421/reactions"
      },
      "updated_at" : "2024-03-11T10:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1988160421",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1523100228"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523100228"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops, forgot to delete from a package RBF test I built on top. Fixed",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-13T12:01:38Z",
      "diff_hunk" : "@@ -0,0 +1,223 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+            \"-whitelist=noban@127.0.0.1\",  # immediate tx relay\n+        ]] * self.num_nodes\n+        self.supports_cli = False\n+\n+    def raise_network_minfee(self):\n+        filler_wallet = MiniWallet(self.nodes[0])\n+        relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n+        num_big_transactions = 75\n+        # Generate coins to spend and wait for them to mature\n+        self.generate(filler_wallet, num_big_transactions)\n+        self.generate(filler_wallet, 100)\n+\n+        self.log.debug(\"Create a mempool tx that will be evicted\")\n+        tx_to_be_evicted_id = filler_wallet.send_self_transfer(from_node=self.nodes[1], fee_rate=relayfee)[\"txid\"]\n+\n+        # Increase the tx fee rate to give the subsequent transactions a higher priority in the mempool\n+        # The tx has an approx. vsize of 65k, i.e. multiplying the previous fee rate (in sats/kvB)\n+        # by 130 should result in a fee that corresponds to 2x of that fee rate\n+        base_fee = relayfee * 130\n+\n+        self.log.debug(\"Fill up the mempool with txs with higher fee rate\")\n+        txouts = gen_return_txouts()\n+        with self.nodes[0].assert_debug_log([\"rolling minimum fee bumped\"]):\n+            for batch_of_txid in range(num_big_transactions):\n+                fee = (batch_of_txid + 1) * base_fee\n+                create_lots_of_big_transactions(filler_wallet, self.nodes[0], fee, 1, txouts)\n+\n+        self.log.debug(\"Wait for the network to sync mempools\")\n+        self.sync_mempools()\n+        assert tx_to_be_evicted_id not in self.nodes[0].getrawmempool()\n+\n+        self.log.debug(\"Check that all nodes' mempool minimum feerate is above min relay feerate\")\n+        for node in self.nodes:\n+            assert_equal(node.getmempoolinfo()['minrelaytxfee'], FEERATE_1SAT_VB)\n+            assert_greater_than(node.getmempoolinfo()['mempoolminfee'], FEERATE_1SAT_VB)\n+\n+    def create_packages(self):\n+        # Basic 1-parent-1-child package\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+        package_hex_basic = [low_fee_parent[\"hex\"], high_fee_child[\"hex\"]]\n+        self.packages_to_submit.append(package_hex_basic)\n+        # Child should already be in orphanage\n+        self.transactions_to_presend[1] = [high_fee_child[\"tx\"]]\n+        # Parent would have been previously rejected\n+        self.transactions_to_presend[3] = [low_fee_parent[\"tx\"]]\n+\n+    def test_individual_logic(self):\n+        node = self.nodes[0]\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        low_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=2*FEERATE_1SAT_VB)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+\n+        peer1 = node.add_p2p_connection(P2PInterface())\n+        peer2 = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check that tx caches low feerate rejections\")\n+        parent_wtxid_int = int(low_fee_parent[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        peer1.wait_for_getdata([parent_wtxid_int])\n+        peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+\n+        # Send again from peer2, check that it is ignored\n+        with node.assert_debug_log([f\"got inv: wtx {low_fee_parent['wtxid']}  have\"]):\n+            peer2.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        assert \"getdata\" not in peer2.last_message\n+\n+        self.log.info(\"Check that the node doesn't try to validate a failed package again\")\n+        # Send the (orphan) child that has a higher feerate but not enough to bump the parent\n+        low_child_wtxid_int = int(low_fee_child[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=low_child_wtxid_int)]))\n+        peer1.wait_for_getdata([low_child_wtxid_int])\n+        peer1.send_and_ping(msg_tx(low_fee_child[\"tx\"]))\n+        # Node should request the orphan's missing parent. It has seen this parent before, but only\n+        # cached the failure by wtxid, not txid.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer1.wait_for_getdata([parent_txid_int])\n+        failed_expected_logs_1p1c = []\n+        failed_expected_logs_1p1c.append(f\"found tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in reconsiderable rejects, looking for child in orphanage\")\n+        failed_expected_logs_1p1c.append(f\"found child {low_fee_child['txid']} (wtxid={low_fee_child['wtxid']}) of tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in orphanage, trying package evaluation\")\n+        failed_expected_logs_1p1c.append(f\"removed orphan tx {low_fee_child['txid']} (wtxid={low_fee_child['wtxid']})\")\n+\n+        with node.assert_debug_log(failed_expected_logs_1p1c):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        # The transactions do not get accepted due to low feerate\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+        assert low_fee_child[\"txid\"] not in node.getrawmempool()\n+\n+        # If peer2 announces the low feerate child, it should be ignored\n+        with node.assert_debug_log([f\"got inv: wtx {low_fee_child['wtxid']}  have\"]):\n+            peer2.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=low_child_wtxid_int)]))\n+        assert \"getdata\" not in peer2.last_message\n+        # If either peer sends the parent again, package evaluation should not be attempted\n+        with node.assert_debug_log([f\"didn't evaluate package for {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}), no eligible child found\"]):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        with node.assert_debug_log([f\"didn't evaluate package for {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}), no eligible child found\"]):\n+            peer2.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        self.log.info(\"Check that the node groups a low-feerate tx with its single child in orphanage\")\n+        # Send the high feerate (orphan) child\n+        high_child_wtxid_int = int(high_fee_child[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=high_child_wtxid_int)]))\n+        peer1.wait_for_getdata([high_child_wtxid_int])\n+        peer1.send_and_ping(msg_tx(high_fee_child[\"tx\"]))\n+        # Node should request the orphan's parent, even though it has already been rejected, both by\n+        # itself and with a child. This is necessary, otherwise high_fee_child can be censored.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer1.wait_for_getdata([parent_txid_int])\n+        expected_logs_1p1c = []\n+        expected_logs_1p1c.append(f\"found tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in reconsiderable rejects, looking for child in orphanage\")\n+        expected_logs_1p1c.append(f\"found child {high_fee_child['txid']} (wtxid={high_fee_child['wtxid']}) of tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in orphanage, trying package evaluation\")\n+        with node.assert_debug_log(expected_logs_1p1c):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        # Both transactions should now be in mempool\n+        node_mempool = node.getrawmempool()\n+        assert low_fee_parent[\"txid\"] in node_mempool\n+        assert high_fee_child[\"txid\"] in node_mempool\n+\n+        peer1.peer_disconnect()\n+        peer2.peer_disconnect()\n+        self.sync_all()\n+\n+    def run_test(self):\n+        self.ctr = 0\n+        self.wallet = MiniWallet(self.nodes[1])\n+        self.generate(self.wallet, 120)\n+\n+        self.log.info(\"Fill mempools with large transactions to raise mempool minimum feerates\")\n+        self.raise_network_minfee()\n+\n+        self.log.info(\"Check 1p1c validation logic on a single node\")\n+        self.test_individual_logic()\n+\n+        self.log.info(\"Check end-to-end package relay across multiple nodes\")\n+        self.packages_to_submit = []\n+        self.transactions_to_presend = [[]] * self.num_nodes\n+        self.replacement_packages = []",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1523100228",
      "id" : 1523100228,
      "in_reply_to_id" : 1511344657,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ayKpE",
      "original_commit_id" : "19015e3c9aed5709e776ef15bf9e73f126c7ea29",
      "original_line" : 185,
      "original_position" : 181,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : null,
      "pull_request_review_id" : 1933929927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523100228/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-13T12:01:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523100228",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased and added followups from #29619",
      "created_at" : "2024-03-13T12:08:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#issuecomment-1994236318",
      "id" : 1994236318,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
      "node_id" : "IC_kwDOABII58523aGe",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1994236318/reactions"
      },
      "updated_at" : "2024-03-13T12:08:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1994236318",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1523804572"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523804572"
         }
      },
      "author_association" : "MEMBER",
      "body" : "there any science to these choices?",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-13T19:20:47Z",
      "diff_hunk" : "@@ -846,6 +846,23 @@ class PeerManagerImpl final : public PeerManager\n     CRollingBloomFilter m_recent_rejects GUARDED_BY(::cs_main){120'000, 0.000'001};\n     uint256 hashRecentRejectsChainTip GUARDED_BY(cs_main);\n \n+    /**\n+     * Filter for the wtxids of transactions that were recently rejected by the mempool but are\n+     * eligible for reconsideration if submitted with other transactions.\n+     *\n+     * When a transaction's error is TxValidationResult::TX_RECONSIDERABLE (in a package or by\n+     * itself), add its wtxid to this filter.\n+     *\n+     * Upon receiving an announcement for a transaction, if it exists in this filter, do not\n+     * download the txdata.\n+     *\n+     * Reset this filter when the chain tip changes.\n+     *\n+     * Parameters are picked to be the same false positive rate but half the capacity as",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1523804572",
      "id" : 1523804572,
      "line" : 867,
      "node_id" : "PRRC_kwDOABII585a02mc",
      "original_commit_id" : "1435bfac51ae431b91c38c4db0b92ce9b7353125",
      "original_line" : 861,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 38,
      "pull_request_review_id" : 1935032934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523804572/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523804572",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1523821142"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523821142"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`include_reconsiderable` seems to be true on every call-site. Perhaps this is vestigial from \"real\" package relay PRs of times past? Might be worth noting/making it default true, or dropping altogether.",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-13T19:36:08Z",
      "diff_hunk" : "@@ -806,7 +806,7 @@ class PeerManagerImpl final : public PeerManager\n     /** Stalling timeout for blocks in IBD */\n     std::atomic<std::chrono::seconds> m_block_stalling_timeout{BLOCK_STALLING_TIMEOUT_DEFAULT};\n \n-    bool AlreadyHaveTx(const GenTxid& gtxid)\n+    bool AlreadyHaveTx(const GenTxid& gtxid, bool include_reconsiderable)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1523821142",
      "id" : 1523821142,
      "line" : 815,
      "node_id" : "PRRC_kwDOABII585a06pW",
      "original_commit_id" : "1435bfac51ae431b91c38c4db0b92ce9b7353125",
      "original_line" : 809,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 18,
      "pull_request_review_id" : 1935032934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523821142/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523821142",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1523822569"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523822569"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```Suggestion\r\n    if (include_reconsiderable && m_recent_rejects_reconsiderable.contains(hash)) return true;\r\n```",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-13T19:37:39Z",
      "diff_hunk" : "@@ -2209,6 +2226,8 @@ bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid)\n \n     if (m_orphanage.HaveTx(gtxid)) return true;\n \n+    if (include_reconsiderable && m_recent_rejects_reconsiderable.contains(gtxid.GetHash())) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1523822569",
      "id" : 1523822569,
      "line" : 2235,
      "node_id" : "PRRC_kwDOABII585a06_p",
      "original_commit_id" : "1435bfac51ae431b91c38c4db0b92ce9b7353125",
      "original_line" : 2229,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 59,
      "pull_request_review_id" : 1935032934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523822569/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523822569",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1523824732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523824732"
         }
      },
      "author_association" : "MEMBER",
      "body" : "please give some documentation",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-13T19:39:58Z",
      "diff_hunk" : "@@ -596,6 +596,12 @@ class PeerManagerImpl final : public PeerManager\n     void ProcessValidTx(NodeId nodeid, const CTransactionRef& tx, const std::list<CTransactionRef>& replaced_transactions)\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, g_msgproc_mutex, cs_main);\n \n+    void ProcessPackageResult(const Package& package, const PackageMempoolAcceptResult& package_result, NodeId nodeid)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, g_msgproc_mutex, cs_main);\n+\n+    void MaybeProcess1P1CPackage(const CTransactionRef& ptx, NodeId nodeid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1523824732",
      "id" : 1523824732,
      "line" : 602,
      "node_id" : "PRRC_kwDOABII585a07hc",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 602,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 7,
      "pull_request_review_id" : 1935032934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523824732/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523824732",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1523824762"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523824762"
         }
      },
      "author_association" : "MEMBER",
      "body" : "please give some documentation",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-13T19:40:00Z",
      "diff_hunk" : "@@ -596,6 +596,12 @@ class PeerManagerImpl final : public PeerManager\n     void ProcessValidTx(NodeId nodeid, const CTransactionRef& tx, const std::list<CTransactionRef>& replaced_transactions)\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, g_msgproc_mutex, cs_main);\n \n+    void ProcessPackageResult(const Package& package, const PackageMempoolAcceptResult& package_result, NodeId nodeid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1523824762",
      "id" : 1523824762,
      "line" : 599,
      "node_id" : "PRRC_kwDOABII585a07h6",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 599,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 4,
      "pull_request_review_id" : 1935032934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523824762/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523824762",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1525341442"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1525341442"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```Suggestion\r\n        if (m_recent_rejects_reconsiderable.contains(wtxid)) {\r\n```\r\nthink this is the same check and would match other call of the function",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-14T18:38:54Z",
      "diff_hunk" : "@@ -4450,6 +4552,15 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         if (state.IsInvalid()) {\n             ProcessInvalidTx(pfrom.GetId(), ptx, state, /*maybe_add_extra_compact_tx=*/true);\n         }\n+        if (state.GetResult() == TxValidationResult::TX_RECONSIDERABLE) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1525341442",
      "id" : 1525341442,
      "line" : 4555,
      "node_id" : "PRRC_kwDOABII585a6t0C",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 4555,
      "original_position" : 127,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 241,
      "pull_request_review_id" : 1935032934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1525341442/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1525341442",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1525375424"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1525375424"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Mention that this is \"merely\" an optimization(and also reduces the churn in the bloom filter as well)?",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-14T19:13:00Z",
      "diff_hunk" : "@@ -4334,6 +4426,16 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         m_txrequest.ReceivedResponse(pfrom.GetId(), txid);\n         if (tx.HasWitness()) m_txrequest.ReceivedResponse(pfrom.GetId(), wtxid);\n \n+        // If we find this transaction in m_recent_rejects_reconsiderable, we shouldn't try it by",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1525375424",
      "id" : 1525375424,
      "line" : 4429,
      "node_id" : "PRRC_kwDOABII585a62HA",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 4429,
      "original_position" : 110,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 195,
      "pull_request_review_id" : 1935032934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1525375424/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1525375424",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1525396593"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1525396593"
         }
      },
      "author_association" : "MEMBER",
      "body" : "if `MaybeProcess1P1CPackage` handles the (non)existence in the `m_recent_rejects_reconsiderable` filter, you could stick this inside the `AlreadyHaveTx` block, which would allow existing logging to continue happening, and seems pretty natural?",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-14T19:31:59Z",
      "diff_hunk" : "@@ -4334,6 +4426,16 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         m_txrequest.ReceivedResponse(pfrom.GetId(), txid);\n         if (tx.HasWitness()) m_txrequest.ReceivedResponse(pfrom.GetId(), wtxid);\n \n+        // If we find this transaction in m_recent_rejects_reconsiderable, we shouldn't try it by\n+        // itself again. However, look for a matching child in the orphanage and maybe submit it\n+        // again as a package.\n+        if (m_recent_rejects_reconsiderable.contains(wtxid)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1525396593",
      "id" : 1525396593,
      "line" : 4432,
      "node_id" : "PRRC_kwDOABII585a67Rx",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 4432,
      "original_position" : 113,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 198,
      "pull_request_review_id" : 1935032934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1525396593/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1525396593",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526235839"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526235839"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```Suggestion\r\nvoid PeerManagerImpl::MaybeProcess1P1CPackage(const CTransactionRef& parent_ptx, NodeId nodeid)\r\n```",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-15T12:44:04Z",
      "diff_hunk" : "@@ -3181,6 +3187,92 @@ void PeerManagerImpl::ProcessValidTx(NodeId nodeid, const CTransactionRef& tx, c\n     }\n }\n \n+void PeerManagerImpl::ProcessPackageResult(const Package& package, const PackageMempoolAcceptResult& package_result, NodeId nodeid)\n+{\n+    AssertLockNotHeld(m_peer_mutex);\n+    AssertLockHeld(g_msgproc_mutex);\n+    AssertLockHeld(cs_main);\n+\n+    if (package_result.m_state.IsInvalid()) {\n+        m_recent_rejects_reconsiderable.insert(GetPackageHash(package));\n+    }\n+\n+    // Iterate backwards to erase in-package descendants from the orphanage before they become\n+    // relevant in AddChildrenToWorkSet.\n+    for (auto package_it = package.rbegin(); package_it != package.rend(); ++package_it) {\n+        const auto& tx = *package_it;\n+        const auto it_result{package_result.m_tx_results.find(tx->GetWitnessHash())};\n+        if (it_result != package_result.m_tx_results.end()) {\n+            const auto& tx_result = it_result->second;\n+            switch (tx_result.m_result_type) {\n+                case MempoolAcceptResult::ResultType::VALID:\n+                {\n+                    Assume(tx_result.m_replaced_transactions.has_value());\n+                    std::list<CTransactionRef> empty_replacement_list;\n+                    ProcessValidTx(nodeid, tx, tx_result.m_replaced_transactions.value_or(empty_replacement_list));\n+                    break;\n+                }\n+                case MempoolAcceptResult::ResultType::INVALID:\n+                case MempoolAcceptResult::ResultType::DIFFERENT_WITNESS:\n+                {\n+                    // Don't add to vExtraTxnForCompact, as these transactions would already be\n+                    // there as an orphan or too low feerate tx.\n+                    ProcessInvalidTx(nodeid, tx, tx_result.m_state, /*maybe_add_extra_compact_tx=*/false);\n+                    break;\n+                }\n+                case MempoolAcceptResult::ResultType::MEMPOOL_ENTRY:\n+                {\n+                    // AlreadyHaveTx() should be catching transactions that are already in mempool.\n+                    Assume(false);\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+void PeerManagerImpl::MaybeProcess1P1CPackage(const CTransactionRef& ptx, NodeId nodeid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526235839",
      "id" : 1526235839,
      "line" : 3234,
      "node_id" : "PRRC_kwDOABII585a-IK_",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 3234,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 137,
      "pull_request_review_id" : 1935032934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526235839/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526235839",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526239102"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526239102"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```Suggestion\r\n    const auto& parent_txid{parent_ptx->GetHash()};\r\n```\r\nas well as wtxid just below",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-15T12:46:48Z",
      "diff_hunk" : "@@ -3181,6 +3187,92 @@ void PeerManagerImpl::ProcessValidTx(NodeId nodeid, const CTransactionRef& tx, c\n     }\n }\n \n+void PeerManagerImpl::ProcessPackageResult(const Package& package, const PackageMempoolAcceptResult& package_result, NodeId nodeid)\n+{\n+    AssertLockNotHeld(m_peer_mutex);\n+    AssertLockHeld(g_msgproc_mutex);\n+    AssertLockHeld(cs_main);\n+\n+    if (package_result.m_state.IsInvalid()) {\n+        m_recent_rejects_reconsiderable.insert(GetPackageHash(package));\n+    }\n+\n+    // Iterate backwards to erase in-package descendants from the orphanage before they become\n+    // relevant in AddChildrenToWorkSet.\n+    for (auto package_it = package.rbegin(); package_it != package.rend(); ++package_it) {\n+        const auto& tx = *package_it;\n+        const auto it_result{package_result.m_tx_results.find(tx->GetWitnessHash())};\n+        if (it_result != package_result.m_tx_results.end()) {\n+            const auto& tx_result = it_result->second;\n+            switch (tx_result.m_result_type) {\n+                case MempoolAcceptResult::ResultType::VALID:\n+                {\n+                    Assume(tx_result.m_replaced_transactions.has_value());\n+                    std::list<CTransactionRef> empty_replacement_list;\n+                    ProcessValidTx(nodeid, tx, tx_result.m_replaced_transactions.value_or(empty_replacement_list));\n+                    break;\n+                }\n+                case MempoolAcceptResult::ResultType::INVALID:\n+                case MempoolAcceptResult::ResultType::DIFFERENT_WITNESS:\n+                {\n+                    // Don't add to vExtraTxnForCompact, as these transactions would already be\n+                    // there as an orphan or too low feerate tx.\n+                    ProcessInvalidTx(nodeid, tx, tx_result.m_state, /*maybe_add_extra_compact_tx=*/false);\n+                    break;\n+                }\n+                case MempoolAcceptResult::ResultType::MEMPOOL_ENTRY:\n+                {\n+                    // AlreadyHaveTx() should be catching transactions that are already in mempool.\n+                    Assume(false);\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+void PeerManagerImpl::MaybeProcess1P1CPackage(const CTransactionRef& ptx, NodeId nodeid)\n+{\n+    AssertLockNotHeld(m_peer_mutex);\n+    AssertLockHeld(g_msgproc_mutex);\n+    AssertLockHeld(cs_main);\n+\n+    const auto cpfp_candidates{m_orphanage.GetChildren(ptx, nodeid)};\n+    bool tried_package_cpfp{false};\n+\n+    const auto& txid{ptx->GetHash()};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526239102",
      "id" : 1526239102,
      "line" : 3243,
      "node_id" : "PRRC_kwDOABII585a-I9-",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 3243,
      "original_position" : 70,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 146,
      "pull_request_review_id" : 1935032934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526239102/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526239102",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526243536"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526243536"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```Suggestion\r\n\r\n    Assume(m_recent_rejects_reconsiderable.contains(parent_wtxid.ToUint256()));\r\n\r\n```",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-15T12:50:44Z",
      "diff_hunk" : "@@ -3181,6 +3187,92 @@ void PeerManagerImpl::ProcessValidTx(NodeId nodeid, const CTransactionRef& tx, c\n     }\n }\n \n+void PeerManagerImpl::ProcessPackageResult(const Package& package, const PackageMempoolAcceptResult& package_result, NodeId nodeid)\n+{\n+    AssertLockNotHeld(m_peer_mutex);\n+    AssertLockHeld(g_msgproc_mutex);\n+    AssertLockHeld(cs_main);\n+\n+    if (package_result.m_state.IsInvalid()) {\n+        m_recent_rejects_reconsiderable.insert(GetPackageHash(package));\n+    }\n+\n+    // Iterate backwards to erase in-package descendants from the orphanage before they become\n+    // relevant in AddChildrenToWorkSet.\n+    for (auto package_it = package.rbegin(); package_it != package.rend(); ++package_it) {\n+        const auto& tx = *package_it;\n+        const auto it_result{package_result.m_tx_results.find(tx->GetWitnessHash())};\n+        if (it_result != package_result.m_tx_results.end()) {\n+            const auto& tx_result = it_result->second;\n+            switch (tx_result.m_result_type) {\n+                case MempoolAcceptResult::ResultType::VALID:\n+                {\n+                    Assume(tx_result.m_replaced_transactions.has_value());\n+                    std::list<CTransactionRef> empty_replacement_list;\n+                    ProcessValidTx(nodeid, tx, tx_result.m_replaced_transactions.value_or(empty_replacement_list));\n+                    break;\n+                }\n+                case MempoolAcceptResult::ResultType::INVALID:\n+                case MempoolAcceptResult::ResultType::DIFFERENT_WITNESS:\n+                {\n+                    // Don't add to vExtraTxnForCompact, as these transactions would already be\n+                    // there as an orphan or too low feerate tx.\n+                    ProcessInvalidTx(nodeid, tx, tx_result.m_state, /*maybe_add_extra_compact_tx=*/false);\n+                    break;\n+                }\n+                case MempoolAcceptResult::ResultType::MEMPOOL_ENTRY:\n+                {\n+                    // AlreadyHaveTx() should be catching transactions that are already in mempool.\n+                    Assume(false);\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+void PeerManagerImpl::MaybeProcess1P1CPackage(const CTransactionRef& ptx, NodeId nodeid)\n+{\n+    AssertLockNotHeld(m_peer_mutex);\n+    AssertLockHeld(g_msgproc_mutex);\n+    AssertLockHeld(cs_main);\n+\n+    const auto cpfp_candidates{m_orphanage.GetChildren(ptx, nodeid)};\n+    bool tried_package_cpfp{false};\n+\n+    const auto& txid{ptx->GetHash()};\n+    const auto& wtxid{ptx->GetWitnessHash()};\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526243536",
      "id" : 1526243536,
      "line" : 3245,
      "node_id" : "PRRC_kwDOABII585a-KDQ",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 3245,
      "original_position" : 72,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 148,
      "pull_request_review_id" : 1935032934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526243536/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526243536",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526585888"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526585888"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```Suggestion\r\n        if (Assume(it_result != package_result.m_tx_results.end())) {\r\n```",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-15T17:02:58Z",
      "diff_hunk" : "@@ -3181,6 +3187,92 @@ void PeerManagerImpl::ProcessValidTx(NodeId nodeid, const CTransactionRef& tx, c\n     }\n }\n \n+void PeerManagerImpl::ProcessPackageResult(const Package& package, const PackageMempoolAcceptResult& package_result, NodeId nodeid)\n+{\n+    AssertLockNotHeld(m_peer_mutex);\n+    AssertLockHeld(g_msgproc_mutex);\n+    AssertLockHeld(cs_main);\n+\n+    if (package_result.m_state.IsInvalid()) {\n+        m_recent_rejects_reconsiderable.insert(GetPackageHash(package));\n+    }\n+\n+    // Iterate backwards to erase in-package descendants from the orphanage before they become\n+    // relevant in AddChildrenToWorkSet.\n+    for (auto package_it = package.rbegin(); package_it != package.rend(); ++package_it) {\n+        const auto& tx = *package_it;\n+        const auto it_result{package_result.m_tx_results.find(tx->GetWitnessHash())};\n+        if (it_result != package_result.m_tx_results.end()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526585888",
      "id" : 1526585888,
      "line" : 3205,
      "node_id" : "PRRC_kwDOABII585a_dog",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 3205,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 108,
      "pull_request_review_id" : 1935032934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526585888/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526585888",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526656636"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526656636"
         }
      },
      "author_association" : "MEMBER",
      "body" : "have you considered moving this above `INVALID` and letting it fall through to call `ProcessInvalidTx` as well?",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-15T18:08:41Z",
      "diff_hunk" : "@@ -3181,6 +3187,92 @@ void PeerManagerImpl::ProcessValidTx(NodeId nodeid, const CTransactionRef& tx, c\n     }\n }\n \n+void PeerManagerImpl::ProcessPackageResult(const Package& package, const PackageMempoolAcceptResult& package_result, NodeId nodeid)\n+{\n+    AssertLockNotHeld(m_peer_mutex);\n+    AssertLockHeld(g_msgproc_mutex);\n+    AssertLockHeld(cs_main);\n+\n+    if (package_result.m_state.IsInvalid()) {\n+        m_recent_rejects_reconsiderable.insert(GetPackageHash(package));\n+    }\n+\n+    // Iterate backwards to erase in-package descendants from the orphanage before they become\n+    // relevant in AddChildrenToWorkSet.\n+    for (auto package_it = package.rbegin(); package_it != package.rend(); ++package_it) {\n+        const auto& tx = *package_it;\n+        const auto it_result{package_result.m_tx_results.find(tx->GetWitnessHash())};\n+        if (it_result != package_result.m_tx_results.end()) {\n+            const auto& tx_result = it_result->second;\n+            switch (tx_result.m_result_type) {\n+                case MempoolAcceptResult::ResultType::VALID:\n+                {\n+                    Assume(tx_result.m_replaced_transactions.has_value());\n+                    std::list<CTransactionRef> empty_replacement_list;\n+                    ProcessValidTx(nodeid, tx, tx_result.m_replaced_transactions.value_or(empty_replacement_list));\n+                    break;\n+                }\n+                case MempoolAcceptResult::ResultType::INVALID:\n+                case MempoolAcceptResult::ResultType::DIFFERENT_WITNESS:\n+                {\n+                    // Don't add to vExtraTxnForCompact, as these transactions would already be\n+                    // there as an orphan or too low feerate tx.\n+                    ProcessInvalidTx(nodeid, tx, tx_result.m_state, /*maybe_add_extra_compact_tx=*/false);\n+                    break;\n+                }\n+                case MempoolAcceptResult::ResultType::MEMPOOL_ENTRY:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526656636",
      "id" : 1526656636,
      "line" : 3223,
      "node_id" : "PRRC_kwDOABII585a_u58",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 3223,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 126,
      "pull_request_review_id" : 1935032934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526656636/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526656636",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526676597"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526676597"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We don't add orphans to vExtraTxnForCompact though, just too low aka reconsiderable?\r\n\r\nmaybe something like:\r\n\r\n> // All packages currently considered are 1p1c, which means\r\n> // any entrants to be added in vExtraTxnForCompact have already been added",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-15T18:25:36Z",
      "diff_hunk" : "@@ -3181,6 +3187,92 @@ void PeerManagerImpl::ProcessValidTx(NodeId nodeid, const CTransactionRef& tx, c\n     }\n }\n \n+void PeerManagerImpl::ProcessPackageResult(const Package& package, const PackageMempoolAcceptResult& package_result, NodeId nodeid)\n+{\n+    AssertLockNotHeld(m_peer_mutex);\n+    AssertLockHeld(g_msgproc_mutex);\n+    AssertLockHeld(cs_main);\n+\n+    if (package_result.m_state.IsInvalid()) {\n+        m_recent_rejects_reconsiderable.insert(GetPackageHash(package));\n+    }\n+\n+    // Iterate backwards to erase in-package descendants from the orphanage before they become\n+    // relevant in AddChildrenToWorkSet.\n+    for (auto package_it = package.rbegin(); package_it != package.rend(); ++package_it) {\n+        const auto& tx = *package_it;\n+        const auto it_result{package_result.m_tx_results.find(tx->GetWitnessHash())};\n+        if (it_result != package_result.m_tx_results.end()) {\n+            const auto& tx_result = it_result->second;\n+            switch (tx_result.m_result_type) {\n+                case MempoolAcceptResult::ResultType::VALID:\n+                {\n+                    Assume(tx_result.m_replaced_transactions.has_value());\n+                    std::list<CTransactionRef> empty_replacement_list;\n+                    ProcessValidTx(nodeid, tx, tx_result.m_replaced_transactions.value_or(empty_replacement_list));\n+                    break;\n+                }\n+                case MempoolAcceptResult::ResultType::INVALID:\n+                case MempoolAcceptResult::ResultType::DIFFERENT_WITNESS:\n+                {\n+                    // Don't add to vExtraTxnForCompact, as these transactions would already be",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526676597",
      "id" : 1526676597,
      "line" : 3218,
      "node_id" : "PRRC_kwDOABII585a_zx1",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 3218,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 121,
      "pull_request_review_id" : 1935032934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526676597/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526676597",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526764674"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526764674"
         }
      },
      "author_association" : "MEMBER",
      "body" : "unused",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-15T19:45:49Z",
      "diff_hunk" : "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+            \"-whitelist=noban@127.0.0.1\",  # immediate tx relay\n+        ]] * self.num_nodes\n+        self.supports_cli = False\n+\n+    def raise_network_minfee(self):\n+        filler_wallet = MiniWallet(self.nodes[0])\n+        relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n+        num_big_transactions = 75\n+        # Generate coins to spend and wait for them to mature\n+        self.generate(filler_wallet, num_big_transactions)\n+        self.generate(filler_wallet, 100)\n+\n+        self.log.debug(\"Create a mempool tx that will be evicted\")\n+        tx_to_be_evicted_id = filler_wallet.send_self_transfer(from_node=self.nodes[1], fee_rate=relayfee)[\"txid\"]\n+\n+        # Increase the tx fee rate to give the subsequent transactions a higher priority in the mempool\n+        # The tx has an approx. vsize of 65k, i.e. multiplying the previous fee rate (in sats/kvB)\n+        # by 130 should result in a fee that corresponds to 2x of that fee rate\n+        base_fee = relayfee * 130\n+\n+        self.log.debug(\"Fill up the mempool with txs with higher fee rate\")\n+        txouts = gen_return_txouts()\n+        with self.nodes[0].assert_debug_log([\"rolling minimum fee bumped\"]):\n+            for batch_of_txid in range(num_big_transactions):\n+                fee = (batch_of_txid + 1) * base_fee\n+                create_lots_of_big_transactions(filler_wallet, self.nodes[0], fee, 1, txouts)\n+\n+        self.log.debug(\"Wait for the network to sync mempools\")\n+        self.sync_mempools()\n+        assert tx_to_be_evicted_id not in self.nodes[0].getrawmempool()\n+\n+        self.log.debug(\"Check that all nodes' mempool minimum feerate is above min relay feerate\")\n+        for node in self.nodes:\n+            assert_equal(node.getmempoolinfo()['minrelaytxfee'], FEERATE_1SAT_VB)\n+            assert_greater_than(node.getmempoolinfo()['mempoolminfee'], FEERATE_1SAT_VB)\n+\n+    def create_packages(self):\n+        # Basic 1-parent-1-child package\n+        # node0: sender\n+        # node1: pre-received the child (orphan)\n+        # node2: pre-received nothing\n+        # node3: pre-received the parent (too low fee)\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+        package_hex_basic = [low_fee_parent[\"hex\"], high_fee_child[\"hex\"]]\n+        self.packages_to_submit.append(package_hex_basic)\n+        # Child should already be in orphanage\n+        self.transactions_to_presend[1] = [high_fee_child[\"tx\"]]\n+        # Parent would have been previously rejected\n+        self.transactions_to_presend[3] = [low_fee_parent[\"tx\"]]\n+\n+    def test_individual_logic(self):\n+        node = self.nodes[0]\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        low_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=2*FEERATE_1SAT_VB)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+\n+        peer1 = node.add_p2p_connection(P2PInterface())\n+        peer2 = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check that tx caches low feerate rejections\")\n+        parent_wtxid_int = int(low_fee_parent[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        peer1.wait_for_getdata([parent_wtxid_int])\n+        peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+\n+        # Send again from peer2, check that it is ignored\n+        with node.assert_debug_log([f\"got inv: wtx {low_fee_parent['wtxid']}  have\"]):\n+            peer2.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        assert \"getdata\" not in peer2.last_message\n+\n+        self.log.info(\"Check that the node doesn't try to validate a failed package again\")\n+        # Send the (orphan) child that has a higher feerate but not enough to bump the parent\n+        low_child_wtxid_int = int(low_fee_child[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=low_child_wtxid_int)]))\n+        peer1.wait_for_getdata([low_child_wtxid_int])\n+        peer1.send_and_ping(msg_tx(low_fee_child[\"tx\"]))\n+        # Node should request the orphan's missing parent. It has seen this parent before, but only\n+        # cached the failure by wtxid, not txid.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer1.wait_for_getdata([parent_txid_int])\n+        failed_expected_logs_1p1c = []\n+        failed_expected_logs_1p1c.append(f\"found tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in reconsiderable rejects, looking for child in orphanage\")\n+        failed_expected_logs_1p1c.append(f\"found child {low_fee_child['txid']} (wtxid={low_fee_child['wtxid']}) of tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in orphanage, trying package evaluation\")\n+        failed_expected_logs_1p1c.append(f\"removed orphan tx {low_fee_child['txid']} (wtxid={low_fee_child['wtxid']})\")\n+\n+        with node.assert_debug_log(failed_expected_logs_1p1c):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        # The transactions do not get accepted due to low feerate\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+        assert low_fee_child[\"txid\"] not in node.getrawmempool()\n+\n+        # If peer2 announces the low feerate child, it should be ignored\n+        with node.assert_debug_log([f\"got inv: wtx {low_fee_child['wtxid']}  have\"]):\n+            peer2.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=low_child_wtxid_int)]))\n+        assert \"getdata\" not in peer2.last_message\n+        # If either peer sends the parent again, package evaluation should not be attempted\n+        with node.assert_debug_log([f\"didn't evaluate package for {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}), no eligible child found\"]):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        with node.assert_debug_log([f\"didn't evaluate package for {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}), no eligible child found\"]):\n+            peer2.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        self.log.info(\"Check that the node groups a low-feerate tx with its single child in orphanage\")\n+        # Send the high feerate (orphan) child\n+        high_child_wtxid_int = int(high_fee_child[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=high_child_wtxid_int)]))\n+        peer1.wait_for_getdata([high_child_wtxid_int])\n+        peer1.send_and_ping(msg_tx(high_fee_child[\"tx\"]))\n+        # Node should request the orphan's parent, even though it has already been rejected, both by\n+        # itself and with a child. This is necessary, otherwise high_fee_child can be censored.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer1.wait_for_getdata([parent_txid_int])\n+        expected_logs_1p1c = []\n+        expected_logs_1p1c.append(f\"found tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in reconsiderable rejects, looking for child in orphanage\")\n+        expected_logs_1p1c.append(f\"found child {high_fee_child['txid']} (wtxid={high_fee_child['wtxid']}) of tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in orphanage, trying package evaluation\")\n+        with node.assert_debug_log(expected_logs_1p1c):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        # Both transactions should now be in mempool\n+        node_mempool = node.getrawmempool()\n+        assert low_fee_parent[\"txid\"] in node_mempool\n+        assert high_fee_child[\"txid\"] in node_mempool\n+\n+        peer1.peer_disconnect()\n+        peer2.peer_disconnect()\n+        self.sync_all()\n+\n+    def run_test(self):\n+        self.ctr = 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526764674",
      "id" : 1526764674,
      "line" : 172,
      "node_id" : "PRRC_kwDOABII585bAJSC",
      "original_commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "original_line" : 172,
      "original_position" : 172,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : 172,
      "pull_request_review_id" : 1935032934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526764674/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526764674",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526776259"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526776259"
         }
      },
      "author_association" : "MEMBER",
      "body" : "unsure what the test is covering if it's being deleted on disconnect?",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-15T19:57:52Z",
      "diff_hunk" : "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+            \"-whitelist=noban@127.0.0.1\",  # immediate tx relay\n+        ]] * self.num_nodes\n+        self.supports_cli = False\n+\n+    def raise_network_minfee(self):\n+        filler_wallet = MiniWallet(self.nodes[0])\n+        relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n+        num_big_transactions = 75\n+        # Generate coins to spend and wait for them to mature\n+        self.generate(filler_wallet, num_big_transactions)\n+        self.generate(filler_wallet, 100)\n+\n+        self.log.debug(\"Create a mempool tx that will be evicted\")\n+        tx_to_be_evicted_id = filler_wallet.send_self_transfer(from_node=self.nodes[1], fee_rate=relayfee)[\"txid\"]\n+\n+        # Increase the tx fee rate to give the subsequent transactions a higher priority in the mempool\n+        # The tx has an approx. vsize of 65k, i.e. multiplying the previous fee rate (in sats/kvB)\n+        # by 130 should result in a fee that corresponds to 2x of that fee rate\n+        base_fee = relayfee * 130\n+\n+        self.log.debug(\"Fill up the mempool with txs with higher fee rate\")\n+        txouts = gen_return_txouts()\n+        with self.nodes[0].assert_debug_log([\"rolling minimum fee bumped\"]):\n+            for batch_of_txid in range(num_big_transactions):\n+                fee = (batch_of_txid + 1) * base_fee\n+                create_lots_of_big_transactions(filler_wallet, self.nodes[0], fee, 1, txouts)\n+\n+        self.log.debug(\"Wait for the network to sync mempools\")\n+        self.sync_mempools()\n+        assert tx_to_be_evicted_id not in self.nodes[0].getrawmempool()\n+\n+        self.log.debug(\"Check that all nodes' mempool minimum feerate is above min relay feerate\")\n+        for node in self.nodes:\n+            assert_equal(node.getmempoolinfo()['minrelaytxfee'], FEERATE_1SAT_VB)\n+            assert_greater_than(node.getmempoolinfo()['mempoolminfee'], FEERATE_1SAT_VB)\n+\n+    def create_packages(self):\n+        # Basic 1-parent-1-child package\n+        # node0: sender\n+        # node1: pre-received the child (orphan)\n+        # node2: pre-received nothing\n+        # node3: pre-received the parent (too low fee)\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+        package_hex_basic = [low_fee_parent[\"hex\"], high_fee_child[\"hex\"]]\n+        self.packages_to_submit.append(package_hex_basic)\n+        # Child should already be in orphanage\n+        self.transactions_to_presend[1] = [high_fee_child[\"tx\"]]\n+        # Parent would have been previously rejected\n+        self.transactions_to_presend[3] = [low_fee_parent[\"tx\"]]\n+\n+    def test_individual_logic(self):\n+        node = self.nodes[0]\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        low_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=2*FEERATE_1SAT_VB)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+\n+        peer1 = node.add_p2p_connection(P2PInterface())\n+        peer2 = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check that tx caches low feerate rejections\")\n+        parent_wtxid_int = int(low_fee_parent[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        peer1.wait_for_getdata([parent_wtxid_int])\n+        peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+\n+        # Send again from peer2, check that it is ignored\n+        with node.assert_debug_log([f\"got inv: wtx {low_fee_parent['wtxid']}  have\"]):\n+            peer2.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        assert \"getdata\" not in peer2.last_message\n+\n+        self.log.info(\"Check that the node doesn't try to validate a failed package again\")\n+        # Send the (orphan) child that has a higher feerate but not enough to bump the parent\n+        low_child_wtxid_int = int(low_fee_child[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=low_child_wtxid_int)]))\n+        peer1.wait_for_getdata([low_child_wtxid_int])\n+        peer1.send_and_ping(msg_tx(low_fee_child[\"tx\"]))\n+        # Node should request the orphan's missing parent. It has seen this parent before, but only\n+        # cached the failure by wtxid, not txid.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer1.wait_for_getdata([parent_txid_int])\n+        failed_expected_logs_1p1c = []\n+        failed_expected_logs_1p1c.append(f\"found tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in reconsiderable rejects, looking for child in orphanage\")\n+        failed_expected_logs_1p1c.append(f\"found child {low_fee_child['txid']} (wtxid={low_fee_child['wtxid']}) of tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in orphanage, trying package evaluation\")\n+        failed_expected_logs_1p1c.append(f\"removed orphan tx {low_fee_child['txid']} (wtxid={low_fee_child['wtxid']})\")\n+\n+        with node.assert_debug_log(failed_expected_logs_1p1c):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        # The transactions do not get accepted due to low feerate\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+        assert low_fee_child[\"txid\"] not in node.getrawmempool()\n+\n+        # If peer2 announces the low feerate child, it should be ignored\n+        with node.assert_debug_log([f\"got inv: wtx {low_fee_child['wtxid']}  have\"]):\n+            peer2.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=low_child_wtxid_int)]))\n+        assert \"getdata\" not in peer2.last_message\n+        # If either peer sends the parent again, package evaluation should not be attempted\n+        with node.assert_debug_log([f\"didn't evaluate package for {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}), no eligible child found\"]):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        with node.assert_debug_log([f\"didn't evaluate package for {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}), no eligible child found\"]):\n+            peer2.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        self.log.info(\"Check that the node groups a low-feerate tx with its single child in orphanage\")\n+        # Send the high feerate (orphan) child\n+        high_child_wtxid_int = int(high_fee_child[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=high_child_wtxid_int)]))\n+        peer1.wait_for_getdata([high_child_wtxid_int])\n+        peer1.send_and_ping(msg_tx(high_fee_child[\"tx\"]))\n+        # Node should request the orphan's parent, even though it has already been rejected, both by\n+        # itself and with a child. This is necessary, otherwise high_fee_child can be censored.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer1.wait_for_getdata([parent_txid_int])\n+        expected_logs_1p1c = []\n+        expected_logs_1p1c.append(f\"found tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in reconsiderable rejects, looking for child in orphanage\")\n+        expected_logs_1p1c.append(f\"found child {high_fee_child['txid']} (wtxid={high_fee_child['wtxid']}) of tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in orphanage, trying package evaluation\")\n+        with node.assert_debug_log(expected_logs_1p1c):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        # Both transactions should now be in mempool\n+        node_mempool = node.getrawmempool()\n+        assert low_fee_parent[\"txid\"] in node_mempool\n+        assert high_fee_child[\"txid\"] in node_mempool\n+\n+        peer1.peer_disconnect()\n+        peer2.peer_disconnect()\n+        self.sync_all()\n+\n+    def run_test(self):\n+        self.ctr = 0\n+        self.wallet = MiniWallet(self.nodes[1])\n+        self.generate(self.wallet, 120)\n+\n+        self.log.info(\"Fill mempools with large transactions to raise mempool minimum feerates\")\n+        self.raise_network_minfee()\n+\n+        self.log.info(\"Check 1p1c validation logic on a single node\")\n+        self.test_individual_logic()\n+\n+        self.log.info(\"Check end-to-end package relay across multiple nodes\")\n+        self.packages_to_submit = []\n+        self.transactions_to_presend = [[]] * self.num_nodes\n+\n+        self.log.info(\"Create transactions and then mature the coinbases\")\n+        self.wallet.rescan_utxos(include_mempool=True)\n+        self.create_packages()\n+\n+        self.peers = []\n+        for i in range(self.num_nodes):\n+            self.peers.append(self.nodes[i].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\"))\n+\n+        self.log.info(\"Pre-send some transactions to nodes\")\n+        for i in range(self.num_nodes):\n+            peer = self.peers[i]\n+            for tx in self.transactions_to_presend[i]:\n+                inv = CInv(t=MSG_WTX, h=int(tx.getwtxid(), 16))\n+                peer.send_and_ping(msg_inv([inv]))\n+                peer.wait_for_getdata([int(tx.getwtxid(), 16)])\n+                peer.send_and_ping(msg_tx(tx))\n+            # This disconnect removes any sent orphans from the orphanage (EraseForPeer) and times\n+            # out the in-flight requests.  It is currently required for the test to pass right now,\n+            # because the node will not (re)try requesting orphan parents from multiple peers if the\n+            # first one fails.\n+            # TODO: remove this and test that the node retries orphan resolution with other peers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526776259",
      "id" : 1526776259,
      "line" : 206,
      "node_id" : "PRRC_kwDOABII585bAMHD",
      "original_commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "original_line" : 206,
      "original_position" : 206,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : 206,
      "pull_request_review_id" : 1935032934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526776259/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526776259",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526776377"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526776377"
         }
      },
      "author_association" : "MEMBER",
      "body" : "double-sync for what?",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-15T19:58:01Z",
      "diff_hunk" : "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+            \"-whitelist=noban@127.0.0.1\",  # immediate tx relay\n+        ]] * self.num_nodes\n+        self.supports_cli = False\n+\n+    def raise_network_minfee(self):\n+        filler_wallet = MiniWallet(self.nodes[0])\n+        relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n+        num_big_transactions = 75\n+        # Generate coins to spend and wait for them to mature\n+        self.generate(filler_wallet, num_big_transactions)\n+        self.generate(filler_wallet, 100)\n+\n+        self.log.debug(\"Create a mempool tx that will be evicted\")\n+        tx_to_be_evicted_id = filler_wallet.send_self_transfer(from_node=self.nodes[1], fee_rate=relayfee)[\"txid\"]\n+\n+        # Increase the tx fee rate to give the subsequent transactions a higher priority in the mempool\n+        # The tx has an approx. vsize of 65k, i.e. multiplying the previous fee rate (in sats/kvB)\n+        # by 130 should result in a fee that corresponds to 2x of that fee rate\n+        base_fee = relayfee * 130\n+\n+        self.log.debug(\"Fill up the mempool with txs with higher fee rate\")\n+        txouts = gen_return_txouts()\n+        with self.nodes[0].assert_debug_log([\"rolling minimum fee bumped\"]):\n+            for batch_of_txid in range(num_big_transactions):\n+                fee = (batch_of_txid + 1) * base_fee\n+                create_lots_of_big_transactions(filler_wallet, self.nodes[0], fee, 1, txouts)\n+\n+        self.log.debug(\"Wait for the network to sync mempools\")\n+        self.sync_mempools()\n+        assert tx_to_be_evicted_id not in self.nodes[0].getrawmempool()\n+\n+        self.log.debug(\"Check that all nodes' mempool minimum feerate is above min relay feerate\")\n+        for node in self.nodes:\n+            assert_equal(node.getmempoolinfo()['minrelaytxfee'], FEERATE_1SAT_VB)\n+            assert_greater_than(node.getmempoolinfo()['mempoolminfee'], FEERATE_1SAT_VB)\n+\n+    def create_packages(self):\n+        # Basic 1-parent-1-child package\n+        # node0: sender\n+        # node1: pre-received the child (orphan)\n+        # node2: pre-received nothing\n+        # node3: pre-received the parent (too low fee)\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+        package_hex_basic = [low_fee_parent[\"hex\"], high_fee_child[\"hex\"]]\n+        self.packages_to_submit.append(package_hex_basic)\n+        # Child should already be in orphanage\n+        self.transactions_to_presend[1] = [high_fee_child[\"tx\"]]\n+        # Parent would have been previously rejected\n+        self.transactions_to_presend[3] = [low_fee_parent[\"tx\"]]\n+\n+    def test_individual_logic(self):\n+        node = self.nodes[0]\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        low_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=2*FEERATE_1SAT_VB)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+\n+        peer1 = node.add_p2p_connection(P2PInterface())\n+        peer2 = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check that tx caches low feerate rejections\")\n+        parent_wtxid_int = int(low_fee_parent[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        peer1.wait_for_getdata([parent_wtxid_int])\n+        peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+\n+        # Send again from peer2, check that it is ignored\n+        with node.assert_debug_log([f\"got inv: wtx {low_fee_parent['wtxid']}  have\"]):\n+            peer2.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        assert \"getdata\" not in peer2.last_message\n+\n+        self.log.info(\"Check that the node doesn't try to validate a failed package again\")\n+        # Send the (orphan) child that has a higher feerate but not enough to bump the parent\n+        low_child_wtxid_int = int(low_fee_child[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=low_child_wtxid_int)]))\n+        peer1.wait_for_getdata([low_child_wtxid_int])\n+        peer1.send_and_ping(msg_tx(low_fee_child[\"tx\"]))\n+        # Node should request the orphan's missing parent. It has seen this parent before, but only\n+        # cached the failure by wtxid, not txid.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer1.wait_for_getdata([parent_txid_int])\n+        failed_expected_logs_1p1c = []\n+        failed_expected_logs_1p1c.append(f\"found tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in reconsiderable rejects, looking for child in orphanage\")\n+        failed_expected_logs_1p1c.append(f\"found child {low_fee_child['txid']} (wtxid={low_fee_child['wtxid']}) of tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in orphanage, trying package evaluation\")\n+        failed_expected_logs_1p1c.append(f\"removed orphan tx {low_fee_child['txid']} (wtxid={low_fee_child['wtxid']})\")\n+\n+        with node.assert_debug_log(failed_expected_logs_1p1c):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        # The transactions do not get accepted due to low feerate\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+        assert low_fee_child[\"txid\"] not in node.getrawmempool()\n+\n+        # If peer2 announces the low feerate child, it should be ignored\n+        with node.assert_debug_log([f\"got inv: wtx {low_fee_child['wtxid']}  have\"]):\n+            peer2.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=low_child_wtxid_int)]))\n+        assert \"getdata\" not in peer2.last_message\n+        # If either peer sends the parent again, package evaluation should not be attempted\n+        with node.assert_debug_log([f\"didn't evaluate package for {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}), no eligible child found\"]):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        with node.assert_debug_log([f\"didn't evaluate package for {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}), no eligible child found\"]):\n+            peer2.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        self.log.info(\"Check that the node groups a low-feerate tx with its single child in orphanage\")\n+        # Send the high feerate (orphan) child\n+        high_child_wtxid_int = int(high_fee_child[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=high_child_wtxid_int)]))\n+        peer1.wait_for_getdata([high_child_wtxid_int])\n+        peer1.send_and_ping(msg_tx(high_fee_child[\"tx\"]))\n+        # Node should request the orphan's parent, even though it has already been rejected, both by\n+        # itself and with a child. This is necessary, otherwise high_fee_child can be censored.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer1.wait_for_getdata([parent_txid_int])\n+        expected_logs_1p1c = []\n+        expected_logs_1p1c.append(f\"found tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in reconsiderable rejects, looking for child in orphanage\")\n+        expected_logs_1p1c.append(f\"found child {high_fee_child['txid']} (wtxid={high_fee_child['wtxid']}) of tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in orphanage, trying package evaluation\")\n+        with node.assert_debug_log(expected_logs_1p1c):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        # Both transactions should now be in mempool\n+        node_mempool = node.getrawmempool()\n+        assert low_fee_parent[\"txid\"] in node_mempool\n+        assert high_fee_child[\"txid\"] in node_mempool\n+\n+        peer1.peer_disconnect()\n+        peer2.peer_disconnect()\n+        self.sync_all()\n+\n+    def run_test(self):\n+        self.ctr = 0\n+        self.wallet = MiniWallet(self.nodes[1])\n+        self.generate(self.wallet, 120)\n+\n+        self.log.info(\"Fill mempools with large transactions to raise mempool minimum feerates\")\n+        self.raise_network_minfee()\n+\n+        self.log.info(\"Check 1p1c validation logic on a single node\")\n+        self.test_individual_logic()\n+\n+        self.log.info(\"Check end-to-end package relay across multiple nodes\")\n+        self.packages_to_submit = []\n+        self.transactions_to_presend = [[]] * self.num_nodes\n+\n+        self.log.info(\"Create transactions and then mature the coinbases\")\n+        self.wallet.rescan_utxos(include_mempool=True)\n+        self.create_packages()\n+\n+        self.peers = []\n+        for i in range(self.num_nodes):\n+            self.peers.append(self.nodes[i].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\"))\n+\n+        self.log.info(\"Pre-send some transactions to nodes\")\n+        for i in range(self.num_nodes):\n+            peer = self.peers[i]\n+            for tx in self.transactions_to_presend[i]:\n+                inv = CInv(t=MSG_WTX, h=int(tx.getwtxid(), 16))\n+                peer.send_and_ping(msg_inv([inv]))\n+                peer.wait_for_getdata([int(tx.getwtxid(), 16)])\n+                peer.send_and_ping(msg_tx(tx))\n+            # This disconnect removes any sent orphans from the orphanage (EraseForPeer) and times\n+            # out the in-flight requests.  It is currently required for the test to pass right now,\n+            # because the node will not (re)try requesting orphan parents from multiple peers if the\n+            # first one fails.\n+            # TODO: remove this and test that the node retries orphan resolution with other peers\n+            # when the first try fails.\n+            peer.peer_disconnect()\n+\n+        self.log.info(\"Submit full packages to node0\")\n+        for package_hex in self.packages_to_submit:\n+            self.nodes[0].submitpackage(package_hex)\n+\n+        self.log.info(\"Wait for mempools to sync\")\n+        self.sync_mempools(timeout=20)\n+\n+        self.log.info(\"Wait for mempools to sync\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526776377",
      "id" : 1526776377,
      "line" : 217,
      "node_id" : "PRRC_kwDOABII585bAMI5",
      "original_commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "original_line" : 217,
      "original_position" : 217,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : 217,
      "pull_request_review_id" : 1935032934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526776377/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526776377",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526790462"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526790462"
         }
      },
      "author_association" : "MEMBER",
      "body" : "had this timeout locally once",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-15T20:16:30Z",
      "diff_hunk" : "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+            \"-whitelist=noban@127.0.0.1\",  # immediate tx relay\n+        ]] * self.num_nodes\n+        self.supports_cli = False\n+\n+    def raise_network_minfee(self):\n+        filler_wallet = MiniWallet(self.nodes[0])\n+        relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n+        num_big_transactions = 75\n+        # Generate coins to spend and wait for them to mature\n+        self.generate(filler_wallet, num_big_transactions)\n+        self.generate(filler_wallet, 100)\n+\n+        self.log.debug(\"Create a mempool tx that will be evicted\")\n+        tx_to_be_evicted_id = filler_wallet.send_self_transfer(from_node=self.nodes[1], fee_rate=relayfee)[\"txid\"]\n+\n+        # Increase the tx fee rate to give the subsequent transactions a higher priority in the mempool\n+        # The tx has an approx. vsize of 65k, i.e. multiplying the previous fee rate (in sats/kvB)\n+        # by 130 should result in a fee that corresponds to 2x of that fee rate\n+        base_fee = relayfee * 130\n+\n+        self.log.debug(\"Fill up the mempool with txs with higher fee rate\")\n+        txouts = gen_return_txouts()\n+        with self.nodes[0].assert_debug_log([\"rolling minimum fee bumped\"]):\n+            for batch_of_txid in range(num_big_transactions):\n+                fee = (batch_of_txid + 1) * base_fee\n+                create_lots_of_big_transactions(filler_wallet, self.nodes[0], fee, 1, txouts)\n+\n+        self.log.debug(\"Wait for the network to sync mempools\")\n+        self.sync_mempools()\n+        assert tx_to_be_evicted_id not in self.nodes[0].getrawmempool()\n+\n+        self.log.debug(\"Check that all nodes' mempool minimum feerate is above min relay feerate\")\n+        for node in self.nodes:\n+            assert_equal(node.getmempoolinfo()['minrelaytxfee'], FEERATE_1SAT_VB)\n+            assert_greater_than(node.getmempoolinfo()['mempoolminfee'], FEERATE_1SAT_VB)\n+\n+    def create_packages(self):\n+        # Basic 1-parent-1-child package\n+        # node0: sender\n+        # node1: pre-received the child (orphan)\n+        # node2: pre-received nothing\n+        # node3: pre-received the parent (too low fee)\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+        package_hex_basic = [low_fee_parent[\"hex\"], high_fee_child[\"hex\"]]\n+        self.packages_to_submit.append(package_hex_basic)\n+        # Child should already be in orphanage\n+        self.transactions_to_presend[1] = [high_fee_child[\"tx\"]]\n+        # Parent would have been previously rejected\n+        self.transactions_to_presend[3] = [low_fee_parent[\"tx\"]]\n+\n+    def test_individual_logic(self):\n+        node = self.nodes[0]\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        low_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=2*FEERATE_1SAT_VB)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+\n+        peer1 = node.add_p2p_connection(P2PInterface())\n+        peer2 = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check that tx caches low feerate rejections\")\n+        parent_wtxid_int = int(low_fee_parent[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        peer1.wait_for_getdata([parent_wtxid_int])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526790462",
      "id" : 1526790462,
      "line" : 106,
      "node_id" : "PRRC_kwDOABII585bAPk-",
      "original_commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "original_line" : 106,
      "original_position" : 106,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : 106,
      "pull_request_review_id" : 1935032934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 1,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526790462/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526790462",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526791671"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526791671"
         }
      },
      "author_association" : "MEMBER",
      "body" : "could this subtest be in its own subroutine",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-15T20:18:04Z",
      "diff_hunk" : "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+            \"-whitelist=noban@127.0.0.1\",  # immediate tx relay\n+        ]] * self.num_nodes\n+        self.supports_cli = False\n+\n+    def raise_network_minfee(self):\n+        filler_wallet = MiniWallet(self.nodes[0])\n+        relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n+        num_big_transactions = 75\n+        # Generate coins to spend and wait for them to mature\n+        self.generate(filler_wallet, num_big_transactions)\n+        self.generate(filler_wallet, 100)\n+\n+        self.log.debug(\"Create a mempool tx that will be evicted\")\n+        tx_to_be_evicted_id = filler_wallet.send_self_transfer(from_node=self.nodes[1], fee_rate=relayfee)[\"txid\"]\n+\n+        # Increase the tx fee rate to give the subsequent transactions a higher priority in the mempool\n+        # The tx has an approx. vsize of 65k, i.e. multiplying the previous fee rate (in sats/kvB)\n+        # by 130 should result in a fee that corresponds to 2x of that fee rate\n+        base_fee = relayfee * 130\n+\n+        self.log.debug(\"Fill up the mempool with txs with higher fee rate\")\n+        txouts = gen_return_txouts()\n+        with self.nodes[0].assert_debug_log([\"rolling minimum fee bumped\"]):\n+            for batch_of_txid in range(num_big_transactions):\n+                fee = (batch_of_txid + 1) * base_fee\n+                create_lots_of_big_transactions(filler_wallet, self.nodes[0], fee, 1, txouts)\n+\n+        self.log.debug(\"Wait for the network to sync mempools\")\n+        self.sync_mempools()\n+        assert tx_to_be_evicted_id not in self.nodes[0].getrawmempool()\n+\n+        self.log.debug(\"Check that all nodes' mempool minimum feerate is above min relay feerate\")\n+        for node in self.nodes:\n+            assert_equal(node.getmempoolinfo()['minrelaytxfee'], FEERATE_1SAT_VB)\n+            assert_greater_than(node.getmempoolinfo()['mempoolminfee'], FEERATE_1SAT_VB)\n+\n+    def create_packages(self):\n+        # Basic 1-parent-1-child package\n+        # node0: sender\n+        # node1: pre-received the child (orphan)\n+        # node2: pre-received nothing\n+        # node3: pre-received the parent (too low fee)\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+        package_hex_basic = [low_fee_parent[\"hex\"], high_fee_child[\"hex\"]]\n+        self.packages_to_submit.append(package_hex_basic)\n+        # Child should already be in orphanage\n+        self.transactions_to_presend[1] = [high_fee_child[\"tx\"]]\n+        # Parent would have been previously rejected\n+        self.transactions_to_presend[3] = [low_fee_parent[\"tx\"]]\n+\n+    def test_individual_logic(self):\n+        node = self.nodes[0]\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        low_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=2*FEERATE_1SAT_VB)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+\n+        peer1 = node.add_p2p_connection(P2PInterface())\n+        peer2 = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check that tx caches low feerate rejections\")\n+        parent_wtxid_int = int(low_fee_parent[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        peer1.wait_for_getdata([parent_wtxid_int])\n+        peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+\n+        # Send again from peer2, check that it is ignored\n+        with node.assert_debug_log([f\"got inv: wtx {low_fee_parent['wtxid']}  have\"]):\n+            peer2.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        assert \"getdata\" not in peer2.last_message\n+\n+        self.log.info(\"Check that the node doesn't try to validate a failed package again\")\n+        # Send the (orphan) child that has a higher feerate but not enough to bump the parent\n+        low_child_wtxid_int = int(low_fee_child[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=low_child_wtxid_int)]))\n+        peer1.wait_for_getdata([low_child_wtxid_int])\n+        peer1.send_and_ping(msg_tx(low_fee_child[\"tx\"]))\n+        # Node should request the orphan's missing parent. It has seen this parent before, but only\n+        # cached the failure by wtxid, not txid.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer1.wait_for_getdata([parent_txid_int])\n+        failed_expected_logs_1p1c = []\n+        failed_expected_logs_1p1c.append(f\"found tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in reconsiderable rejects, looking for child in orphanage\")\n+        failed_expected_logs_1p1c.append(f\"found child {low_fee_child['txid']} (wtxid={low_fee_child['wtxid']}) of tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in orphanage, trying package evaluation\")\n+        failed_expected_logs_1p1c.append(f\"removed orphan tx {low_fee_child['txid']} (wtxid={low_fee_child['wtxid']})\")\n+\n+        with node.assert_debug_log(failed_expected_logs_1p1c):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        # The transactions do not get accepted due to low feerate\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+        assert low_fee_child[\"txid\"] not in node.getrawmempool()\n+\n+        # If peer2 announces the low feerate child, it should be ignored\n+        with node.assert_debug_log([f\"got inv: wtx {low_fee_child['wtxid']}  have\"]):\n+            peer2.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=low_child_wtxid_int)]))\n+        assert \"getdata\" not in peer2.last_message\n+        # If either peer sends the parent again, package evaluation should not be attempted\n+        with node.assert_debug_log([f\"didn't evaluate package for {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}), no eligible child found\"]):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        with node.assert_debug_log([f\"didn't evaluate package for {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}), no eligible child found\"]):\n+            peer2.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        self.log.info(\"Check that the node groups a low-feerate tx with its single child in orphanage\")\n+        # Send the high feerate (orphan) child\n+        high_child_wtxid_int = int(high_fee_child[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=high_child_wtxid_int)]))\n+        peer1.wait_for_getdata([high_child_wtxid_int])\n+        peer1.send_and_ping(msg_tx(high_fee_child[\"tx\"]))\n+        # Node should request the orphan's parent, even though it has already been rejected, both by\n+        # itself and with a child. This is necessary, otherwise high_fee_child can be censored.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer1.wait_for_getdata([parent_txid_int])\n+        expected_logs_1p1c = []\n+        expected_logs_1p1c.append(f\"found tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in reconsiderable rejects, looking for child in orphanage\")\n+        expected_logs_1p1c.append(f\"found child {high_fee_child['txid']} (wtxid={high_fee_child['wtxid']}) of tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in orphanage, trying package evaluation\")\n+        with node.assert_debug_log(expected_logs_1p1c):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        # Both transactions should now be in mempool\n+        node_mempool = node.getrawmempool()\n+        assert low_fee_parent[\"txid\"] in node_mempool\n+        assert high_fee_child[\"txid\"] in node_mempool\n+\n+        peer1.peer_disconnect()\n+        peer2.peer_disconnect()\n+        self.sync_all()\n+\n+    def run_test(self):\n+        self.ctr = 0\n+        self.wallet = MiniWallet(self.nodes[1])\n+        self.generate(self.wallet, 120)\n+\n+        self.log.info(\"Fill mempools with large transactions to raise mempool minimum feerates\")\n+        self.raise_network_minfee()\n+\n+        self.log.info(\"Check 1p1c validation logic on a single node\")\n+        self.test_individual_logic()\n+\n+        self.log.info(\"Check end-to-end package relay across multiple nodes\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1526791671",
      "id" : 1526791671,
      "line" : 182,
      "node_id" : "PRRC_kwDOABII585bAP33",
      "original_commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "original_line" : 182,
      "original_position" : 182,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : 182,
      "pull_request_review_id" : 1935032934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526791671/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526791671",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1530008039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1530008039"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not much science, no. It makes sense to me to use the same false positive rate. As for size, I'll run my node for a bit longer and maybe use the ratio of `m_recent_rejects` / `m_recent_rejects_reconsiderable` usage to give a more scientific number.",
      "commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "created_at" : "2024-03-19T09:26:15Z",
      "diff_hunk" : "@@ -846,6 +846,23 @@ class PeerManagerImpl final : public PeerManager\n     CRollingBloomFilter m_recent_rejects GUARDED_BY(::cs_main){120'000, 0.000'001};\n     uint256 hashRecentRejectsChainTip GUARDED_BY(cs_main);\n \n+    /**\n+     * Filter for the wtxids of transactions that were recently rejected by the mempool but are\n+     * eligible for reconsideration if submitted with other transactions.\n+     *\n+     * When a transaction's error is TxValidationResult::TX_RECONSIDERABLE (in a package or by\n+     * itself), add its wtxid to this filter.\n+     *\n+     * Upon receiving an announcement for a transaction, if it exists in this filter, do not\n+     * download the txdata.\n+     *\n+     * Reset this filter when the chain tip changes.\n+     *\n+     * Parameters are picked to be the same false positive rate but half the capacity as",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1530008039",
      "id" : 1530008039,
      "in_reply_to_id" : 1523804572,
      "line" : 867,
      "node_id" : "PRRC_kwDOABII585bMhHn",
      "original_commit_id" : "1435bfac51ae431b91c38c4db0b92ce9b7353125",
      "original_line" : 861,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 38,
      "pull_request_review_id" : 1945627419,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1530008039/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-19T09:26:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1530008039",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1530008886"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1530008886"
         }
      },
      "author_association" : "MEMBER",
      "body" : "~Vestigial from a previous iteration of this PR and future changes. Will drop~ EDIT: I forgot to flip some",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-19T09:26:51Z",
      "diff_hunk" : "@@ -806,7 +806,7 @@ class PeerManagerImpl final : public PeerManager\n     /** Stalling timeout for blocks in IBD */\n     std::atomic<std::chrono::seconds> m_block_stalling_timeout{BLOCK_STALLING_TIMEOUT_DEFAULT};\n \n-    bool AlreadyHaveTx(const GenTxid& gtxid)\n+    bool AlreadyHaveTx(const GenTxid& gtxid, bool include_reconsiderable)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1530008886",
      "id" : 1530008886,
      "in_reply_to_id" : 1523821142,
      "line" : 822,
      "node_id" : "PRRC_kwDOABII585bMhU2",
      "original_commit_id" : "1435bfac51ae431b91c38c4db0b92ce9b7353125",
      "original_line" : 822,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 25,
      "pull_request_review_id" : 1945628865,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1530008886/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-20T17:30:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1530008886",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532216970"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532216970"
         }
      },
      "author_association" : "MEMBER",
      "body" : "added a comment on top of where the package is created",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-20T14:45:33Z",
      "diff_hunk" : "@@ -0,0 +1,223 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532216970",
      "id" : 1532216970,
      "in_reply_to_id" : 1511599258,
      "line" : 40,
      "node_id" : "PRRC_kwDOABII585bU8aK",
      "original_commit_id" : "19015e3c9aed5709e776ef15bf9e73f126c7ea29",
      "original_line" : 40,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : 40,
      "pull_request_review_id" : 1949112319,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532216970/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-20T17:42:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532216970",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532237608"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532237608"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(originally there was an original broadcast, then a package RBF broadcast) no reason, deleted",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-20T14:57:25Z",
      "diff_hunk" : "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+            \"-whitelist=noban@127.0.0.1\",  # immediate tx relay\n+        ]] * self.num_nodes\n+        self.supports_cli = False\n+\n+    def raise_network_minfee(self):\n+        filler_wallet = MiniWallet(self.nodes[0])\n+        relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n+        num_big_transactions = 75\n+        # Generate coins to spend and wait for them to mature\n+        self.generate(filler_wallet, num_big_transactions)\n+        self.generate(filler_wallet, 100)\n+\n+        self.log.debug(\"Create a mempool tx that will be evicted\")\n+        tx_to_be_evicted_id = filler_wallet.send_self_transfer(from_node=self.nodes[1], fee_rate=relayfee)[\"txid\"]\n+\n+        # Increase the tx fee rate to give the subsequent transactions a higher priority in the mempool\n+        # The tx has an approx. vsize of 65k, i.e. multiplying the previous fee rate (in sats/kvB)\n+        # by 130 should result in a fee that corresponds to 2x of that fee rate\n+        base_fee = relayfee * 130\n+\n+        self.log.debug(\"Fill up the mempool with txs with higher fee rate\")\n+        txouts = gen_return_txouts()\n+        with self.nodes[0].assert_debug_log([\"rolling minimum fee bumped\"]):\n+            for batch_of_txid in range(num_big_transactions):\n+                fee = (batch_of_txid + 1) * base_fee\n+                create_lots_of_big_transactions(filler_wallet, self.nodes[0], fee, 1, txouts)\n+\n+        self.log.debug(\"Wait for the network to sync mempools\")\n+        self.sync_mempools()\n+        assert tx_to_be_evicted_id not in self.nodes[0].getrawmempool()\n+\n+        self.log.debug(\"Check that all nodes' mempool minimum feerate is above min relay feerate\")\n+        for node in self.nodes:\n+            assert_equal(node.getmempoolinfo()['minrelaytxfee'], FEERATE_1SAT_VB)\n+            assert_greater_than(node.getmempoolinfo()['mempoolminfee'], FEERATE_1SAT_VB)\n+\n+    def create_packages(self):\n+        # Basic 1-parent-1-child package\n+        # node0: sender\n+        # node1: pre-received the child (orphan)\n+        # node2: pre-received nothing\n+        # node3: pre-received the parent (too low fee)\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+        package_hex_basic = [low_fee_parent[\"hex\"], high_fee_child[\"hex\"]]\n+        self.packages_to_submit.append(package_hex_basic)\n+        # Child should already be in orphanage\n+        self.transactions_to_presend[1] = [high_fee_child[\"tx\"]]\n+        # Parent would have been previously rejected\n+        self.transactions_to_presend[3] = [low_fee_parent[\"tx\"]]\n+\n+    def test_individual_logic(self):\n+        node = self.nodes[0]\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        low_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=2*FEERATE_1SAT_VB)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+\n+        peer1 = node.add_p2p_connection(P2PInterface())\n+        peer2 = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check that tx caches low feerate rejections\")\n+        parent_wtxid_int = int(low_fee_parent[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        peer1.wait_for_getdata([parent_wtxid_int])\n+        peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+\n+        # Send again from peer2, check that it is ignored\n+        with node.assert_debug_log([f\"got inv: wtx {low_fee_parent['wtxid']}  have\"]):\n+            peer2.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        assert \"getdata\" not in peer2.last_message\n+\n+        self.log.info(\"Check that the node doesn't try to validate a failed package again\")\n+        # Send the (orphan) child that has a higher feerate but not enough to bump the parent\n+        low_child_wtxid_int = int(low_fee_child[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=low_child_wtxid_int)]))\n+        peer1.wait_for_getdata([low_child_wtxid_int])\n+        peer1.send_and_ping(msg_tx(low_fee_child[\"tx\"]))\n+        # Node should request the orphan's missing parent. It has seen this parent before, but only\n+        # cached the failure by wtxid, not txid.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer1.wait_for_getdata([parent_txid_int])\n+        failed_expected_logs_1p1c = []\n+        failed_expected_logs_1p1c.append(f\"found tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in reconsiderable rejects, looking for child in orphanage\")\n+        failed_expected_logs_1p1c.append(f\"found child {low_fee_child['txid']} (wtxid={low_fee_child['wtxid']}) of tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in orphanage, trying package evaluation\")\n+        failed_expected_logs_1p1c.append(f\"removed orphan tx {low_fee_child['txid']} (wtxid={low_fee_child['wtxid']})\")\n+\n+        with node.assert_debug_log(failed_expected_logs_1p1c):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        # The transactions do not get accepted due to low feerate\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+        assert low_fee_child[\"txid\"] not in node.getrawmempool()\n+\n+        # If peer2 announces the low feerate child, it should be ignored\n+        with node.assert_debug_log([f\"got inv: wtx {low_fee_child['wtxid']}  have\"]):\n+            peer2.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=low_child_wtxid_int)]))\n+        assert \"getdata\" not in peer2.last_message\n+        # If either peer sends the parent again, package evaluation should not be attempted\n+        with node.assert_debug_log([f\"didn't evaluate package for {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}), no eligible child found\"]):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        with node.assert_debug_log([f\"didn't evaluate package for {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}), no eligible child found\"]):\n+            peer2.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        self.log.info(\"Check that the node groups a low-feerate tx with its single child in orphanage\")\n+        # Send the high feerate (orphan) child\n+        high_child_wtxid_int = int(high_fee_child[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=high_child_wtxid_int)]))\n+        peer1.wait_for_getdata([high_child_wtxid_int])\n+        peer1.send_and_ping(msg_tx(high_fee_child[\"tx\"]))\n+        # Node should request the orphan's parent, even though it has already been rejected, both by\n+        # itself and with a child. This is necessary, otherwise high_fee_child can be censored.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer1.wait_for_getdata([parent_txid_int])\n+        expected_logs_1p1c = []\n+        expected_logs_1p1c.append(f\"found tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in reconsiderable rejects, looking for child in orphanage\")\n+        expected_logs_1p1c.append(f\"found child {high_fee_child['txid']} (wtxid={high_fee_child['wtxid']}) of tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in orphanage, trying package evaluation\")\n+        with node.assert_debug_log(expected_logs_1p1c):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        # Both transactions should now be in mempool\n+        node_mempool = node.getrawmempool()\n+        assert low_fee_parent[\"txid\"] in node_mempool\n+        assert high_fee_child[\"txid\"] in node_mempool\n+\n+        peer1.peer_disconnect()\n+        peer2.peer_disconnect()\n+        self.sync_all()\n+\n+    def run_test(self):\n+        self.ctr = 0\n+        self.wallet = MiniWallet(self.nodes[1])\n+        self.generate(self.wallet, 120)\n+\n+        self.log.info(\"Fill mempools with large transactions to raise mempool minimum feerates\")\n+        self.raise_network_minfee()\n+\n+        self.log.info(\"Check 1p1c validation logic on a single node\")\n+        self.test_individual_logic()\n+\n+        self.log.info(\"Check end-to-end package relay across multiple nodes\")\n+        self.packages_to_submit = []\n+        self.transactions_to_presend = [[]] * self.num_nodes\n+\n+        self.log.info(\"Create transactions and then mature the coinbases\")\n+        self.wallet.rescan_utxos(include_mempool=True)\n+        self.create_packages()\n+\n+        self.peers = []\n+        for i in range(self.num_nodes):\n+            self.peers.append(self.nodes[i].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\"))\n+\n+        self.log.info(\"Pre-send some transactions to nodes\")\n+        for i in range(self.num_nodes):\n+            peer = self.peers[i]\n+            for tx in self.transactions_to_presend[i]:\n+                inv = CInv(t=MSG_WTX, h=int(tx.getwtxid(), 16))\n+                peer.send_and_ping(msg_inv([inv]))\n+                peer.wait_for_getdata([int(tx.getwtxid(), 16)])\n+                peer.send_and_ping(msg_tx(tx))\n+            # This disconnect removes any sent orphans from the orphanage (EraseForPeer) and times\n+            # out the in-flight requests.  It is currently required for the test to pass right now,\n+            # because the node will not (re)try requesting orphan parents from multiple peers if the\n+            # first one fails.\n+            # TODO: remove this and test that the node retries orphan resolution with other peers\n+            # when the first try fails.\n+            peer.peer_disconnect()\n+\n+        self.log.info(\"Submit full packages to node0\")\n+        for package_hex in self.packages_to_submit:\n+            self.nodes[0].submitpackage(package_hex)\n+\n+        self.log.info(\"Wait for mempools to sync\")\n+        self.sync_mempools(timeout=20)\n+\n+        self.log.info(\"Wait for mempools to sync\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532237608",
      "id" : 1532237608,
      "in_reply_to_id" : 1526776377,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585bVBco",
      "original_commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "original_line" : 217,
      "original_position" : 217,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : null,
      "pull_request_review_id" : 1949112319,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532237608/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-20T17:42:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532237608",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532243418"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532243418"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I prefer how it is right now as\r\n- it's clear that it's based on the result we just got from mempool validation\r\n- it doesn't require peerman having direct access to `m_recent_rejects_reconsiderable` (which I would want to move into txdownloadman module)",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-20T15:00:18Z",
      "diff_hunk" : "@@ -4450,6 +4552,15 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         if (state.IsInvalid()) {\n             ProcessInvalidTx(pfrom.GetId(), ptx, state, /*maybe_add_extra_compact_tx=*/true);\n         }\n+        if (state.GetResult() == TxValidationResult::TX_RECONSIDERABLE) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532243418",
      "id" : 1532243418,
      "in_reply_to_id" : 1525341442,
      "line" : 4572,
      "node_id" : "PRRC_kwDOABII585bVC3a",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 4572,
      "original_position" : 127,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 257,
      "pull_request_review_id" : 1949112319,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532243418/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-20T17:42:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532243418",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532283818"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532283818"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What do you mean by optimization? It's the same idea as `m_recent_rejects`, we don't want to waste bandwidth even though we are willing to retry low feerate things",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-20T15:20:55Z",
      "diff_hunk" : "@@ -4334,6 +4426,16 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         m_txrequest.ReceivedResponse(pfrom.GetId(), txid);\n         if (tx.HasWitness()) m_txrequest.ReceivedResponse(pfrom.GetId(), wtxid);\n \n+        // If we find this transaction in m_recent_rejects_reconsiderable, we shouldn't try it by",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532283818",
      "id" : 1532283818,
      "in_reply_to_id" : 1525375424,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585bVMuq",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 4429,
      "original_position" : 110,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1949112319,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532283818/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-20T17:42:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532283818",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532285661"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532285661"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah good point as I just realize the previous thing was breaking the forcerelay stuff for low feerate txns. Moved inside that block.",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-20T15:21:51Z",
      "diff_hunk" : "@@ -4334,6 +4426,16 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         m_txrequest.ReceivedResponse(pfrom.GetId(), txid);\n         if (tx.HasWitness()) m_txrequest.ReceivedResponse(pfrom.GetId(), wtxid);\n \n+        // If we find this transaction in m_recent_rejects_reconsiderable, we shouldn't try it by\n+        // itself again. However, look for a matching child in the orphanage and maybe submit it\n+        // again as a package.\n+        if (m_recent_rejects_reconsiderable.contains(wtxid)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532285661",
      "id" : 1532285661,
      "in_reply_to_id" : 1525396593,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585bVNLd",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 4432,
      "original_position" : 113,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1949112319,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532285661/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-20T17:42:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532285661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532366124"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532366124"
         }
      },
      "author_association" : "MEMBER",
      "body" : "added",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-20T16:01:10Z",
      "diff_hunk" : "@@ -596,6 +596,12 @@ class PeerManagerImpl final : public PeerManager\n     void ProcessValidTx(NodeId nodeid, const CTransactionRef& tx, const std::list<CTransactionRef>& replaced_transactions)\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, g_msgproc_mutex, cs_main);\n \n+    void ProcessPackageResult(const Package& package, const PackageMempoolAcceptResult& package_result, NodeId nodeid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532366124",
      "id" : 1532366124,
      "in_reply_to_id" : 1523824762,
      "line" : 602,
      "node_id" : "PRRC_kwDOABII585bVg0s",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 602,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 7,
      "pull_request_review_id" : 1949112319,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532366124/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-20T17:42:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532366124",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532366193"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532366193"
         }
      },
      "author_association" : "MEMBER",
      "body" : "added",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-20T16:01:13Z",
      "diff_hunk" : "@@ -596,6 +596,12 @@ class PeerManagerImpl final : public PeerManager\n     void ProcessValidTx(NodeId nodeid, const CTransactionRef& tx, const std::list<CTransactionRef>& replaced_transactions)\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, g_msgproc_mutex, cs_main);\n \n+    void ProcessPackageResult(const Package& package, const PackageMempoolAcceptResult& package_result, NodeId nodeid)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, g_msgproc_mutex, cs_main);\n+\n+    void MaybeProcess1P1CPackage(const CTransactionRef& ptx, NodeId nodeid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532366193",
      "id" : 1532366193,
      "in_reply_to_id" : 1523824732,
      "line" : 609,
      "node_id" : "PRRC_kwDOABII585bVg1x",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 609,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 14,
      "pull_request_review_id" : 1949112319,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532366193/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-20T17:42:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532366193",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532453411"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532453411"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Actually, rethinking this, if the capacity is informed by maximum churn, it should just be the same as `m_recent_rejects`.",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-20T16:47:29Z",
      "diff_hunk" : "@@ -846,6 +846,23 @@ class PeerManagerImpl final : public PeerManager\n     CRollingBloomFilter m_recent_rejects GUARDED_BY(::cs_main){120'000, 0.000'001};\n     uint256 hashRecentRejectsChainTip GUARDED_BY(cs_main);\n \n+    /**\n+     * Filter for the wtxids of transactions that were recently rejected by the mempool but are\n+     * eligible for reconsideration if submitted with other transactions.\n+     *\n+     * When a transaction's error is TxValidationResult::TX_RECONSIDERABLE (in a package or by\n+     * itself), add its wtxid to this filter.\n+     *\n+     * Upon receiving an announcement for a transaction, if it exists in this filter, do not\n+     * download the txdata.\n+     *\n+     * Reset this filter when the chain tip changes.\n+     *\n+     * Parameters are picked to be the same false positive rate but half the capacity as",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532453411",
      "id" : 1532453411,
      "in_reply_to_id" : 1523804572,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585bV2Ij",
      "original_commit_id" : "1435bfac51ae431b91c38c4db0b92ce9b7353125",
      "original_line" : 861,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1949112319,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532453411/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-20T17:42:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532453411",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532491393"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532491393"
         }
      },
      "author_association" : "MEMBER",
      "body" : "we do add orphans to vExtraTxnForCompact though?",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-20T17:11:31Z",
      "diff_hunk" : "@@ -3181,6 +3187,92 @@ void PeerManagerImpl::ProcessValidTx(NodeId nodeid, const CTransactionRef& tx, c\n     }\n }\n \n+void PeerManagerImpl::ProcessPackageResult(const Package& package, const PackageMempoolAcceptResult& package_result, NodeId nodeid)\n+{\n+    AssertLockNotHeld(m_peer_mutex);\n+    AssertLockHeld(g_msgproc_mutex);\n+    AssertLockHeld(cs_main);\n+\n+    if (package_result.m_state.IsInvalid()) {\n+        m_recent_rejects_reconsiderable.insert(GetPackageHash(package));\n+    }\n+\n+    // Iterate backwards to erase in-package descendants from the orphanage before they become\n+    // relevant in AddChildrenToWorkSet.\n+    for (auto package_it = package.rbegin(); package_it != package.rend(); ++package_it) {\n+        const auto& tx = *package_it;\n+        const auto it_result{package_result.m_tx_results.find(tx->GetWitnessHash())};\n+        if (it_result != package_result.m_tx_results.end()) {\n+            const auto& tx_result = it_result->second;\n+            switch (tx_result.m_result_type) {\n+                case MempoolAcceptResult::ResultType::VALID:\n+                {\n+                    Assume(tx_result.m_replaced_transactions.has_value());\n+                    std::list<CTransactionRef> empty_replacement_list;\n+                    ProcessValidTx(nodeid, tx, tx_result.m_replaced_transactions.value_or(empty_replacement_list));\n+                    break;\n+                }\n+                case MempoolAcceptResult::ResultType::INVALID:\n+                case MempoolAcceptResult::ResultType::DIFFERENT_WITNESS:\n+                {\n+                    // Don't add to vExtraTxnForCompact, as these transactions would already be",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532491393",
      "id" : 1532491393,
      "in_reply_to_id" : 1526676597,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585bV_aB",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 3218,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1949112319,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532491393/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-20T17:42:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532491393",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532493851"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532493851"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why? There wouldn't be anything interesting in `state`",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-20T17:13:02Z",
      "diff_hunk" : "@@ -3181,6 +3187,92 @@ void PeerManagerImpl::ProcessValidTx(NodeId nodeid, const CTransactionRef& tx, c\n     }\n }\n \n+void PeerManagerImpl::ProcessPackageResult(const Package& package, const PackageMempoolAcceptResult& package_result, NodeId nodeid)\n+{\n+    AssertLockNotHeld(m_peer_mutex);\n+    AssertLockHeld(g_msgproc_mutex);\n+    AssertLockHeld(cs_main);\n+\n+    if (package_result.m_state.IsInvalid()) {\n+        m_recent_rejects_reconsiderable.insert(GetPackageHash(package));\n+    }\n+\n+    // Iterate backwards to erase in-package descendants from the orphanage before they become\n+    // relevant in AddChildrenToWorkSet.\n+    for (auto package_it = package.rbegin(); package_it != package.rend(); ++package_it) {\n+        const auto& tx = *package_it;\n+        const auto it_result{package_result.m_tx_results.find(tx->GetWitnessHash())};\n+        if (it_result != package_result.m_tx_results.end()) {\n+            const auto& tx_result = it_result->second;\n+            switch (tx_result.m_result_type) {\n+                case MempoolAcceptResult::ResultType::VALID:\n+                {\n+                    Assume(tx_result.m_replaced_transactions.has_value());\n+                    std::list<CTransactionRef> empty_replacement_list;\n+                    ProcessValidTx(nodeid, tx, tx_result.m_replaced_transactions.value_or(empty_replacement_list));\n+                    break;\n+                }\n+                case MempoolAcceptResult::ResultType::INVALID:\n+                case MempoolAcceptResult::ResultType::DIFFERENT_WITNESS:\n+                {\n+                    // Don't add to vExtraTxnForCompact, as these transactions would already be\n+                    // there as an orphan or too low feerate tx.\n+                    ProcessInvalidTx(nodeid, tx, tx_result.m_state, /*maybe_add_extra_compact_tx=*/false);\n+                    break;\n+                }\n+                case MempoolAcceptResult::ResultType::MEMPOOL_ENTRY:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532493851",
      "id" : 1532493851,
      "in_reply_to_id" : 1526656636,
      "line" : 3234,
      "node_id" : "PRRC_kwDOABII585bWAAb",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 3234,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 137,
      "pull_request_review_id" : 1949112319,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532493851/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-20T17:42:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532493851",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532494577"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532494577"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Well, it might not be a parent :shrug: most likely it's just a low feerate transaction actually. I didn't change but don't feel strongly",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-20T17:13:36Z",
      "diff_hunk" : "@@ -3181,6 +3187,92 @@ void PeerManagerImpl::ProcessValidTx(NodeId nodeid, const CTransactionRef& tx, c\n     }\n }\n \n+void PeerManagerImpl::ProcessPackageResult(const Package& package, const PackageMempoolAcceptResult& package_result, NodeId nodeid)\n+{\n+    AssertLockNotHeld(m_peer_mutex);\n+    AssertLockHeld(g_msgproc_mutex);\n+    AssertLockHeld(cs_main);\n+\n+    if (package_result.m_state.IsInvalid()) {\n+        m_recent_rejects_reconsiderable.insert(GetPackageHash(package));\n+    }\n+\n+    // Iterate backwards to erase in-package descendants from the orphanage before they become\n+    // relevant in AddChildrenToWorkSet.\n+    for (auto package_it = package.rbegin(); package_it != package.rend(); ++package_it) {\n+        const auto& tx = *package_it;\n+        const auto it_result{package_result.m_tx_results.find(tx->GetWitnessHash())};\n+        if (it_result != package_result.m_tx_results.end()) {\n+            const auto& tx_result = it_result->second;\n+            switch (tx_result.m_result_type) {\n+                case MempoolAcceptResult::ResultType::VALID:\n+                {\n+                    Assume(tx_result.m_replaced_transactions.has_value());\n+                    std::list<CTransactionRef> empty_replacement_list;\n+                    ProcessValidTx(nodeid, tx, tx_result.m_replaced_transactions.value_or(empty_replacement_list));\n+                    break;\n+                }\n+                case MempoolAcceptResult::ResultType::INVALID:\n+                case MempoolAcceptResult::ResultType::DIFFERENT_WITNESS:\n+                {\n+                    // Don't add to vExtraTxnForCompact, as these transactions would already be\n+                    // there as an orphan or too low feerate tx.\n+                    ProcessInvalidTx(nodeid, tx, tx_result.m_state, /*maybe_add_extra_compact_tx=*/false);\n+                    break;\n+                }\n+                case MempoolAcceptResult::ResultType::MEMPOOL_ENTRY:\n+                {\n+                    // AlreadyHaveTx() should be catching transactions that are already in mempool.\n+                    Assume(false);\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+void PeerManagerImpl::MaybeProcess1P1CPackage(const CTransactionRef& ptx, NodeId nodeid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532494577",
      "id" : 1532494577,
      "in_reply_to_id" : 1526235839,
      "line" : 3245,
      "node_id" : "PRRC_kwDOABII585bWALx",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 3245,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 148,
      "pull_request_review_id" : 1949112319,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532494577/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-20T17:42:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532494577",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532517889"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532517889"
         }
      },
      "author_association" : "MEMBER",
      "body" : "added",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-20T17:29:58Z",
      "diff_hunk" : "@@ -3181,6 +3187,92 @@ void PeerManagerImpl::ProcessValidTx(NodeId nodeid, const CTransactionRef& tx, c\n     }\n }\n \n+void PeerManagerImpl::ProcessPackageResult(const Package& package, const PackageMempoolAcceptResult& package_result, NodeId nodeid)\n+{\n+    AssertLockNotHeld(m_peer_mutex);\n+    AssertLockHeld(g_msgproc_mutex);\n+    AssertLockHeld(cs_main);\n+\n+    if (package_result.m_state.IsInvalid()) {\n+        m_recent_rejects_reconsiderable.insert(GetPackageHash(package));\n+    }\n+\n+    // Iterate backwards to erase in-package descendants from the orphanage before they become\n+    // relevant in AddChildrenToWorkSet.\n+    for (auto package_it = package.rbegin(); package_it != package.rend(); ++package_it) {\n+        const auto& tx = *package_it;\n+        const auto it_result{package_result.m_tx_results.find(tx->GetWitnessHash())};\n+        if (it_result != package_result.m_tx_results.end()) {\n+            const auto& tx_result = it_result->second;\n+            switch (tx_result.m_result_type) {\n+                case MempoolAcceptResult::ResultType::VALID:\n+                {\n+                    Assume(tx_result.m_replaced_transactions.has_value());\n+                    std::list<CTransactionRef> empty_replacement_list;\n+                    ProcessValidTx(nodeid, tx, tx_result.m_replaced_transactions.value_or(empty_replacement_list));\n+                    break;\n+                }\n+                case MempoolAcceptResult::ResultType::INVALID:\n+                case MempoolAcceptResult::ResultType::DIFFERENT_WITNESS:\n+                {\n+                    // Don't add to vExtraTxnForCompact, as these transactions would already be\n+                    // there as an orphan or too low feerate tx.\n+                    ProcessInvalidTx(nodeid, tx, tx_result.m_state, /*maybe_add_extra_compact_tx=*/false);\n+                    break;\n+                }\n+                case MempoolAcceptResult::ResultType::MEMPOOL_ENTRY:\n+                {\n+                    // AlreadyHaveTx() should be catching transactions that are already in mempool.\n+                    Assume(false);\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+void PeerManagerImpl::MaybeProcess1P1CPackage(const CTransactionRef& ptx, NodeId nodeid)\n+{\n+    AssertLockNotHeld(m_peer_mutex);\n+    AssertLockHeld(g_msgproc_mutex);\n+    AssertLockHeld(cs_main);\n+\n+    const auto cpfp_candidates{m_orphanage.GetChildren(ptx, nodeid)};\n+    bool tried_package_cpfp{false};\n+\n+    const auto& txid{ptx->GetHash()};\n+    const auto& wtxid{ptx->GetWitnessHash()};\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532517889",
      "id" : 1532517889,
      "in_reply_to_id" : 1526243536,
      "line" : 3258,
      "node_id" : "PRRC_kwDOABII585bWF4B",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 3258,
      "original_position" : 72,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 161,
      "pull_request_review_id" : 1949112319,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532517889/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-20T17:42:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532517889",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532520860"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532520860"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Turns out I actually just forgot to switch from true to false in a few places, and hadn't included a test for which these were important. I've added them back now and wrote a test (see \"package basic nonsegwit\"). Basically, we need to make sure we don't include reconsiderable when we're filtering for rejected parents on a `TX_MISSING_INPUTS` and when we're sending the GETDATAs, in case our parent was a low-feerate nonsegwit tx that we saw previously.",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-20T17:32:15Z",
      "diff_hunk" : "@@ -806,7 +806,7 @@ class PeerManagerImpl final : public PeerManager\n     /** Stalling timeout for blocks in IBD */\n     std::atomic<std::chrono::seconds> m_block_stalling_timeout{BLOCK_STALLING_TIMEOUT_DEFAULT};\n \n-    bool AlreadyHaveTx(const GenTxid& gtxid)\n+    bool AlreadyHaveTx(const GenTxid& gtxid, bool include_reconsiderable)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532520860",
      "id" : 1532520860,
      "in_reply_to_id" : 1523821142,
      "line" : 822,
      "node_id" : "PRRC_kwDOABII585bWGmc",
      "original_commit_id" : "1435bfac51ae431b91c38c4db0b92ce9b7353125",
      "original_line" : 822,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 25,
      "pull_request_review_id" : 1949112319,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532520860/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-20T17:42:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532520860",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532534695"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532534695"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-20T17:42:56Z",
      "diff_hunk" : "@@ -2209,6 +2226,8 @@ bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid)\n \n     if (m_orphanage.HaveTx(gtxid)) return true;\n \n+    if (include_reconsiderable && m_recent_rejects_reconsiderable.contains(gtxid.GetHash())) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532534695",
      "id" : 1532534695,
      "in_reply_to_id" : 1523822569,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585bWJ-n",
      "original_commit_id" : "1435bfac51ae431b91c38c4db0b92ce9b7353125",
      "original_line" : 2229,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1949626446,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532534695/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-20T17:42:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532534695",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532535179"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532535179"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-20T17:43:17Z",
      "diff_hunk" : "@@ -3181,6 +3187,92 @@ void PeerManagerImpl::ProcessValidTx(NodeId nodeid, const CTransactionRef& tx, c\n     }\n }\n \n+void PeerManagerImpl::ProcessPackageResult(const Package& package, const PackageMempoolAcceptResult& package_result, NodeId nodeid)\n+{\n+    AssertLockNotHeld(m_peer_mutex);\n+    AssertLockHeld(g_msgproc_mutex);\n+    AssertLockHeld(cs_main);\n+\n+    if (package_result.m_state.IsInvalid()) {\n+        m_recent_rejects_reconsiderable.insert(GetPackageHash(package));\n+    }\n+\n+    // Iterate backwards to erase in-package descendants from the orphanage before they become\n+    // relevant in AddChildrenToWorkSet.\n+    for (auto package_it = package.rbegin(); package_it != package.rend(); ++package_it) {\n+        const auto& tx = *package_it;\n+        const auto it_result{package_result.m_tx_results.find(tx->GetWitnessHash())};\n+        if (it_result != package_result.m_tx_results.end()) {\n+            const auto& tx_result = it_result->second;\n+            switch (tx_result.m_result_type) {\n+                case MempoolAcceptResult::ResultType::VALID:\n+                {\n+                    Assume(tx_result.m_replaced_transactions.has_value());\n+                    std::list<CTransactionRef> empty_replacement_list;\n+                    ProcessValidTx(nodeid, tx, tx_result.m_replaced_transactions.value_or(empty_replacement_list));\n+                    break;\n+                }\n+                case MempoolAcceptResult::ResultType::INVALID:\n+                case MempoolAcceptResult::ResultType::DIFFERENT_WITNESS:\n+                {\n+                    // Don't add to vExtraTxnForCompact, as these transactions would already be\n+                    // there as an orphan or too low feerate tx.\n+                    ProcessInvalidTx(nodeid, tx, tx_result.m_state, /*maybe_add_extra_compact_tx=*/false);\n+                    break;\n+                }\n+                case MempoolAcceptResult::ResultType::MEMPOOL_ENTRY:\n+                {\n+                    // AlreadyHaveTx() should be catching transactions that are already in mempool.\n+                    Assume(false);\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+void PeerManagerImpl::MaybeProcess1P1CPackage(const CTransactionRef& ptx, NodeId nodeid)\n+{\n+    AssertLockNotHeld(m_peer_mutex);\n+    AssertLockHeld(g_msgproc_mutex);\n+    AssertLockHeld(cs_main);\n+\n+    const auto cpfp_candidates{m_orphanage.GetChildren(ptx, nodeid)};\n+    bool tried_package_cpfp{false};\n+\n+    const auto& txid{ptx->GetHash()};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532535179",
      "id" : 1532535179,
      "in_reply_to_id" : 1526239102,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585bWKGL",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 3243,
      "original_position" : 70,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1949627158,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532535179/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-20T17:43:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532535179",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532538138"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532538138"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I guess not a lot. But it is worth checking that it having seen (and rejected) the child before shouldn't impact its acceptance of the package later?",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-20T17:44:25Z",
      "diff_hunk" : "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+            \"-whitelist=noban@127.0.0.1\",  # immediate tx relay\n+        ]] * self.num_nodes\n+        self.supports_cli = False\n+\n+    def raise_network_minfee(self):\n+        filler_wallet = MiniWallet(self.nodes[0])\n+        relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n+        num_big_transactions = 75\n+        # Generate coins to spend and wait for them to mature\n+        self.generate(filler_wallet, num_big_transactions)\n+        self.generate(filler_wallet, 100)\n+\n+        self.log.debug(\"Create a mempool tx that will be evicted\")\n+        tx_to_be_evicted_id = filler_wallet.send_self_transfer(from_node=self.nodes[1], fee_rate=relayfee)[\"txid\"]\n+\n+        # Increase the tx fee rate to give the subsequent transactions a higher priority in the mempool\n+        # The tx has an approx. vsize of 65k, i.e. multiplying the previous fee rate (in sats/kvB)\n+        # by 130 should result in a fee that corresponds to 2x of that fee rate\n+        base_fee = relayfee * 130\n+\n+        self.log.debug(\"Fill up the mempool with txs with higher fee rate\")\n+        txouts = gen_return_txouts()\n+        with self.nodes[0].assert_debug_log([\"rolling minimum fee bumped\"]):\n+            for batch_of_txid in range(num_big_transactions):\n+                fee = (batch_of_txid + 1) * base_fee\n+                create_lots_of_big_transactions(filler_wallet, self.nodes[0], fee, 1, txouts)\n+\n+        self.log.debug(\"Wait for the network to sync mempools\")\n+        self.sync_mempools()\n+        assert tx_to_be_evicted_id not in self.nodes[0].getrawmempool()\n+\n+        self.log.debug(\"Check that all nodes' mempool minimum feerate is above min relay feerate\")\n+        for node in self.nodes:\n+            assert_equal(node.getmempoolinfo()['minrelaytxfee'], FEERATE_1SAT_VB)\n+            assert_greater_than(node.getmempoolinfo()['mempoolminfee'], FEERATE_1SAT_VB)\n+\n+    def create_packages(self):\n+        # Basic 1-parent-1-child package\n+        # node0: sender\n+        # node1: pre-received the child (orphan)\n+        # node2: pre-received nothing\n+        # node3: pre-received the parent (too low fee)\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+        package_hex_basic = [low_fee_parent[\"hex\"], high_fee_child[\"hex\"]]\n+        self.packages_to_submit.append(package_hex_basic)\n+        # Child should already be in orphanage\n+        self.transactions_to_presend[1] = [high_fee_child[\"tx\"]]\n+        # Parent would have been previously rejected\n+        self.transactions_to_presend[3] = [low_fee_parent[\"tx\"]]\n+\n+    def test_individual_logic(self):\n+        node = self.nodes[0]\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        low_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=2*FEERATE_1SAT_VB)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+\n+        peer1 = node.add_p2p_connection(P2PInterface())\n+        peer2 = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check that tx caches low feerate rejections\")\n+        parent_wtxid_int = int(low_fee_parent[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        peer1.wait_for_getdata([parent_wtxid_int])\n+        peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+\n+        # Send again from peer2, check that it is ignored\n+        with node.assert_debug_log([f\"got inv: wtx {low_fee_parent['wtxid']}  have\"]):\n+            peer2.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        assert \"getdata\" not in peer2.last_message\n+\n+        self.log.info(\"Check that the node doesn't try to validate a failed package again\")\n+        # Send the (orphan) child that has a higher feerate but not enough to bump the parent\n+        low_child_wtxid_int = int(low_fee_child[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=low_child_wtxid_int)]))\n+        peer1.wait_for_getdata([low_child_wtxid_int])\n+        peer1.send_and_ping(msg_tx(low_fee_child[\"tx\"]))\n+        # Node should request the orphan's missing parent. It has seen this parent before, but only\n+        # cached the failure by wtxid, not txid.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer1.wait_for_getdata([parent_txid_int])\n+        failed_expected_logs_1p1c = []\n+        failed_expected_logs_1p1c.append(f\"found tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in reconsiderable rejects, looking for child in orphanage\")\n+        failed_expected_logs_1p1c.append(f\"found child {low_fee_child['txid']} (wtxid={low_fee_child['wtxid']}) of tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in orphanage, trying package evaluation\")\n+        failed_expected_logs_1p1c.append(f\"removed orphan tx {low_fee_child['txid']} (wtxid={low_fee_child['wtxid']})\")\n+\n+        with node.assert_debug_log(failed_expected_logs_1p1c):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        # The transactions do not get accepted due to low feerate\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+        assert low_fee_child[\"txid\"] not in node.getrawmempool()\n+\n+        # If peer2 announces the low feerate child, it should be ignored\n+        with node.assert_debug_log([f\"got inv: wtx {low_fee_child['wtxid']}  have\"]):\n+            peer2.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=low_child_wtxid_int)]))\n+        assert \"getdata\" not in peer2.last_message\n+        # If either peer sends the parent again, package evaluation should not be attempted\n+        with node.assert_debug_log([f\"didn't evaluate package for {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}), no eligible child found\"]):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        with node.assert_debug_log([f\"didn't evaluate package for {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}), no eligible child found\"]):\n+            peer2.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        self.log.info(\"Check that the node groups a low-feerate tx with its single child in orphanage\")\n+        # Send the high feerate (orphan) child\n+        high_child_wtxid_int = int(high_fee_child[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=high_child_wtxid_int)]))\n+        peer1.wait_for_getdata([high_child_wtxid_int])\n+        peer1.send_and_ping(msg_tx(high_fee_child[\"tx\"]))\n+        # Node should request the orphan's parent, even though it has already been rejected, both by\n+        # itself and with a child. This is necessary, otherwise high_fee_child can be censored.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer1.wait_for_getdata([parent_txid_int])\n+        expected_logs_1p1c = []\n+        expected_logs_1p1c.append(f\"found tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in reconsiderable rejects, looking for child in orphanage\")\n+        expected_logs_1p1c.append(f\"found child {high_fee_child['txid']} (wtxid={high_fee_child['wtxid']}) of tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in orphanage, trying package evaluation\")\n+        with node.assert_debug_log(expected_logs_1p1c):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        # Both transactions should now be in mempool\n+        node_mempool = node.getrawmempool()\n+        assert low_fee_parent[\"txid\"] in node_mempool\n+        assert high_fee_child[\"txid\"] in node_mempool\n+\n+        peer1.peer_disconnect()\n+        peer2.peer_disconnect()\n+        self.sync_all()\n+\n+    def run_test(self):\n+        self.ctr = 0\n+        self.wallet = MiniWallet(self.nodes[1])\n+        self.generate(self.wallet, 120)\n+\n+        self.log.info(\"Fill mempools with large transactions to raise mempool minimum feerates\")\n+        self.raise_network_minfee()\n+\n+        self.log.info(\"Check 1p1c validation logic on a single node\")\n+        self.test_individual_logic()\n+\n+        self.log.info(\"Check end-to-end package relay across multiple nodes\")\n+        self.packages_to_submit = []\n+        self.transactions_to_presend = [[]] * self.num_nodes\n+\n+        self.log.info(\"Create transactions and then mature the coinbases\")\n+        self.wallet.rescan_utxos(include_mempool=True)\n+        self.create_packages()\n+\n+        self.peers = []\n+        for i in range(self.num_nodes):\n+            self.peers.append(self.nodes[i].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\"))\n+\n+        self.log.info(\"Pre-send some transactions to nodes\")\n+        for i in range(self.num_nodes):\n+            peer = self.peers[i]\n+            for tx in self.transactions_to_presend[i]:\n+                inv = CInv(t=MSG_WTX, h=int(tx.getwtxid(), 16))\n+                peer.send_and_ping(msg_inv([inv]))\n+                peer.wait_for_getdata([int(tx.getwtxid(), 16)])\n+                peer.send_and_ping(msg_tx(tx))\n+            # This disconnect removes any sent orphans from the orphanage (EraseForPeer) and times\n+            # out the in-flight requests.  It is currently required for the test to pass right now,\n+            # because the node will not (re)try requesting orphan parents from multiple peers if the\n+            # first one fails.\n+            # TODO: remove this and test that the node retries orphan resolution with other peers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1532538138",
      "id" : 1532538138,
      "in_reply_to_id" : 1526776259,
      "line" : 204,
      "node_id" : "PRRC_kwDOABII585bWK0a",
      "original_commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "original_line" : 204,
      "original_position" : 206,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : 204,
      "pull_request_review_id" : 1949631171,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532538138/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-20T17:44:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532538138",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased for silent conflict with #28950",
      "created_at" : "2024-03-20T17:55:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#issuecomment-2010264127",
      "id" : 2010264127,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
      "node_id" : "IC_kwDOABII58530jI_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2010264127/reactions"
      },
      "updated_at" : "2024-03-20T17:55:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2010264127",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--85328a0da195eb286784d51f73fa0af9-->\n\nð§ At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/22896614286</sub>",
      "created_at" : "2024-03-20T17:55:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#issuecomment-2010264297",
      "id" : 2010264297,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
      "node_id" : "IC_kwDOABII58530jLp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2010264297/reactions"
      },
      "updated_at" : "2024-03-20T17:55:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2010264297",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1533624515"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1533624515"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-21T10:38:50Z",
      "diff_hunk" : "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+            \"-whitelist=noban@127.0.0.1\",  # immediate tx relay\n+        ]] * self.num_nodes\n+        self.supports_cli = False\n+\n+    def raise_network_minfee(self):\n+        filler_wallet = MiniWallet(self.nodes[0])\n+        relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n+        num_big_transactions = 75\n+        # Generate coins to spend and wait for them to mature\n+        self.generate(filler_wallet, num_big_transactions)\n+        self.generate(filler_wallet, 100)\n+\n+        self.log.debug(\"Create a mempool tx that will be evicted\")\n+        tx_to_be_evicted_id = filler_wallet.send_self_transfer(from_node=self.nodes[1], fee_rate=relayfee)[\"txid\"]\n+\n+        # Increase the tx fee rate to give the subsequent transactions a higher priority in the mempool\n+        # The tx has an approx. vsize of 65k, i.e. multiplying the previous fee rate (in sats/kvB)\n+        # by 130 should result in a fee that corresponds to 2x of that fee rate\n+        base_fee = relayfee * 130\n+\n+        self.log.debug(\"Fill up the mempool with txs with higher fee rate\")\n+        txouts = gen_return_txouts()\n+        with self.nodes[0].assert_debug_log([\"rolling minimum fee bumped\"]):\n+            for batch_of_txid in range(num_big_transactions):\n+                fee = (batch_of_txid + 1) * base_fee\n+                create_lots_of_big_transactions(filler_wallet, self.nodes[0], fee, 1, txouts)\n+\n+        self.log.debug(\"Wait for the network to sync mempools\")\n+        self.sync_mempools()\n+        assert tx_to_be_evicted_id not in self.nodes[0].getrawmempool()\n+\n+        self.log.debug(\"Check that all nodes' mempool minimum feerate is above min relay feerate\")\n+        for node in self.nodes:\n+            assert_equal(node.getmempoolinfo()['minrelaytxfee'], FEERATE_1SAT_VB)\n+            assert_greater_than(node.getmempoolinfo()['mempoolminfee'], FEERATE_1SAT_VB)\n+\n+    def create_packages(self):\n+        # Basic 1-parent-1-child package\n+        # node0: sender\n+        # node1: pre-received the child (orphan)\n+        # node2: pre-received nothing\n+        # node3: pre-received the parent (too low fee)\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+        package_hex_basic = [low_fee_parent[\"hex\"], high_fee_child[\"hex\"]]\n+        self.packages_to_submit.append(package_hex_basic)\n+        # Child should already be in orphanage\n+        self.transactions_to_presend[1] = [high_fee_child[\"tx\"]]\n+        # Parent would have been previously rejected\n+        self.transactions_to_presend[3] = [low_fee_parent[\"tx\"]]\n+\n+    def test_individual_logic(self):\n+        node = self.nodes[0]\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        low_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=2*FEERATE_1SAT_VB)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+\n+        peer1 = node.add_p2p_connection(P2PInterface())\n+        peer2 = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check that tx caches low feerate rejections\")\n+        parent_wtxid_int = int(low_fee_parent[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        peer1.wait_for_getdata([parent_wtxid_int])\n+        peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+\n+        # Send again from peer2, check that it is ignored\n+        with node.assert_debug_log([f\"got inv: wtx {low_fee_parent['wtxid']}  have\"]):\n+            peer2.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        assert \"getdata\" not in peer2.last_message\n+\n+        self.log.info(\"Check that the node doesn't try to validate a failed package again\")\n+        # Send the (orphan) child that has a higher feerate but not enough to bump the parent\n+        low_child_wtxid_int = int(low_fee_child[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=low_child_wtxid_int)]))\n+        peer1.wait_for_getdata([low_child_wtxid_int])\n+        peer1.send_and_ping(msg_tx(low_fee_child[\"tx\"]))\n+        # Node should request the orphan's missing parent. It has seen this parent before, but only\n+        # cached the failure by wtxid, not txid.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer1.wait_for_getdata([parent_txid_int])\n+        failed_expected_logs_1p1c = []\n+        failed_expected_logs_1p1c.append(f\"found tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in reconsiderable rejects, looking for child in orphanage\")\n+        failed_expected_logs_1p1c.append(f\"found child {low_fee_child['txid']} (wtxid={low_fee_child['wtxid']}) of tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in orphanage, trying package evaluation\")\n+        failed_expected_logs_1p1c.append(f\"removed orphan tx {low_fee_child['txid']} (wtxid={low_fee_child['wtxid']})\")\n+\n+        with node.assert_debug_log(failed_expected_logs_1p1c):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        # The transactions do not get accepted due to low feerate\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+        assert low_fee_child[\"txid\"] not in node.getrawmempool()\n+\n+        # If peer2 announces the low feerate child, it should be ignored\n+        with node.assert_debug_log([f\"got inv: wtx {low_fee_child['wtxid']}  have\"]):\n+            peer2.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=low_child_wtxid_int)]))\n+        assert \"getdata\" not in peer2.last_message\n+        # If either peer sends the parent again, package evaluation should not be attempted\n+        with node.assert_debug_log([f\"didn't evaluate package for {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}), no eligible child found\"]):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        with node.assert_debug_log([f\"didn't evaluate package for {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}), no eligible child found\"]):\n+            peer2.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        self.log.info(\"Check that the node groups a low-feerate tx with its single child in orphanage\")\n+        # Send the high feerate (orphan) child\n+        high_child_wtxid_int = int(high_fee_child[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=high_child_wtxid_int)]))\n+        peer1.wait_for_getdata([high_child_wtxid_int])\n+        peer1.send_and_ping(msg_tx(high_fee_child[\"tx\"]))\n+        # Node should request the orphan's parent, even though it has already been rejected, both by\n+        # itself and with a child. This is necessary, otherwise high_fee_child can be censored.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer1.wait_for_getdata([parent_txid_int])\n+        expected_logs_1p1c = []\n+        expected_logs_1p1c.append(f\"found tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in reconsiderable rejects, looking for child in orphanage\")\n+        expected_logs_1p1c.append(f\"found child {high_fee_child['txid']} (wtxid={high_fee_child['wtxid']}) of tx {low_fee_parent['txid']} (wtxid={low_fee_parent['wtxid']}) in orphanage, trying package evaluation\")\n+        with node.assert_debug_log(expected_logs_1p1c):\n+            peer1.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        # Both transactions should now be in mempool\n+        node_mempool = node.getrawmempool()\n+        assert low_fee_parent[\"txid\"] in node_mempool\n+        assert high_fee_child[\"txid\"] in node_mempool\n+\n+        peer1.peer_disconnect()\n+        peer2.peer_disconnect()\n+        self.sync_all()\n+\n+    def run_test(self):\n+        self.ctr = 0\n+        self.wallet = MiniWallet(self.nodes[1])\n+        self.generate(self.wallet, 120)\n+\n+        self.log.info(\"Fill mempools with large transactions to raise mempool minimum feerates\")\n+        self.raise_network_minfee()\n+\n+        self.log.info(\"Check 1p1c validation logic on a single node\")\n+        self.test_individual_logic()\n+\n+        self.log.info(\"Check end-to-end package relay across multiple nodes\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1533624515",
      "id" : 1533624515,
      "in_reply_to_id" : 1526791671,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585baUDD",
      "original_commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "original_line" : 182,
      "original_position" : 182,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : null,
      "pull_request_review_id" : 1951714713,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1533624515/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-21T10:38:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1533624515",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1533631857"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1533631857"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Resolving as out of scope for this PR. Also fwiw, btcd doing announcements by txid seems to be a reason to keep it for now...",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-21T10:42:16Z",
      "diff_hunk" : "@@ -3036,6 +3045,112 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\n     return;\n }\n \n+PeerManagerImpl::InvalidTxTask PeerManagerImpl::ProcessInvalidTx(const CTransactionRef& tx, NodeId nodeid, const TxValidationState& state)\n+{\n+    AssertLockHeld(cs_main);\n+    AssertLockNotHeld(m_peer_mutex);\n+    LogPrint(BCLog::MEMPOOLREJ, \"%s (wtxid=%s) from peer=%d was not accepted: %s\\n\",\n+             tx->GetHash().ToString(),\n+             tx->GetWitnessHash().ToString(),\n+             nodeid,\n+             state.ToString());\n+    // Maybe punish peer that gave us an tx\n+    MaybePunishNodeForTx(nodeid, state);\n+\n+    switch (state.GetResult()) {\n+    case TxValidationResult::TX_RESULT_UNSET:\n+    case TxValidationResult::TX_NO_MEMPOOL:\n+    {\n+        // This function should only be called when a transaction fails validation.\n+        Assume(false);\n+        return InvalidTxTask::NONE;\n+    }\n+    case TxValidationResult::TX_UNKNOWN:\n+    {\n+        // Transaction was not validated; we don't know that it is invalid. Do not add it to any\n+        // rejection caches or forget about it yet.\n+        return InvalidTxTask::NONE;\n+    }\n+    case TxValidationResult::TX_WITNESS_STRIPPED:\n+    {\n+        // Do not add txids of witness transactions or witness-stripped\n+        // transactions to the filter, as they can have been malleated;\n+        // adding such txids to the reject filter would potentially\n+        // interfere with relay of valid transactions from peers that\n+        // do not support wtxid-based relay. See\n+        // https://github.com/bitcoin/bitcoin/issues/8279 for details.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1533631857",
      "id" : 1533631857,
      "in_reply_to_id" : 1514657717,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585baV1x",
      "original_commit_id" : "3eddfb2147754c734c325e4ee0158872448a0a61",
      "original_line" : 3127,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1951731467,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1533631857/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-21T10:42:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1533631857",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Enable 1-parent-1-child package relay ð (just using the existing protocol messages).\r\n\r\nImo, this isn't really what this PR does because \"package relay\" (at least to me) is something that is robust and users can rely on. As you note yourself, there is more work required to make this robust. \r\n\r\n> To make this more robust, we need receiver-side logic to retry orphan resolution with multiple peers.\r\n> To make this robust, we need to make efforts to protect some amount of orphans from eviction.\r\n\r\nWhy are we not making things more robust in or before this PR?",
      "created_at" : "2024-03-25T12:21:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#issuecomment-2017881418",
      "id" : 2017881418,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
      "node_id" : "IC_kwDOABII5854Rm1K",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2017881418/reactions"
      },
      "updated_at" : "2024-03-25T12:21:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2017881418",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Imo, this isn't really what this PR does because \"package relay\" (at least to me) is something that is robust and users can rely on. As you note yourself, there is more work required to make this robust.\r\n\r\nthat sounds like confusing semantic games to me? We can add \"non-robust\" to the title to be clearer if we think it can get merged...\r\n\r\n> Why are we not making things more robust in or before this PR?\r\n\r\nWhy would we tie up an improvement on relay on other improvements to relay? This feature is useful by itself in non-adversarial network conditions, which ends up being deliverable security and a bit of increased miner fee revenue.\r\n\r\nOf course, if we have a orphanage hardening PR ready for merge, we should merge that.",
      "created_at" : "2024-03-25T12:28:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#issuecomment-2017893531",
      "id" : 2017893531,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
      "node_id" : "IC_kwDOABII5854Rpyb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2017893531/reactions"
      },
      "updated_at" : "2024-03-25T12:29:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2017893531",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Why are we not making things more robust in or before this PR?\r\n\r\nWhy have we been okay with handling any transactions with missing parents despite all of these orphanage problems, for more than a decade? Clearly because it's useful even if not 100% reliable. There are various improvements we can make to relay. I have already implemented them, and decided I would prefer to propose the more impactful improvements before the less impactful ones.",
      "created_at" : "2024-03-25T12:33:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#issuecomment-2017902903",
      "id" : 2017902903,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
      "node_id" : "IC_kwDOABII5854RsE3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2017902903/reactions"
      },
      "updated_at" : "2024-03-25T12:33:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2017902903",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> that sounds like confusing semantic games to me? We can add \"non-robust\" to the title to be clearer if we think it can get merged...\r\n\r\nI think my issue is with the PR description and how this will be marketed, not the title. The title describes it quite well: we will sometimes accept 1p1c packages (although it could also mention that these packages are constructed from the orphanage). That is different from package relay (again, to me \"package relay\" implies a level of reliability).\r\n\r\n> This feature is useful by itself in non-adversarial network conditions, which ends up being deliverable security\r\n\r\n\"deliverable security\": Is this referring to the increased cost of having to mess with relay to prevent pkgs from relaying? as opposed to the current state where these pkgs just don't relay at all?\r\n\r\n> Why have we been okay with handling any transactions with missing parents despite all of these orphanage problems, for more than a decade?\r\n\r\nBecause it saves bandwidth in the honest case. Afaict, relay would be reliable without the orphanage, although much more bandwidth intensive.\r\n\r\n---\r\n\r\nI guess my wording was confusing? I have no problem with the approach in this PR nor was I suggesting to block this on other relay improvements. I was just commenting on the PR description and asking a question.\r\n\r\nThere clearly are good answers to my question but I don't appreciate the condescending tone after being asked to review this PR.",
      "created_at" : "2024-03-25T13:41:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#issuecomment-2018034011",
      "id" : 2018034011,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
      "node_id" : "IC_kwDOABII5854SMFb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2018034011/reactions"
      },
      "updated_at" : "2024-03-25T13:41:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2018034011",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> \"deliverable security\": Is this referring to the increased cost of having to mess with relay to prevent pkgs from relaying? as opposed to the current state where these pkgs just don't relay at all?\r\n\r\nAssuming there's a path of nodes to a miner in which they are not having their orphanages aggressively churned by an adversary,  these size 2 packages should be able to propagate. So if say a LN node goes offline or refuses to sign an updated commitment transaction that raises the transaction fee, minfee rises, the counterparty can still go to chain. It raises the bar a bit for an adversary, and the more benign cases can be resolved in the average case, letting people deploy liquidity elsewhere.\r\n\r\nFWIW I ran this branch over the last week, and when my minfee wasn't 1 I was getting about one extra package relayed every half hour.",
      "created_at" : "2024-03-25T13:47:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#issuecomment-2018046569",
      "id" : 2018046569,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
      "node_id" : "IC_kwDOABII5854SPJp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2018046569/reactions"
      },
      "updated_at" : "2024-03-25T13:47:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2018046569",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've updated the PR description to be more descriptive about what this PR does and doesn't do. The 1p1c \"package relay\" thing wasn't meant as false advertising; I added it to the PR description 1 month after opening because it seemed like people were underestimating how useful this is (someone was surprised when I said this PR propagates 1p1c packages).\r\n\r\nI apologize for the tone - the comment read to me like a blocking criticism since it wasn't accompanied by any other review comments. Hopefully the suggestion has been adequately addressed with the description update now.",
      "created_at" : "2024-03-25T14:28:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#issuecomment-2018133461",
      "id" : 2018133461,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
      "node_id" : "IC_kwDOABII5854SkXV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2018133461/reactions"
      },
      "updated_at" : "2024-03-25T14:28:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2018133461",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Popping in here to mention that even w/ the limitations described above, this would be super useful for LN as is. \r\n\r\nToday we're able to use the anchor outputs on commitment transactions to CPFP a force close (* caveats re pinning, RBF, etc, etc). This works OK during calm mempool conditions, but if a rapid spike occurs that causes the bottom of the mempool to fall out, then CPFP no longer works as the parent has been evicted. During one of the recent more persistent fee spikes, we saw this happening rather frequently, which then led to cascading force closes (outgoing HTLC can't timeout due to non confirmation, incoming times out, repeat) and a lots of pain and user confusion (can only wait or use a transaction \"accelerator\"). \r\n\r\nIIUC, with this PR, upgraded peers will optimistically attempt to fetch the parent (the commitment txn) when they see a transaction that appears to be fee bumping it (anchor output spend). With this behavior, on a best effort basis, if we had another massive spike, then commitment transactions would be able to confirm as upgraded peers would fetch the parent to consider/propagate. I think this is very attractive as it doesn't necessarily require a new p2p upgrade to gain the benefits, instead as nodes start to progressively update, then more of these otherwise unrecognized packages will start to propagate. \r\n\r\nIf major LN node operators are made aware of this patch, and start to run it with the node backing their LN nodes, then assuming a relay path to miners (who seem to be willing to mine/relay just about anything these days), this would be a rather nice stop gap while the greater v3/cluster work proceeds in the background. ",
      "created_at" : "2024-03-26T00:19:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#issuecomment-2019146019",
      "id" : 2019146019,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
      "node_id" : "IC_kwDOABII5854Wbkj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2019146019/reactions"
      },
      "updated_at" : "2024-03-26T00:21:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2019146019",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/998190?v=4",
         "events_url" : "https://api.github.com/users/Roasbeef/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Roasbeef/followers",
         "following_url" : "https://api.github.com/users/Roasbeef/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Roasbeef/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Roasbeef",
         "id" : 998190,
         "login" : "Roasbeef",
         "node_id" : "MDQ6VXNlcjk5ODE5MA==",
         "organizations_url" : "https://api.github.com/users/Roasbeef/orgs",
         "received_events_url" : "https://api.github.com/users/Roasbeef/received_events",
         "repos_url" : "https://api.github.com/users/Roasbeef/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Roasbeef/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Roasbeef/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Roasbeef"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1539621687"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539621687"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: I'd rather this return the packages then spookily populate them",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-26T16:20:08Z",
      "diff_hunk" : "@@ -0,0 +1,232 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+    MiniWalletMode,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+            \"-whitelist=noban@127.0.0.1\",  # immediate tx relay\n+        ]] * self.num_nodes\n+        self.supports_cli = False\n+\n+    def raise_network_minfee(self):\n+        filler_wallet = MiniWallet(self.nodes[0])\n+        relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n+        num_big_transactions = 75\n+        # Generate coins to spend and wait for them to mature\n+        self.generate(filler_wallet, num_big_transactions)\n+        self.generate(filler_wallet, 100)\n+\n+        self.log.debug(\"Create a mempool tx that will be evicted\")\n+        tx_to_be_evicted_id = filler_wallet.send_self_transfer(from_node=self.nodes[1], fee_rate=relayfee)[\"txid\"]\n+\n+        # Increase the tx fee rate to give the subsequent transactions a higher priority in the mempool\n+        # The tx has an approx. vsize of 65k, i.e. multiplying the previous fee rate (in sats/kvB)\n+        # by 130 should result in a fee that corresponds to 2x of that fee rate\n+        base_fee = relayfee * 130\n+\n+        self.log.debug(\"Fill up the mempool with txs with higher fee rate\")\n+        txouts = gen_return_txouts()\n+        with self.nodes[0].assert_debug_log([\"rolling minimum fee bumped\"]):\n+            for batch_of_txid in range(num_big_transactions):\n+                fee = (batch_of_txid + 1) * base_fee\n+                create_lots_of_big_transactions(filler_wallet, self.nodes[0], fee, 1, txouts)\n+\n+        self.log.debug(\"Wait for the network to sync mempools\")\n+        self.sync_mempools()\n+        assert tx_to_be_evicted_id not in self.nodes[0].getrawmempool()\n+\n+        self.log.debug(\"Check that all nodes' mempool minimum feerate is above min relay feerate\")\n+        for node in self.nodes:\n+            assert_equal(node.getmempoolinfo()['minrelaytxfee'], FEERATE_1SAT_VB)\n+            assert_greater_than(node.getmempoolinfo()['mempoolminfee'], FEERATE_1SAT_VB)\n+\n+    def create_packages(self):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1539621687",
      "id" : 1539621687,
      "line" : 80,
      "node_id" : "PRRC_kwDOABII585bxMM3",
      "original_commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "original_line" : 80,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : 80,
      "pull_request_review_id" : 1960994723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539621687/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-26T20:12:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539621687",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1539811636"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539811636"
         }
      },
      "author_association" : "MEMBER",
      "body" : "can't seem to recreate anymore :shrug: ",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-26T17:44:48Z",
      "diff_hunk" : "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+            \"-whitelist=noban@127.0.0.1\",  # immediate tx relay\n+        ]] * self.num_nodes\n+        self.supports_cli = False\n+\n+    def raise_network_minfee(self):\n+        filler_wallet = MiniWallet(self.nodes[0])\n+        relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n+        num_big_transactions = 75\n+        # Generate coins to spend and wait for them to mature\n+        self.generate(filler_wallet, num_big_transactions)\n+        self.generate(filler_wallet, 100)\n+\n+        self.log.debug(\"Create a mempool tx that will be evicted\")\n+        tx_to_be_evicted_id = filler_wallet.send_self_transfer(from_node=self.nodes[1], fee_rate=relayfee)[\"txid\"]\n+\n+        # Increase the tx fee rate to give the subsequent transactions a higher priority in the mempool\n+        # The tx has an approx. vsize of 65k, i.e. multiplying the previous fee rate (in sats/kvB)\n+        # by 130 should result in a fee that corresponds to 2x of that fee rate\n+        base_fee = relayfee * 130\n+\n+        self.log.debug(\"Fill up the mempool with txs with higher fee rate\")\n+        txouts = gen_return_txouts()\n+        with self.nodes[0].assert_debug_log([\"rolling minimum fee bumped\"]):\n+            for batch_of_txid in range(num_big_transactions):\n+                fee = (batch_of_txid + 1) * base_fee\n+                create_lots_of_big_transactions(filler_wallet, self.nodes[0], fee, 1, txouts)\n+\n+        self.log.debug(\"Wait for the network to sync mempools\")\n+        self.sync_mempools()\n+        assert tx_to_be_evicted_id not in self.nodes[0].getrawmempool()\n+\n+        self.log.debug(\"Check that all nodes' mempool minimum feerate is above min relay feerate\")\n+        for node in self.nodes:\n+            assert_equal(node.getmempoolinfo()['minrelaytxfee'], FEERATE_1SAT_VB)\n+            assert_greater_than(node.getmempoolinfo()['mempoolminfee'], FEERATE_1SAT_VB)\n+\n+    def create_packages(self):\n+        # Basic 1-parent-1-child package\n+        # node0: sender\n+        # node1: pre-received the child (orphan)\n+        # node2: pre-received nothing\n+        # node3: pre-received the parent (too low fee)\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+        package_hex_basic = [low_fee_parent[\"hex\"], high_fee_child[\"hex\"]]\n+        self.packages_to_submit.append(package_hex_basic)\n+        # Child should already be in orphanage\n+        self.transactions_to_presend[1] = [high_fee_child[\"tx\"]]\n+        # Parent would have been previously rejected\n+        self.transactions_to_presend[3] = [low_fee_parent[\"tx\"]]\n+\n+    def test_individual_logic(self):\n+        node = self.nodes[0]\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        low_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=2*FEERATE_1SAT_VB)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+\n+        peer1 = node.add_p2p_connection(P2PInterface())\n+        peer2 = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check that tx caches low feerate rejections\")\n+        parent_wtxid_int = int(low_fee_parent[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        peer1.wait_for_getdata([parent_wtxid_int])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1539811636",
      "id" : 1539811636,
      "in_reply_to_id" : 1526790462,
      "line" : 115,
      "node_id" : "PRRC_kwDOABII585bx6k0",
      "original_commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "original_line" : 115,
      "original_position" : 106,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : 115,
      "pull_request_review_id" : 1960994723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539811636/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-26T20:12:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539811636",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1539990420"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539990420"
         }
      },
      "author_association" : "MEMBER",
      "body" : "to be clear we may have multiple orphans per outpoint lookup, yes?",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-26T19:39:35Z",
      "diff_hunk" : "@@ -241,3 +241,19 @@ void TxOrphanage::EraseForBlock(const CBlock& block)\n         LogPrint(BCLog::TXPACKAGES, \"Erased %d orphan tx included or conflicted by block\\n\", nErased);\n     }\n }\n+\n+std::vector<CTransactionRef> TxOrphanage::GetChildren(const CTransactionRef& parent, NodeId peer) const\n+{\n+    LOCK(m_mutex);\n+    std::vector<CTransactionRef> children_found;\n+\n+    for (unsigned int i = 0; i < parent->vout.size(); i++) {\n+        const auto it_by_prev = m_outpoint_to_orphan_it.find(COutPoint(parent->GetHash(), i));\n+        if (it_by_prev != m_outpoint_to_orphan_it.end()) {\n+            for (const auto& elem : it_by_prev->second) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1539990420",
      "id" : 1539990420,
      "line" : 253,
      "node_id" : "PRRC_kwDOABII585bymOU",
      "original_commit_id" : "f4d8fe713a036c4d2c1e7c2329077c34f75c8608",
      "original_line" : 253,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/txorphanage.cpp",
      "position" : 13,
      "pull_request_review_id" : 1960994723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539990420/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-26T20:12:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539990420",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1539991084"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539991084"
         }
      },
      "author_association" : "MEMBER",
      "body" : "could stand a unit test and some basic fuzz coverage",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-26T19:39:59Z",
      "diff_hunk" : "@@ -51,6 +51,10 @@ class TxOrphanage {\n     /** Does this peer have any work to do? */\n     bool HaveTxToReconsider(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);;\n \n+    /** Get all children of this parent. */\n+    std::vector<CTransactionRef> GetChildren(const CTransactionRef& parent, NodeId peer) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1539991084",
      "id" : 1539991084,
      "line" : 55,
      "node_id" : "PRRC_kwDOABII585bymYs",
      "original_commit_id" : "f4d8fe713a036c4d2c1e7c2329077c34f75c8608",
      "original_line" : 55,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/txorphanage.h",
      "position" : 5,
      "pull_request_review_id" : 1960994723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539991084/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-26T20:12:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539991084",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1539998787"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539998787"
         }
      },
      "author_association" : "MEMBER",
      "body" : "slight readability preference, feel free to ignore",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-26T19:44:12Z",
      "diff_hunk" : "@@ -3181,6 +3187,92 @@ void PeerManagerImpl::ProcessValidTx(NodeId nodeid, const CTransactionRef& tx, c\n     }\n }\n \n+void PeerManagerImpl::ProcessPackageResult(const Package& package, const PackageMempoolAcceptResult& package_result, NodeId nodeid)\n+{\n+    AssertLockNotHeld(m_peer_mutex);\n+    AssertLockHeld(g_msgproc_mutex);\n+    AssertLockHeld(cs_main);\n+\n+    if (package_result.m_state.IsInvalid()) {\n+        m_recent_rejects_reconsiderable.insert(GetPackageHash(package));\n+    }\n+\n+    // Iterate backwards to erase in-package descendants from the orphanage before they become\n+    // relevant in AddChildrenToWorkSet.\n+    for (auto package_it = package.rbegin(); package_it != package.rend(); ++package_it) {\n+        const auto& tx = *package_it;\n+        const auto it_result{package_result.m_tx_results.find(tx->GetWitnessHash())};\n+        if (it_result != package_result.m_tx_results.end()) {\n+            const auto& tx_result = it_result->second;\n+            switch (tx_result.m_result_type) {\n+                case MempoolAcceptResult::ResultType::VALID:\n+                {\n+                    Assume(tx_result.m_replaced_transactions.has_value());\n+                    std::list<CTransactionRef> empty_replacement_list;\n+                    ProcessValidTx(nodeid, tx, tx_result.m_replaced_transactions.value_or(empty_replacement_list));\n+                    break;\n+                }\n+                case MempoolAcceptResult::ResultType::INVALID:\n+                case MempoolAcceptResult::ResultType::DIFFERENT_WITNESS:\n+                {\n+                    // Don't add to vExtraTxnForCompact, as these transactions would already be\n+                    // there as an orphan or too low feerate tx.\n+                    ProcessInvalidTx(nodeid, tx, tx_result.m_state, /*maybe_add_extra_compact_tx=*/false);\n+                    break;\n+                }\n+                case MempoolAcceptResult::ResultType::MEMPOOL_ENTRY:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1539998787",
      "id" : 1539998787,
      "in_reply_to_id" : 1526656636,
      "line" : 3234,
      "node_id" : "PRRC_kwDOABII585byoRD",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 3234,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 137,
      "pull_request_review_id" : 1960994723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539998787/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-26T20:12:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539998787",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1539999774"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539999774"
         }
      },
      "author_association" : "MEMBER",
      "body" : "with the added `Assume()` in `MaybeProcess1P1CPackage` I think it's ok now from this reader's standpoint, thanks",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-26T19:44:53Z",
      "diff_hunk" : "@@ -4450,6 +4552,15 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         if (state.IsInvalid()) {\n             ProcessInvalidTx(pfrom.GetId(), ptx, state, /*maybe_add_extra_compact_tx=*/true);\n         }\n+        if (state.GetResult() == TxValidationResult::TX_RECONSIDERABLE) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1539999774",
      "id" : 1539999774,
      "in_reply_to_id" : 1525341442,
      "line" : 4572,
      "node_id" : "PRRC_kwDOABII585byoge",
      "original_commit_id" : "47efa940c4180e1cdc778fdaae5f086ad4085791",
      "original_line" : 4572,
      "original_position" : 127,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 257,
      "pull_request_review_id" : 1960994723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539999774/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-26T20:12:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539999774",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1540027738"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540027738"
         }
      },
      "author_association" : "MEMBER",
      "body" : "this change also only matters for the non-segwit case since we're checking via txid, correct?",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-26T20:05:51Z",
      "diff_hunk" : "@@ -4420,7 +4532,10 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     // protocol for getting all unconfirmed parents.\n                     const auto gtxid{GenTxid::Txid(parent_txid)};\n                     AddKnownTx(*peer, parent_txid);\n-                    if (!AlreadyHaveTx(gtxid, /*include_reconsiderable=*/true)) AddTxAnnouncement(pfrom, gtxid, current_time);\n+                    // Skip m_recent_rejects_reconsiderable because the missing parent may have been\n+                    // previously rejected for being too low feerate, and this orphan may be able to\n+                    // CPFP it if we consider them as a package.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1540027738",
      "id" : 1540027738,
      "line" : 4537,
      "node_id" : "PRRC_kwDOABII585byvVa",
      "original_commit_id" : "774f6d0ff515802d16cc0cfeb9319c11e860d84d",
      "original_line" : 4537,
      "original_position" : 158,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 246,
      "pull_request_review_id" : 1960994723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540027738/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-26T20:12:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540027738",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1540031628"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540031628"
         }
      },
      "author_association" : "MEMBER",
      "body" : "tiny preference for putting this case first",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-26T20:09:02Z",
      "diff_hunk" : "@@ -4378,6 +4482,14 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             // peer simply for relaying a tx that our m_recent_rejects has caught,\n             // regardless of false positives.\n             return;\n+        } else if (m_recent_rejects_reconsiderable.contains(wtxid)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1540031628",
      "id" : 1540031628,
      "line" : 4485,
      "node_id" : "PRRC_kwDOABII585bywSM",
      "original_commit_id" : "774f6d0ff515802d16cc0cfeb9319c11e860d84d",
      "original_line" : 4485,
      "original_position" : 140,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 218,
      "pull_request_review_id" : 1960994723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540031628/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-26T20:12:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540031628",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1540306836"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540306836"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Seems I had beginner's luck, got the timeout on this line after a few runs on my machine. Here is the compressed dir of the failed test run: https://github.com/theStack/bitcoin/raw/pr28970_failed_testrun/pr28970_waitforgetdata_timeout.tar.gz\r\n\r\nApparently the node has seen the wtx in the inv already before (see node0/regtest/debug.log:11237) :eyes: . I guess this is could be caused by a different MiniWallet instance spending the same UTXO in an earlier sub-test, resulting in the same transaction?",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-27T00:55:10Z",
      "diff_hunk" : "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+            \"-whitelist=noban@127.0.0.1\",  # immediate tx relay\n+        ]] * self.num_nodes\n+        self.supports_cli = False\n+\n+    def raise_network_minfee(self):\n+        filler_wallet = MiniWallet(self.nodes[0])\n+        relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n+        num_big_transactions = 75\n+        # Generate coins to spend and wait for them to mature\n+        self.generate(filler_wallet, num_big_transactions)\n+        self.generate(filler_wallet, 100)\n+\n+        self.log.debug(\"Create a mempool tx that will be evicted\")\n+        tx_to_be_evicted_id = filler_wallet.send_self_transfer(from_node=self.nodes[1], fee_rate=relayfee)[\"txid\"]\n+\n+        # Increase the tx fee rate to give the subsequent transactions a higher priority in the mempool\n+        # The tx has an approx. vsize of 65k, i.e. multiplying the previous fee rate (in sats/kvB)\n+        # by 130 should result in a fee that corresponds to 2x of that fee rate\n+        base_fee = relayfee * 130\n+\n+        self.log.debug(\"Fill up the mempool with txs with higher fee rate\")\n+        txouts = gen_return_txouts()\n+        with self.nodes[0].assert_debug_log([\"rolling minimum fee bumped\"]):\n+            for batch_of_txid in range(num_big_transactions):\n+                fee = (batch_of_txid + 1) * base_fee\n+                create_lots_of_big_transactions(filler_wallet, self.nodes[0], fee, 1, txouts)\n+\n+        self.log.debug(\"Wait for the network to sync mempools\")\n+        self.sync_mempools()\n+        assert tx_to_be_evicted_id not in self.nodes[0].getrawmempool()\n+\n+        self.log.debug(\"Check that all nodes' mempool minimum feerate is above min relay feerate\")\n+        for node in self.nodes:\n+            assert_equal(node.getmempoolinfo()['minrelaytxfee'], FEERATE_1SAT_VB)\n+            assert_greater_than(node.getmempoolinfo()['mempoolminfee'], FEERATE_1SAT_VB)\n+\n+    def create_packages(self):\n+        # Basic 1-parent-1-child package\n+        # node0: sender\n+        # node1: pre-received the child (orphan)\n+        # node2: pre-received nothing\n+        # node3: pre-received the parent (too low fee)\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+        package_hex_basic = [low_fee_parent[\"hex\"], high_fee_child[\"hex\"]]\n+        self.packages_to_submit.append(package_hex_basic)\n+        # Child should already be in orphanage\n+        self.transactions_to_presend[1] = [high_fee_child[\"tx\"]]\n+        # Parent would have been previously rejected\n+        self.transactions_to_presend[3] = [low_fee_parent[\"tx\"]]\n+\n+    def test_individual_logic(self):\n+        node = self.nodes[0]\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        low_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=2*FEERATE_1SAT_VB)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+\n+        peer1 = node.add_p2p_connection(P2PInterface())\n+        peer2 = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check that tx caches low feerate rejections\")\n+        parent_wtxid_int = int(low_fee_parent[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        peer1.wait_for_getdata([parent_wtxid_int])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1540306836",
      "id" : 1540306836,
      "in_reply_to_id" : 1526790462,
      "line" : 115,
      "node_id" : "PRRC_kwDOABII585bzzeU",
      "original_commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "original_line" : 115,
      "original_position" : 106,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : 115,
      "pull_request_review_id" : 1962043659,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540306836/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-27T00:55:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540306836",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1540843445"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540843445"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Correct. If it's a witness tx, we would have cached the error by wtxid but the request is by txid, so this would miss it.",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-27T10:32:25Z",
      "diff_hunk" : "@@ -4420,7 +4532,10 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     // protocol for getting all unconfirmed parents.\n                     const auto gtxid{GenTxid::Txid(parent_txid)};\n                     AddKnownTx(*peer, parent_txid);\n-                    if (!AlreadyHaveTx(gtxid, /*include_reconsiderable=*/true)) AddTxAnnouncement(pfrom, gtxid, current_time);\n+                    // Skip m_recent_rejects_reconsiderable because the missing parent may have been\n+                    // previously rejected for being too low feerate, and this orphan may be able to\n+                    // CPFP it if we consider them as a package.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1540843445",
      "id" : 1540843445,
      "in_reply_to_id" : 1540027738,
      "line" : 4537,
      "node_id" : "PRRC_kwDOABII585b12e1",
      "original_commit_id" : "774f6d0ff515802d16cc0cfeb9319c11e860d84d",
      "original_line" : 4537,
      "original_position" : 158,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 246,
      "pull_request_review_id" : 1962910982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540843445/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-27T10:32:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540843445",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1540857362"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540857362"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yep, we can have conflicting orphans. Should not break here if we find one.",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-03-27T10:42:05Z",
      "diff_hunk" : "@@ -241,3 +241,19 @@ void TxOrphanage::EraseForBlock(const CBlock& block)\n         LogPrint(BCLog::TXPACKAGES, \"Erased %d orphan tx included or conflicted by block\\n\", nErased);\n     }\n }\n+\n+std::vector<CTransactionRef> TxOrphanage::GetChildren(const CTransactionRef& parent, NodeId peer) const\n+{\n+    LOCK(m_mutex);\n+    std::vector<CTransactionRef> children_found;\n+\n+    for (unsigned int i = 0; i < parent->vout.size(); i++) {\n+        const auto it_by_prev = m_outpoint_to_orphan_it.find(COutPoint(parent->GetHash(), i));\n+        if (it_by_prev != m_outpoint_to_orphan_it.end()) {\n+            for (const auto& elem : it_by_prev->second) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1540857362",
      "id" : 1540857362,
      "in_reply_to_id" : 1539990420,
      "line" : 256,
      "node_id" : "PRRC_kwDOABII585b154S",
      "original_commit_id" : "f4d8fe713a036c4d2c1e7c2329077c34f75c8608",
      "original_line" : 256,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/txorphanage.cpp",
      "position" : 16,
      "pull_request_review_id" : 1962931592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540857362/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-28T17:38:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540857362",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1540869399"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540869399"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nice @theStack :D I was having trouble recreating it, duplicate tx sounds most plausible to me.\r\n\r\nI split the 4 node test and 1 node test into separate files (grabbed commit from #29735 to reuse setup) which hopefully gets rid of this.",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-03-27T10:47:11Z",
      "diff_hunk" : "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+            \"-whitelist=noban@127.0.0.1\",  # immediate tx relay\n+        ]] * self.num_nodes\n+        self.supports_cli = False\n+\n+    def raise_network_minfee(self):\n+        filler_wallet = MiniWallet(self.nodes[0])\n+        relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n+        num_big_transactions = 75\n+        # Generate coins to spend and wait for them to mature\n+        self.generate(filler_wallet, num_big_transactions)\n+        self.generate(filler_wallet, 100)\n+\n+        self.log.debug(\"Create a mempool tx that will be evicted\")\n+        tx_to_be_evicted_id = filler_wallet.send_self_transfer(from_node=self.nodes[1], fee_rate=relayfee)[\"txid\"]\n+\n+        # Increase the tx fee rate to give the subsequent transactions a higher priority in the mempool\n+        # The tx has an approx. vsize of 65k, i.e. multiplying the previous fee rate (in sats/kvB)\n+        # by 130 should result in a fee that corresponds to 2x of that fee rate\n+        base_fee = relayfee * 130\n+\n+        self.log.debug(\"Fill up the mempool with txs with higher fee rate\")\n+        txouts = gen_return_txouts()\n+        with self.nodes[0].assert_debug_log([\"rolling minimum fee bumped\"]):\n+            for batch_of_txid in range(num_big_transactions):\n+                fee = (batch_of_txid + 1) * base_fee\n+                create_lots_of_big_transactions(filler_wallet, self.nodes[0], fee, 1, txouts)\n+\n+        self.log.debug(\"Wait for the network to sync mempools\")\n+        self.sync_mempools()\n+        assert tx_to_be_evicted_id not in self.nodes[0].getrawmempool()\n+\n+        self.log.debug(\"Check that all nodes' mempool minimum feerate is above min relay feerate\")\n+        for node in self.nodes:\n+            assert_equal(node.getmempoolinfo()['minrelaytxfee'], FEERATE_1SAT_VB)\n+            assert_greater_than(node.getmempoolinfo()['mempoolminfee'], FEERATE_1SAT_VB)\n+\n+    def create_packages(self):\n+        # Basic 1-parent-1-child package\n+        # node0: sender\n+        # node1: pre-received the child (orphan)\n+        # node2: pre-received nothing\n+        # node3: pre-received the parent (too low fee)\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+        package_hex_basic = [low_fee_parent[\"hex\"], high_fee_child[\"hex\"]]\n+        self.packages_to_submit.append(package_hex_basic)\n+        # Child should already be in orphanage\n+        self.transactions_to_presend[1] = [high_fee_child[\"tx\"]]\n+        # Parent would have been previously rejected\n+        self.transactions_to_presend[3] = [low_fee_parent[\"tx\"]]\n+\n+    def test_individual_logic(self):\n+        node = self.nodes[0]\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        low_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=2*FEERATE_1SAT_VB)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+\n+        peer1 = node.add_p2p_connection(P2PInterface())\n+        peer2 = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check that tx caches low feerate rejections\")\n+        parent_wtxid_int = int(low_fee_parent[\"tx\"].getwtxid(), 16)\n+        peer1.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        peer1.wait_for_getdata([parent_wtxid_int])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1540869399",
      "id" : 1540869399,
      "in_reply_to_id" : 1526790462,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585b180X",
      "original_commit_id" : "2f25d2e0840e94bee1c6a8908d94baf076bf1567",
      "original_line" : 115,
      "original_position" : 106,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : null,
      "pull_request_review_id" : 1962931592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540869399/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-28T17:38:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540869399",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1541080914"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1541080914"
         }
      },
      "author_association" : "MEMBER",
      "body" : "can confirm, changes seem logical, and there's test coverage for each `AlreadyHaveTx` instance",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-27T13:11:13Z",
      "diff_hunk" : "@@ -806,7 +806,7 @@ class PeerManagerImpl final : public PeerManager\n     /** Stalling timeout for blocks in IBD */\n     std::atomic<std::chrono::seconds> m_block_stalling_timeout{BLOCK_STALLING_TIMEOUT_DEFAULT};\n \n-    bool AlreadyHaveTx(const GenTxid& gtxid)\n+    bool AlreadyHaveTx(const GenTxid& gtxid, bool include_reconsiderable)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1541080914",
      "id" : 1541080914,
      "in_reply_to_id" : 1523821142,
      "line" : 822,
      "node_id" : "PRRC_kwDOABII585b2wdS",
      "original_commit_id" : "1435bfac51ae431b91c38c4db0b92ce9b7353125",
      "original_line" : 822,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 25,
      "pull_request_review_id" : 1963281981,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1541080914/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-27T13:11:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1541080914",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1542964936"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1542964936"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In f4d8fe713a036c4d2c1e7c2329077c34f75c8608: It seems `NodeId peer` is not used in `GetChildren`.",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-28T13:19:39Z",
      "diff_hunk" : "@@ -241,3 +241,19 @@ void TxOrphanage::EraseForBlock(const CBlock& block)\n         LogPrint(BCLog::TXPACKAGES, \"Erased %d orphan tx included or conflicted by block\\n\", nErased);\n     }\n }\n+\n+std::vector<CTransactionRef> TxOrphanage::GetChildren(const CTransactionRef& parent, NodeId peer) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1542964936",
      "id" : 1542964936,
      "line" : 245,
      "node_id" : "PRRC_kwDOABII585b98bI",
      "original_commit_id" : "f4d8fe713a036c4d2c1e7c2329077c34f75c8608",
      "original_line" : 245,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/txorphanage.cpp",
      "position" : 5,
      "pull_request_review_id" : 1966207399,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1542964936/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-28T13:19:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1542964936",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1542971452"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1542971452"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 5405171740aa77e1eb1110fa8be97318edba380a: nit: could set `noban_tx_relay`",
      "commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "created_at" : "2024-03-28T13:23:17Z",
      "diff_hunk" : "@@ -0,0 +1,232 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+    MiniWalletMode,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+            \"-whitelist=noban@127.0.0.1\",  # immediate tx relay",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1542971452",
      "id" : 1542971452,
      "line" : 44,
      "node_id" : "PRRC_kwDOABII585b9-A8",
      "original_commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "original_line" : 44,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : 44,
      "pull_request_review_id" : 1966215922,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1542971452/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-28T13:23:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1542971452",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1543239954"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543239954"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ok. I've actually ended up nesting it inside the `AlreadyHave` to preserve the ForceRelay behavior... wanted to avoid a behavior change in the case\r\n1. tx is low feerate (goes into `m_recent_rejects_reconsiderable`)\r\n2. tx is later accepted (e.g. due to 1p1c)\r\n3. forcrelay peer sends it to us again -> we should `RelayTransaction`",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-03-28T16:10:10Z",
      "diff_hunk" : "@@ -4378,6 +4482,14 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             // peer simply for relaying a tx that our m_recent_rejects has caught,\n             // regardless of false positives.\n             return;\n+        } else if (m_recent_rejects_reconsiderable.contains(wtxid)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1543239954",
      "id" : 1543239954,
      "in_reply_to_id" : 1540031628,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585b-_kS",
      "original_commit_id" : "774f6d0ff515802d16cc0cfeb9319c11e860d84d",
      "original_line" : 4485,
      "original_position" : 140,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1962931592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543239954/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-28T17:38:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543239954",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1543279142"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543279142"
         }
      },
      "author_association" : "MEMBER",
      "body" : "removed",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-03-28T16:33:51Z",
      "diff_hunk" : "@@ -241,3 +241,19 @@ void TxOrphanage::EraseForBlock(const CBlock& block)\n         LogPrint(BCLog::TXPACKAGES, \"Erased %d orphan tx included or conflicted by block\\n\", nErased);\n     }\n }\n+\n+std::vector<CTransactionRef> TxOrphanage::GetChildren(const CTransactionRef& parent, NodeId peer) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1543279142",
      "id" : 1543279142,
      "in_reply_to_id" : 1542964936,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585b_JIm",
      "original_commit_id" : "f4d8fe713a036c4d2c1e7c2329077c34f75c8608",
      "original_line" : 245,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/txorphanage.cpp",
      "position" : null,
      "pull_request_review_id" : 1962931592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543279142/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-28T17:38:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543279142",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1543350220"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543350220"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-03-28T17:18:51Z",
      "diff_hunk" : "@@ -0,0 +1,232 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+    MiniWalletMode,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+            \"-whitelist=noban@127.0.0.1\",  # immediate tx relay",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1543350220",
      "id" : 1543350220,
      "in_reply_to_id" : 1542971452,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585b_afM",
      "original_commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "original_line" : 44,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : null,
      "pull_request_review_id" : 1962931592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543350220/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-28T17:38:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543350220",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1543357734"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543357734"
         }
      },
      "author_association" : "MEMBER",
      "body" : "not sure if I achieved spooky, but I'm having it return the lists now :ghost: ",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-03-28T17:23:11Z",
      "diff_hunk" : "@@ -0,0 +1,232 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test that package works successfully in a \"network\" of nodes. Send various packages from different\n+nodes on a network in which some nodes have already received some of the transactions (and submitted\n+them to mempool, kept them as orphans or rejected them as too-low-feerate transactions). The\n+packages should be received and accepted by all transactions on the network.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    create_lots_of_big_transactions,\n+    gen_return_txouts,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+    MiniWalletMode,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+            \"-whitelist=noban@127.0.0.1\",  # immediate tx relay\n+        ]] * self.num_nodes\n+        self.supports_cli = False\n+\n+    def raise_network_minfee(self):\n+        filler_wallet = MiniWallet(self.nodes[0])\n+        relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n+        num_big_transactions = 75\n+        # Generate coins to spend and wait for them to mature\n+        self.generate(filler_wallet, num_big_transactions)\n+        self.generate(filler_wallet, 100)\n+\n+        self.log.debug(\"Create a mempool tx that will be evicted\")\n+        tx_to_be_evicted_id = filler_wallet.send_self_transfer(from_node=self.nodes[1], fee_rate=relayfee)[\"txid\"]\n+\n+        # Increase the tx fee rate to give the subsequent transactions a higher priority in the mempool\n+        # The tx has an approx. vsize of 65k, i.e. multiplying the previous fee rate (in sats/kvB)\n+        # by 130 should result in a fee that corresponds to 2x of that fee rate\n+        base_fee = relayfee * 130\n+\n+        self.log.debug(\"Fill up the mempool with txs with higher fee rate\")\n+        txouts = gen_return_txouts()\n+        with self.nodes[0].assert_debug_log([\"rolling minimum fee bumped\"]):\n+            for batch_of_txid in range(num_big_transactions):\n+                fee = (batch_of_txid + 1) * base_fee\n+                create_lots_of_big_transactions(filler_wallet, self.nodes[0], fee, 1, txouts)\n+\n+        self.log.debug(\"Wait for the network to sync mempools\")\n+        self.sync_mempools()\n+        assert tx_to_be_evicted_id not in self.nodes[0].getrawmempool()\n+\n+        self.log.debug(\"Check that all nodes' mempool minimum feerate is above min relay feerate\")\n+        for node in self.nodes:\n+            assert_equal(node.getmempoolinfo()['minrelaytxfee'], FEERATE_1SAT_VB)\n+            assert_greater_than(node.getmempoolinfo()['mempoolminfee'], FEERATE_1SAT_VB)\n+\n+    def create_packages(self):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1543357734",
      "id" : 1543357734,
      "in_reply_to_id" : 1539621687,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585b_cUm",
      "original_commit_id" : "5405171740aa77e1eb1110fa8be97318edba380a",
      "original_line" : 80,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "test/functional/p2p_1p1c_package_relay.py",
      "position" : null,
      "pull_request_review_id" : 1962931592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543357734/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-28T17:38:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543357734",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1543376895"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543376895"
         }
      },
      "author_association" : "MEMBER",
      "body" : "added unit tests and fuzz coverage",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-03-28T17:38:11Z",
      "diff_hunk" : "@@ -51,6 +51,10 @@ class TxOrphanage {\n     /** Does this peer have any work to do? */\n     bool HaveTxToReconsider(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);;\n \n+    /** Get all children of this parent. */\n+    std::vector<CTransactionRef> GetChildren(const CTransactionRef& parent, NodeId peer) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1543376895",
      "id" : 1543376895,
      "in_reply_to_id" : 1539991084,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585b_g__",
      "original_commit_id" : "f4d8fe713a036c4d2c1e7c2329077c34f75c8608",
      "original_line" : 55,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/txorphanage.h",
      "position" : null,
      "pull_request_review_id" : 1962931592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543376895/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-28T17:38:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543376895",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the review, addressed comments and\r\n- fixed a bug in `GetChildren`\r\n- expanded + added more docs to the individual logic tests\r\n- got rid of the `assert_debug_log` lines in the functional tests. The only \"coverage\" that's lost is us skipping children with which we've already tried+failed the package submission. I have a [branch with them](https://github.com/glozow/bitcoin/blob/2024-03-28970-test-logs/test/functional/p2p_opportunistic_1p1c.py) if you want to use it to test the code, but log asserts didn't feel appropriate to have in the functional test.\r\n- added more logging, realized it was annoyingly hard to look up success/fail package evals while searching logs on my node\r\n\r\nfwiw running this on a `-maxmempool=150` node, for the past few days, on average:\r\n- 222 attempted package validations per day\r\n- 85 packages (so 170 txns) accepted per day\r\n- 57% of the package transactions accepted ended up in a block. These are all transactions that we would have otherwise rejected, so this logic is definitely useful at helping us maximizing the fees in our limited mempool space.",
      "created_at" : "2024-03-28T18:03:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#issuecomment-2025812846",
      "id" : 2025812846,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
      "node_id" : "IC_kwDOABII5854v3Nu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 1,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2025812846/reactions"
      },
      "updated_at" : "2024-03-28T18:03:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2025812846",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--85328a0da195eb286784d51f73fa0af9-->\n\nð§ At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/23211258926</sub>",
      "created_at" : "2024-03-28T20:11:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#issuecomment-2026028069",
      "id" : 2026028069,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
      "node_id" : "IC_kwDOABII5854wrwl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2026028069/reactions"
      },
      "updated_at" : "2024-03-28T20:11:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2026028069",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1545475564"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545475564"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: `raise_network_minfee` is unused in this file, can be removed",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-03-30T18:37:18Z",
      "diff_hunk" : "@@ -0,0 +1,215 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test opportunistic 1p1c package submission logic.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    fill_mempool,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+    MiniWalletMode,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.noban_tx_relay = True\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+        ]]\n+        self.supports_cli = False\n+\n+    def raise_network_minfee(self):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1545475564",
      "id" : 1545475564,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585cHhXs",
      "original_commit_id" : "5d7fa1f68402c0af08f58ac30522ce9511d218c3",
      "original_line" : 44,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "test/functional/p2p_opportunistic_1p1c.py",
      "position" : null,
      "pull_request_review_id" : 1970039534,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545475564/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-30T18:52:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545475564",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1545476664"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545476664"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: could create the peers as inbound connections instead, here and in other instances:\r\n\r\n```suggestion\r\n        peer_sender = node.add_p2p_connection(P2PInterface())\r\n```\r\n\r\n(it doesn't really matter though, the code would just be a bit shorter)",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-03-30T18:42:24Z",
      "diff_hunk" : "@@ -0,0 +1,215 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test opportunistic 1p1c package submission logic.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    fill_mempool,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+    MiniWalletMode,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.noban_tx_relay = True\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+        ]]\n+        self.supports_cli = False\n+\n+    def raise_network_minfee(self):\n+\n+        self.log.debug(\"Wait for the network to sync mempools\")\n+        self.sync_mempools()\n+\n+        self.log.debug(\"Check that all nodes' mempool minimum feerates are above min relay feerate\")\n+        for node in self.nodes:\n+            assert_equal(node.getmempoolinfo()['minrelaytxfee'], FEERATE_1SAT_VB)\n+            assert_greater_than(node.getmempoolinfo()['mempoolminfee'], FEERATE_1SAT_VB)\n+\n+    def test_basic_child_then_parent(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check that opportunistic 1p1c logic works when child is received before parent\")\n+\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)\n+\n+        peer_sender = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=1, connection_type=\"outbound-full-relay\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1545476664",
      "id" : 1545476664,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585cHho4",
      "original_commit_id" : "5d7fa1f68402c0af08f58ac30522ce9511d218c3",
      "original_line" : 61,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "test/functional/p2p_opportunistic_1p1c.py",
      "position" : null,
      "pull_request_review_id" : 1970039534,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545476664/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-30T18:52:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545476664",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1545477172"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545477172"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: parent3 is unused, can remove this line and the two comparisons below",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-03-30T18:45:09Z",
      "diff_hunk" : "@@ -138,4 +162,49 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n     BOOST_CHECK(orphanage.CountOrphans() == 0);\n }\n \n+BOOST_AUTO_TEST_CASE(get_children)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanage orphanage;\n+    const NodeId node{0};\n+    std::vector<COutPoint> empty_outpoints;\n+\n+    auto parent1 = MakeTransactionSpending(empty_outpoints, det_rand);\n+    auto parent2 = MakeTransactionSpending(empty_outpoints, det_rand);\n+    auto parent3 = MakeTransactionSpending(empty_outpoints, det_rand);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1545477172",
      "id" : 1545477172,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585cHhw0",
      "original_commit_id" : "3842f9a8842397ec15b5e3c5ae25935e9a8ee67c",
      "original_line" : 174,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/test/orphanage_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1970039534,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545477172/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-30T18:52:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545477172",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1545477551"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545477551"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: could use `hash` directly in the previous commit where this line is introduced (edea2269416ad2bcd017e1d6ee9ae30bd225c1e9), for smaller diff",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-03-30T18:48:17Z",
      "diff_hunk" : "@@ -2228,7 +2241,7 @@ bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid, bool include_reconside\n \n     if (m_orphanage.HaveTx(gtxid)) return true;\n \n-    if (include_reconsiderable && m_recent_rejects_reconsiderable.contains(gtxid.GetHash())) return true;\n+    if (include_reconsiderable && m_recent_rejects_reconsiderable.contains(hash)) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1545477551",
      "id" : 1545477551,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585cHh2v",
      "original_commit_id" : "97e16c20ca344b49652a2bce558c5404e7ab22dd",
      "original_line" : 2244,
      "original_position" : 25,
      "original_start_line" : 2231,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1970039534,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545477551/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "LEFT",
      "subject_type" : "line",
      "updated_at" : "2024-03-30T18:52:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545477551",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1547822651"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1547822651"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixed",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-04-02T12:52:31Z",
      "diff_hunk" : "@@ -138,4 +162,49 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n     BOOST_CHECK(orphanage.CountOrphans() == 0);\n }\n \n+BOOST_AUTO_TEST_CASE(get_children)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanage orphanage;\n+    const NodeId node{0};\n+    std::vector<COutPoint> empty_outpoints;\n+\n+    auto parent1 = MakeTransactionSpending(empty_outpoints, det_rand);\n+    auto parent2 = MakeTransactionSpending(empty_outpoints, det_rand);\n+    auto parent3 = MakeTransactionSpending(empty_outpoints, det_rand);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1547822651",
      "id" : 1547822651,
      "in_reply_to_id" : 1545477172,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585cQeY7",
      "original_commit_id" : "3842f9a8842397ec15b5e3c5ae25935e9a8ee67c",
      "original_line" : 174,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/test/orphanage_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1973715466,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1547822651/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-02T13:45:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1547822651",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1547823286"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1547823286"
         }
      },
      "author_association" : "MEMBER",
      "body" : "removed, thanks",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-04-02T12:53:00Z",
      "diff_hunk" : "@@ -0,0 +1,215 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test opportunistic 1p1c package submission logic.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    fill_mempool,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+    MiniWalletMode,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.noban_tx_relay = True\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+        ]]\n+        self.supports_cli = False\n+\n+    def raise_network_minfee(self):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1547823286",
      "id" : 1547823286,
      "in_reply_to_id" : 1545475564,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585cQei2",
      "original_commit_id" : "5d7fa1f68402c0af08f58ac30522ce9511d218c3",
      "original_line" : 44,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "test/functional/p2p_opportunistic_1p1c.py",
      "position" : null,
      "pull_request_review_id" : 1973715466,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1547823286/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-02T13:45:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1547823286",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1547829705"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1547829705"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed thanks. Before I added noban, I was using it to make tests run faster.",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-04-02T12:57:17Z",
      "diff_hunk" : "@@ -0,0 +1,215 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test opportunistic 1p1c package submission logic.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    fill_mempool,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+    MiniWalletMode,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.noban_tx_relay = True\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+        ]]\n+        self.supports_cli = False\n+\n+    def raise_network_minfee(self):\n+\n+        self.log.debug(\"Wait for the network to sync mempools\")\n+        self.sync_mempools()\n+\n+        self.log.debug(\"Check that all nodes' mempool minimum feerates are above min relay feerate\")\n+        for node in self.nodes:\n+            assert_equal(node.getmempoolinfo()['minrelaytxfee'], FEERATE_1SAT_VB)\n+            assert_greater_than(node.getmempoolinfo()['mempoolminfee'], FEERATE_1SAT_VB)\n+\n+    def test_basic_child_then_parent(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check that opportunistic 1p1c logic works when child is received before parent\")\n+\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)\n+\n+        peer_sender = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=1, connection_type=\"outbound-full-relay\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1547829705",
      "id" : 1547829705,
      "in_reply_to_id" : 1545476664,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585cQgHJ",
      "original_commit_id" : "5d7fa1f68402c0af08f58ac30522ce9511d218c3",
      "original_line" : 61,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "test/functional/p2p_opportunistic_1p1c.py",
      "position" : null,
      "pull_request_review_id" : 1973715466,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1547829705/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-02T13:45:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1547829705",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1549143563"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1549143563"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-04-03T08:01:00Z",
      "diff_hunk" : "@@ -2228,7 +2241,7 @@ bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid, bool include_reconside\n \n     if (m_orphanage.HaveTx(gtxid)) return true;\n \n-    if (include_reconsiderable && m_recent_rejects_reconsiderable.contains(gtxid.GetHash())) return true;\n+    if (include_reconsiderable && m_recent_rejects_reconsiderable.contains(hash)) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1549143563",
      "id" : 1549143563,
      "in_reply_to_id" : 1545477551,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585cVg4L",
      "original_commit_id" : "97e16c20ca344b49652a2bce558c5404e7ab22dd",
      "original_line" : 2244,
      "original_position" : 25,
      "original_start_line" : 2231,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1975876919,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1549143563/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "LEFT",
      "subject_type" : "line",
      "updated_at" : "2024-04-03T08:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1549143563",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1549376386"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1549376386"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```Suggestion\r\n    // For each output, get all entries spending this prevout.\r\n```",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-04-03T09:47:55Z",
      "diff_hunk" : "@@ -241,3 +241,28 @@ void TxOrphanage::EraseForBlock(const CBlock& block)\n         LogPrint(BCLog::TXPACKAGES, \"Erased %d orphan tx included or conflicted by block\\n\", nErased);\n     }\n }\n+\n+std::vector<CTransactionRef> TxOrphanage::GetChildren(const CTransactionRef& parent) const\n+{\n+    LOCK(m_mutex);\n+\n+    // First construct a set of iterators to ensure we do not return duplicates of the same tx.\n+    std::set<OrphanMap::iterator, IteratorComparator> set_child_iterators;\n+\n+    // For each input, get all entries spending this prevout.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1549376386",
      "id" : 1549376386,
      "line" : 252,
      "node_id" : "PRRC_kwDOABII585cWZuC",
      "original_commit_id" : "d3d7dcf00439655a921f3be4624d01814de2e346",
      "original_line" : 252,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/txorphanage.cpp",
      "position" : 12,
      "pull_request_review_id" : 1976216428,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1549376386/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-04T09:55:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1549376386",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1549395161"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1549395161"
         }
      },
      "author_association" : "MEMBER",
      "body" : "probably better to have it while loop making tx until this is true, rather than fail randomly",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-04-03T09:59:21Z",
      "diff_hunk" : "@@ -138,4 +162,46 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n     BOOST_CHECK(orphanage.CountOrphans() == 0);\n }\n \n+BOOST_AUTO_TEST_CASE(get_children)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanage orphanage;\n+    const NodeId node{0};\n+    std::vector<COutPoint> empty_outpoints;\n+\n+    auto parent1 = MakeTransactionSpending(empty_outpoints, det_rand);\n+    auto parent2 = MakeTransactionSpending(empty_outpoints, det_rand);\n+\n+    // Make sure these parents have different txids otherwise this test won't make sense.\n+    BOOST_CHECK(parent1->GetHash() != parent2->GetHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1549395161",
      "id" : 1549395161,
      "line" : 176,
      "node_id" : "PRRC_kwDOABII585cWeTZ",
      "original_commit_id" : "b49b634556388ff5ec3c48fd05d628f77f6126a0",
      "original_line" : 176,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "src/test/orphanage_tests.cpp",
      "position" : 56,
      "pull_request_review_id" : 1976216428,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1549395161/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-04T09:55:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1549395161",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1549404732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1549404732"
         }
      },
      "author_association" : "MEMBER",
      "body" : "quick test case that returns empty would be good too",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-04-03T10:04:55Z",
      "diff_hunk" : "@@ -138,4 +162,46 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n     BOOST_CHECK(orphanage.CountOrphans() == 0);\n }\n \n+BOOST_AUTO_TEST_CASE(get_children)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanage orphanage;\n+    const NodeId node{0};\n+    std::vector<COutPoint> empty_outpoints;\n+\n+    auto parent1 = MakeTransactionSpending(empty_outpoints, det_rand);\n+    auto parent2 = MakeTransactionSpending(empty_outpoints, det_rand);\n+\n+    // Make sure these parents have different txids otherwise this test won't make sense.\n+    BOOST_CHECK(parent1->GetHash() != parent2->GetHash());\n+\n+    // Create children to go into orphanage.\n+    auto child_p1n0 = MakeTransactionSpending({{parent1->GetHash(), 0}}, det_rand);\n+    auto child_p2n1 = MakeTransactionSpending({{parent2->GetHash(), 1}}, det_rand);\n+    // Spends the same tx twice. Should not cause duplicates in GetChildren.\n+    auto child_p1n0_p1n1 = MakeTransactionSpending({{parent1->GetHash(), 0}, {parent1->GetHash(), 1}}, det_rand);\n+    // Spends the same outpoint as previous tx. Should still be returned; don't assume outpoints are unique.\n+    auto child_p1n0_p2n0 = MakeTransactionSpending({{parent1->GetHash(), 0}, {parent2->GetHash(), 0}}, det_rand);\n+\n+    BOOST_CHECK(orphanage.AddTx(child_p1n0, node));\n+    BOOST_CHECK(orphanage.AddTx(child_p2n1, node));\n+    BOOST_CHECK(orphanage.AddTx(child_p1n0_p1n1, node));\n+    BOOST_CHECK(orphanage.AddTx(child_p1n0_p2n0, node));\n+\n+    // Check that GetChildren returns what is expected.\n+    std::set<Wtxid> expected_parent1_children{child_p1n0->GetWitnessHash(), child_p1n0_p2n0->GetWitnessHash(), child_p1n0_p1n1->GetWitnessHash()};\n+    std::set<Wtxid> expected_parent2_children{child_p2n1->GetWitnessHash(), child_p1n0_p2n0->GetWitnessHash()};\n+\n+    auto parent1_children{orphanage.GetChildren(parent1)};\n+    BOOST_CHECK_EQUAL(parent1_children.size(), expected_parent1_children.size());\n+    for (const auto& child : parent1_children) {\n+        BOOST_CHECK(expected_parent1_children.count(child->GetWitnessHash()) > 0);\n+    }\n+    auto parent2_children{orphanage.GetChildren(parent2)};\n+    BOOST_CHECK_EQUAL(parent2_children.size(), expected_parent2_children.size());\n+    for (const auto& child : parent2_children) {\n+        BOOST_CHECK(expected_parent2_children.count(child->GetWitnessHash()) > 0);\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1549404732",
      "id" : 1549404732,
      "line" : 204,
      "node_id" : "PRRC_kwDOABII585cWgo8",
      "original_commit_id" : "b49b634556388ff5ec3c48fd05d628f77f6126a0",
      "original_line" : 204,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/test/orphanage_tests.cpp",
      "position" : 84,
      "pull_request_review_id" : 1976216428,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1549404732/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-04T09:55:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1549404732",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1549414682"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1549414682"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good time to add documentation to this function",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-04-03T10:12:47Z",
      "diff_hunk" : "@@ -806,7 +806,7 @@ class PeerManagerImpl final : public PeerManager\n     /** Stalling timeout for blocks in IBD */\n     std::atomic<std::chrono::seconds> m_block_stalling_timeout{BLOCK_STALLING_TIMEOUT_DEFAULT};\n \n-    bool AlreadyHaveTx(const GenTxid& gtxid)\n+    bool AlreadyHaveTx(const GenTxid& gtxid, bool include_reconsiderable)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1549414682",
      "id" : 1549414682,
      "line" : 822,
      "node_id" : "PRRC_kwDOABII585cWjEa",
      "original_commit_id" : "826b31b5a3bef4adb3d1d9145d1452b8e91fda46",
      "original_line" : 809,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 25,
      "pull_request_review_id" : 1976216428,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1549414682/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-04T09:55:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1549414682",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1550260907"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1550260907"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In  guard against MempoolAcceptResult::m_replaced_transactions  (53f1e65f30a0a6b931e97743113e0227748680df):\r\nI am not well-acquainted with `net_processing.cpp`, but I figured I could still mention that it is unclear to me from the commit message and the code change how this change fits in the context. Were we previously assuming that we would always have a non-empty list for `m_replaced_transactions` in the context of this call?",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-04-03T18:31:10Z",
      "diff_hunk" : "@@ -4354,7 +4354,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         const TxValidationState& state = result.m_state;\n \n         if (result.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n-            ProcessValidTx(pfrom.GetId(), ptx, result.m_replaced_transactions.value());\n+            Assume(result.m_replaced_transactions.has_value());\n+            std::list<CTransactionRef> empty_replacement_list;\n+            ProcessValidTx(pfrom.GetId(), ptx, result.m_replaced_transactions.value_or(empty_replacement_list));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1550260907",
      "id" : 1550260907,
      "line" : 4503,
      "node_id" : "PRRC_kwDOABII585cZxqr",
      "original_commit_id" : "53f1e65f30a0a6b931e97743113e0227748680df",
      "original_line" : 4359,
      "original_position" : 7,
      "original_start_line" : 4357,
      "path" : "src/net_processing.cpp",
      "position" : 238,
      "pull_request_review_id" : 1977655865,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1550260907/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 4357,
      "start_side" : "LEFT",
      "subject_type" : "line",
      "updated_at" : "2024-04-03T19:51:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1550260907",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1550334355"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1550334355"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit: Could use [`std::set::contains`](https://en.cppreference.com/w/cpp/container/set/contains) here and below\r\n```suggestion\r\n        BOOST_CHECK(expected_parent1_children.contains(child->GetWitnessHash()));\r\n```",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-04-03T19:28:27Z",
      "diff_hunk" : "@@ -138,4 +162,46 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n     BOOST_CHECK(orphanage.CountOrphans() == 0);\n }\n \n+BOOST_AUTO_TEST_CASE(get_children)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanage orphanage;\n+    const NodeId node{0};\n+    std::vector<COutPoint> empty_outpoints;\n+\n+    auto parent1 = MakeTransactionSpending(empty_outpoints, det_rand);\n+    auto parent2 = MakeTransactionSpending(empty_outpoints, det_rand);\n+\n+    // Make sure these parents have different txids otherwise this test won't make sense.\n+    BOOST_CHECK(parent1->GetHash() != parent2->GetHash());\n+\n+    // Create children to go into orphanage.\n+    auto child_p1n0 = MakeTransactionSpending({{parent1->GetHash(), 0}}, det_rand);\n+    auto child_p2n1 = MakeTransactionSpending({{parent2->GetHash(), 1}}, det_rand);\n+    // Spends the same tx twice. Should not cause duplicates in GetChildren.\n+    auto child_p1n0_p1n1 = MakeTransactionSpending({{parent1->GetHash(), 0}, {parent1->GetHash(), 1}}, det_rand);\n+    // Spends the same outpoint as previous tx. Should still be returned; don't assume outpoints are unique.\n+    auto child_p1n0_p2n0 = MakeTransactionSpending({{parent1->GetHash(), 0}, {parent2->GetHash(), 0}}, det_rand);\n+\n+    BOOST_CHECK(orphanage.AddTx(child_p1n0, node));\n+    BOOST_CHECK(orphanage.AddTx(child_p2n1, node));\n+    BOOST_CHECK(orphanage.AddTx(child_p1n0_p1n1, node));\n+    BOOST_CHECK(orphanage.AddTx(child_p1n0_p2n0, node));\n+\n+    // Check that GetChildren returns what is expected.\n+    std::set<Wtxid> expected_parent1_children{child_p1n0->GetWitnessHash(), child_p1n0_p2n0->GetWitnessHash(), child_p1n0_p1n1->GetWitnessHash()};\n+    std::set<Wtxid> expected_parent2_children{child_p2n1->GetWitnessHash(), child_p1n0_p2n0->GetWitnessHash()};\n+\n+    auto parent1_children{orphanage.GetChildren(parent1)};\n+    BOOST_CHECK_EQUAL(parent1_children.size(), expected_parent1_children.size());\n+    for (const auto& child : parent1_children) {\n+        BOOST_CHECK(expected_parent1_children.count(child->GetWitnessHash()) > 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1550334355",
      "id" : 1550334355,
      "line" : 198,
      "node_id" : "PRRC_kwDOABII585caDmT",
      "original_commit_id" : "b49b634556388ff5ec3c48fd05d628f77f6126a0",
      "original_line" : 198,
      "original_position" : 78,
      "original_start_line" : null,
      "path" : "src/test/orphanage_tests.cpp",
      "position" : 78,
      "pull_request_review_id" : 1977655865,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1550334355/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-03T19:51:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1550334355",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1550398421"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1550398421"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@murchandamus: I was asking myself the same a few days ago and started with some review notes for each commit. The one for 53f1e65f30a0a6b931e97743113e0227748680df might fit to your question (note that it's not about empty vs. non-empty, but more about set-to-nothing vs. set-to-something, since it's an std::optional):\r\n```\r\nThe only way to create an ATMP result of type `MempoolAcceptResult::ResultType::VALID` is using the\r\nstatic method `MempoolAccepptResult::Success`, which in turn calls the private successful case constructor of\r\n`MempoolAcceptResult`. This one always sets `m_replaced_transactions`, therefore\r\n`result.m_replaced_transactions.has_value()` in the modified code path should always be true.\r\n```\r\n(maybe it makes sense to include it in the commit message, if that is correct)\r\nThe same three lines of code are introduced in `PeerManagerImpl::ProcessPackageResult` (commit d6df19000118768678c7afd4b9330b4604bb37ce), I assume that this is the reason to also do it on the other place in the code for consistency.",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-04-03T20:16:28Z",
      "diff_hunk" : "@@ -4354,7 +4354,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         const TxValidationState& state = result.m_state;\n \n         if (result.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n-            ProcessValidTx(pfrom.GetId(), ptx, result.m_replaced_transactions.value());\n+            Assume(result.m_replaced_transactions.has_value());\n+            std::list<CTransactionRef> empty_replacement_list;\n+            ProcessValidTx(pfrom.GetId(), ptx, result.m_replaced_transactions.value_or(empty_replacement_list));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1550398421",
      "id" : 1550398421,
      "in_reply_to_id" : 1550260907,
      "line" : 4503,
      "node_id" : "PRRC_kwDOABII585caTPV",
      "original_commit_id" : "53f1e65f30a0a6b931e97743113e0227748680df",
      "original_line" : 4359,
      "original_position" : 7,
      "original_start_line" : 4357,
      "path" : "src/net_processing.cpp",
      "position" : 238,
      "pull_request_review_id" : 1977876327,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1550398421/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 4357,
      "start_side" : "LEFT",
      "subject_type" : "line",
      "updated_at" : "2024-04-03T20:16:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1550398421",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1550445308"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1550445308"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> it is unclear to me from the commit message and the code change how this change fits in the context.\r\n\r\n(Note that this commit is a followup from #29619, I've now linked to the comments in the PR description)\r\n\r\nYes, it should always have a value when the result is VALID. This is just adding a belt-and-suspenders juuust in case.",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-04-03T20:42:45Z",
      "diff_hunk" : "@@ -4354,7 +4354,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         const TxValidationState& state = result.m_state;\n \n         if (result.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n-            ProcessValidTx(pfrom.GetId(), ptx, result.m_replaced_transactions.value());\n+            Assume(result.m_replaced_transactions.has_value());\n+            std::list<CTransactionRef> empty_replacement_list;\n+            ProcessValidTx(pfrom.GetId(), ptx, result.m_replaced_transactions.value_or(empty_replacement_list));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1550445308",
      "id" : 1550445308,
      "in_reply_to_id" : 1550260907,
      "line" : 4503,
      "node_id" : "PRRC_kwDOABII585caer8",
      "original_commit_id" : "53f1e65f30a0a6b931e97743113e0227748680df",
      "original_line" : 4359,
      "original_position" : 7,
      "original_start_line" : 4357,
      "path" : "src/net_processing.cpp",
      "position" : 238,
      "pull_request_review_id" : 1977957595,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1550445308/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 4357,
      "start_side" : "LEFT",
      "subject_type" : "line",
      "updated_at" : "2024-04-03T20:43:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1550445308",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1550494056"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1550494056"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks! Great, Iâll attempt another more thorough review at a later time.",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-04-03T21:01:00Z",
      "diff_hunk" : "@@ -4354,7 +4354,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         const TxValidationState& state = result.m_state;\n \n         if (result.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n-            ProcessValidTx(pfrom.GetId(), ptx, result.m_replaced_transactions.value());\n+            Assume(result.m_replaced_transactions.has_value());\n+            std::list<CTransactionRef> empty_replacement_list;\n+            ProcessValidTx(pfrom.GetId(), ptx, result.m_replaced_transactions.value_or(empty_replacement_list));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1550494056",
      "id" : 1550494056,
      "in_reply_to_id" : 1550260907,
      "line" : 4503,
      "node_id" : "PRRC_kwDOABII585caqlo",
      "original_commit_id" : "53f1e65f30a0a6b931e97743113e0227748680df",
      "original_line" : 4359,
      "original_position" : 7,
      "original_start_line" : 4357,
      "path" : "src/net_processing.cpp",
      "position" : 238,
      "pull_request_review_id" : 1978040928,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1550494056/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 4357,
      "start_side" : "LEFT",
      "subject_type" : "line",
      "updated_at" : "2024-04-03T21:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1550494056",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1551287725"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1551287725"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I have to admit I'm struggling on these \"skip\" comments and cases. Every time I read this I have trouble re-deriving the logic. ",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-04-04T09:07:17Z",
      "diff_hunk" : "@@ -6061,7 +6186,9 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                 entry.second.GetHash().ToString(), entry.first);\n         }\n         for (const GenTxid& gtxid : requestable) {\n-            if (!AlreadyHaveTx(gtxid, /*include_reconsiderable=*/true)) {\n+            // Skip m_recent_rejects_reconsiderable because we may be requesting a missing parent",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1551287725",
      "id" : 1551287725,
      "line" : 6189,
      "node_id" : "PRRC_kwDOABII585cdsWt",
      "original_commit_id" : "d6df19000118768678c7afd4b9330b4604bb37ce",
      "original_line" : 6189,
      "original_position" : 167,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 274,
      "pull_request_review_id" : 1976216428,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1551287725/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-04T09:55:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1551287725",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1551410174"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1551410174"
         }
      },
      "author_association" : "MEMBER",
      "body" : "add a case where:\r\n1) CONSENSUS-invalid child is propagated to peer\r\n2) low_fee parent is given\r\n3) package evaluation is attempted\r\n4) peer is disconnected\r\n\r\nto ensure we're handling invalid tx properly",
      "commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-04-04T10:25:44Z",
      "diff_hunk" : "@@ -0,0 +1,203 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test opportunistic 1p1c package submission logic.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.messages import (\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    fill_mempool,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+    MiniWalletMode,\n+)\n+\n+# 1sat/vB feerate denominated in BTC/KvB\n+FEERATE_1SAT_VB = Decimal(\"0.00001000\")\n+\n+class PackageRelayTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.noban_tx_relay = True\n+        self.extra_args = [[\n+            \"-datacarriersize=100000\",\n+            \"-maxmempool=5\",\n+        ]]\n+        self.supports_cli = False\n+\n+    def test_basic_child_then_parent(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check that opportunistic 1p1c logic works when child is received before parent\")\n+\n+        low_fee_parent = self.wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)\n+\n+        peer_sender = node.add_p2p_connection(P2PInterface())\n+\n+        # 1. Child is received first (perhaps the low feerate parent didn't meet feefilter or the requests were sent to different nodes). It is missing an input.\n+        high_child_wtxid_int = int(high_fee_child[\"tx\"].getwtxid(), 16)\n+        peer_sender.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=high_child_wtxid_int)]))\n+        peer_sender.wait_for_getdata([high_child_wtxid_int])\n+        peer_sender.send_and_ping(msg_tx(high_fee_child[\"tx\"]))\n+\n+        # 2. Node requests the missing parent by txid.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer_sender.wait_for_getdata([parent_txid_int])\n+\n+        # 3. Sender relays the parent. Parent+Child are evaluated as a package and accepted.\n+        peer_sender.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        # 4. Both transactions should now be in mempool.\n+        node_mempool = node.getrawmempool()\n+        assert low_fee_parent[\"txid\"] in node_mempool\n+        assert high_fee_child[\"txid\"] in node_mempool\n+\n+        node.disconnect_p2ps()\n+\n+    def test_basic_parent_then_child(self, wallet):\n+        node = self.nodes[0]\n+        low_fee_parent = wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        high_fee_child = wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)\n+\n+        peer_sender = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=1, connection_type=\"outbound-full-relay\")\n+        peer_ignored = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=2, connection_type=\"outbound-full-relay\")\n+\n+        # 1. Parent is relayed first. It is too low feerate.\n+        parent_wtxid_int = int(low_fee_parent[\"tx\"].getwtxid(), 16)\n+        peer_sender.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        peer_sender.wait_for_getdata([parent_wtxid_int])\n+        peer_sender.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+\n+        # Send again from peer_ignored, check that it is ignored\n+        peer_ignored.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        assert \"getdata\" not in peer_ignored.last_message\n+\n+        # 2. Child is relayed next. It is missing an input.\n+        high_child_wtxid_int = int(high_fee_child[\"tx\"].getwtxid(), 16)\n+        peer_sender.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=high_child_wtxid_int)]))\n+        peer_sender.wait_for_getdata([high_child_wtxid_int])\n+        peer_sender.send_and_ping(msg_tx(high_fee_child[\"tx\"]))\n+\n+        # 3. Node requests the missing parent by txid.\n+        # It should do so even if it has previously rejected that parent for being too low feerate.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer_sender.wait_for_getdata([parent_txid_int])\n+\n+        # 4. Sender re-relays the parent. Parent+Child are evaluated as a package and accepted.\n+        peer_sender.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        # 5. Both transactions should now be in mempool.\n+        node_mempool = node.getrawmempool()\n+        assert low_fee_parent[\"txid\"] in node_mempool\n+        assert high_fee_child[\"txid\"] in node_mempool\n+\n+        node.disconnect_p2ps()\n+\n+    def test_low_and_high_child(self, wallet):\n+        node = self.nodes[0]\n+        low_fee_parent = wallet.create_self_transfer(fee_rate=FEERATE_1SAT_VB, confirmed_only=True)\n+        low_fee_child = wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=2*FEERATE_1SAT_VB)\n+        high_fee_child = wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=999*FEERATE_1SAT_VB)\n+\n+        peer_sender = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=3, connection_type=\"outbound-full-relay\")\n+        peer_ignored = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=4, connection_type=\"outbound-full-relay\")\n+\n+        self.log.info(\"Check that tx caches low fee parent + low fee child package rejections\")\n+\n+        # 1. Send parent, rejected for being low feerate.\n+        parent_wtxid_int = int(low_fee_parent[\"tx\"].getwtxid(), 16)\n+        peer_sender.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        peer_sender.wait_for_getdata([parent_wtxid_int])\n+        peer_sender.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+\n+        # Send again from peer_ignored, check that it is ignored\n+        peer_ignored.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=parent_wtxid_int)]))\n+        assert \"getdata\" not in peer_ignored.last_message\n+\n+        # 2. Send an (orphan) child that has a higher feerate, but not enough to bump the parent.\n+        low_child_wtxid_int = int(low_fee_child[\"tx\"].getwtxid(), 16)\n+        peer_sender.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=low_child_wtxid_int)]))\n+        peer_sender.wait_for_getdata([low_child_wtxid_int])\n+        peer_sender.send_and_ping(msg_tx(low_fee_child[\"tx\"]))\n+\n+        # 3. Node requests the orphan's missing parent.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer_sender.wait_for_getdata([parent_txid_int])\n+\n+        # 4. The low parent + low child are submitted as a package. They are not accepted due to low package feerate.\n+        peer_sender.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        assert low_fee_parent[\"txid\"] not in node.getrawmempool()\n+        assert low_fee_child[\"txid\"] not in node.getrawmempool()\n+\n+        # If peer_ignored announces the low feerate child, it should be ignored\n+        peer_ignored.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=low_child_wtxid_int)]))\n+        assert \"getdata\" not in peer_ignored.last_message\n+        # If either peer sends the parent again, package evaluation should not be attempted\n+        peer_sender.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        peer_ignored.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        # 5. Send the high feerate (orphan) child\n+        high_child_wtxid_int = int(high_fee_child[\"tx\"].getwtxid(), 16)\n+        peer_sender.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=high_child_wtxid_int)]))\n+        peer_sender.wait_for_getdata([high_child_wtxid_int])\n+        peer_sender.send_and_ping(msg_tx(high_fee_child[\"tx\"]))\n+\n+        # 6. Node requests the orphan's parent, even though it has already been rejected, both by\n+        # itself and with a child. This is necessary, otherwise high_fee_child can be censored.\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        peer_sender.wait_for_getdata([parent_txid_int])\n+\n+        # 7. The low feerate parent + high feerate child are submitted as a package.\n+        peer_sender.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+\n+        # 8. Both transactions should now be in mempool\n+        node_mempool = node.getrawmempool()\n+        assert low_fee_parent[\"txid\"] in node_mempool\n+        assert high_fee_child[\"txid\"] in node_mempool\n+\n+        node.disconnect_p2ps()\n+\n+    def run_test(self):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#discussion_r1551410174",
      "id" : 1551410174,
      "line" : 177,
      "node_id" : "PRRC_kwDOABII585ceKP-",
      "original_commit_id" : "c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "original_line" : 177,
      "original_position" : 177,
      "original_start_line" : null,
      "path" : "test/functional/p2p_opportunistic_1p1c.py",
      "position" : 177,
      "pull_request_review_id" : 1979439672,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1551410174/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-04T10:25:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1551410174",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "reviewed through c5e196b8e7b610cc9e6321b76fee4f0c45c1448e",
      "created_at" : "2024-04-04T10:27:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28970#issuecomment-2036791219",
      "id" : 2036791219,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
      "node_id" : "IC_kwDOABII5855Zvez",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2036791219/reactions"
      },
      "updated_at" : "2024-04-04T10:27:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2036791219",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   }
]
