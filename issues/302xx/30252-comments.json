[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30252).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "created_at" : "2024-06-09T11:02:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30252#issuecomment-2156444236",
      "id" : 2156444236,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30252",
      "node_id" : "IC_kwDOABII586AiLpM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2156444236/reactions"
      },
      "updated_at" : "2024-06-09T11:03:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2156444236",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30252#discussion_r1632312842"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30252"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632312842"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit:  \r\n`check it by waiting for a ping`\r\nThe code waits for successful pongs rather than pings.\r\n",
      "commit_id" : "fa6627706580ea213fc5df23fe990f1feedec11d",
      "created_at" : "2024-06-09T14:29:18Z",
      "diff_hunk" : "@@ -636,23 +636,17 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         def find_conn(node, peer_subversion, inbound):\n             return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n \n-        # poll until version handshake complete to avoid race conditions\n-        # with transaction relaying\n-        # See comments in net_processing:\n-        # * Must have a version message before anything else\n-        # * Must have a verack message before anything else\n         self.wait_until(lambda: find_conn(from_connection, to_connection_subver, inbound=False) is not None)\n         self.wait_until(lambda: find_conn(to_connection, from_connection_subver, inbound=True) is not None)\n \n         def check_bytesrecv(peer, msg_type, min_bytes_recv):\n             assert peer is not None, \"Error: peer disconnected\"\n             return peer['bytesrecv_per_msg'].pop(msg_type, 0) >= min_bytes_recv\n \n-        self.wait_until(lambda: check_bytesrecv(find_conn(from_connection, to_connection_subver, inbound=False), 'verack', 21))\n-        self.wait_until(lambda: check_bytesrecv(find_conn(to_connection, from_connection_subver, inbound=True), 'verack', 21))\n-\n-        # The message bytes are counted before processing the message, so make\n-        # sure it was fully processed by waiting for a ping.\n+        # Poll until version handshake (fSuccessfullyConnected) is complete to\n+        # avoid race conditions. As the flag fSuccessfullyConnected is not\n+        # exposed, check it by waiting for a ping, which can only happen after",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30252#discussion_r1632312842",
      "id" : 1632312842,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585hSx4K",
      "original_commit_id" : "fa4f453281e1b38ec4bc87eadbfcfee11d6ea530",
      "original_line" : 648,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 2106242208,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30252",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632312842/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-06-09T14:33:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632312842",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/106488469?v=4",
         "events_url" : "https://api.github.com/users/tdb3/events{/privacy}",
         "followers_url" : "https://api.github.com/users/tdb3/followers",
         "following_url" : "https://api.github.com/users/tdb3/following{/other_user}",
         "gists_url" : "https://api.github.com/users/tdb3/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/tdb3",
         "id" : 106488469,
         "login" : "tdb3",
         "node_id" : "U_kgDOBljilQ",
         "organizations_url" : "https://api.github.com/users/tdb3/orgs",
         "received_events_url" : "https://api.github.com/users/tdb3/received_events",
         "repos_url" : "https://api.github.com/users/tdb3/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/tdb3/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/tdb3/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/tdb3"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30252#discussion_r1632322469"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30252"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632322469"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, fixed.",
      "commit_id" : "fa6627706580ea213fc5df23fe990f1feedec11d",
      "created_at" : "2024-06-09T15:17:43Z",
      "diff_hunk" : "@@ -636,23 +636,17 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         def find_conn(node, peer_subversion, inbound):\n             return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n \n-        # poll until version handshake complete to avoid race conditions\n-        # with transaction relaying\n-        # See comments in net_processing:\n-        # * Must have a version message before anything else\n-        # * Must have a verack message before anything else\n         self.wait_until(lambda: find_conn(from_connection, to_connection_subver, inbound=False) is not None)\n         self.wait_until(lambda: find_conn(to_connection, from_connection_subver, inbound=True) is not None)\n \n         def check_bytesrecv(peer, msg_type, min_bytes_recv):\n             assert peer is not None, \"Error: peer disconnected\"\n             return peer['bytesrecv_per_msg'].pop(msg_type, 0) >= min_bytes_recv\n \n-        self.wait_until(lambda: check_bytesrecv(find_conn(from_connection, to_connection_subver, inbound=False), 'verack', 21))\n-        self.wait_until(lambda: check_bytesrecv(find_conn(to_connection, from_connection_subver, inbound=True), 'verack', 21))\n-\n-        # The message bytes are counted before processing the message, so make\n-        # sure it was fully processed by waiting for a ping.\n+        # Poll until version handshake (fSuccessfullyConnected) is complete to\n+        # avoid race conditions. As the flag fSuccessfullyConnected is not\n+        # exposed, check it by waiting for a ping, which can only happen after",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30252#discussion_r1632322469",
      "id" : 1632322469,
      "in_reply_to_id" : 1632312842,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585hS0Ol",
      "original_commit_id" : "fa4f453281e1b38ec4bc87eadbfcfee11d6ea530",
      "original_line" : 648,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 2106278317,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30252",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632322469/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-06-09T15:17:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632322469",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30252#discussion_r1632399010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30252"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632399010"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It would be nice to be explicit about the race conditions rather than keeping this vague. Maybe could add something like: \"The node will ignore all messages received during the version handshake window\".",
      "commit_id" : "fa6627706580ea213fc5df23fe990f1feedec11d",
      "created_at" : "2024-06-09T21:51:25Z",
      "diff_hunk" : "@@ -636,23 +636,17 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         def find_conn(node, peer_subversion, inbound):\n             return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n \n-        # poll until version handshake complete to avoid race conditions\n-        # with transaction relaying\n-        # See comments in net_processing:\n-        # * Must have a version message before anything else\n-        # * Must have a verack message before anything else\n         self.wait_until(lambda: find_conn(from_connection, to_connection_subver, inbound=False) is not None)\n         self.wait_until(lambda: find_conn(to_connection, from_connection_subver, inbound=True) is not None)\n \n         def check_bytesrecv(peer, msg_type, min_bytes_recv):\n             assert peer is not None, \"Error: peer disconnected\"\n             return peer['bytesrecv_per_msg'].pop(msg_type, 0) >= min_bytes_recv\n \n-        self.wait_until(lambda: check_bytesrecv(find_conn(from_connection, to_connection_subver, inbound=False), 'verack', 21))\n-        self.wait_until(lambda: check_bytesrecv(find_conn(to_connection, from_connection_subver, inbound=True), 'verack', 21))\n-\n-        # The message bytes are counted before processing the message, so make\n-        # sure it was fully processed by waiting for a ping.\n+        # Poll until version handshake (fSuccessfullyConnected) is complete to\n+        # avoid race conditions. As the flag fSuccessfullyConnected is not",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30252#discussion_r1632399010",
      "id" : 1632399010,
      "line" : 647,
      "node_id" : "PRRC_kwDOABII585hTG6i",
      "original_commit_id" : "fa6627706580ea213fc5df23fe990f1feedec11d",
      "original_line" : 647,
      "original_position" : 29,
      "original_start_line" : 646,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 29,
      "pull_request_review_id" : 2106373554,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30252",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632399010/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 646,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-06-09T21:54:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632399010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   }
]
