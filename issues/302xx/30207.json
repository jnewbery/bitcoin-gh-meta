{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "Some improvements with respect to invalid blocks and blocks building on them:\r\n\r\n1.) The fields `m_best_header` (best header of a chain that is not known to be invalid, irrespective on whether we have the full block or not) and `BLOCK_FAILED_CHILD` (BlockStatus saying that  a header descends from an invalid block) are populated on a best-effort basis and can sometimes be off. This is not too bad because critical consensus code doesn't rely on either of these, but it is kind of brittle, especially because this is not clearly documented. Document these limitations to prevent future bugs.\r\nIn order to solve these issues completely, it would be necessary to add more places in which we walk over the entire block index (computationally expensive), and/or introduce a header-tip tracking similar to #12138. This PR attempts neither of these, but I'd be interested in opinions whether we should.\r\n\r\n2.) The `getchaintips` RPC can fail to recognize chains building on invalid blocks (#8050) as invalid. Add a test for this and fix it for most cases (a comprehensive fix would require one of the larger changes listed above).\r\n\r\n3.) Behavior for chains building on invalid blocks depends on the point in validation at which the block was found to be invalid (which in turn depends on what's wrong with the block):\r\n* During the initial context-free `CheckBlock()` we never mark the block as permanently invalid [(rationale)](https://github.com/bitcoin/bitcoin/blob/62f7f59ff495fbcbfc10c25e97bb0dc032647abf/src/validation.cpp#L4449-L4453)\r\n* If the contextual checks in `AcceptBlock()` fail, we mark the block as permanently invalid (`BLOCK_FAILED_VALID`) and don't save it to disk (but we still have the header!). We won't accept headers building directly on it, but will accept headers building indirectly (i.e. with other headers in between), which is not consistent.\r\n* During `ConnectBlock()` we mark the block as permanently invalid and won't accept any more headers building on it, directly or indirectly.\r\n\r\nAdd test coverage for this behavior and change it such that for blocks found invalid during `AcceptBlock()`, we won't accept indirect headers that build on them either.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 2,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30207/comments",
   "created_at" : "2024-05-30T20:20:05Z",
   "draft" : false,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30207/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/30207",
   "id" : 2326471203,
   "labels" : [
      {
         "color" : "6060aa",
         "default" : false,
         "description" : null,
         "id" : 118379652,
         "name" : "Validation",
         "node_id" : "MDU6TGFiZWwxMTgzNzk2NTI=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation"
      },
      {
         "color" : "cccccc",
         "default" : false,
         "description" : "",
         "id" : 5334691551,
         "name" : "CI failed",
         "node_id" : "LA_kwDOABII588AAAABPfju3w",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30207/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "PR_kwDOABII585xDd0d",
   "number" : 30207,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/30207.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30207",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/30207.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30207"
   },
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30207/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30207/timeline",
   "title" : "validation: Improve, document and test logic for chains building on invalid blocks",
   "updated_at" : "2024-05-30T21:29:31Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30207",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
      "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
      "followers_url" : "https://api.github.com/users/mzumsande/followers",
      "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/mzumsande",
      "id" : 48763452,
      "login" : "mzumsande",
      "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
      "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
      "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
      "repos_url" : "https://api.github.com/users/mzumsande/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/mzumsande"
   }
}
