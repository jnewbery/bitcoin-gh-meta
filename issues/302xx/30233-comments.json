[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30233).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [tdb3](https://github.com/bitcoin/bitcoin/pull/30233#pullrequestreview-2100747176) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29575](https://github.com/bitcoin/bitcoin/pull/29575) (net_processing: make any misbehavior trigger immediate discouragement by sipa)\n* [#27052](https://github.com/bitcoin/bitcoin/pull/27052) (test: rpc: add last block announcement time to getpeerinfo result by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2024-06-05T17:01:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30233#issuecomment-2150541722",
      "id" : 2150541722,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30233",
      "node_id" : "IC_kwDOABII586ALqma",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2150541722/reactions"
      },
      "updated_at" : "2024-06-06T03:51:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2150541722",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30233#discussion_r1629164166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629164166"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can you explain why this change in behavior is correct? Previously, if the peer was missing, it would return `true`. Now, it would return `false`.",
      "commit_id" : "a0e4333d6b82fd2a3cf124d95de0bb22e775f67e",
      "created_at" : "2024-06-06T09:48:46Z",
      "diff_hunk" : "@@ -1933,16 +1933,10 @@ bool PeerManagerImpl::MaybePunishNodeForBlock(NodeId nodeid, const BlockValidati\n         break;\n     case BlockValidationResult::BLOCK_CACHED_INVALID:\n         {\n-            LOCK(cs_main);\n-            CNodeState *node_state = State(nodeid);\n-            if (node_state == nullptr) {\n-                break;\n-            }\n-\n             // Discourage outbound (but not inbound) peers if on an invalid chain.\n             // Exempt HB compact block peers. Manual connections are always protected from discouragement.\n-            if (!via_compact_block && !node_state->m_is_inbound) {\n-                if (peer) Misbehaving(*peer, 100, message);\n+            if (peer && !via_compact_block && !peer->m_is_inbound) {\n+                Misbehaving(*peer, 100, message);\n                 return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30233#discussion_r1629164166",
      "id" : 1629164166,
      "line" : 1940,
      "node_id" : "PRRC_kwDOABII585hGxKG",
      "original_commit_id" : "a0e4333d6b82fd2a3cf124d95de0bb22e775f67e",
      "original_line" : 1940,
      "original_position" : 119,
      "original_start_line" : 1938,
      "path" : "src/net_processing.cpp",
      "position" : 119,
      "pull_request_review_id" : 2101490471,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629164166/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1938,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-06-06T09:48:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629164166",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30233#discussion_r1629635922"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629635922"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You're right. This was an oversimplification. However, `CNodeState` and `Peer` should be tightly coupled, shouldn't they? Both are wiped in `PeerManagerImpl::FinalizeNode` (synchronously I assume), so I think there shouldn't have been a way to trigger that `true` when `peer` was a `nullptr`.\r\n\r\nZooming out a little bit, `MaybePunishNodeForBlock` return value is never used in the codebase (AFAICT at least), plus the docs also seem to be confusing when true needs to be returned:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1040a1fc807ed984020eeaa6e90b5bf070b61b05/src/net_processing.cpp#L568\r\n",
      "commit_id" : "a0e4333d6b82fd2a3cf124d95de0bb22e775f67e",
      "created_at" : "2024-06-06T14:11:47Z",
      "diff_hunk" : "@@ -1933,16 +1933,10 @@ bool PeerManagerImpl::MaybePunishNodeForBlock(NodeId nodeid, const BlockValidati\n         break;\n     case BlockValidationResult::BLOCK_CACHED_INVALID:\n         {\n-            LOCK(cs_main);\n-            CNodeState *node_state = State(nodeid);\n-            if (node_state == nullptr) {\n-                break;\n-            }\n-\n             // Discourage outbound (but not inbound) peers if on an invalid chain.\n             // Exempt HB compact block peers. Manual connections are always protected from discouragement.\n-            if (!via_compact_block && !node_state->m_is_inbound) {\n-                if (peer) Misbehaving(*peer, 100, message);\n+            if (peer && !via_compact_block && !peer->m_is_inbound) {\n+                Misbehaving(*peer, 100, message);\n                 return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30233#discussion_r1629635922",
      "id" : 1629635922,
      "in_reply_to_id" : 1629164166,
      "line" : 1940,
      "node_id" : "PRRC_kwDOABII585hIkVS",
      "original_commit_id" : "a0e4333d6b82fd2a3cf124d95de0bb22e775f67e",
      "original_line" : 1940,
      "original_position" : 119,
      "original_start_line" : 1938,
      "path" : "src/net_processing.cpp",
      "position" : 119,
      "pull_request_review_id" : 2102111230,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629635922/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1938,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-06-06T14:11:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629635922",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Concept ACK. Mind sharing how you see this fitting in with Erlay work?\r\n> \r\n> Will review in more depth soon.\r\n\r\nSure. For Erlay purposes, some transactions need to be sent via fanout even to Erlay-enabled peers. In order to know to how many peers to send this via fanout, we need to count the amount of tx-relaying peers that we have, both inbound and outbound.\r\n \r\nThis is done, in the current patch, by going over all peers when constructing their corresponding INV message and deciding whether to add the transaction or not (this requires accesing the `CNodeState`, which involves locking `cs_main`). In the new revision, this would be done in `PeerManagerImpl::RelayTransaction`, and two sets will be kept, per peer, one for fanout and one for reconciliation. \r\n\r\nTL;DR; checking if a peer is inbound from the `PeerManager` perspective should not require locking `cs_main`",
      "created_at" : "2024-06-06T14:28:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30233#issuecomment-2152685201",
      "id" : 2152685201,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30233",
      "node_id" : "IC_kwDOABII586AT16R",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2152685201/reactions"
      },
      "updated_at" : "2024-06-06T15:02:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2152685201",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30233#discussion_r1629711039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629711039"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If the return value is wrong or unused, it could make sense to remove it? Also, it could make sense to update the pattern `if (peer && ...` in the other cases as well for consistency, if this is correct.",
      "commit_id" : "a0e4333d6b82fd2a3cf124d95de0bb22e775f67e",
      "created_at" : "2024-06-06T14:58:38Z",
      "diff_hunk" : "@@ -1933,16 +1933,10 @@ bool PeerManagerImpl::MaybePunishNodeForBlock(NodeId nodeid, const BlockValidati\n         break;\n     case BlockValidationResult::BLOCK_CACHED_INVALID:\n         {\n-            LOCK(cs_main);\n-            CNodeState *node_state = State(nodeid);\n-            if (node_state == nullptr) {\n-                break;\n-            }\n-\n             // Discourage outbound (but not inbound) peers if on an invalid chain.\n             // Exempt HB compact block peers. Manual connections are always protected from discouragement.\n-            if (!via_compact_block && !node_state->m_is_inbound) {\n-                if (peer) Misbehaving(*peer, 100, message);\n+            if (peer && !via_compact_block && !peer->m_is_inbound) {\n+                Misbehaving(*peer, 100, message);\n                 return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30233#discussion_r1629711039",
      "id" : 1629711039,
      "in_reply_to_id" : 1629164166,
      "line" : 1940,
      "node_id" : "PRRC_kwDOABII585hI2q_",
      "original_commit_id" : "a0e4333d6b82fd2a3cf124d95de0bb22e775f67e",
      "original_line" : 1940,
      "original_position" : 119,
      "original_start_line" : 1938,
      "path" : "src/net_processing.cpp",
      "position" : 119,
      "pull_request_review_id" : 2102240331,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629711039/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1938,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-06-06T14:58:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629711039",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30233#discussion_r1630056430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1630056430"
         }
      },
      "author_association" : "MEMBER",
      "body" : "https://github.com/bitcoin/bitcoin/pull/29575#issuecomment-2152662655\r\n\r\nWill rebase on top of that",
      "commit_id" : "a0e4333d6b82fd2a3cf124d95de0bb22e775f67e",
      "created_at" : "2024-06-06T18:55:04Z",
      "diff_hunk" : "@@ -1933,16 +1933,10 @@ bool PeerManagerImpl::MaybePunishNodeForBlock(NodeId nodeid, const BlockValidati\n         break;\n     case BlockValidationResult::BLOCK_CACHED_INVALID:\n         {\n-            LOCK(cs_main);\n-            CNodeState *node_state = State(nodeid);\n-            if (node_state == nullptr) {\n-                break;\n-            }\n-\n             // Discourage outbound (but not inbound) peers if on an invalid chain.\n             // Exempt HB compact block peers. Manual connections are always protected from discouragement.\n-            if (!via_compact_block && !node_state->m_is_inbound) {\n-                if (peer) Misbehaving(*peer, 100, message);\n+            if (peer && !via_compact_block && !peer->m_is_inbound) {\n+                Misbehaving(*peer, 100, message);\n                 return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30233#discussion_r1630056430",
      "id" : 1630056430,
      "in_reply_to_id" : 1629164166,
      "line" : 1940,
      "node_id" : "PRRC_kwDOABII585hKK_u",
      "original_commit_id" : "a0e4333d6b82fd2a3cf124d95de0bb22e775f67e",
      "original_line" : 1940,
      "original_position" : 119,
      "original_start_line" : 1938,
      "path" : "src/net_processing.cpp",
      "position" : 119,
      "pull_request_review_id" : 2102971537,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1630056430/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1938,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-06-06T18:55:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1630056430",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30233#discussion_r1633424948"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1633424948"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The primary source of that information is `CNode::m_conn_type`. Is it necessary to have a partial copy of that in `Peer`?\r\nIf not, an alternative approach might be to use that, as is done for various other spots in net_processing that call `IsInboundConn()`. We might also need helper functions similar to `GetExtraBlockRelayCount` but for inbounds. I haven't tried it or looked into it in depth, but just wanted to bring up where you've considered that option.",
      "commit_id" : "a0e4333d6b82fd2a3cf124d95de0bb22e775f67e",
      "created_at" : "2024-06-10T15:13:37Z",
      "diff_hunk" : "@@ -223,6 +223,9 @@ struct Peer {\n     /** Services this peer offered to us. */\n     std::atomic<ServiceFlags> m_their_services{NODE_NONE};\n \n+    //! Whether this peer is an inbound connection\n+    const bool m_is_inbound;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30233#discussion_r1633424948",
      "id" : 1633424948,
      "line" : 227,
      "node_id" : "PRRC_kwDOABII585hXBY0",
      "original_commit_id" : "a0e4333d6b82fd2a3cf124d95de0bb22e775f67e",
      "original_line" : 227,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 2108091122,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1633424948/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-06-10T15:20:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1633424948",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30233#discussion_r1633575260"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1633575260"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We do, at least to my understanding, given some `PeerMan` methods that are not called with any `CNode` reference need to check whether the peer that sent us the data they are processing is inbound or outbound.\r\n\r\nA good example is `PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs`, which is called from `PeerManagerImpl::BlockChecked` and is passed a `NodeId` grabbed from `mapBlockSource`",
      "commit_id" : "a0e4333d6b82fd2a3cf124d95de0bb22e775f67e",
      "created_at" : "2024-06-10T17:08:40Z",
      "diff_hunk" : "@@ -223,6 +223,9 @@ struct Peer {\n     /** Services this peer offered to us. */\n     std::atomic<ServiceFlags> m_their_services{NODE_NONE};\n \n+    //! Whether this peer is an inbound connection\n+    const bool m_is_inbound;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30233#discussion_r1633575260",
      "id" : 1633575260,
      "in_reply_to_id" : 1633424948,
      "line" : 227,
      "node_id" : "PRRC_kwDOABII585hXmFc",
      "original_commit_id" : "a0e4333d6b82fd2a3cf124d95de0bb22e775f67e",
      "original_line" : 227,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 2108339143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1633575260/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-06-10T17:08:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1633575260",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30233#discussion_r1633625118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1633625118"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, but we could attempt to retrieve the `CNode` by `NodeId` from `m_nodes`, as the current code does it for `Peer` from `m_peer_map`.\r\nI think the lookup would be `O(N)` for iterating through the vector `m_nodes` instead of `O(log N)` for the `std::map`, so maybe that is the reason for the redundancy?",
      "commit_id" : "a0e4333d6b82fd2a3cf124d95de0bb22e775f67e",
      "created_at" : "2024-06-10T17:46:03Z",
      "diff_hunk" : "@@ -223,6 +223,9 @@ struct Peer {\n     /** Services this peer offered to us. */\n     std::atomic<ServiceFlags> m_their_services{NODE_NONE};\n \n+    //! Whether this peer is an inbound connection\n+    const bool m_is_inbound;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30233#discussion_r1633625118",
      "id" : 1633625118,
      "in_reply_to_id" : 1633424948,
      "line" : 227,
      "node_id" : "PRRC_kwDOABII585hXyQe",
      "original_commit_id" : "a0e4333d6b82fd2a3cf124d95de0bb22e775f67e",
      "original_line" : 227,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 2108419113,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1633625118/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-06-10T17:46:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1633625118",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30233#discussion_r1633665883"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1633665883"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, that'd make sense. I don't think increasing the lookup complexity for this, even if we are talking about a vector of hundreds of nodes at most, is worth not keeping a boolean in `Peer`",
      "commit_id" : "a0e4333d6b82fd2a3cf124d95de0bb22e775f67e",
      "created_at" : "2024-06-10T18:22:43Z",
      "diff_hunk" : "@@ -223,6 +223,9 @@ struct Peer {\n     /** Services this peer offered to us. */\n     std::atomic<ServiceFlags> m_their_services{NODE_NONE};\n \n+    //! Whether this peer is an inbound connection\n+    const bool m_is_inbound;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30233#discussion_r1633665883",
      "id" : 1633665883,
      "in_reply_to_id" : 1633424948,
      "line" : 227,
      "node_id" : "PRRC_kwDOABII585hX8Nb",
      "original_commit_id" : "a0e4333d6b82fd2a3cf124d95de0bb22e775f67e",
      "original_line" : 227,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 2108488514,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1633665883/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-06-10T18:22:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1633665883",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   }
]
