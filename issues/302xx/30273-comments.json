[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30273).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "created_at" : "2024-06-12T14:00:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30273#issuecomment-2163088753",
      "id" : 2163088753,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30273",
      "node_id" : "IC_kwDOABII586A7h1x",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2163088753/reactions"
      },
      "updated_at" : "2024-06-12T14:00:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2163088753",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "From CI:\r\n```\r\nSUMMARY: UndefinedBehaviorSanitizer: invalid-null-argument test/fuzz/util/net.cpp:219:66 \r\nMS: 0 ; base unit: 0000000000000000000000000000000000000000\r\n0x5c,0x57,0x5c,0x57,0x5c,0xfb,0xff,0x29,0xa5,0x6,0x6,0xff,0x29,0x35,0xda,\r\n\\\\W\\\\W\\\\\\373\\377)\\245\\006\\006\\377)5\\332\r\nartifact_prefix='./'; Test unit written to ./crash-c88fdfee4792d18945ffb11a7a520d9f0fb5e56b\r\nBase64: XFdcV1z7/ymlBgb/KTXa\r\n\r\nTraceback (most recent call last):\r\n  File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/fuzz/test_runner.py\", line 411, in <module>\r\n    main()\r\n  File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/fuzz/test_runner.py\", line 199, in main\r\n    run_once(\r\n  File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/fuzz/test_runner.py\", line 376, in run_once\r\n    assert len(done_stat) == 1\r\n```",
      "created_at" : "2024-06-12T20:08:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30273#issuecomment-2163813661",
      "id" : 2163813661,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30273",
      "node_id" : "IC_kwDOABII586A-S0d",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2163813661/reactions"
      },
      "updated_at" : "2024-06-12T20:08:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2163813661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`3ecd1c632f...f4793257cd`: The UB sanitizer did not like the call to `memcpy(..., nullptr, 0);` which happens when the fuzzer input is exhausted. Added an explicit check about that.",
      "created_at" : "2024-06-13T10:10:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30273#issuecomment-2165212522",
      "id" : 2165212522,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30273",
      "node_id" : "IC_kwDOABII586BDoVq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2165212522/reactions"
      },
      "updated_at" : "2024-06-13T10:10:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2165212522",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30273#discussion_r1639721875"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30273"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1639721875"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why would `m_peek_data` be guaranteed to be empty here? I've tested this with the I2P harness and this assert fails. The `m_peek_data` doesn't get erased, so there's still some random bytes from the previous `Recv` call. The length of the copied data is just whatever was left, which isn't equal to `len`.",
      "commit_id" : "4d81b4de339efbbb68c9785203b699e6e12ecd83",
      "created_at" : "2024-06-14T12:04:53Z",
      "diff_hunk" : "@@ -182,54 +182,56 @@ ssize_t FuzzedSock::Recv(void* buf, size_t len, int flags) const\n         EWOULDBLOCK,\n     };\n     assert(buf != nullptr || len == 0);\n+\n+    // Do the latency before any of the \"return\" statements.\n+    if (m_fuzzed_data_provider.ConsumeBool() && std::getenv(\"FUZZED_SOCKET_FAKE_LATENCY\") != nullptr) {\n+        std::this_thread::sleep_for(std::chrono::milliseconds{2});\n+    }\n+\n     if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n         const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n         if (r == -1) {\n             SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n         }\n         return r;\n     }\n-    std::vector<uint8_t> random_bytes;\n-    bool pad_to_len_bytes{m_fuzzed_data_provider.ConsumeBool()};\n-    if (m_peek_data.has_value()) {\n-        // `MSG_PEEK` was used in the preceding `Recv()` call, return `m_peek_data`.\n-        random_bytes = m_peek_data.value();\n+\n+    size_t copied_so_far{0};\n+\n+    if (!m_peek_data.empty()) {\n+        // `MSG_PEEK` was used in the preceding `Recv()` call, copy the first bytes from `m_peek_data`.\n+        const size_t copy_len{std::min(len, m_peek_data.size())};\n+        std::memcpy(buf, m_peek_data.data(), copy_len);\n+        copied_so_far += copy_len;\n         if ((flags & MSG_PEEK) == 0) {\n-            m_peek_data.reset();\n+            m_peek_data.erase(m_peek_data.begin(), m_peek_data.begin() + copy_len);\n         }\n-        pad_to_len_bytes = false;\n-    } else if ((flags & MSG_PEEK) != 0) {\n-        // New call with `MSG_PEEK`.\n-        random_bytes = ConsumeRandomLengthByteVector(m_fuzzed_data_provider, len);\n-        if (!random_bytes.empty()) {\n-            m_peek_data = random_bytes;\n-            pad_to_len_bytes = false;\n-        }\n-    } else {\n-        random_bytes = ConsumeRandomLengthByteVector(m_fuzzed_data_provider, len);\n     }\n-    if (random_bytes.empty()) {\n-        const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n-        if (r == -1) {\n-            SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n-        }\n-        return r;\n+\n+    if (copied_so_far == len) {\n+        return copied_so_far;\n     }\n-    // `random_bytes` might exceed the size of `buf` if e.g. Recv is called with\n-    // len=N and MSG_PEEK first and afterwards called with len=M (M < N) and\n-    // without MSG_PEEK.\n-    size_t recv_len{std::min(random_bytes.size(), len)};\n-    std::memcpy(buf, random_bytes.data(), recv_len);\n-    if (pad_to_len_bytes) {\n-        if (len > random_bytes.size()) {\n-            std::memset((char*)buf + random_bytes.size(), 0, len - random_bytes.size());\n-        }\n-        return len;\n+\n+    assert(m_peek_data.empty());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30273#discussion_r1639721875",
      "id" : 1639721875,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585hvCuT",
      "original_commit_id" : "f4793257cdf11405da74d874b104dfac0f5e58e2",
      "original_line" : 215,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/test/fuzz/util/net.cpp",
      "position" : null,
      "pull_request_review_id" : 2118222905,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30273",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1639721875/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-06-14T12:05:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1639721875",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/95179662?v=4",
         "events_url" : "https://api.github.com/users/marcofleon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/marcofleon/followers",
         "following_url" : "https://api.github.com/users/marcofleon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/marcofleon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/marcofleon",
         "id" : 95179662,
         "login" : "marcofleon",
         "node_id" : "U_kgDOBaxTjg",
         "organizations_url" : "https://api.github.com/users/marcofleon/orgs",
         "received_events_url" : "https://api.github.com/users/marcofleon/received_events",
         "repos_url" : "https://api.github.com/users/marcofleon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/marcofleon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/marcofleon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/marcofleon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30273#discussion_r1639787804"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30273"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1639787804"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This assert is too strong! Removed and adjusted the code afterwards to expect that `m_peek_data` may contain some bytes.\r\n\r\nBtw, I ran `FUZZ=i2p ./src/test/fuzz/fuzz` for some time and it did not crash, maybe I did not run it long enough.",
      "commit_id" : "4d81b4de339efbbb68c9785203b699e6e12ecd83",
      "created_at" : "2024-06-14T12:57:08Z",
      "diff_hunk" : "@@ -182,54 +182,56 @@ ssize_t FuzzedSock::Recv(void* buf, size_t len, int flags) const\n         EWOULDBLOCK,\n     };\n     assert(buf != nullptr || len == 0);\n+\n+    // Do the latency before any of the \"return\" statements.\n+    if (m_fuzzed_data_provider.ConsumeBool() && std::getenv(\"FUZZED_SOCKET_FAKE_LATENCY\") != nullptr) {\n+        std::this_thread::sleep_for(std::chrono::milliseconds{2});\n+    }\n+\n     if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n         const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n         if (r == -1) {\n             SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n         }\n         return r;\n     }\n-    std::vector<uint8_t> random_bytes;\n-    bool pad_to_len_bytes{m_fuzzed_data_provider.ConsumeBool()};\n-    if (m_peek_data.has_value()) {\n-        // `MSG_PEEK` was used in the preceding `Recv()` call, return `m_peek_data`.\n-        random_bytes = m_peek_data.value();\n+\n+    size_t copied_so_far{0};\n+\n+    if (!m_peek_data.empty()) {\n+        // `MSG_PEEK` was used in the preceding `Recv()` call, copy the first bytes from `m_peek_data`.\n+        const size_t copy_len{std::min(len, m_peek_data.size())};\n+        std::memcpy(buf, m_peek_data.data(), copy_len);\n+        copied_so_far += copy_len;\n         if ((flags & MSG_PEEK) == 0) {\n-            m_peek_data.reset();\n+            m_peek_data.erase(m_peek_data.begin(), m_peek_data.begin() + copy_len);\n         }\n-        pad_to_len_bytes = false;\n-    } else if ((flags & MSG_PEEK) != 0) {\n-        // New call with `MSG_PEEK`.\n-        random_bytes = ConsumeRandomLengthByteVector(m_fuzzed_data_provider, len);\n-        if (!random_bytes.empty()) {\n-            m_peek_data = random_bytes;\n-            pad_to_len_bytes = false;\n-        }\n-    } else {\n-        random_bytes = ConsumeRandomLengthByteVector(m_fuzzed_data_provider, len);\n     }\n-    if (random_bytes.empty()) {\n-        const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n-        if (r == -1) {\n-            SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n-        }\n-        return r;\n+\n+    if (copied_so_far == len) {\n+        return copied_so_far;\n     }\n-    // `random_bytes` might exceed the size of `buf` if e.g. Recv is called with\n-    // len=N and MSG_PEEK first and afterwards called with len=M (M < N) and\n-    // without MSG_PEEK.\n-    size_t recv_len{std::min(random_bytes.size(), len)};\n-    std::memcpy(buf, random_bytes.data(), recv_len);\n-    if (pad_to_len_bytes) {\n-        if (len > random_bytes.size()) {\n-            std::memset((char*)buf + random_bytes.size(), 0, len - random_bytes.size());\n-        }\n-        return len;\n+\n+    assert(m_peek_data.empty());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30273#discussion_r1639787804",
      "id" : 1639787804,
      "in_reply_to_id" : 1639721875,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585hvS0c",
      "original_commit_id" : "f4793257cdf11405da74d874b104dfac0f5e58e2",
      "original_line" : 215,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/test/fuzz/util/net.cpp",
      "position" : null,
      "pull_request_review_id" : 2118326322,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30273",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1639787804/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-06-14T12:57:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1639787804",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`f4793257cd...4d81b4de33`: rebase and resolve https://github.com/bitcoin/bitcoin/pull/30273#discussion_r1639721875",
      "created_at" : "2024-06-14T12:57:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30273#issuecomment-2167983116",
      "id" : 2167983116,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30273",
      "node_id" : "IC_kwDOABII586BOMwM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2167983116/reactions"
      },
      "updated_at" : "2024-06-14T12:57:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2167983116",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30273#discussion_r1639813563"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30273"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1639813563"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nice, I'll retest.\r\n\r\n> Btw, I ran `FUZZ=i2p ./src/test/fuzz/fuzz` for some time and it did not crash, maybe I did not run it long enough.\r\n\r\nInteresting, mine crashed very quickly. Did you run it with the I2P dictionary? It's a lot faster using the dict so maybe that's why.\r\n\r\n",
      "commit_id" : "4d81b4de339efbbb68c9785203b699e6e12ecd83",
      "created_at" : "2024-06-14T13:16:00Z",
      "diff_hunk" : "@@ -182,54 +182,56 @@ ssize_t FuzzedSock::Recv(void* buf, size_t len, int flags) const\n         EWOULDBLOCK,\n     };\n     assert(buf != nullptr || len == 0);\n+\n+    // Do the latency before any of the \"return\" statements.\n+    if (m_fuzzed_data_provider.ConsumeBool() && std::getenv(\"FUZZED_SOCKET_FAKE_LATENCY\") != nullptr) {\n+        std::this_thread::sleep_for(std::chrono::milliseconds{2});\n+    }\n+\n     if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n         const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n         if (r == -1) {\n             SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n         }\n         return r;\n     }\n-    std::vector<uint8_t> random_bytes;\n-    bool pad_to_len_bytes{m_fuzzed_data_provider.ConsumeBool()};\n-    if (m_peek_data.has_value()) {\n-        // `MSG_PEEK` was used in the preceding `Recv()` call, return `m_peek_data`.\n-        random_bytes = m_peek_data.value();\n+\n+    size_t copied_so_far{0};\n+\n+    if (!m_peek_data.empty()) {\n+        // `MSG_PEEK` was used in the preceding `Recv()` call, copy the first bytes from `m_peek_data`.\n+        const size_t copy_len{std::min(len, m_peek_data.size())};\n+        std::memcpy(buf, m_peek_data.data(), copy_len);\n+        copied_so_far += copy_len;\n         if ((flags & MSG_PEEK) == 0) {\n-            m_peek_data.reset();\n+            m_peek_data.erase(m_peek_data.begin(), m_peek_data.begin() + copy_len);\n         }\n-        pad_to_len_bytes = false;\n-    } else if ((flags & MSG_PEEK) != 0) {\n-        // New call with `MSG_PEEK`.\n-        random_bytes = ConsumeRandomLengthByteVector(m_fuzzed_data_provider, len);\n-        if (!random_bytes.empty()) {\n-            m_peek_data = random_bytes;\n-            pad_to_len_bytes = false;\n-        }\n-    } else {\n-        random_bytes = ConsumeRandomLengthByteVector(m_fuzzed_data_provider, len);\n     }\n-    if (random_bytes.empty()) {\n-        const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n-        if (r == -1) {\n-            SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n-        }\n-        return r;\n+\n+    if (copied_so_far == len) {\n+        return copied_so_far;\n     }\n-    // `random_bytes` might exceed the size of `buf` if e.g. Recv is called with\n-    // len=N and MSG_PEEK first and afterwards called with len=M (M < N) and\n-    // without MSG_PEEK.\n-    size_t recv_len{std::min(random_bytes.size(), len)};\n-    std::memcpy(buf, random_bytes.data(), recv_len);\n-    if (pad_to_len_bytes) {\n-        if (len > random_bytes.size()) {\n-            std::memset((char*)buf + random_bytes.size(), 0, len - random_bytes.size());\n-        }\n-        return len;\n+\n+    assert(m_peek_data.empty());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30273#discussion_r1639813563",
      "id" : 1639813563,
      "in_reply_to_id" : 1639721875,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585hvZG7",
      "original_commit_id" : "f4793257cdf11405da74d874b104dfac0f5e58e2",
      "original_line" : 215,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/test/fuzz/util/net.cpp",
      "position" : null,
      "pull_request_review_id" : 2118369842,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30273",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1639813563/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-06-14T13:17:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1639813563",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/95179662?v=4",
         "events_url" : "https://api.github.com/users/marcofleon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/marcofleon/followers",
         "following_url" : "https://api.github.com/users/marcofleon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/marcofleon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/marcofleon",
         "id" : 95179662,
         "login" : "marcofleon",
         "node_id" : "U_kgDOBaxTjg",
         "organizations_url" : "https://api.github.com/users/marcofleon/orgs",
         "received_events_url" : "https://api.github.com/users/marcofleon/received_events",
         "repos_url" : "https://api.github.com/users/marcofleon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/marcofleon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/marcofleon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/marcofleon"
      }
   }
]
