[
   {
      "author_association" : "MEMBER",
      "body" : ">  61 cases where it appeared to be used incorrectly\r\n\r\nNo opinion about naming, but of the cases that are used incorrectly, I wonder if their surrounding functions are better suited to use `Result` instead of a `void` or `bool` return value. (I presume many of them were a result of the `bool error()` helper transformation/removal, which was the first step toward moving some of those functions toward `Result`)",
      "created_at" : "2024-06-27T13:12:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/30348#issuecomment-2194662748",
      "id" : 2194662748,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30348",
      "node_id" : "IC_kwDOABII586Cz-Vc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2194662748/reactions"
      },
      "updated_at" : "2024-06-27T13:12:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2194662748",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Level::Error now meaning that the node needs to be shut down does seem to be a deviation, and perhaps adding Level::Fatal is a good idea if this distinction is needed. Not sure about Level::Critical.\r\n\r\nIMO the severity-level logging veered in an unfortunate direction with the unneeded proliferation of Log{Level} macros having hardwired names and an inconsistent API with varying numbers of args and documentation duplicated/moved from `enum class Level` to the developer notes.\r\n\r\nAll of that was unnecessary and cumbersome, rather than simply one Log macro with a consistent interface and documentation of levels in the Level enum class.",
      "created_at" : "2024-06-27T13:34:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/30348#issuecomment-2194707816",
      "id" : 2194707816,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30348",
      "node_id" : "IC_kwDOABII586C0JVo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2194707816/reactions"
      },
      "updated_at" : "2024-06-27T13:40:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2194707816",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/issues/30348#issuecomment-2194662748\r\n\r\nThanks Marco, I forgot about the error() function, but yes looking at #29236 it looks like a lot of incorrect LogError uses did come from that replacement.\r\n\r\nI also agree it is good to return errors through `util::Result`. But I think it can be useful in many cases to log the errors as well, or in some cases not try to return very granular error information, but just indicate that a failure happened and refer the user to check the debug log.\r\n\r\nre: https://github.com/bitcoin/bitcoin/issues/30348#issuecomment-2194707816\r\n\r\nI think I disagree somewhat with Jon. I like the new logging API overall and think new documentation is well written, giving good advice and making clear distinctions that should lead to less spammy logging. I just think two of the macros happen to have unfortunate names that don't match how they are intended to be used.\r\n\r\nI do agree with the concern about having a proliferation of log macros. But I think the intent behind the macros is that `LogDebug` should be the most commonly one used by far. Unconditional `LogInfo` `LogCritical` and `LogFatal` macros should be used more rarely, to avoid log spam. And `LogTrace` should only be used in complicated code where it's helpful to have fine traces. My PR #30347 does keep `LogWarning` and `LogError` macros for now, but I think it might make more sense to get rid of them and shift more code to using `LogDebug`.\r\n\r\n\r\n",
      "created_at" : "2024-06-27T14:03:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/30348#issuecomment-2194772695",
      "id" : 2194772695,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30348",
      "node_id" : "IC_kwDOABII586C0ZLX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2194772695/reactions"
      },
      "updated_at" : "2024-06-27T14:03:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2194772695",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky all those unnecessary macros add complexity and more ducks to keep in a row -- for no benefit.\r\n\r\nOne primary benefit I hope to see from the `trace` level is to be able to separate out very verbose, low-level, high-frequency logging. With `net` category logging, for instance, to use `debug` for high-level, lower-frequency events at the peer level, and `trace` for low-level, very high frequency events at the p2p messages level.",
      "created_at" : "2024-06-27T14:19:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/30348#issuecomment-2194832230",
      "id" : 2194832230,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30348",
      "node_id" : "IC_kwDOABII586C0ntm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2194832230/reactions"
      },
      "updated_at" : "2024-06-27T14:19:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2194832230",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/issues/30348#issuecomment-2194832230\r\n\r\n> @ryanofsky all those unnecessary macros add complexity and more ducks to keep in a row\r\n\r\nI agree with that and your other points. I particularly agree the current implementation of the macros is complicated and inconsistent, and I wrote #29256 to make all the macros accept the same parameters and use the [same implementation](https://github.com/ryanofsky/bitcoin/blob/38d3298ea7e547797871140a02df3e7d60d34d36/src/logging.h#L322-L327). I just don't see a significant distinction between different syntaxes `LogDebug(...)` or `LogPrint(BCLog::Debug, ...)` or even `log.Debug(...)` so have not been trying to raise syntax as an issue.\r\n\r\n(EDIT: To be clear, I personally prefer brevity and efficiency of the macro syntax over the other syntaxes. I am just trying to be sympathetic to Jon's point of view while pointing out that his preference for level arguments is only a preference for a different syntax, and he doesn't need to be so concerned about the existence of convenience macros. I think this one criticism is little shallow, but the other points he makes are more meaningful.)",
      "created_at" : "2024-06-27T14:47:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/30348#issuecomment-2194927972",
      "id" : 2194927972,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30348",
      "node_id" : "IC_kwDOABII586C0_Fk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2194927972/reactions"
      },
      "updated_at" : "2024-06-28T11:21:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2194927972",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I just don't see a significant distinction between different syntaxes `LogDebug(...)` or `LogPrint(BCLog::Debug, ...)` or even `log.Debug(...)` so have not been trying to raise syntax as an issue.\r\n\r\nThe second one is an extra 13 characters of noise each time (20 if you don't do something to avoid having to type `BCLog::Level::Debug`); for the third one, C++ doesn't allow you to have it be a magic macro where the arguments aren't even evaluated when debug logging isn't enabled. Far better to have the code that actually does the complicated stuff be as easy to read and write as we can make it, especially if the cost is just repeating a one-line macro a few times in a header.",
      "created_at" : "2024-06-27T15:12:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/30348#issuecomment-2194982649",
      "id" : 2194982649,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30348",
      "node_id" : "IC_kwDOABII586C1Mb5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 3,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 1,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 4,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2194982649/reactions"
      },
      "updated_at" : "2024-06-27T15:12:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2194982649",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Looking at the code I found 58 cases where `LogError` appeared to be use correctly, in conditions that would lead to full or partial shutdowns, and 61 cases where it appeared to be used incorrectly to report errors that would not cause shutdowns and were potentially transient.\r\n\r\n#30347 doesn't seem to actually fix any of the 61 incorrect cases? Maybe have a PR to manually fix the incorrect ones, then a scripted diff to convert everything to the new names?",
      "created_at" : "2024-06-27T15:27:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/30348#issuecomment-2195019443",
      "id" : 2195019443,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30348",
      "node_id" : "IC_kwDOABII586C1Vaz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 1,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2195019443/reactions"
      },
      "updated_at" : "2024-06-27T15:27:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2195019443",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> an extra 13 characters of noise each time (20 if you don't do something to avoid having to type `BCLog::Level::Debug`)\r\n\r\nExtra complexity and code and an inconsistent API to avoid \"extra characters\" (that moreover many developers likely just cut and paste as needed) seems a poor (and borderline silly?) trade-off unless forced on us for technical reasons. Far better to have the code and API as simple and consistent as possible.\r\n\r\n",
      "created_at" : "2024-06-27T19:37:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/30348#issuecomment-2195529824",
      "id" : 2195529824,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30348",
      "node_id" : "IC_kwDOABII586C3SBg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 1,
         "confused" : 1,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2195529824/reactions"
      },
      "updated_at" : "2024-06-27T19:37:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2195529824",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Two years ago, it seemed we had a road map on severity-level logging based on a PR discussion. It turned out not to be the case, and not sufficiently specified, with subsequent proposals to swerve here or take another road there.\r\n\r\nNot sure, but perhaps it would be best to gather a larger consensus on which log levels to adopt, and with which definitions, and an overall API, rather than everyone opening competing proposals. But I haven't been following all of these proposals closely.",
      "created_at" : "2024-06-27T19:44:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/30348#issuecomment-2195538575",
      "id" : 2195538575,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30348",
      "node_id" : "IC_kwDOABII586C3UKP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 1,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2195538575/reactions"
      },
      "updated_at" : "2024-06-27T19:44:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2195538575",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/issues/30348#issue-2378034511\r\n\r\n> Current `LogWarning` usages looked appropriate, but were rare, with only 8 usages currently.\r\n\r\nThis turned out to be incorrect, so I edited this part of the issue description. wilcl-ark found a case where `LogWarning` is currently being misused (https://github.com/bitcoin/bitcoin/pull/30347#issuecomment-2194685490) to warn about an unexpectedly large `-checkblocks` value. I also found more incorrect uses that I missed before because I was only searching for `LogWarning` not `Level::Warning`. #30347 has been updated to reflect these changes.\r\n\r\n---\r\n\r\nre: https://github.com/bitcoin/bitcoin/issues/30348#issuecomment-2195538575 \r\n\r\n> Two years ago, it seemed we had a road map on severity-level logging based on a PR discussion. It turned out not to be the case, and not sufficiently specified, with subsequent proposals to swerve here or take another road there.\r\n\r\nThis is definitely true, but I think it is mostly ok and has been beneficial. The decision to only use `Level::Error` for fatal errors was definitely very surprising to me, I only found out about it yesterday! But I think most changes have been solid improvements.\r\n\r\nI agree it would be good to discuss severity levels somewhere if people disagree about them, though I'm not sure they actually do. AJ posted a [helpful chart](https://github.com/bitcoin/bitcoin/pull/30347#discussion_r1657886163) that shows how the levels are supposed to be used, and I think it makes perfect sense as a recommendation for what levels to use in new code, even if it doesn't describe how log levels are used in a lot of existing code.\r\n\r\nThis issue is just about making names used in the code match intent of the code, so it may not be best place to discuss bigger topics, but I hope people will open other issues and PRs if there are more improvements that can be made.\r\n\r\n---\r\n\r\nre: https://github.com/bitcoin/bitcoin/issues/30348#issuecomment-2195019443\r\n\r\n> #30347 doesn't seem to actually fix any of the 61 incorrect cases?\r\n\r\nIt fixes them by no longer misusing the name \"Error\" to mean fatal error, and the name \"Warning\" to mean critical condition that requires action from the user. So the logging in those cases is correct, even if it goes against new best practices we are recommending for logging. I think in most or all of those cases, the log messages are older than the recommendations are, so I did not take it upon myself to update them.\r\n\r\n> Maybe have a PR to manually fix the incorrect ones, then a scripted diff to convert everything to the new names?\r\n\r\nIt's not clear to me what you mean by manually fixing the incorrect ones, but I would be happy to go with a different approach if you want to implement it, or specify what you mean by \"fix.\" I provided a pretty detailed rationale for the approach I took in https://github.com/bitcoin/bitcoin/pull/30347#discussion_r1658862564, replying to your other comment (which I appreciate by the way, I do think it would be good to reduce the number of severity levels and the amount of log spam).",
      "created_at" : "2024-06-28T16:39:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/30348#issuecomment-2197288729",
      "id" : 2197288729,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30348",
      "node_id" : "IC_kwDOABII586C9_cZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2197288729/reactions"
      },
      "updated_at" : "2024-06-28T16:39:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2197288729",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
