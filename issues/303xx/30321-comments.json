[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30321).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [maflcko](https://github.com/bitcoin/bitcoin/pull/30321#issuecomment-2183964434), [laanwj](https://github.com/bitcoin/bitcoin/pull/30321#issuecomment-2184047556) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n",
      "created_at" : "2024-06-22T08:51:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30321#issuecomment-2183950215",
      "id" : 2183950215,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30321",
      "node_id" : "IC_kwDOABII586CLG-H",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2183950215/reactions"
      },
      "updated_at" : "2024-06-22T14:06:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2183950215",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "lgtm ACK 07770609afddaa1c730b431c207015f34b3a5f5f\r\n\r\nA benchmark would be nice (for fun), but this looks good either way.",
      "created_at" : "2024-06-22T09:53:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30321#issuecomment-2183964434",
      "id" : 2183964434,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30321",
      "node_id" : "IC_kwDOABII586CLKcS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2183964434/reactions"
      },
      "updated_at" : "2024-06-22T09:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2183964434",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "LGTM ACK 07770609afddaa1c730b431c207015f34b3a5f5f\r\nNice, simple optimization.",
      "created_at" : "2024-06-22T14:06:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30321#issuecomment-2184047556",
      "id" : 2184047556,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30321",
      "node_id" : "IC_kwDOABII586CLevE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2184047556/reactions"
      },
      "updated_at" : "2024-06-22T14:06:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2184047556",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30321#discussion_r1649705033"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30321"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649705033"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure if a `Span<byte>` or string_view is best suited here.  In principle we're dealing with binary data here, not necessarily a string.",
      "commit_id" : "07770609afddaa1c730b431c207015f34b3a5f5f",
      "created_at" : "2024-06-22T14:07:54Z",
      "diff_hunk" : "@@ -634,7 +634,7 @@ void HTTPRequest::WriteHeader(const std::string& hdr, const std::string& value)\n  * Replies must be sent in the main loop in the main http thread,\n  * this cannot be done from worker threads.\n  */\n-void HTTPRequest::WriteReply(int nStatus, const std::string& strReply)\n+void HTTPRequest::WriteReply(int nStatus, const std::string_view strReply)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30321#discussion_r1649705033",
      "id" : 1649705033,
      "line" : 637,
      "node_id" : "PRRC_kwDOABII585iVIBJ",
      "original_commit_id" : "07770609afddaa1c730b431c207015f34b3a5f5f",
      "original_line" : 637,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/httpserver.cpp",
      "position" : 5,
      "pull_request_review_id" : 2133818785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30321",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649705033/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-06-22T14:07:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649705033",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30321#discussion_r1649767869"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30321"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649767869"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the suggestion!\r\n\r\nWhat do you think about the following modification, in order to support `Span<byte>`-based reply?\r\n```diff\r\ndiff --git a/src/httpserver.cpp b/src/httpserver.cpp\r\nindex 54fec59468..adc6040d08 100644\r\n--- a/src/httpserver.cpp\r\n+++ b/src/httpserver.cpp\r\n@@ -634,7 +634,7 @@ void HTTPRequest::WriteHeader(const std::string& hdr, const std::string& value)\r\n  * Replies must be sent in the main loop in the main http thread,\r\n  * this cannot be done from worker threads.\r\n  */\r\n-void HTTPRequest::WriteReply(int nStatus, const std::string_view strReply)\r\n+void HTTPRequest::WriteReply(int nStatus, Span<const std::byte> reply)\r\n {\r\n     assert(!replySent && req);\r\n     if (m_interrupt) {\r\n@@ -643,7 +643,7 @@ void HTTPRequest::WriteReply(int nStatus, const std::string_view strReply)\r\n     // Send event to main http thread to send reply message\r\n     struct evbuffer* evb = evhttp_request_get_output_buffer(req);\r\n     assert(evb);\r\n-    evbuffer_add(evb, strReply.data(), strReply.size());\r\n+    evbuffer_add(evb, reply.data(), reply.size());\r\n     auto req_copy = req;\r\n     HTTPEvent* ev = new HTTPEvent(eventBase, true, [req_copy, nStatus]{\r\n         evhttp_send_reply(req_copy, nStatus, nullptr, nullptr);\r\ndiff --git a/src/httpserver.h b/src/httpserver.h\r\nindex a452465636..1d43c5f3b3 100644\r\n--- a/src/httpserver.h\r\n+++ b/src/httpserver.h\r\n@@ -9,6 +9,8 @@\r\n #include <optional>\r\n #include <string>\r\n \r\n+#include <span.h>\r\n+\r\n namespace util {\r\n class SignalInterrupt;\r\n } // namespace util\r\n@@ -123,12 +125,16 @@ public:\r\n     /**\r\n      * Write HTTP reply.\r\n      * nStatus is the HTTP status code to send.\r\n-     * strReply is the body of the reply. Keep it empty to send a standard message.\r\n+     * reply is the body of the reply. Keep it empty to send a standard message.\r\n      *\r\n      * @note Can be called only once. As this will give the request back to the\r\n      * main thread, do not call any other HTTPRequest methods after calling this.\r\n      */\r\n-    void WriteReply(int nStatus, const std::string_view strReply = \"\");\r\n+    void WriteReply(int nStatus, std::string_view reply = \"\") \r\n+    {\r\n+        WriteReply(nStatus, AsBytes(Span{reply}));\r\n+    }\r\n+    void WriteReply(int nStatus, Span<const std::byte> reply);\r\n };\r\n \r\n /** Get the query parameter value from request uri for a specified key, or std::nullopt if the key\r\n```",
      "commit_id" : "07770609afddaa1c730b431c207015f34b3a5f5f",
      "created_at" : "2024-06-22T18:40:54Z",
      "diff_hunk" : "@@ -634,7 +634,7 @@ void HTTPRequest::WriteHeader(const std::string& hdr, const std::string& value)\n  * Replies must be sent in the main loop in the main http thread,\n  * this cannot be done from worker threads.\n  */\n-void HTTPRequest::WriteReply(int nStatus, const std::string& strReply)\n+void HTTPRequest::WriteReply(int nStatus, const std::string_view strReply)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30321#discussion_r1649767869",
      "id" : 1649767869,
      "in_reply_to_id" : 1649705033,
      "line" : 637,
      "node_id" : "PRRC_kwDOABII585iVXW9",
      "original_commit_id" : "07770609afddaa1c730b431c207015f34b3a5f5f",
      "original_line" : 637,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/httpserver.cpp",
      "position" : 5,
      "pull_request_review_id" : 2133903611,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30321",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649767869/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-06-22T19:13:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649767869",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/9900?v=4",
         "events_url" : "https://api.github.com/users/romanz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/romanz/followers",
         "following_url" : "https://api.github.com/users/romanz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/romanz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/romanz",
         "id" : 9900,
         "login" : "romanz",
         "node_id" : "MDQ6VXNlcjk5MDA=",
         "organizations_url" : "https://api.github.com/users/romanz/orgs",
         "received_events_url" : "https://api.github.com/users/romanz/received_events",
         "repos_url" : "https://api.github.com/users/romanz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/romanz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/romanz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/romanz"
      }
   }
]
