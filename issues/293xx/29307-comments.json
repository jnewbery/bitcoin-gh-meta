[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29307).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29612](https://github.com/bitcoin/bitcoin/pull/29612) (rpc: Optimize serialization and enhance metadata of dumptxoutset output by fjahr)\n* [#27432](https://github.com/bitcoin/bitcoin/pull/27432) (contrib: add tool to convert compact-serialized UTXO set to SQLite database by theStack)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2024-01-24T14:35:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#issuecomment-1908256759",
      "id" : 1908256759,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29307",
      "node_id" : "IC_kwDOABII585xva_3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1908256759/reactions"
      },
      "updated_at" : "2024-05-05T16:41:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1908256759",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--85328a0da195eb286784d51f73fa0af9-->\n\nð§ At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/20819752683</sub>",
      "created_at" : "2024-01-24T14:58:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#issuecomment-1908303442",
      "id" : 1908303442,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29307",
      "node_id" : "IC_kwDOABII585xvmZS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1908303442/reactions"
      },
      "updated_at" : "2024-01-24T14:58:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1908303442",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1465152180"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1465152180"
         }
      },
      "author_association" : "MEMBER",
      "body" : "not sure. `detail_fread` is an implementation detail and thin wrapper, with the goal to simply return the return value of `std::fread`. It should be left for the caller to decide about the error.\r\n\r\nIn any case, if you want to do this, you'd have to apply it to both branches of the `if`. The error message shouldn't differ just because a file is xor'd or not.\r\n\r\nFinally, it would be good to explain whether this is a bugfix or a refactor/belt-and-suspenders. I don't think an error/eof could have occurred if the full `dst.size()` was read. So I don't think this is needed, but I could be wrong. Ideally, there is a unit test showing why the change is needed.",
      "commit_id" : "7c58f6ea4f603b570b7d8532aa9bb59df069d6cb",
      "created_at" : "2024-01-24T15:59:58Z",
      "diff_hunk" : "@@ -4,14 +4,20 @@\n \n #include <span.h>\n #include <streams.h>\n+#include <tinyformat.h>\n+#include <util/syserror.h>\n \n #include <array>\n \n std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n {\n     if (!m_file) throw std::ios_base::failure(\"AutoFile::read: file handle is nullptr\");\n     if (m_xor.empty()) {\n-        return std::fread(dst.data(), 1, dst.size(), m_file);\n+        const auto n = std::fread(dst.data(), 1, dst.size(), m_file);\n+        if (ferror(m_file)) {\n+            throw std::ios_base::failure(strprintf(\"AutoFile::detail_fread: %s\", SysErrorString(errno)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1465152180",
      "id" : 1465152180,
      "line" : 18,
      "node_id" : "PRRC_kwDOABII585XVHK0",
      "original_commit_id" : "7c58f6ea4f603b570b7d8532aa9bb59df069d6cb",
      "original_line" : 18,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : 16,
      "pull_request_review_id" : 1841755517,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1465152180/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-24T15:59:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1465152180",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1465295573"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1465295573"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This assert actually failed in CI (wow!):\r\n\r\nhttps://cirrus-ci.com/task/5586893237125120\r\n\r\n```\r\nRun autofile with args ['/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz', '-runs=1', PosixPath('/ci_container_base/ci/scratch/qa-assets/fuzz_seed_corpus/autofile')]INFO: Running with entropic power schedule (0xFF, 100).\r\nINFO: Seed: 3765617163\r\nINFO: Loaded 1 modules   (547059 inline 8-bit counters): 547059 [0x55cd54dd29b8, 0x55cd54e582ab), \r\nINFO: Loaded 1 PC tables (547059 PCs): 547059 [0x55cd54e582b0,0x55cd556b11e0), \r\nINFO:      535 files found in /ci_container_base/ci/scratch/qa-assets/fuzz_seed_corpus/autofile\r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1041296 bytes\r\nINFO: seed corpus: files: 535 min: 1b max: 1041296b total: 17489928b rss: 106Mb\r\nfuzz: test/fuzz/autofile.cpp:50: auto autofile_fuzz_target(FuzzBufferType)::(anonymous class)::operator()() const: Assertion `auto_file.fclose() == 0' failed.\r\n==18378== ERROR: libFuzzer: deadly signal\r\n    #0 0x55cd5193ab55 in __sanitizer_print_stack_trace (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x1a5fb55) (BuildId: 34c8e9fbac2706ae466ade7d359adebec5d82bcf)\r\n    #1 0x55cd518922fc in fuzzer::PrintStackTrace() (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x19b72fc) (BuildId: 34c8e9fbac2706ae466ade7d359adebec5d82bcf)\r\n    #2 0x55cd51878367 in fuzzer::Fuzzer::CrashCallback() (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x199d367) (BuildId: 34c8e9fbac2706ae466ade7d359adebec5d82bcf)\r\n    #3 0x7fb162f1d8ff  (/lib/x86_64-linux-gnu/libc.so.6+0x428ff) (BuildId: f0b834daa3d05a80967e9ec2f990a1ea71c958fa)\r\n    #4 0x7fb162f7498a in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x9998a) (BuildId: f0b834daa3d05a80967e9ec2f990a1ea71c958fa)\r\n    #5 0x7fb162f1d855 in gsignal (/lib/x86_64-linux-gnu/libc.so.6+0x42855) (BuildId: f0b834daa3d05a80967e9ec2f990a1ea71c958fa)\r\n    #6 0x7fb162f018b6 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x268b6) (BuildId: f0b834daa3d05a80967e9ec2f990a1ea71c958fa)\r\n    #7 0x7fb162f017da  (/lib/x86_64-linux-gnu/libc.so.6+0x267da) (BuildId: f0b834daa3d05a80967e9ec2f990a1ea71c958fa)\r\n    #8 0x7fb162f14185 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x39185) (BuildId: f0b834daa3d05a80967e9ec2f990a1ea71c958fa)\r\n    #9 0x55cd51accacc in autofile_fuzz_target(Span<unsigned char const>)::$_3::operator()() const src/test/fuzz/autofile.cpp:50:17\r\n    #10 0x55cd51accacc in unsigned long CallOneOf<autofile_fuzz_target(Span<unsigned char const>)::$_0, autofile_fuzz_target(Span<unsigned char const>)::$_1, autofile_fuzz_target(Span<unsigned char const>)::$_2, autofile_fuzz_target(Span<unsigned char const>)::$_3, autofile_fuzz_target(Span<unsigned char const>)::$_4, autofile_fuzz_target(Span<unsigned char const>)::$_5>(FuzzedDataProvider&, autofile_fuzz_target(Span<unsigned char const>)::$_0, autofile_fuzz_target(Span<unsigned char const>)::$_1, autofile_fuzz_target(Span<unsigned char const>)::$_2, autofile_fuzz_target(Span<unsigned char const>)::$_3, autofile_fuzz_target(Span<unsigned char const>)::$_4, autofile_fuzz_target(Span<unsigned char const>)::$_5) src/./test/fuzz/util.h:42:27\r\n    #11 0x55cd51accacc in autofile_fuzz_target(Span<unsigned char const>) src/test/fuzz/autofile.cpp:27:9\r\n    #12 0x55cd5204a52c in std::function<void (Span<unsigned char const>)>::operator()(Span<unsigned char const>) const /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/std_function.h:591:9\r\n    #13 0x55cd5204a52c in LLVMFuzzerTestOneInput src/test/fuzz/fuzz.cpp:178:5\r\n    #14 0x55cd51879814 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x199e814) (BuildId: 34c8e9fbac2706ae466ade7d359adebec5d82bcf)\r\n    #15 0x55cd51878f09 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x199df09) (BuildId: 34c8e9fbac2706ae466ade7d359adebec5d82bcf)\r\n    #16 0x55cd5187aaf6 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::vector<fuzzer::SizedFile, std::allocator<fuzzer::SizedFile>>&) (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x199faf6) (BuildId: 34c8e9fbac2706ae466ade7d359adebec5d82bcf)\r\n    #17 0x55cd5187b017 in fuzzer::Fuzzer::Loop(std::vector<fuzzer::SizedFile, std::allocator<fuzzer::SizedFile>>&) (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x19a0017) (BuildId: 34c8e9fbac2706ae466ade7d359adebec5d82bcf)\r\n    #18 0x55cd5186875b in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x198d75b) (BuildId: 34c8e9fbac2706ae466ade7d359adebec5d82bcf)\r\n    #19 0x55cd51892ce6 in main (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x19b7ce6) (BuildId: 34c8e9fbac2706ae466ade7d359adebec5d82bcf)\r\n    #20 0x7fb162f030cf  (/lib/x86_64-linux-gnu/libc.so.6+0x280cf) (BuildId: f0b834daa3d05a80967e9ec2f990a1ea71c958fa)\r\n    #21 0x7fb162f03188 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x28188) (BuildId: f0b834daa3d05a80967e9ec2f990a1ea71c958fa)\r\n    #22 0x55cd5185d624 in _start (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x1982624) (BuildId: 34c8e9fbac2706ae466ade7d359adebec5d82bcf)\r\nNOTE: libFuzzer has rudimentary signal handlers.\r\n      Combine libFuzzer with AddressSanitizer or similar for better crash reports.\r\nSUMMARY: libFuzzer: deadly signal\r\nMS: 0 ; base unit: 0000000000000000000000000000000000000000\r\nartifact_prefix='./'; Test unit written to ./crash-276f4f9d3e6ba98f897bd1082aec7214ca8e4f5d\r\nINFO: Running with entropic power schedule (0xFF, 100).\r\nINFO: Seed: 3765617163\r\nINFO: Loaded 1 modules   (547059 inline 8-bit counters): 547059 [0x55cd54dd29b8, 0x55cd54e582ab), \r\nINFO: Loaded 1 PC tables (547059 PCs): 547059 [0x55cd54e582b0,0x55cd556b11e0), \r\nINFO:      535 files found in /ci_container_base/ci/scratch/qa-assets/fuzz_seed_corpus/autofile\r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1041296 bytes\r\nINFO: seed corpus: files: 535 min: 1b max: 1041296b total: 17489928b rss: 106Mb\r\nfuzz: test/fuzz/autofile.cpp:50: auto autofile_fuzz_target(FuzzBufferType)::(anonymous class)::operator()() const: Assertion `auto_file.fclose() == 0' failed.\r\n==18378== ERROR: libFuzzer: deadly signal\r\n    #0 0x55cd5193ab55 in __sanitizer_print_stack_trace (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x1a5fb55) (BuildId: 34c8e9fbac2706ae466ade7d359adebec5d82bcf)\r\n    #1 0x55cd518922fc in fuzzer::PrintStackTrace() (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x19b72fc) (BuildId: 34c8e9fbac2706ae466ade7d359adebec5d82bcf)\r\n    #2 0x55cd51878367 in fuzzer::Fuzzer::CrashCallback() (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x199d367) (BuildId: 34c8e9fbac2706ae466ade7d359adebec5d82bcf)\r\n    #3 0x7fb162f1d8ff  (/lib/x86_64-linux-gnu/libc.so.6+0x428ff) (BuildId: f0b834daa3d05a80967e9ec2f990a1ea71c958fa)\r\n    #4 0x7fb162f7498a in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x9998a) (BuildId: f0b834daa3d05a80967e9ec2f990a1ea71c958fa)\r\n    #5 0x7fb162f1d855 in gsignal (/lib/x86_64-linux-gnu/libc.so.6+0x42855) (BuildId: f0b834daa3d05a80967e9ec2f990a1ea71c958fa)\r\n    #6 0x7fb162f018b6 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x268b6) (BuildId: f0b834daa3d05a80967e9ec2f990a1ea71c958fa)\r\n    #7 0x7fb162f017da  (/lib/x86_64-linux-gnu/libc.so.6+0x267da) (BuildId: f0b834daa3d05a80967e9ec2f990a1ea71c958fa)\r\n    #8 0x7fb162f14185 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x39185) (BuildId: f0b834daa3d05a80967e9ec2f990a1ea71c958fa)\r\n    #9 0x55cd51accacc in autofile_fuzz_target(Span<unsigned char const>)::$_3::operator()() const src/test/fuzz/autofile.cpp:50:17\r\n    #10 0x55cd51accacc in unsigned long CallOneOf<autofile_fuzz_target(Span<unsigned char const>)::$_0, autofile_fuzz_target(Span<unsigned char const>)::$_1, autofile_fuzz_target(Span<unsigned char const>)::$_2, autofile_fuzz_target(Span<unsigned char const>)::$_3, autofile_fuzz_target(Span<unsigned char const>)::$_4, autofile_fuzz_target(Span<unsigned char const>)::$_5>(FuzzedDataProvider&, autofile_fuzz_target(Span<unsigned char const>)::$_0, autofile_fuzz_target(Span<unsigned char const>)::$_1, autofile_fuzz_target(Span<unsigned char const>)::$_2, autofile_fuzz_target(Span<unsigned char const>)::$_3, autofile_fuzz_target(Span<unsigned char const>)::$_4, autofile_fuzz_target(Span<unsigned char const>)::$_5) src/./test/fuzz/util.h:42:27\r\n    #11 0x55cd51accacc in autofile_fuzz_target(Span<unsigned char const>) src/test/fuzz/autofile.cpp:27:9\r\n    #12 0x55cd5204a52c in std::function<void (Span<unsigned char const>)>::operator()(Span<unsigned char const>) const /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/std_function.h:591:9\r\n    #13 0x55cd5204a52c in LLVMFuzzerTestOneInput src/test/fuzz/fuzz.cpp:178:5\r\n    #14 0x55cd51879814 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x199e814) (BuildId: 34c8e9fbac2706ae466ade7d359adebec5d82bcf)\r\n    #15 0x55cd51878f09 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x199df09) (BuildId: 34c8e9fbac2706ae466ade7d359adebec5d82bcf)\r\n    #16 0x55cd5187aaf6 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::vector<fuzzer::SizedFile, std::allocator<fuzzer::SizedFile>>&) (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x199faf6) (BuildId: 34c8e9fbac2706ae466ade7d359adebec5d82bcf)\r\n    #17 0x55cd5187b017 in fuzzer::Fuzzer::Loop(std::vector<fuzzer::SizedFile, std::allocator<fuzzer::SizedFile>>&) (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x19a0017) (BuildId: 34c8e9fbac2706ae466ade7d359adebec5d82bcf)\r\n    #18 0x55cd5186875b in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x198d75b) (BuildId: 34c8e9fbac2706ae466ade7d359adebec5d82bcf)\r\n    #19 0x55cd51892ce6 in main (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x19b7ce6) (BuildId: 34c8e9fbac2706ae466ade7d359adebec5d82bcf)\r\n    #20 0x7fb162f030cf  (/lib/x86_64-linux-gnu/libc.so.6+0x280cf) (BuildId: f0b834daa3d05a80967e9ec2f990a1ea71c958fa)\r\n    #21 0x7fb162f03188 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x28188) (BuildId: f0b834daa3d05a80967e9ec2f990a1ea71c958fa)\r\n    #22 0x55cd5185d624 in _start (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x1982624) (BuildId: 34c8e9fbac2706ae466ade7d359adebec5d82bcf)\r\nNOTE: libFuzzer has rudimentary signal handlers.\r\n      Combine libFuzzer with AddressSanitizer or similar for better crash reports.\r\nSUMMARY: libFuzzer: deadly signal\r\nMS: 0 ; base unit: 0000000000000000000000000000000000000000\r\nartifact_prefix='./'; Test unit written to ./crash-276f4f9d3e6ba98f897bd1082aec7214ca8e4f5d\r\nTarget ['/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz', '-runs=1', PosixPath('/ci_container_base/ci/scratch/qa-assets/fuzz_seed_corpus/autofile')] failed with exit code 77\r\n```\r\n\r\nNo base64 of the unit in the output, I guess I cannot access `./crash-276f4f9d3e6ba98f897bd1082aec7214ca8e4f5d` and I cannot reproduce by running `FUZZ=autofile ./src/test/fuzz/fuzz -runs=1000000 .../qa-assets/fuzz_seed_corpus/autofile` locally. Maybe the CI machine ran out of disk space?",
      "commit_id" : "7c58f6ea4f603b570b7d8532aa9bb59df069d6cb",
      "created_at" : "2024-01-24T17:18:04Z",
      "diff_hunk" : "@@ -47,7 +47,7 @@ FUZZ_TARGET(autofile)\n                 }\n             },\n             [&] {\n-                auto_file.fclose();\n+                assert(auto_file.fclose() == 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1465295573",
      "id" : 1465295573,
      "line" : 50,
      "node_id" : "PRRC_kwDOABII585XVqLV",
      "original_commit_id" : "7c58f6ea4f603b570b7d8532aa9bb59df069d6cb",
      "original_line" : 50,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/test/fuzz/autofile.cpp",
      "position" : 5,
      "pull_request_review_id" : 1841963492,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1465295573/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-24T17:18:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1465295573",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1465997866"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1465997866"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I realized that `auto_file` used in this fuzz test is not associated with a regular file on the filesystem, but with a \"cookie\" returned by `fuzzed_file_provider.open()` returned by `fopencookie(3)` which uses a custom close function `FuzzedFileProvider::close()` which can arbitrarily return `-1`:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/207220ce8b767d8efdb5abf042ecf23d846ded73/src/test/fuzz/util.cpp#L352\r\n\r\nchanged this to ignore the return value of `auto_file.fclose()`.",
      "commit_id" : "55439903212dcee6af09da7393a41e3754501b37",
      "created_at" : "2024-01-25T08:22:13Z",
      "diff_hunk" : "@@ -47,7 +47,7 @@ FUZZ_TARGET(autofile)\n                 }\n             },\n             [&] {\n-                auto_file.fclose();\n+                assert(auto_file.fclose() == 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1465997866",
      "id" : 1465997866,
      "in_reply_to_id" : 1465295573,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585XYVoq",
      "original_commit_id" : "7c58f6ea4f603b570b7d8532aa9bb59df069d6cb",
      "original_line" : 50,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/test/fuzz/autofile.cpp",
      "position" : null,
      "pull_request_review_id" : 1843087352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1465997866/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-25T08:22:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1465997866",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1466018964"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1466018964"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Alright, moved to the caller.\r\n\r\nIMO this is a bugfix, but I am not 100% sure either. Might as well be viewed as \"belt-and-suspenders\". What is certain is that it can't hurt even if there is never an error on any platform if `detail_fread(dst) == dst.size()`. A unit test would require simulating an IO error under the `fread(3)` call and identically behaving `fread(3)` on all platforms.",
      "commit_id" : "55439903212dcee6af09da7393a41e3754501b37",
      "created_at" : "2024-01-25T08:40:10Z",
      "diff_hunk" : "@@ -4,14 +4,20 @@\n \n #include <span.h>\n #include <streams.h>\n+#include <tinyformat.h>\n+#include <util/syserror.h>\n \n #include <array>\n \n std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n {\n     if (!m_file) throw std::ios_base::failure(\"AutoFile::read: file handle is nullptr\");\n     if (m_xor.empty()) {\n-        return std::fread(dst.data(), 1, dst.size(), m_file);\n+        const auto n = std::fread(dst.data(), 1, dst.size(), m_file);\n+        if (ferror(m_file)) {\n+            throw std::ios_base::failure(strprintf(\"AutoFile::detail_fread: %s\", SysErrorString(errno)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1466018964",
      "id" : 1466018964,
      "in_reply_to_id" : 1465152180,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585XYayU",
      "original_commit_id" : "7c58f6ea4f603b570b7d8532aa9bb59df069d6cb",
      "original_line" : 18,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : null,
      "pull_request_review_id" : 1843121558,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1466018964/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-25T08:40:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1466018964",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't think any care close-check needs to be done when reading from a file.\r\n\r\nSo what about removing the `write` method from `AutoFile`, and introduce a new derived class to add it back. This class could `Assume` that the file was flushed/closed before the destructor is called?",
      "created_at" : "2024-01-29T11:32:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#issuecomment-1914506129",
      "id" : 1914506129,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29307",
      "node_id" : "IC_kwDOABII585yHQuR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914506129/reactions"
      },
      "updated_at" : "2024-01-29T11:32:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914506129",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I don't think any care close-check needs to be done when reading from a file.\r\n\r\nThat is my understanding too.\r\n \r\n> So what about removing the `write` method from `AutoFile`, and introduce a new derived class to add it back. This class could `Assume` that the file was flushed/closed before the destructor is called?\r\n\r\n`Assume` is more for code correctness, not for external errors (like IO error). If it does not fail during testing and on CI, that does not mean IO errors are absent and will not occur on the users' machines. Given that `Assume()` is removed from production builds, it still means that file corruption could remain unnoticed on live environments, like now on `master`.",
      "created_at" : "2024-02-04T10:48:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#issuecomment-1925699470",
      "id" : 1925699470,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29307",
      "node_id" : "IC_kwDOABII585yx9eO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1925699470/reactions"
      },
      "updated_at" : "2024-02-04T10:48:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1925699470",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > This class could `Assume` that the file was flushed/closed before the destructor is called?\r\n> \r\n> `Assume` is more for code correctness, not for external errors (like IO error).\r\n\r\nThe assumption would be that the close was called *before* the destructor is called. This is a code correctness question and seems like the perfect fit for Assume. That is, if the Assume fails, the code was missing a close, and the code must be changed to fix the internal bug. The Assume does not in any way check for IO errors.",
      "created_at" : "2024-02-05T09:45:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#issuecomment-1926582804",
      "id" : 1926582804,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29307",
      "node_id" : "IC_kwDOABII585y1VIU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1926582804/reactions"
      },
      "updated_at" : "2024-02-05T09:45:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1926582804",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Then I misunderstood this:\r\n\r\n> This class could Assume that the file was flushed/closed before the destructor is called\r\n\r\nHow?\r\n\r\n",
      "created_at" : "2024-02-05T15:17:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#issuecomment-1927234971",
      "id" : 1927234971,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29307",
      "node_id" : "IC_kwDOABII585y30Wb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1927234971/reactions"
      },
      "updated_at" : "2024-02-05T15:17:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1927234971",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "AutoFile holds a file, which will be nullptr when it is closed. So if the file is nullptr, then it can be assumed to be flushed.",
      "created_at" : "2024-02-05T15:34:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#issuecomment-1927271889",
      "id" : 1927271889,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29307",
      "node_id" : "IC_kwDOABII585y39XR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1927271889/reactions"
      },
      "updated_at" : "2024-02-05T15:34:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1927271889",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "How/when would the file be closed?",
      "created_at" : "2024-02-05T16:40:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#issuecomment-1927420896",
      "id" : 1927420896,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29307",
      "node_id" : "IC_kwDOABII585y4hvg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1927420896/reactions"
      },
      "updated_at" : "2024-02-05T16:40:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1927420896",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> How/when would the file be closed?\r\n\r\nAn `AutoFile` can be closed by calling the `fclose()` method in the code.",
      "created_at" : "2024-02-06T08:00:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#issuecomment-1928966222",
      "id" : 1928966222,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29307",
      "node_id" : "IC_kwDOABII585y-bBO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1928966222/reactions"
      },
      "updated_at" : "2024-02-06T08:00:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1928966222",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok, the users of the class then have to explicitly close. That is 1.4. from the OP, I elaborated it with more words.",
      "created_at" : "2024-02-06T09:45:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#issuecomment-1929136430",
      "id" : 1929136430,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29307",
      "node_id" : "IC_kwDOABII585y_Eku",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1929136430/reactions"
      },
      "updated_at" : "2024-02-06T09:45:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1929136430",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--85328a0da195eb286784d51f73fa0af9-->\n\nð§ At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/20850328376</sub>",
      "created_at" : "2024-03-12T15:42:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#issuecomment-1991964579",
      "id" : 1991964579,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29307",
      "node_id" : "IC_kwDOABII5852uvej",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1991964579/reactions"
      },
      "updated_at" : "2024-03-12T15:42:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1991964579",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Seems like there is some discussion in the description that is a better fit for a brainstorming issue.",
      "created_at" : "2024-04-09T15:43:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#issuecomment-2045516340",
      "id" : 2045516340,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29307",
      "node_id" : "IC_kwDOABII58557Bo0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2045516340/reactions"
      },
      "updated_at" : "2024-04-09T15:43:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2045516340",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Converted to draft due to failing CI and inactivity",
      "created_at" : "2024-04-23T06:50:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#issuecomment-2071544356",
      "id" : 2071544356,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29307",
      "node_id" : "IC_kwDOABII5857eUIk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2071544356/reactions"
      },
      "updated_at" : "2024-04-23T06:50:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2071544356",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`5543990321...1fa61d9edc`: rebase and log a message from `~AutoFile()` if closing fails and terminate the program.\r\n\r\nReady for review. I think this would be a strict improvement over what we have now in `master` - a silent ignoring of a possible file corruption.",
      "created_at" : "2024-05-10T10:28:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#issuecomment-2104363831",
      "id" : 2104363831,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29307",
      "node_id" : "IC_kwDOABII5859bgs3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2104363831/reactions"
      },
      "updated_at" : "2024-05-10T10:36:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2104363831",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@vasild CI seems unhappy.",
      "created_at" : "2024-05-10T16:59:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#issuecomment-2104945955",
      "id" : 2104945955,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29307",
      "node_id" : "IC_kwDOABII5859du0j",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2104945955/reactions"
      },
      "updated_at" : "2024-05-10T16:59:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2104945955",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed the CI!",
      "created_at" : "2024-05-14T09:51:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#issuecomment-2109769504",
      "id" : 2109769504,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29307",
      "node_id" : "IC_kwDOABII5859wIcg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2109769504/reactions"
      },
      "updated_at" : "2024-05-14T09:51:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2109769504",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1599815167"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1599815167"
         }
      },
      "author_association" : "MEMBER",
      "body" : "de23848eed5437f5e4dc6ccdc38b40cc58738ead: I still don't understand this. Why would fread succeed to read the requested number of bytes, but then mark the stream with an error? If the goal is to somehow detect errors after the read succeeded, I am not sure this should be a goal. Otherwise, it would be good to explain what real user-facing bug this fixes or introduces.\r\n\r\nEither this is a refactor, in which case it seems pointless, or it is a behavior change, in which case it needs to explain why it beneficial and correct.",
      "commit_id" : "de23848eed5437f5e4dc6ccdc38b40cc58738ead",
      "created_at" : "2024-05-14T10:57:05Z",
      "diff_hunk" : "@@ -23,8 +25,9 @@ std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n \n void AutoFile::read(Span<std::byte> dst)\n {\n-    if (detail_fread(dst) != dst.size()) {\n-        throw std::ios_base::failure(feof() ? \"AutoFile::read: end of file\" : \"AutoFile::read: fread failed\");\n+    if (detail_fread(dst) != dst.size() || ferror(m_file)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1599815167",
      "id" : 1599815167,
      "line" : 28,
      "node_id" : "PRRC_kwDOABII585fWz3_",
      "original_commit_id" : "de23848eed5437f5e4dc6ccdc38b40cc58738ead",
      "original_line" : 28,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : 15,
      "pull_request_review_id" : 2055001995,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1599815167/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-14T10:57:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1599815167",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1599959087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1599959087"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This was somewhat answered in https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1465152180 above but let me elaborate - the thing that prompted me to do this change is this text from the `fread(3)` manual page:\r\n\r\n> The function fread() does not distinguish between end-of-file and error,\r\n> and callers must use feof(3) and ferror(3) to determine which occurred.\r\n\r\nI think checking for `ferror(3)` after `fread(3)` is a kind of harmless \"belt-and-suspenders\". If you are sure that if `detail_fread(dst) == dst.size()` then `ferror(m_file)` will always be `false` or feel strongly against this then I could drop the commit de23848eed `util: check for error after reading from a file`.",
      "commit_id" : "de23848eed5437f5e4dc6ccdc38b40cc58738ead",
      "created_at" : "2024-05-14T12:39:28Z",
      "diff_hunk" : "@@ -23,8 +25,9 @@ std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n \n void AutoFile::read(Span<std::byte> dst)\n {\n-    if (detail_fread(dst) != dst.size()) {\n-        throw std::ios_base::failure(feof() ? \"AutoFile::read: end of file\" : \"AutoFile::read: fread failed\");\n+    if (detail_fread(dst) != dst.size() || ferror(m_file)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1599959087",
      "id" : 1599959087,
      "in_reply_to_id" : 1599815167,
      "line" : 28,
      "node_id" : "PRRC_kwDOABII585fXXAv",
      "original_commit_id" : "de23848eed5437f5e4dc6ccdc38b40cc58738ead",
      "original_line" : 28,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : 15,
      "pull_request_review_id" : 2055243360,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1599959087/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-14T12:39:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1599959087",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1601592294"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1601592294"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure I understand this change either. This seems to be mixing the third alternative in the pull request description with the approach you wanted to take?\r\n\r\n> Defeats the purpose of a RAII wrapper for FILE* which automatically closes the file when it goes out of scope and there are a lot of users of AutoFile.",
      "commit_id" : "de23848eed5437f5e4dc6ccdc38b40cc58738ead",
      "created_at" : "2024-05-15T12:54:07Z",
      "diff_hunk" : "@@ -213,6 +218,7 @@ bool DumpMempool(const CTxMemPool& pool, const fs::path& dump_path, FopenFn mock\n                   fs::file_size(dump_path));\n     } catch (const std::exception& e) {\n         LogInfo(\"Failed to dump mempool: %s. Continuing anyway.\\n\", e.what());\n+        (void)file.fclose();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1601592294",
      "id" : 1601592294,
      "line" : 221,
      "node_id" : "PRRC_kwDOABII585fdlvm",
      "original_commit_id" : "f9cf6b516b796461feb059729d2ab3737ad01ccc",
      "original_line" : 221,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/kernel/mempool_persist.cpp",
      "position" : 34,
      "pull_request_review_id" : 2057928541,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1601592294/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-15T12:54:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1601592294",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1611668338"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1611668338"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It is best if all users of `AutoFile` explicitly call the `fclose()` method and check that it succeeds (option 3. from PR description). This is not feasible because there are many users of `AutoFile`. However, some of those users already do call the `fclose()` method explicitly. For those users it is easy and I added checks whether `fclose()` succeeds. `DumpMempool()` is such a user and the change is:\r\n\r\n```diff\r\n             throw std::runtime_error(\"FileCommit failed\");\r\n-        file.fclose();           \r\n+        if (file.fclose() != 0) {    \r\n+            throw std::runtime_error(\r\n+                strprintf(\"Error closing %s: %s\", fs::PathToString(file_fspath), SysErrorString(errno)));\r\n+        }\r\n         if (!RenameOver(dump_path + \".new\", dump_path)) {\r\n```\r\n\r\nFor consistency in `DumpMempool()` I changed all code paths in that function to explicitly call `fclose()`. There are two codepaths and this added `(void)file.fclose();` is the other one. I ignore the return value because this is already failure handling and the function is going to return `false`. I didn't want to do something like \"while handling error1, error2 occurred\".",
      "commit_id" : "de23848eed5437f5e4dc6ccdc38b40cc58738ead",
      "created_at" : "2024-05-23T13:11:26Z",
      "diff_hunk" : "@@ -213,6 +218,7 @@ bool DumpMempool(const CTxMemPool& pool, const fs::path& dump_path, FopenFn mock\n                   fs::file_size(dump_path));\n     } catch (const std::exception& e) {\n         LogInfo(\"Failed to dump mempool: %s. Continuing anyway.\\n\", e.what());\n+        (void)file.fclose();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1611668338",
      "id" : 1611668338,
      "in_reply_to_id" : 1601592294,
      "line" : 221,
      "node_id" : "PRRC_kwDOABII585gEBty",
      "original_commit_id" : "f9cf6b516b796461feb059729d2ab3737ad01ccc",
      "original_line" : 221,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/kernel/mempool_persist.cpp",
      "position" : 34,
      "pull_request_review_id" : 2073928975,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1611668338/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-23T13:11:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1611668338",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-05-23T16:47:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#issuecomment-2127623122",
      "id" : 2127623122,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29307",
      "node_id" : "IC_kwDOABII585-0PPS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2127623122/reactions"
      },
      "updated_at" : "2024-05-23T16:47:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2127623122",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1612065514"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1612065514"
         }
      },
      "author_association" : "MEMBER",
      "body" : "not sure about unconditionally crashing the node on any failure here. This may or may not be an issue, so the call site will have to decide about this.\r\n\r\nFor example, If an RPC user dumps the mempool to an external (corrupt) USB thumb drive, a failure shouldn't crash the node, but notify the user over the RPC.\r\n\r\nAlso, I am not sure about involving logging in this low-level code. Logging may not be set up, so this may never be printed before the crash.\r\n\r\nAlso, I am not sure about the log message. It just says that there was an error, but not whose fault it was or what should be done about it.\r\n\r\nA better solution overall may be to just call `if (m_was_written) Assume(IsNull());`. This should highlight all violating call sites during CI, because the test should be deterministic. (If there is a code path that is not deterministically tested, all hopes are lost anyway, and I don't think the solution should be to crash the users node completely and without considering the context?)",
      "commit_id" : "de23848eed5437f5e4dc6ccdc38b40cc58738ead",
      "created_at" : "2024-05-23T17:22:44Z",
      "diff_hunk" : "@@ -383,26 +385,42 @@ class BitStreamWriter\n  *\n  * Will automatically close the file when it goes out of scope if not null.\n  * If you're returning the file pointer, return file.release().\n- * If you need to close the file early, use file.fclose() instead of fclose(file).\n+ * If you need to close the file early, use autofile.fclose() instead of fclose(underlying_FILE).\n+ *\n+ * @note If the file has been written to, then avoid relying on the destructor\n+ * to close the file. It is better to instead explicitly close the file using\n+ * the `fclose()` method, check if it returns an error and treat such an error\n+ * as if the `write()` method has failed. The OS's `fclose(3)` may fail to flush\n+ * to disk data that has been previously written, rendering the file corrupt.\n+ * There is no way to signal a failure from the destructor to the caller, thus\n+ * this destructor will try to close the file and if an error occurs, it will\n+ * log a message and terminate the program.\n  */\n class AutoFile\n {\n protected:\n     std::FILE* m_file;\n     std::vector<std::byte> m_xor;\n+    bool m_was_written{false};\n \n public:\n     explicit AutoFile(std::FILE* file, std::vector<std::byte> data_xor={}) : m_file{file}, m_xor{std::move(data_xor)} {}\n \n-    ~AutoFile() { fclose(); }\n+    ~AutoFile()\n+    {\n+        if (fclose() != 0 && m_was_written) {\n+            LogPrintLevel(BCLog::ALL, BCLog::Level::Error, \"Error closing file: %s\\n\", SysErrorString(errno));\n+            std::abort();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1612065514",
      "id" : 1612065514,
      "line" : 413,
      "node_id" : "PRRC_kwDOABII585gFirq",
      "original_commit_id" : "de23848eed5437f5e4dc6ccdc38b40cc58738ead",
      "original_line" : 413,
      "original_position" : 44,
      "original_start_line" : 409,
      "path" : "src/streams.h",
      "position" : 44,
      "pull_request_review_id" : 2074608095,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1612065514/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 409,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-23T17:22:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1612065514",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1612068360"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1612068360"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, now I see this is required, because otherwise the node would crash on this error instead of continuing with the current code, if this was missing?\r\n\r\nNot sure this is desirable, see also https://github.com/bitcoin/bitcoin/pull/29307/files#r1612065514",
      "commit_id" : "de23848eed5437f5e4dc6ccdc38b40cc58738ead",
      "created_at" : "2024-05-23T17:25:26Z",
      "diff_hunk" : "@@ -213,6 +218,7 @@ bool DumpMempool(const CTxMemPool& pool, const fs::path& dump_path, FopenFn mock\n                   fs::file_size(dump_path));\n     } catch (const std::exception& e) {\n         LogInfo(\"Failed to dump mempool: %s. Continuing anyway.\\n\", e.what());\n+        (void)file.fclose();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1612068360",
      "id" : 1612068360,
      "in_reply_to_id" : 1601592294,
      "line" : 221,
      "node_id" : "PRRC_kwDOABII585gFjYI",
      "original_commit_id" : "f9cf6b516b796461feb059729d2ab3737ad01ccc",
      "original_line" : 221,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/kernel/mempool_persist.cpp",
      "position" : 34,
      "pull_request_review_id" : 2074612715,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1612068360/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-23T17:25:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1612068360",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1612076482"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1612076482"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> If you are sure that if detail_fread(dst) == dst.size() then ferror(m_file) will always be false or feel strongly against this then I could drop the commit https://github.com/bitcoin/bitcoin/commit/de23848eed5437f5e4dc6ccdc38b40cc58738ead util: check for error after reading from a file.\r\n\r\nI don't feel strongly in one way or another. I am just saying that with the currently available information, it is not possible to confidently review this and know it is a good change. At a minimum, it should be clear whether this is a refactor or a behavior change, and what user-facing bug this could possibly prevent or fix. (I can't think of one, but maybe I am missing something?)",
      "commit_id" : "de23848eed5437f5e4dc6ccdc38b40cc58738ead",
      "created_at" : "2024-05-23T17:32:46Z",
      "diff_hunk" : "@@ -23,8 +25,9 @@ std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n \n void AutoFile::read(Span<std::byte> dst)\n {\n-    if (detail_fread(dst) != dst.size()) {\n-        throw std::ios_base::failure(feof() ? \"AutoFile::read: end of file\" : \"AutoFile::read: fread failed\");\n+    if (detail_fread(dst) != dst.size() || ferror(m_file)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1612076482",
      "id" : 1612076482,
      "in_reply_to_id" : 1599815167,
      "line" : 28,
      "node_id" : "PRRC_kwDOABII585gFlXC",
      "original_commit_id" : "de23848eed5437f5e4dc6ccdc38b40cc58738ead",
      "original_line" : 28,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : 15,
      "pull_request_review_id" : 2074627478,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1612076482/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-23T17:32:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1612076482",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1647059893"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1647059893"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Well, it is pretty much obvious that checking for an error after read is either:\r\n\r\n* a noop, if the read could have never failed because it managed to read as many bytes as requested or\r\n* a bug fix where a read error was ignored before the fix\r\n\r\nso this is a safe change (it does not break anything), possibly fixing a bug. Given that you keep pushing against this I will drop this commit in the hopes to move this PR forward.",
      "commit_id" : "de23848eed5437f5e4dc6ccdc38b40cc58738ead",
      "created_at" : "2024-06-20T07:00:29Z",
      "diff_hunk" : "@@ -23,8 +25,9 @@ std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n \n void AutoFile::read(Span<std::byte> dst)\n {\n-    if (detail_fread(dst) != dst.size()) {\n-        throw std::ios_base::failure(feof() ? \"AutoFile::read: end of file\" : \"AutoFile::read: fread failed\");\n+    if (detail_fread(dst) != dst.size() || ferror(m_file)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1647059893",
      "id" : 1647059893,
      "in_reply_to_id" : 1599815167,
      "line" : 28,
      "node_id" : "PRRC_kwDOABII585iLCO1",
      "original_commit_id" : "de23848eed5437f5e4dc6ccdc38b40cc58738ead",
      "original_line" : 28,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : 15,
      "pull_request_review_id" : 2129580372,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1647059893/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-06-20T07:00:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1647059893",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1647069077"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1647069077"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, I don't understand why a \"read error was ignored before the fix\" and why \"this is a safe change (it does not break anything)\". For example, if this was hit on a filesystem that stored a block file, which was fully and successfully read, but then return an error (for an unknown reason), this would mean that for a user where the program previously worked fine without any issues, is now unusable (for an unknown reason).\r\n\r\n",
      "commit_id" : "de23848eed5437f5e4dc6ccdc38b40cc58738ead",
      "created_at" : "2024-06-20T07:08:39Z",
      "diff_hunk" : "@@ -23,8 +25,9 @@ std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n \n void AutoFile::read(Span<std::byte> dst)\n {\n-    if (detail_fread(dst) != dst.size()) {\n-        throw std::ios_base::failure(feof() ? \"AutoFile::read: end of file\" : \"AutoFile::read: fread failed\");\n+    if (detail_fread(dst) != dst.size() || ferror(m_file)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29307#discussion_r1647069077",
      "id" : 1647069077,
      "in_reply_to_id" : 1599815167,
      "line" : 28,
      "node_id" : "PRRC_kwDOABII585iLEeV",
      "original_commit_id" : "de23848eed5437f5e4dc6ccdc38b40cc58738ead",
      "original_line" : 28,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : 15,
      "pull_request_review_id" : 2129595246,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1647069077/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-06-20T07:08:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1647069077",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   }
]
