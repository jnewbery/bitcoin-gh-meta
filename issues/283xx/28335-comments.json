[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [theuni](https://github.com/bitcoin/bitcoin/pull/28335#issuecomment-1699272879) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28368](https://github.com/bitcoin/bitcoin/pull/28368) (Fee Estimator updates from Validation Interface/Cschedular thread by ismaelsadeeq)\n* [#28366](https://github.com/bitcoin/bitcoin/pull/28366) (Fix waste calculation in SelectionResult by murchandamus)\n* [#26711](https://github.com/bitcoin/bitcoin/pull/26711) (validate package transactions with their in-package ancestor sets by glozow)\n* [#26152](https://github.com/bitcoin/bitcoin/pull/26152) (Bump unconfirmed ancestor transactions to target feerate by murchandamus)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-08-24T05:46:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28335#issuecomment-1691040635",
      "id" : 1691040635,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28335",
      "node_id" : "IC_kwDOABII585kyzt7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1691040635/reactions"
      },
      "updated_at" : "2023-08-31T19:16:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1691040635",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This is a pretty big change, but looking over it, it seems all straightforward and mechanical, and should not be very hard to review.\r\n\r\nI'd be interested in opinions from developers who work more with closely with mempool code about whether this improves the mempool code, or if it creates any issues.\r\n\r\nMy opinion is would be that if this improves mempool code it should be merged, and if it makes mempool code more complicated or harder to maintain, it should not be merged.\r\n\r\nI don't think the stated goals of this PR are very compelling on their own if they are just about speeding up compilation times, or making it easier to compile the kernel library and kernel applications with different versions of boost. (I doubt there are a lot of applications that would opt for using multiple versions of boost in the same build, and if there are it would seem more straightforward for them to put an #include boundary between their application code and libbitcoin_kernel than would be is for this PR to put a boundary between mempool code and the rest of the kernel.)\r\n\r\nBut despite the large diff and long description, the changes in the PR do seem pretty straightforward, so I don't think the benefits need to be that big to justify the changes.",
      "created_at" : "2023-08-29T16:02:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28335#issuecomment-1697740405",
      "id" : 1697740405,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28335",
      "node_id" : "IC_kwDOABII585lMXZ1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1697740405/reactions"
      },
      "updated_at" : "2023-08-29T16:02:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1697740405",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. I looked at an early version of this and thought generally the same: it's mostly mechanical and not too bad to review.\r\n\r\n> My opinion is would be that if this improves mempool code it should be merged, and if it makes mempool code more complicated or harder to maintain, it should not be merged.\r\n\r\nGenerally agree. I'd also like to hear from some mempool folks. @glozow ?\r\n\r\n> making it easier to compile the kernel library and kernel applications with different versions of boost. (I doubt there are a lot of applications that would opt for using multiple versions of boost in the same build, and if there are it would seem more straightforward for them to put an #include boundary between their application code and libbitcoin_kernel than would be is for this PR to put a boundary between mempool code and the rest of the kernel.)\r\n\r\nI think this glosses over the larger result of this work: boost is now not a requirement for using libbitcoinkernel _at all_. It removes our _last_ external dependency. That's a huge achievement imo. Barring us vendoring Boost, it's the difference between: \"take this lib and build a hello world app in your point-and-click IDE\" to \"use this docker image which includes our recommended version of boost headers to build from a script\". I know, I know, the latter is an exaggeration and wouldn't be the end of the world. But without boost, as-is right now, we'd be able to ship a libbitcoinkernel that depends on only [these headers](https://github.com/theuni/bitcoin/commit/60da4fa6190e3a85d094f97dc8e578aeabcd22bf#diff-4cb884d03ebb901069e4ee5de5d02538c40dd9b39919c615d8eaa9d364bbbd77R1002-R1096) (though obviously paring down that list is a next step) and nothing from the outside world. To me that's very significant.\r\n\r\n> But despite the large diff and long description, the changes in the PR do seem pretty straightforward, so I don't think the benefits need to be that big to justify the changes.\r\n\r\n+1 though as stated above, to me the benefits _are_ that big :)",
      "created_at" : "2023-08-30T14:15:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28335#issuecomment-1699272879",
      "id" : 1699272879,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28335",
      "node_id" : "IC_kwDOABII585lSNiv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1699272879/reactions"
      },
      "updated_at" : "2023-08-30T14:15:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1699272879",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "PR title is misleading btw. Boost is not removed from the kernel, it's removed from the kernel's api.\r\n\r\nI think conceptually [this is the commit](https://github.com/bitcoin/bitcoin/pull/28335/commits/fd49dc99398a3ec331f393f877ec9ae804373043) that really demonstrates the change here: `bitcoin-chainstate` no longer has any external dependencies.",
      "created_at" : "2023-08-30T14:26:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28335#issuecomment-1699290632",
      "id" : 1699290632,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28335",
      "node_id" : "IC_kwDOABII585lSR4I",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1699290632/reactions"
      },
      "updated_at" : "2023-08-30T14:26:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1699290632",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think this glosses over the larger result of this work: boost is now not a requirement for using libbitcoinkernel _at all_.\r\n\r\nYes this is a distinction I glossed over and didn't think much about. With this PR, boost is still a requirement for building libbitcoinkernel, but not a requirement for using it.\r\n\r\nBut I don't understand what the big advantage is (other than the ones already mentioned about speeding up build times or mixing versions of boost). And I don't undestand or what you are saying about the docker image and IDE. To my mind there are two type of developers who might want to use libbitcoinkernel:\r\n\r\n1. Developers who will want to use a packaged version of libbitcoinkernel in the form of a vcpkg, conan, nix, or wherever other package.\r\n2. Developers who will take a more DIY approach and put libbitcoinkernel in a vendor branch or monorepo or something like that.\r\n\r\nThe effect of this PR seems negligible in both of this cases, probably resulting in literal 1-line change like fd49dc99398a3ec331f393f877ec9ae804373043 removing a path from the include list.\r\n\r\nSo I'm guessing maybe the thing you are enthusiastic about is supporting a third type of developer who (1) doesn't want to use a package and (2) doesn't want to build from source, but instead wants to download a tarball containing a precompiled libbitcoinkernel library binary and some headers, and use that. But the difference is pretty small in this case too, no? Without this PR the tarball needs to contain a few boost header files, and with this PR, it doesn't.\r\n\r\nIn any case, I'm happy about the benefits of this PR, but just think the main consideration here should be whether it improves the mempool code or not, and glad to see glozow had some suggestions for simplifying it.",
      "created_at" : "2023-08-30T16:41:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28335#issuecomment-1699514484",
      "id" : 1699514484,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28335",
      "node_id" : "IC_kwDOABII585lTIh0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1699514484/reactions"
      },
      "updated_at" : "2023-08-30T16:41:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1699514484",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> In any case, I'm happy about the benefits of this PR, but just think the main consideration here should be whether it improves the mempool code or not, and glad to see glozow had some suggestions for simplifying it.\r\n\r\nI think we should leave it at this. I'll admit to complete tunnel-vision on this particular boost removal. It's been ~an obsession~ a goal of mine for long enough that I'm probably too biased to judge the code changes required for it. And as you said, I don't think i need to belabor that point anyway when there's other merit to the changes.\r\n\r\n@glozow thanks for taking a look!  Seems getting rid of some of the direct uses of `mapTx` would be a nice cleanup even outside of this PR?",
      "created_at" : "2023-08-30T17:12:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28335#issuecomment-1699556296",
      "id" : 1699556296,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28335",
      "node_id" : "IC_kwDOABII585lTSvI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1699556296/reactions"
      },
      "updated_at" : "2023-08-30T17:12:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1699556296",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Re https://github.com/bitcoin/bitcoin/pull/28335#pullrequestreview-1603077161\r\n\r\nThank you for taking so much consideration for this change! I think your additional patches are well worth reducing the amount of code that has to directly access the boost data structure from outside of the `CTxMemPool` class.\r\n\r\n> Would you maybe be interested in taking any of these changes?\r\n\r\nMost of the changes (as you mentioned) should be uncontroversial, e.g. just directly using existing helpers, or the `vTxHashes` changes. I'll gladly integrate these here. \r\n\r\nI think the `DisconnectedBlockTransactions` change would merit its own PRs, since it does change the internal behavior and performance somewhat. \r\n\r\nThe other two cases I am not sure about is using `infoAll()` (as done [here](https://github.com/glozow/bitcoin/commit/c287d8dc5df644b04fa9b4ffc62c8537ce76730a#diff-9c5b83de6dc84af277e352c88b9291aa44340a3c75f572a0b51661eb0a838de9R347)) to create a vector of `TxMemPoolInfo` instead of directly iterating over `mapTx` and construction of a new `GenTxid` [here](https://github.com/glozow/bitcoin/commit/971133f2ed0237c9473307f292bc365c47f7de0b#diff-97c3a52bc5fad452d82670a7fd291800bae20c7bc35bb82686c2c0a4ea7b5b98R362). In both cases it would be fairly straight forward to replace them with new  `CTxMemPool` helper methods if they prove too controversial. ",
      "created_at" : "2023-08-30T20:54:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28335#issuecomment-1699826450",
      "id" : 1699826450,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28335",
      "node_id" : "IC_kwDOABII585lUUsS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1699826450/reactions"
      },
      "updated_at" : "2023-08-31T10:24:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1699826450",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated with @glozow's patches. I think these are well worth it for both cleaning up the code to not needlessly reach into complex mempool member variables as well as reducing the number of source files that need to include the multiindex headers.\r\n\r\nThe order of the commits was slightly changed, the heavier `DisconnectedBlockTransactions` refactor is now the first commit. As a further approach I think two separate PRs should be opened; one for the heavier `DisconnectedBlockTransactions` and related changes as well as another one for the easier refactors. Once these are processed, this current PR can be rebased and opened for code review.",
      "created_at" : "2023-09-01T09:24:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28335#issuecomment-1702445294",
      "id" : 1702445294,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28335",
      "node_id" : "IC_kwDOABII585leUDu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1702445294/reactions"
      },
      "updated_at" : "2023-09-01T09:24:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1702445294",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   }
]
