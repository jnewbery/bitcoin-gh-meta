[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28307).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [pinheadmz](https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-2041087253) |\n| Concept ACK | [theStack](https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-1845552797) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30019](https://github.com/bitcoin/bitcoin/pull/30019) (test: use assert_greater_than util by kevkevinpal)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-08-21T23:18:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#issuecomment-1687186422",
      "id" : 1687186422,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28307",
      "node_id" : "IC_kwDOABII585kkGv2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1687186422/reactions"
      },
      "updated_at" : "2024-05-06T15:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1687186422",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "concept ACK db38b584e6\r\n\r\nConfirmed this branch fixes the issue mentioned in #28250 \r\n\r\nCode review to follow...\r\n\r\n```\r\n{\r\n  \"address\": \"3JDRACdkEs41yxtYLi6kiqQJdQHLPDxehc\",\r\n  \"redeemScript\": \"602102f293c4d026a536a082453f8327f305ae0a0c59350b396205e15fbec2af67390b2103d7b6a7e972f6e1a532f9f49a7cc35055a0ffd7cec5f81728f6a3fdf4dad9367221021f360d51b8eb43422fe942c837ad16e36bab87c5f7567609de9a38e205fb51ed2103a778eaee9cc18a4e5e02a78f403082d4e6f3a9c0d9edaea20b9ad86089de7fc92102a3c95e41e8272c6842df8c9da492ef5e03bbc4ca17c22ce1f88570e716e187db21032e1d465bc5cdea674337934fb861d097dd7ab20289e4d41de14a6cafcd61d30a210370fd35da88778a805ce9acc88c0020e3b14cacaa30f99d829207e1896d782ea12103878a4b831af4fee069964448ccca999071633fcc751d296e8c5325167274febf210248f8621596029568070dda40bc1e3ace78df320b5ebf0d6a431536e9af3ec8942103f757260835b7e439b244a9b10f5645966d7dcff9d2648c400a0d6827f4a64ac421023b3972554e123985b6c3d8575e6fd3384f59a58ef91e0d39ba5905dad49e73722102e32652928f21764e02822d39ffd1075c428e372a06fe7247023d5b60f1d0159621020e002818c48b1d1766f6196e09db90f51e155bbd49be0ad743d1fa6b7e8efcae2103725d482f0c77f4feb1ecbea28f036b30889f462222002e88aa8f8346dce9447421031fa2798d9f40bc2746f91f300460be9091e10f1b4baa37843cd41c965b0f9b41210235b7b545398ce9692f319e6eefe114eae50f008f46d33baf19418e0f17e3bc652102ff72a2b54370c0b1501228b6a210bc36a16535cc358bf7839c85a6ae2c41725c210282ce44556f5a81c7a698dc8fdba12089740df420af93002e80a752020e5d939e210279f5b244862e27f69284befb0299909139b899d2702b3e74b4317ed5b2947e03210293d0b090906afdee07dabedf34798293246ce06ade2e3887302f289008f25f4d0114ae\",\r\n  \"descriptor\": \"sh(wsh(multi(16,02f293c4d026a536a082453f8327f305ae0a0c59350b396205e15fbec2af67390b,03d7b6a7e972f6e1a532f9f49a7cc35055a0ffd7cec5f81728f6a3fdf4dad93672,021f360d51b8eb43422fe942c837ad16e36bab87c5f7567609de9a38e205fb51ed,03a778eaee9cc18a4e5e02a78f403082d4e6f3a9c0d9edaea20b9ad86089de7fc9,02a3c95e41e8272c6842df8c9da492ef5e03bbc4ca17c22ce1f88570e716e187db,032e1d465bc5cdea674337934fb861d097dd7ab20289e4d41de14a6cafcd61d30a,0370fd35da88778a805ce9acc88c0020e3b14cacaa30f99d829207e1896d782ea1,03878a4b831af4fee069964448ccca999071633fcc751d296e8c5325167274febf,0248f8621596029568070dda40bc1e3ace78df320b5ebf0d6a431536e9af3ec894,03f757260835b7e439b244a9b10f5645966d7dcff9d2648c400a0d6827f4a64ac4,023b3972554e123985b6c3d8575e6fd3384f59a58ef91e0d39ba5905dad49e7372,02e32652928f21764e02822d39ffd1075c428e372a06fe7247023d5b60f1d01596,020e002818c48b1d1766f6196e09db90f51e155bbd49be0ad743d1fa6b7e8efcae,03725d482f0c77f4feb1ecbea28f036b30889f462222002e88aa8f8346dce94474,031fa2798d9f40bc2746f91f300460be9091e10f1b4baa37843cd41c965b0f9b41,0235b7b545398ce9692f319e6eefe114eae50f008f46d33baf19418e0f17e3bc65,02ff72a2b54370c0b1501228b6a210bc36a16535cc358bf7839c85a6ae2c41725c,0282ce44556f5a81c7a698dc8fdba12089740df420af93002e80a752020e5d939e,0279f5b244862e27f69284befb0299909139b899d2702b3e74b4317ed5b2947e03,0293d0b090906afdee07dabedf34798293246ce06ade2e3887302f289008f25f4d)))#xfjxuvgn\"\r\n}\r\n```",
      "created_at" : "2023-09-06T16:29:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#issuecomment-1708716996",
      "id" : 1708716996,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28307",
      "node_id" : "IC_kwDOABII585l2PPE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1708716996/reactions"
      },
      "updated_at" : "2023-09-06T16:29:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1708716996",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317649724"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317649724"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Just curious, why doesn't `FlatSigningProvider` have a `AddCScript()` method like it's Fillable counterpart? I was surprised to see the maps in the provider aren't private or protected, I thought that was more our style.",
      "commit_id" : "4c42ab50621698497df2d95e8934471fbcb7e69c",
      "created_at" : "2023-09-06T18:02:30Z",
      "diff_hunk" : "@@ -82,11 +82,11 @@ std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n     }\n }\n \n-CTxDestination AddAndGetDestinationForScript(FillableSigningProvider& keystore, const CScript& script, OutputType type)\n+CTxDestination AddAndGetDestinationForScript(FlatSigningProvider& keystore, const CScript& script, OutputType type)\n {\n     // Add script to keystore\n-    keystore.AddCScript(script);\n-    // Note that scripts over 520 bytes are not yet supported.\n+    keystore.scripts.emplace(CScriptID(script), script);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317649724",
      "id" : 1317649724,
      "line" : 88,
      "node_id" : "PRRC_kwDOABII585Oib08",
      "original_commit_id" : "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "original_line" : 88,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/outputtype.cpp",
      "position" : 10,
      "pull_request_review_id" : 1613931820,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317649724/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T18:10:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317649724",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317654675"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317654675"
         }
      },
      "author_association" : "MEMBER",
      "body" : "do we need to cover m=21 here to catch the error in segwit multisig?",
      "commit_id" : "4c42ab50621698497df2d95e8934471fbcb7e69c",
      "created_at" : "2023-09-06T18:07:48Z",
      "diff_hunk" : "@@ -133,117 +84,162 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_equal(len(pubkeys), 20)\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317654675",
      "id" : 1317654675,
      "line" : 96,
      "node_id" : "PRRC_kwDOABII585OidCT",
      "original_commit_id" : "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "original_line" : 96,
      "original_position" : 145,
      "original_start_line" : null,
      "path" : "test/functional/rpc_createmultisig.py",
      "position" : 144,
      "pull_request_review_id" : 1613931820,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317654675/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T18:10:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317654675",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317766254"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317766254"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Just curious, why doesn't FlatSigningProvider have a AddCScript() method like it's Fillable counterpart? I was surprised to see the maps in the provider aren't private or protected, I thought that was more our style.\r\n\r\n`FillableSigningProvider` is the legacy counterpart. All other `SigningProvider` subclasses were introduced with the output descriptors implementation.\r\n\r\nIf you look at the new providers, all of them are loaded in place and stay constant over time. They are only accessed through the `SigningProvider` interface methods and not directly (this interface only present getters). In contraposition, the legacy provider fulfills both roles. It implements the `SigningProvider` methods and, at the same time, allows new scripts and keys to be added over time.\r\nThis reflects the legacy vs descriptors difference: each new import in the descriptors wallet refers to a new spkm, while in the legacy wallet, it  refers to a new script/key added into the single legacy spkm.",
      "commit_id" : "4c42ab50621698497df2d95e8934471fbcb7e69c",
      "created_at" : "2023-09-06T20:01:02Z",
      "diff_hunk" : "@@ -82,11 +82,11 @@ std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n     }\n }\n \n-CTxDestination AddAndGetDestinationForScript(FillableSigningProvider& keystore, const CScript& script, OutputType type)\n+CTxDestination AddAndGetDestinationForScript(FlatSigningProvider& keystore, const CScript& script, OutputType type)\n {\n     // Add script to keystore\n-    keystore.AddCScript(script);\n-    // Note that scripts over 520 bytes are not yet supported.\n+    keystore.scripts.emplace(CScriptID(script), script);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317766254",
      "id" : 1317766254,
      "in_reply_to_id" : 1317649724,
      "line" : 88,
      "node_id" : "PRRC_kwDOABII585Oi4Ru",
      "original_commit_id" : "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "original_line" : 88,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/outputtype.cpp",
      "position" : 10,
      "pull_request_review_id" : 1614119645,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317766254/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T20:02:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317766254",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317768411"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317768411"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yeah, good idea. Will add it.",
      "commit_id" : "4c42ab50621698497df2d95e8934471fbcb7e69c",
      "created_at" : "2023-09-06T20:02:43Z",
      "diff_hunk" : "@@ -133,117 +84,162 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_equal(len(pubkeys), 20)\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317768411",
      "id" : 1317768411,
      "in_reply_to_id" : 1317654675,
      "line" : 96,
      "node_id" : "PRRC_kwDOABII585Oi4zb",
      "original_commit_id" : "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "original_line" : 96,
      "original_position" : 145,
      "original_start_line" : null,
      "path" : "test/functional/rpc_createmultisig.py",
      "position" : 144,
      "pull_request_review_id" : 1614121997,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317768411/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T20:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317768411",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317778862"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317778862"
         }
      },
      "author_association" : "MEMBER",
      "body" : "So all the places where we call `FlatSigningProvider.scripts.emplace()` doesn't count as \"allows new scripts and keys to be added over time\" ?",
      "commit_id" : "4c42ab50621698497df2d95e8934471fbcb7e69c",
      "created_at" : "2023-09-06T20:11:06Z",
      "diff_hunk" : "@@ -82,11 +82,11 @@ std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n     }\n }\n \n-CTxDestination AddAndGetDestinationForScript(FillableSigningProvider& keystore, const CScript& script, OutputType type)\n+CTxDestination AddAndGetDestinationForScript(FlatSigningProvider& keystore, const CScript& script, OutputType type)\n {\n     // Add script to keystore\n-    keystore.AddCScript(script);\n-    // Note that scripts over 520 bytes are not yet supported.\n+    keystore.scripts.emplace(CScriptID(script), script);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317778862",
      "id" : 1317778862,
      "in_reply_to_id" : 1317649724,
      "line" : 88,
      "node_id" : "PRRC_kwDOABII585Oi7Wu",
      "original_commit_id" : "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "original_line" : 88,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/outputtype.cpp",
      "position" : 10,
      "pull_request_review_id" : 1614133652,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317778862/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T20:11:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317778862",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317798935"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317798935"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> So all the places where we call `FlatSigningProvider.scripts.emplace()` doesn't count as \"allows new scripts and keys to be added over time\" ?\r\n\r\nAs uses to be in software development, the answer is \"it depends\".\r\nAs far as I can tell, the idea was to hide the `SigningProvider` implementation. Which is sound.\r\n\r\nI haven't looked at all the places where the `FlatSigningProvider` is used but most of them should be inside the `descriptor.cpp` and similar related processes where the parent process invokes a function to load the provider with some keys/scripts, to then use them and discard the provider.\r\n\r\nWhen I said \"allows new scripts and keys to be added over time\" was referring to keep it in-memory. And continually add new elements to it. Which should not be happening with `FlatSigningProvider` anywhere.",
      "commit_id" : "4c42ab50621698497df2d95e8934471fbcb7e69c",
      "created_at" : "2023-09-06T20:29:21Z",
      "diff_hunk" : "@@ -82,11 +82,11 @@ std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n     }\n }\n \n-CTxDestination AddAndGetDestinationForScript(FillableSigningProvider& keystore, const CScript& script, OutputType type)\n+CTxDestination AddAndGetDestinationForScript(FlatSigningProvider& keystore, const CScript& script, OutputType type)\n {\n     // Add script to keystore\n-    keystore.AddCScript(script);\n-    // Note that scripts over 520 bytes are not yet supported.\n+    keystore.scripts.emplace(CScriptID(script), script);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317798935",
      "id" : 1317798935,
      "in_reply_to_id" : 1317649724,
      "line" : 88,
      "node_id" : "PRRC_kwDOABII585OjAQX",
      "original_commit_id" : "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "original_line" : 88,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/outputtype.cpp",
      "position" : 10,
      "pull_request_review_id" : 1614163358,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317798935/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T20:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317798935",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1467521980"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467521980"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "IIUC, the right part of this expression seems redundant?\r\n```suggestion\r\n        self._requires_wallet = self.is_wallet_compiled()\r\n```\r\nIf a wallet is compiled, that implies that either SQLite or BDB is compiled as well.\r\n\r\nConsequently, the `self.has_wallet` member is not needed anymore, and can simply be replaced by `self.is_wallet_compiled()` calls?",
      "commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "created_at" : "2024-01-26T11:04:50Z",
      "diff_hunk" : "@@ -437,6 +437,11 @@ def init_wallet(self, *, node):\n                 n.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors, load_on_startup=True)\n             n.importprivkey(privkey=n.get_deterministic_priv_key().key, label='coinbase', rescan=True)\n \n+    # Only enables wallet when the module is available\n+    def enable_wallet_if_possible(self):\n+        self._requires_wallet = self.is_wallet_compiled() and (self.is_sqlite_compiled() or self.is_bdb_compiled())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1467521980",
      "id" : 1467521980,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585XeJu8",
      "original_commit_id" : "8c3fdc4bbf9849e1c29244f915dbfc9ae61882fe",
      "original_line" : 442,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 1845552797,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467521980/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-26T13:29:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467521980",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1467681522"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467681522"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> If a wallet is compiled, that implies that either SQLite or BDB is compiled as well.\r\n\r\nYeah sure. Removed the right part of the statement.\r\n\r\n> Consequently, the self.has_wallet member is not needed anymore, and can simply be replaced by self.is_wallet_compiled() calls?\r\n\r\nSure. Done.",
      "commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "created_at" : "2024-01-26T13:54:44Z",
      "diff_hunk" : "@@ -437,6 +437,11 @@ def init_wallet(self, *, node):\n                 n.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors, load_on_startup=True)\n             n.importprivkey(privkey=n.get_deterministic_priv_key().key, label='coinbase', rescan=True)\n \n+    # Only enables wallet when the module is available\n+    def enable_wallet_if_possible(self):\n+        self._requires_wallet = self.is_wallet_compiled() and (self.is_sqlite_compiled() or self.is_bdb_compiled())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1467681522",
      "id" : 1467681522,
      "in_reply_to_id" : 1467521980,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Xewry",
      "original_commit_id" : "8c3fdc4bbf9849e1c29244f915dbfc9ae61882fe",
      "original_line" : 442,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 1845798508,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467681522/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-26T13:56:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467681522",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545613304"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545613304"
         }
      },
      "author_association" : "NONE",
      "body" : "Is it correct to assume that in the future releases by getting rid of the legacy spkm, we will get rid of `FillableSigningProvider` as well?",
      "commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "created_at" : "2024-03-31T11:01:17Z",
      "diff_hunk" : "@@ -290,7 +290,20 @@ RPCHelpMan addmultisigaddress()\n \n     // Import scripts into the wallet\n     for (const auto& [id, script] : provider.scripts) {\n-        spk_man.AddCScript(script);\n+        // Due to a bug in the legacy wallet, the p2sh maximum script size limit is also imposed on 'p2sh-segwit' and 'bech32' redeem scripts.\n+        // Even when redeem scripts over MAX_SCRIPT_ELEMENT_SIZE bytes are valid for segwit output types, we don't want to\n+        // enable it because:\n+        // 1) It introduces a compatibility-breaking change requiring downgrade protection; older wallets would be unable to interact with these \"new\" legacy wallets.\n+        // 2) Considering the ongoing deprecation of the legacy spkm, this issue adds another good reason to transition towards descriptors.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545613304",
      "id" : 1545613304,
      "line" : 297,
      "node_id" : "PRRC_kwDOABII585cIC_4",
      "original_commit_id" : "3997791eba1c10bb4d12ddf1fd25df596864c4ea",
      "original_line" : 297,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/addresses.cpp",
      "position" : 17,
      "pull_request_review_id" : 1970177563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545613304/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-31T11:41:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545613304",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5960750?v=4",
         "events_url" : "https://api.github.com/users/rkrux/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rkrux/followers",
         "following_url" : "https://api.github.com/users/rkrux/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rkrux/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rkrux",
         "id" : 5960750,
         "login" : "rkrux",
         "node_id" : "MDQ6VXNlcjU5NjA3NTA=",
         "organizations_url" : "https://api.github.com/users/rkrux/orgs",
         "received_events_url" : "https://api.github.com/users/rkrux/received_events",
         "repos_url" : "https://api.github.com/users/rkrux/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rkrux/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rkrux/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rkrux"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545616823"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545616823"
         }
      },
      "author_association" : "NONE",
      "body" : "+1 on removing these hard-coded values!",
      "commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "created_at" : "2024-03-31T11:06:05Z",
      "diff_hunk" : "@@ -139,22 +131,6 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n-\n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n-\n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n-",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545616823",
      "id" : 1545616823,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585cID23",
      "original_commit_id" : "6df7d2ce5a4c0b31f3a254a7607ae8812606b840",
      "original_line" : 157,
      "original_position" : 63,
      "original_start_line" : 142,
      "path" : "test/functional/rpc_createmultisig.py",
      "position" : null,
      "pull_request_review_id" : 1970177563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545616823/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : "LEFT",
      "subject_type" : "line",
      "updated_at" : "2024-03-31T11:41:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545616823",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5960750?v=4",
         "events_url" : "https://api.github.com/users/rkrux/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rkrux/followers",
         "following_url" : "https://api.github.com/users/rkrux/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rkrux/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rkrux",
         "id" : 5960750,
         "login" : "rkrux",
         "node_id" : "MDQ6VXNlcjU5NjA3NTA=",
         "organizations_url" : "https://api.github.com/users/rkrux/orgs",
         "received_events_url" : "https://api.github.com/users/rkrux/received_events",
         "repos_url" : "https://api.github.com/users/rkrux/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rkrux/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rkrux/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rkrux"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545617378"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545617378"
         }
      },
      "author_association" : "NONE",
      "body" : "Nit: `err_msg_list`",
      "commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "created_at" : "2024-03-31T11:08:41Z",
      "diff_hunk" : "@@ -217,6 +180,41 @@ def do_multisig(self, nkeys, nsigs, output_type, wallet_multi):\n         txinfo = node0.getrawtransaction(tx, True, blk)\n         self.log.info(\"n/m=%d/%d %s size=%d vsize=%d weight=%d\" % (nsigs, nkeys, output_type, txinfo[\"size\"], txinfo[\"vsize\"], txinfo[\"weight\"]))\n \n+    def test_mixing_uncompressed_and_compressed_keys(self, node, wallet_multi):\n+        self.log.info('Mixed compressed and uncompressed multisigs are not allowed')\n+        pk0, pk1, pk2 = [getnewdestination('bech32')[0].hex() for _ in range(3)]\n+\n+        # decompress pk2\n+        pk_obj = ECPubKey()\n+        pk_obj.set(bytes.fromhex(pk2))\n+        pk_obj.compressed = False\n+        pk2 = pk_obj.get_bytes().hex()\n+\n+        # Check all permutations of keys because order matters apparently\n+        for keys in itertools.permutations([pk0, pk1, pk2]):\n+            # Results should be the same as this legacy one\n+            legacy_addr = node.createmultisig(2, keys, 'legacy')['address']\n+\n+            if wallet_multi is not None:\n+                # 'addmultisigaddress' should return the same address\n+                result = wallet_multi.addmultisigaddress(2, keys, '', 'legacy')\n+                assert_equal(legacy_addr, result['address'])\n+                assert 'warnings' not in result\n+\n+            # Generate addresses with the segwit types. These should all make legacy addresses\n+            err_msg = [\"Unable to make chosen address type, please ensure no uncompressed public keys are present.\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545617378",
      "id" : 1545617378,
      "line" : 222,
      "node_id" : "PRRC_kwDOABII585cID_i",
      "original_commit_id" : "fffa9bb9a02e06dc57a61f301f8eff3d3cd7142a",
      "original_line" : 205,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "test/functional/rpc_createmultisig.py",
      "position" : 312,
      "pull_request_review_id" : 1970177563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545617378/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-31T11:41:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545617378",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5960750?v=4",
         "events_url" : "https://api.github.com/users/rkrux/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rkrux/followers",
         "following_url" : "https://api.github.com/users/rkrux/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rkrux/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rkrux",
         "id" : 5960750,
         "login" : "rkrux",
         "node_id" : "MDQ6VXNlcjU5NjA3NTA=",
         "organizations_url" : "https://api.github.com/users/rkrux/orgs",
         "received_events_url" : "https://api.github.com/users/rkrux/received_events",
         "repos_url" : "https://api.github.com/users/rkrux/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rkrux/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rkrux/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rkrux"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545617723"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545617723"
         }
      },
      "author_association" : "NONE",
      "body" : "+1 on creating a list of (sigs, keys) instead!",
      "commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "created_at" : "2024-03-31T11:10:12Z",
      "diff_hunk" : "@@ -56,12 +56,13 @@ def run_test(self):\n         self.generate(self.wallet, 149)\n \n         wallet_multi = self.create_wallet(node1, 'wmulti') if self._requires_wallet else None\n-        self.create_keys(5)\n-        for nkeys in [3, 5]:\n-            for nsigs in [2, 3]:\n-                for output_type in [\"bech32\", \"p2sh-segwit\", \"legacy\"]:\n-                    self.do_multisig(nkeys, nsigs, output_type, wallet_multi)\n+        self.create_keys(21)  # max number of allowed keys + 1\n+        m_of_n = [(2, 3), (3, 3), (2, 5), (3, 5), (10, 15), (15, 15)]\n+        for (sigs, keys) in m_of_n:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545617723",
      "id" : 1545617723,
      "line" : 61,
      "node_id" : "PRRC_kwDOABII585cIEE7",
      "original_commit_id" : "29e7bb80cbc35dccb40681d7fb97628206a4ec8b",
      "original_line" : 61,
      "original_position" : 11,
      "original_start_line" : 60,
      "path" : "test/functional/rpc_createmultisig.py",
      "position" : 74,
      "pull_request_review_id" : 1970177563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545617723/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 60,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-03-31T11:41:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545617723",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5960750?v=4",
         "events_url" : "https://api.github.com/users/rkrux/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rkrux/followers",
         "following_url" : "https://api.github.com/users/rkrux/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rkrux/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rkrux",
         "id" : 5960750,
         "login" : "rkrux",
         "node_id" : "MDQ6VXNlcjU5NjA3NTA=",
         "organizations_url" : "https://api.github.com/users/rkrux/orgs",
         "received_events_url" : "https://api.github.com/users/rkrux/received_events",
         "repos_url" : "https://api.github.com/users/rkrux/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rkrux/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rkrux/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rkrux"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545618073"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545618073"
         }
      },
      "author_association" : "NONE",
      "body" : "```\r\nfor addr_type in ['p2sh-segwit', 'bech32']:\r\n assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, addr_type)\r\n```",
      "commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "created_at" : "2024-03-31T11:12:11Z",
      "diff_hunk" : "@@ -83,6 +84,21 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n+    def test_multisig_script_limit(self):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n+\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n+\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n+\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545618073",
      "id" : 1545618073,
      "line" : 100,
      "node_id" : "PRRC_kwDOABII585cIEKZ",
      "original_commit_id" : "29e7bb80cbc35dccb40681d7fb97628206a4ec8b",
      "original_line" : 100,
      "original_position" : 36,
      "original_start_line" : 99,
      "path" : "test/functional/rpc_createmultisig.py",
      "position" : 150,
      "pull_request_review_id" : 1970177563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545618073/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 99,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-03-31T11:41:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545618073",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5960750?v=4",
         "events_url" : "https://api.github.com/users/rkrux/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rkrux/followers",
         "following_url" : "https://api.github.com/users/rkrux/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rkrux/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rkrux",
         "id" : 5960750,
         "login" : "rkrux",
         "node_id" : "MDQ6VXNlcjU5NjA3NTA=",
         "organizations_url" : "https://api.github.com/users/rkrux/orgs",
         "received_events_url" : "https://api.github.com/users/rkrux/received_events",
         "repos_url" : "https://api.github.com/users/rkrux/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rkrux/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rkrux/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rkrux"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545619069"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545619069"
         }
      },
      "author_association" : "NONE",
      "body" : "```\r\nfor addr_type in ['p2sh-segwit', 'bech32']:\r\n assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', addr_type)\r\n```",
      "commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "created_at" : "2024-03-31T11:14:56Z",
      "diff_hunk" : "@@ -133,117 +84,165 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n \n-    def do_multisig(self):\n-        node0, node1, node2 = self.nodes\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')\n \n-        if self.is_bdb_compiled():\n-            if 'wmulti' not in node1.listwallets():\n-                try:\n-                    node1.loadwallet('wmulti')\n-                except JSONRPCException as e:\n-                    path = self.nodes[1].wallets_path / \"wmulti\"\n-                    if e.error['code'] == -18 and \"Wallet file verification failed. Failed to load database path '{}'. Path does not exist.\".format(path) in e.error['message']:\n-                        node1.createwallet(wallet_name='wmulti', disable_private_keys=True)\n-                    else:\n-                        raise\n-            wmulti = node1.get_wallet_rpc('wmulti')\n+        # Check legacy wallet related command\n+        self.log.info('Test legacy redeem script max size limit (with wallet)')\n+        if wallet_multi is not None and not self.options.descriptors:\n+            assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'legacy')\n+\n+            self.log.info('Test legacy wallet unsupported operation. 16-20 multisig p2sh-legacy and bech32 generation')\n+            # Due an internal limitation on legacy wallets, the redeem script limit also applies to p2sh-segwit and bech32 (even when the scripts are valid)\n+            # We take this as a \"good thing\" to tell users to upgrade to descriptors.\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'p2sh-segwit')\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'bech32')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545619069",
      "id" : 1545619069,
      "line" : 111,
      "node_id" : "PRRC_kwDOABII585cIEZ9",
      "original_commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_line" : 111,
      "original_position" : 172,
      "original_start_line" : 110,
      "path" : "test/functional/rpc_createmultisig.py",
      "position" : 172,
      "pull_request_review_id" : 1970177563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545619069/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 110,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-03-31T11:41:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545619069",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5960750?v=4",
         "events_url" : "https://api.github.com/users/rkrux/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rkrux/followers",
         "following_url" : "https://api.github.com/users/rkrux/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rkrux/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rkrux",
         "id" : 5960750,
         "login" : "rkrux",
         "node_id" : "MDQ6VXNlcjU5NjA3NTA=",
         "organizations_url" : "https://api.github.com/users/rkrux/orgs",
         "received_events_url" : "https://api.github.com/users/rkrux/received_events",
         "repos_url" : "https://api.github.com/users/rkrux/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rkrux/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rkrux/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rkrux"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545621376"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545621376"
         }
      },
      "author_association" : "NONE",
      "body" : "Although it's older code, but would it be possible to rename this function and/or break this function down into smaller pieces since this PR is anyway refactoring this test? I see it's an 85 line function wherein a lot many things are happening including building/sending transactions, mining blocks, and numerous assertions that are hard to keep track of.",
      "commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "created_at" : "2024-03-31T11:22:49Z",
      "diff_hunk" : "@@ -133,117 +84,165 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n \n-    def do_multisig(self):\n-        node0, node1, node2 = self.nodes\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')\n \n-        if self.is_bdb_compiled():\n-            if 'wmulti' not in node1.listwallets():\n-                try:\n-                    node1.loadwallet('wmulti')\n-                except JSONRPCException as e:\n-                    path = self.nodes[1].wallets_path / \"wmulti\"\n-                    if e.error['code'] == -18 and \"Wallet file verification failed. Failed to load database path '{}'. Path does not exist.\".format(path) in e.error['message']:\n-                        node1.createwallet(wallet_name='wmulti', disable_private_keys=True)\n-                    else:\n-                        raise\n-            wmulti = node1.get_wallet_rpc('wmulti')\n+        # Check legacy wallet related command\n+        self.log.info('Test legacy redeem script max size limit (with wallet)')\n+        if wallet_multi is not None and not self.options.descriptors:\n+            assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'legacy')\n+\n+            self.log.info('Test legacy wallet unsupported operation. 16-20 multisig p2sh-legacy and bech32 generation')\n+            # Due an internal limitation on legacy wallets, the redeem script limit also applies to p2sh-segwit and bech32 (even when the scripts are valid)\n+            # We take this as a \"good thing\" to tell users to upgrade to descriptors.\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'p2sh-segwit')\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'bech32')\n+\n+    def do_multisig(self, nkeys, nsigs, output_type, wallet_multi):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545621376",
      "id" : 1545621376,
      "line" : 113,
      "node_id" : "PRRC_kwDOABII585cIE-A",
      "original_commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_line" : 113,
      "original_position" : 174,
      "original_start_line" : null,
      "path" : "test/functional/rpc_createmultisig.py",
      "position" : 174,
      "pull_request_review_id" : 1970177563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545621376/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-31T11:41:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545621376",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5960750?v=4",
         "events_url" : "https://api.github.com/users/rkrux/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rkrux/followers",
         "following_url" : "https://api.github.com/users/rkrux/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rkrux/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rkrux",
         "id" : 5960750,
         "login" : "rkrux",
         "node_id" : "MDQ6VXNlcjU5NjA3NTA=",
         "organizations_url" : "https://api.github.com/users/rkrux/orgs",
         "received_events_url" : "https://api.github.com/users/rkrux/received_events",
         "repos_url" : "https://api.github.com/users/rkrux/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rkrux/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rkrux/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rkrux"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545621668"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545621668"
         }
      },
      "author_association" : "NONE",
      "body" : "Again older code, but `prevtx_err` leads to an impression that it's an error related to a previous transaction but the usage of this variable doesn't show that it's an error, but a transaction itself.",
      "commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "created_at" : "2024-03-31T11:24:03Z",
      "diff_hunk" : "@@ -133,117 +84,165 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n \n-    def do_multisig(self):\n-        node0, node1, node2 = self.nodes\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')\n \n-        if self.is_bdb_compiled():\n-            if 'wmulti' not in node1.listwallets():\n-                try:\n-                    node1.loadwallet('wmulti')\n-                except JSONRPCException as e:\n-                    path = self.nodes[1].wallets_path / \"wmulti\"\n-                    if e.error['code'] == -18 and \"Wallet file verification failed. Failed to load database path '{}'. Path does not exist.\".format(path) in e.error['message']:\n-                        node1.createwallet(wallet_name='wmulti', disable_private_keys=True)\n-                    else:\n-                        raise\n-            wmulti = node1.get_wallet_rpc('wmulti')\n+        # Check legacy wallet related command\n+        self.log.info('Test legacy redeem script max size limit (with wallet)')\n+        if wallet_multi is not None and not self.options.descriptors:\n+            assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'legacy')\n+\n+            self.log.info('Test legacy wallet unsupported operation. 16-20 multisig p2sh-legacy and bech32 generation')\n+            # Due an internal limitation on legacy wallets, the redeem script limit also applies to p2sh-segwit and bech32 (even when the scripts are valid)\n+            # We take this as a \"good thing\" to tell users to upgrade to descriptors.\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'p2sh-segwit')\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'bech32')\n+\n+    def do_multisig(self, nkeys, nsigs, output_type, wallet_multi):\n+        node0, node1, node2 = self.nodes\n+        pub_keys = self.pub[0: nkeys]\n+        priv_keys = self.priv[0: nkeys]\n \n         # Construct the expected descriptor\n-        desc = 'multi({},{})'.format(self.nsigs, ','.join(self.pub))\n-        if self.output_type == 'legacy':\n+        desc = 'multi({},{})'.format(nsigs, ','.join(pub_keys))\n+        if output_type == 'legacy':\n             desc = 'sh({})'.format(desc)\n-        elif self.output_type == 'p2sh-segwit':\n+        elif output_type == 'p2sh-segwit':\n             desc = 'sh(wsh({}))'.format(desc)\n-        elif self.output_type == 'bech32':\n+        elif output_type == 'bech32':\n             desc = 'wsh({})'.format(desc)\n         desc = descsum_create(desc)\n \n-        msig = node2.createmultisig(self.nsigs, self.pub, self.output_type)\n+        msig = node2.createmultisig(nsigs, pub_keys, output_type)\n         assert 'warnings' not in msig\n         madd = msig[\"address\"]\n         mredeem = msig[\"redeemScript\"]\n         assert_equal(desc, msig['descriptor'])\n-        if self.output_type == 'bech32':\n+        if output_type == 'bech32':\n             assert madd[0:4] == \"bcrt\"  # actually a bech32 address\n \n-        if self.is_bdb_compiled():\n+        if wallet_multi is not None:\n             # compare against addmultisigaddress\n-            msigw = wmulti.addmultisigaddress(self.nsigs, self.pub, None, self.output_type)\n+            msigw = wallet_multi.addmultisigaddress(nsigs, pub_keys, None, output_type)\n             maddw = msigw[\"address\"]\n             mredeemw = msigw[\"redeemScript\"]\n             assert_equal(desc, drop_origins(msigw['descriptor']))\n             # addmultisigiaddress and createmultisig work the same\n             assert maddw == madd\n             assert mredeemw == mredeem\n-            wmulti.unloadwallet()\n \n         spk = address_to_scriptpubkey(madd)\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=spk, amount=1300)[\"txid\"]\n-        tx = node0.getrawtransaction(txid, True)\n-        vout = [v[\"n\"] for v in tx[\"vout\"] if madd == v[\"scriptPubKey\"][\"address\"]]\n-        assert len(vout) == 1\n-        vout = vout[0]\n-        scriptPubKey = tx[\"vout\"][vout][\"scriptPubKey\"][\"hex\"]\n-        value = tx[\"vout\"][vout][\"value\"]\n-        prevtxs = [{\"txid\": txid, \"vout\": vout, \"scriptPubKey\": scriptPubKey, \"redeemScript\": mredeem, \"amount\": value}]\n+        value = decimal.Decimal(\"0.00004000\")\n+        tx = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=spk, amount=int(value * COIN))\n+        prevtxs = [{\"txid\": tx[\"txid\"], \"vout\": tx[\"sent_vout\"], \"scriptPubKey\": spk.hex(), \"redeemScript\": mredeem, \"amount\": value}]\n \n         self.generate(node0, 1)\n \n-        outval = value - decimal.Decimal(\"0.00001000\")\n-        rawtx = node2.createrawtransaction([{\"txid\": txid, \"vout\": vout}], [{self.final: outval}])\n+        outval = value - decimal.Decimal(\"0.00002000\")  # deduce fee (must be higher than the min relay fee)\n+        # send coins to node2 when wallet is enabled\n+        node2_balance = node2.getbalances()['mine']['trusted'] if self.is_wallet_compiled() else 0\n+        out_addr = node2.getnewaddress() if self.is_wallet_compiled() else getnewdestination('bech32')[2]\n+        rawtx = node2.createrawtransaction([{\"txid\": tx[\"txid\"], \"vout\": tx[\"sent_vout\"]}], [{out_addr: outval}])\n \n         prevtx_err = dict(prevtxs[0])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545621668",
      "id" : 1545621668,
      "line" : 159,
      "node_id" : "PRRC_kwDOABII585cIFCk",
      "original_commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_line" : 159,
      "original_position" : 239,
      "original_start_line" : null,
      "path" : "test/functional/rpc_createmultisig.py",
      "position" : 239,
      "pull_request_review_id" : 1970177563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545621668/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-31T11:41:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545621668",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5960750?v=4",
         "events_url" : "https://api.github.com/users/rkrux/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rkrux/followers",
         "following_url" : "https://api.github.com/users/rkrux/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rkrux/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rkrux",
         "id" : 5960750,
         "login" : "rkrux",
         "node_id" : "MDQ6VXNlcjU5NjA3NTA=",
         "organizations_url" : "https://api.github.com/users/rkrux/orgs",
         "received_events_url" : "https://api.github.com/users/rkrux/received_events",
         "repos_url" : "https://api.github.com/users/rkrux/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rkrux/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rkrux/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rkrux"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1546405129"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546405129"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Is it correct to assume that in the future releases by getting rid of the legacy spkm, we will get rid of `FillableSigningProvider` as well?\r\n\r\nYes.",
      "commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "created_at" : "2024-04-01T14:45:54Z",
      "diff_hunk" : "@@ -290,7 +290,20 @@ RPCHelpMan addmultisigaddress()\n \n     // Import scripts into the wallet\n     for (const auto& [id, script] : provider.scripts) {\n-        spk_man.AddCScript(script);\n+        // Due to a bug in the legacy wallet, the p2sh maximum script size limit is also imposed on 'p2sh-segwit' and 'bech32' redeem scripts.\n+        // Even when redeem scripts over MAX_SCRIPT_ELEMENT_SIZE bytes are valid for segwit output types, we don't want to\n+        // enable it because:\n+        // 1) It introduces a compatibility-breaking change requiring downgrade protection; older wallets would be unable to interact with these \"new\" legacy wallets.\n+        // 2) Considering the ongoing deprecation of the legacy spkm, this issue adds another good reason to transition towards descriptors.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1546405129",
      "id" : 1546405129,
      "in_reply_to_id" : 1545613304,
      "line" : 297,
      "node_id" : "PRRC_kwDOABII585cLEUJ",
      "original_commit_id" : "3997791eba1c10bb4d12ddf1fd25df596864c4ea",
      "original_line" : 297,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/addresses.cpp",
      "position" : 17,
      "pull_request_review_id" : 1971399064,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546405129/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-01T14:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546405129",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1546414622"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546414622"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Although it's older code, but would it be possible to rename this function and/or break this function down into smaller pieces since this PR is anyway refactoring this test? I see it's an 85 line function wherein a lot many things are happening including building/sending transactions, mining blocks, and numerous assertions that are hard to keep track of.\r\n\r\nThe goal of the function is to test the complete multisig workflow. You will probably end up duplicating code if you decouple it in smaller functions. But feel free to try it locally and push a follow-up PR if you get a better structure.",
      "commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "created_at" : "2024-04-01T14:56:12Z",
      "diff_hunk" : "@@ -133,117 +84,165 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n \n-    def do_multisig(self):\n-        node0, node1, node2 = self.nodes\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')\n \n-        if self.is_bdb_compiled():\n-            if 'wmulti' not in node1.listwallets():\n-                try:\n-                    node1.loadwallet('wmulti')\n-                except JSONRPCException as e:\n-                    path = self.nodes[1].wallets_path / \"wmulti\"\n-                    if e.error['code'] == -18 and \"Wallet file verification failed. Failed to load database path '{}'. Path does not exist.\".format(path) in e.error['message']:\n-                        node1.createwallet(wallet_name='wmulti', disable_private_keys=True)\n-                    else:\n-                        raise\n-            wmulti = node1.get_wallet_rpc('wmulti')\n+        # Check legacy wallet related command\n+        self.log.info('Test legacy redeem script max size limit (with wallet)')\n+        if wallet_multi is not None and not self.options.descriptors:\n+            assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'legacy')\n+\n+            self.log.info('Test legacy wallet unsupported operation. 16-20 multisig p2sh-legacy and bech32 generation')\n+            # Due an internal limitation on legacy wallets, the redeem script limit also applies to p2sh-segwit and bech32 (even when the scripts are valid)\n+            # We take this as a \"good thing\" to tell users to upgrade to descriptors.\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'p2sh-segwit')\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'bech32')\n+\n+    def do_multisig(self, nkeys, nsigs, output_type, wallet_multi):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1546414622",
      "id" : 1546414622,
      "in_reply_to_id" : 1545621376,
      "line" : 113,
      "node_id" : "PRRC_kwDOABII585cLGoe",
      "original_commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_line" : 113,
      "original_position" : 174,
      "original_start_line" : null,
      "path" : "test/functional/rpc_createmultisig.py",
      "position" : 174,
      "pull_request_review_id" : 1971399064,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546414622/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-01T14:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546414622",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1546416037"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546416037"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Again older code, but `prevtx_err` leads to an impression that it's an error related to a previous transaction but the usage of this variable doesn't show that it's an error, but a transaction itself.\r\n\r\nSure. Will leave it as is to not continue expanding the diff. Feel free to tackle it on a follow-up.",
      "commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "created_at" : "2024-04-01T14:57:39Z",
      "diff_hunk" : "@@ -133,117 +84,165 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n \n-    def do_multisig(self):\n-        node0, node1, node2 = self.nodes\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')\n \n-        if self.is_bdb_compiled():\n-            if 'wmulti' not in node1.listwallets():\n-                try:\n-                    node1.loadwallet('wmulti')\n-                except JSONRPCException as e:\n-                    path = self.nodes[1].wallets_path / \"wmulti\"\n-                    if e.error['code'] == -18 and \"Wallet file verification failed. Failed to load database path '{}'. Path does not exist.\".format(path) in e.error['message']:\n-                        node1.createwallet(wallet_name='wmulti', disable_private_keys=True)\n-                    else:\n-                        raise\n-            wmulti = node1.get_wallet_rpc('wmulti')\n+        # Check legacy wallet related command\n+        self.log.info('Test legacy redeem script max size limit (with wallet)')\n+        if wallet_multi is not None and not self.options.descriptors:\n+            assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'legacy')\n+\n+            self.log.info('Test legacy wallet unsupported operation. 16-20 multisig p2sh-legacy and bech32 generation')\n+            # Due an internal limitation on legacy wallets, the redeem script limit also applies to p2sh-segwit and bech32 (even when the scripts are valid)\n+            # We take this as a \"good thing\" to tell users to upgrade to descriptors.\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'p2sh-segwit')\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'bech32')\n+\n+    def do_multisig(self, nkeys, nsigs, output_type, wallet_multi):\n+        node0, node1, node2 = self.nodes\n+        pub_keys = self.pub[0: nkeys]\n+        priv_keys = self.priv[0: nkeys]\n \n         # Construct the expected descriptor\n-        desc = 'multi({},{})'.format(self.nsigs, ','.join(self.pub))\n-        if self.output_type == 'legacy':\n+        desc = 'multi({},{})'.format(nsigs, ','.join(pub_keys))\n+        if output_type == 'legacy':\n             desc = 'sh({})'.format(desc)\n-        elif self.output_type == 'p2sh-segwit':\n+        elif output_type == 'p2sh-segwit':\n             desc = 'sh(wsh({}))'.format(desc)\n-        elif self.output_type == 'bech32':\n+        elif output_type == 'bech32':\n             desc = 'wsh({})'.format(desc)\n         desc = descsum_create(desc)\n \n-        msig = node2.createmultisig(self.nsigs, self.pub, self.output_type)\n+        msig = node2.createmultisig(nsigs, pub_keys, output_type)\n         assert 'warnings' not in msig\n         madd = msig[\"address\"]\n         mredeem = msig[\"redeemScript\"]\n         assert_equal(desc, msig['descriptor'])\n-        if self.output_type == 'bech32':\n+        if output_type == 'bech32':\n             assert madd[0:4] == \"bcrt\"  # actually a bech32 address\n \n-        if self.is_bdb_compiled():\n+        if wallet_multi is not None:\n             # compare against addmultisigaddress\n-            msigw = wmulti.addmultisigaddress(self.nsigs, self.pub, None, self.output_type)\n+            msigw = wallet_multi.addmultisigaddress(nsigs, pub_keys, None, output_type)\n             maddw = msigw[\"address\"]\n             mredeemw = msigw[\"redeemScript\"]\n             assert_equal(desc, drop_origins(msigw['descriptor']))\n             # addmultisigiaddress and createmultisig work the same\n             assert maddw == madd\n             assert mredeemw == mredeem\n-            wmulti.unloadwallet()\n \n         spk = address_to_scriptpubkey(madd)\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=spk, amount=1300)[\"txid\"]\n-        tx = node0.getrawtransaction(txid, True)\n-        vout = [v[\"n\"] for v in tx[\"vout\"] if madd == v[\"scriptPubKey\"][\"address\"]]\n-        assert len(vout) == 1\n-        vout = vout[0]\n-        scriptPubKey = tx[\"vout\"][vout][\"scriptPubKey\"][\"hex\"]\n-        value = tx[\"vout\"][vout][\"value\"]\n-        prevtxs = [{\"txid\": txid, \"vout\": vout, \"scriptPubKey\": scriptPubKey, \"redeemScript\": mredeem, \"amount\": value}]\n+        value = decimal.Decimal(\"0.00004000\")\n+        tx = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=spk, amount=int(value * COIN))\n+        prevtxs = [{\"txid\": tx[\"txid\"], \"vout\": tx[\"sent_vout\"], \"scriptPubKey\": spk.hex(), \"redeemScript\": mredeem, \"amount\": value}]\n \n         self.generate(node0, 1)\n \n-        outval = value - decimal.Decimal(\"0.00001000\")\n-        rawtx = node2.createrawtransaction([{\"txid\": txid, \"vout\": vout}], [{self.final: outval}])\n+        outval = value - decimal.Decimal(\"0.00002000\")  # deduce fee (must be higher than the min relay fee)\n+        # send coins to node2 when wallet is enabled\n+        node2_balance = node2.getbalances()['mine']['trusted'] if self.is_wallet_compiled() else 0\n+        out_addr = node2.getnewaddress() if self.is_wallet_compiled() else getnewdestination('bech32')[2]\n+        rawtx = node2.createrawtransaction([{\"txid\": tx[\"txid\"], \"vout\": tx[\"sent_vout\"]}], [{out_addr: outval}])\n \n         prevtx_err = dict(prevtxs[0])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1546416037",
      "id" : 1546416037,
      "in_reply_to_id" : 1545621668,
      "line" : 159,
      "node_id" : "PRRC_kwDOABII585cLG-l",
      "original_commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_line" : 159,
      "original_position" : 239,
      "original_start_line" : null,
      "path" : "test/functional/rpc_createmultisig.py",
      "position" : 239,
      "pull_request_review_id" : 1971399064,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546416037/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-01T14:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546416037",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1581838289"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1581838289"
         }
      },
      "author_association" : "MEMBER",
      "body" : "sure, will change it if I have to retouch the code.",
      "commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "created_at" : "2024-04-27T14:22:17Z",
      "diff_hunk" : "@@ -217,6 +180,41 @@ def do_multisig(self, nkeys, nsigs, output_type, wallet_multi):\n         txinfo = node0.getrawtransaction(tx, True, blk)\n         self.log.info(\"n/m=%d/%d %s size=%d vsize=%d weight=%d\" % (nsigs, nkeys, output_type, txinfo[\"size\"], txinfo[\"vsize\"], txinfo[\"weight\"]))\n \n+    def test_mixing_uncompressed_and_compressed_keys(self, node, wallet_multi):\n+        self.log.info('Mixed compressed and uncompressed multisigs are not allowed')\n+        pk0, pk1, pk2 = [getnewdestination('bech32')[0].hex() for _ in range(3)]\n+\n+        # decompress pk2\n+        pk_obj = ECPubKey()\n+        pk_obj.set(bytes.fromhex(pk2))\n+        pk_obj.compressed = False\n+        pk2 = pk_obj.get_bytes().hex()\n+\n+        # Check all permutations of keys because order matters apparently\n+        for keys in itertools.permutations([pk0, pk1, pk2]):\n+            # Results should be the same as this legacy one\n+            legacy_addr = node.createmultisig(2, keys, 'legacy')['address']\n+\n+            if wallet_multi is not None:\n+                # 'addmultisigaddress' should return the same address\n+                result = wallet_multi.addmultisigaddress(2, keys, '', 'legacy')\n+                assert_equal(legacy_addr, result['address'])\n+                assert 'warnings' not in result\n+\n+            # Generate addresses with the segwit types. These should all make legacy addresses\n+            err_msg = [\"Unable to make chosen address type, please ensure no uncompressed public keys are present.\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1581838289",
      "id" : 1581838289,
      "in_reply_to_id" : 1545617378,
      "line" : 222,
      "node_id" : "PRRC_kwDOABII585eSO_R",
      "original_commit_id" : "fffa9bb9a02e06dc57a61f301f8eff3d3cd7142a",
      "original_line" : 205,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "test/functional/rpc_createmultisig.py",
      "position" : 312,
      "pull_request_review_id" : 2026656842,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1581838289/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-27T14:22:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1581838289",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1581838453"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1581838453"
         }
      },
      "author_association" : "MEMBER",
      "body" : "sure, will change it if I have to retouch this code.",
      "commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "created_at" : "2024-04-27T14:23:20Z",
      "diff_hunk" : "@@ -83,6 +84,21 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n+    def test_multisig_script_limit(self):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n+\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n+\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n+\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1581838453",
      "id" : 1581838453,
      "in_reply_to_id" : 1545618073,
      "line" : 100,
      "node_id" : "PRRC_kwDOABII585eSPB1",
      "original_commit_id" : "29e7bb80cbc35dccb40681d7fb97628206a4ec8b",
      "original_line" : 100,
      "original_position" : 36,
      "original_start_line" : 99,
      "path" : "test/functional/rpc_createmultisig.py",
      "position" : 150,
      "pull_request_review_id" : 2026656977,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1581838453/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 99,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-04-27T14:23:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1581838453",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-05-03T16:55:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#issuecomment-2093395999",
      "id" : 2093395999,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28307",
      "node_id" : "IC_kwDOABII5858xrAf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2093395999/reactions"
      },
      "updated_at" : "2024-05-03T16:55:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2093395999",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I wrote a test for RPC `signrawtransactionwithkey` that covers legacy P2SH with 15 and 16 public keys. Both calls succeed even though the latter produces a scriptSig that exceeds `MAX_STANDARD_SCRIPTSIG_SIZE` and if it ever made it into a block, would exceed `MAX_SCRIPT_ELEMENT_SIZE`\r\n\r\nThis test behaves the same on master! So, that is potentially a footgun although not an easy one for a user to pull off and also would not result in any loss of funds.\r\n\r\nhttps://gist.github.com/pinheadmz/ca8ed75913902bd1ddf88bdd921712ee",
      "created_at" : "2024-05-03T17:36:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#issuecomment-2093475353",
      "id" : 2093475353,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28307",
      "node_id" : "IC_kwDOABII5858x-YZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2093475353/reactions"
      },
      "updated_at" : "2024-05-03T17:36:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2093475353",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The confusing point about this command is that it returns the post-processed tx hex regardless of what it was able to do internally or if the script passes the verification step. This is because, in a multisig scenario, the process could have appended only one of the signatures, which would obviously fail during the script verification. Thus, the process needs to update the transaction and notify the user that there are still missing signatures so it can relay it to the next party.\r\n\r\nAh thanks, TIL! Now I see how this PR affects that specific RPC\r\n\r\n## master\r\n\r\n* Does not sign, tx remains invalid *\r\n> {'hex': '0200000001da5a0d84190834f2e417ac124a7fb0cf386f73fdc3f0dec5320e332b1acc2df90000000000fdffffff01c0e4022a01000000225120d8f28c020ca2c2d17f27eff0ccb1131382e061d5f6f4c2bad4608f96ca7c68a700000000', 'complete': False, 'errors': [{'txid': 'f92dcc1a2b330e32c5def0c3fd736f38cfb07f4a12ac17e4f2340819840d5ada', 'vout': 0, 'witness': [], 'scriptSig': '', 'sequence': 4294967293, 'error': 'Unable to sign input, invalid stack size (possibly missing key)'}]}\r\n\r\n## PR 28307\r\n\r\n* Signs, creating tx that is invalid for a different reason *\r\n> {'hex': '0200000001748d3c4f36e30d8d490e87c7f736e2fd818f18505f2e7b670d24aa8d52b61d7800000000fd6f020047304402205573e3358c93b899f5c91ed048363e388bee1d2dc79b65db9a907b71736a2ac9022021878bbee92ef3cd86d1d13a622948f8295b4de3ee0d27ddce67266351cd0e93014d23025121022ad2cbe6eb900100e0687f3d5c24d5af05a3f51cb304653833852d4b786219c42102b907c238e932585f89620f9d22e43e3c79814e20b1f19943bb16fc9ec9fa5b7b2102133d3548c34804b57127308980070929b29c2c273a995c7b19370776528c482f21034a218ed831df40b0d51acde6f60f3eb4fb1fd774528df5d8225d64c817e2eafc2103d91c55070d379c358e7a5ec216c75d512b864872f0722c5cc41e261de60ab36f2103f687e273c93aad1cb3c0e6837a95cb3532b2745e7315342c8a80e2683cbf07852102a5a4a70e4ef942a69c3e2e246256f41da149a7ab2f69a2b5c8fba09247cbea34210354a67b554c251e238faf2ec91532ae0e9783f89451cd5ac8df483da8cf4ba42f21022b702b20654cd110f77f7dbbe4f89a5629baca8f83c4bd3580332534381036b321028ad603a203645db07e76dc2ff73a0c1a628d215df67cc9f57923e5bfedc09a33210289de87715d75d12c931791e91091e33a292dbac7be19f7998e62eafe961b0b87210339175fa8aeee2d525e6414bff501a09b8ab2fac58948f3cf99bd285489467804210355cdc7bb582a8434d8c2b71e3ff8a6029cf26ae54f5058cd96025f1ac12bba9721026c4da02cfe442ea4e58c48bdb8867612ba62a06821f018c2357d4424c5e5ceaa21039db5509208500013366ad60684f7e4f63a768b48b6b06cb83ce549383c6307542103049efb80896116bd2ee7de7255e018fef52cf982d5fbd60f4b1fb777ed9efa3a60aefdffffff01c0e4022a01000000225120d61857a69972ddac6af7e01798f2eea20a66c8368f51871016f1f706778bf4fc00000000', 'complete': False, 'errors': [{'txid': '781db6528daa240d677b2e5f50188f81fde236f7c7870e498d0de3364f3c8d74', 'vout': 0, 'witness': [], 'scriptSig': '0047304402205573e3358c93b899f5c91ed048363e388bee1d2dc79b65db9a907b71736a2ac9022021878bbee92ef3cd86d1d13a622948f8295b4de3ee0d27ddce67266351cd0e93014d23025121022ad2cbe6eb900100e0687f3d5c24d5af05a3f51cb304653833852d4b786219c42102b907c238e932585f89620f9d22e43e3c79814e20b1f19943bb16fc9ec9fa5b7b2102133d3548c34804b57127308980070929b29c2c273a995c7b19370776528c482f21034a218ed831df40b0d51acde6f60f3eb4fb1fd774528df5d8225d64c817e2eafc2103d91c55070d379c358e7a5ec216c75d512b864872f0722c5cc41e261de60ab36f2103f687e273c93aad1cb3c0e6837a95cb3532b2745e7315342c8a80e2683cbf07852102a5a4a70e4ef942a69c3e2e246256f41da149a7ab2f69a2b5c8fba09247cbea34210354a67b554c251e238faf2ec91532ae0e9783f89451cd5ac8df483da8cf4ba42f21022b702b20654cd110f77f7dbbe4f89a5629baca8f83c4bd3580332534381036b321028ad603a203645db07e76dc2ff73a0c1a628d215df67cc9f57923e5bfedc09a33210289de87715d75d12c931791e91091e33a292dbac7be19f7998e62eafe961b0b87210339175fa8aeee2d525e6414bff501a09b8ab2fac58948f3cf99bd285489467804210355cdc7bb582a8434d8c2b71e3ff8a6029cf26ae54f5058cd96025f1ac12bba9721026c4da02cfe442ea4e58c48bdb8867612ba62a06821f018c2357d4424c5e5ceaa21039db5509208500013366ad60684f7e4f63a768b48b6b06cb83ce549383c6307542103049efb80896116bd2ee7de7255e018fef52cf982d5fbd60f4b1fb777ed9efa3a60ae', 'sequence': 4294967293, 'error': 'Push value size limit exceeded'}]}\r\n",
      "created_at" : "2024-05-06T15:31:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#issuecomment-2096308420",
      "id" : 2096308420,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28307",
      "node_id" : "IC_kwDOABII58588yDE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2096308420/reactions"
      },
      "updated_at" : "2024-05-06T15:31:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2096308420",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   }
]
