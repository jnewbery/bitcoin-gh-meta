[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [fanquake](https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1706343369) |\n| Approach ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/28385#pullrequestreview-1609794532) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28335](https://github.com/bitcoin/bitcoin/pull/28335) (RFC: Remove boost usage from kernel api / headers by TheCharlatan)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-09-01T15:52:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1702965783",
      "id" : 1702965783,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28385",
      "node_id" : "IC_kwDOABII585lgTIX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1702965783/reactions"
      },
      "updated_at" : "2023-09-05T10:18:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1702965783",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1313753384"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313753384"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The comment here about `insertion_order` needs updating.",
      "commit_id" : "0c356aaafad6a45cd5a6c52d2a561f392751533a",
      "created_at" : "2023-09-02T07:00:09Z",
      "diff_hunk" : "@@ -301,8 +301,8 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n     // Iterate disconnectpool in reverse, so that we add transactions",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1313753384",
      "id" : 1313753384,
      "line" : 301,
      "node_id" : "PRRC_kwDOABII585OTkko",
      "original_commit_id" : "0c356aaafad6a45cd5a6c52d2a561f392751533a",
      "original_line" : 301,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 1,
      "pull_request_review_id" : 1607967957,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313753384/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-02T07:00:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313753384",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "- Dropped last 2 commits since they're now in #28391\r\n- Switched to the list + map implementation. I thought about it more over the weekend and it feels more similar to the current impl + would be more performant in the average case.\r\n- Addressed https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1313753384\r\n- Improved the bench a little, reduced some duplicate code",
      "created_at" : "2023-09-04T10:23:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1705008336",
      "id" : 1705008336,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28385",
      "node_id" : "IC_kwDOABII585loFzQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1705008336/reactions"
      },
      "updated_at" : "2023-09-04T10:23:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1705008336",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1314742050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314742050"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done, thanks",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-04T10:23:53Z",
      "diff_hunk" : "@@ -301,8 +301,8 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n     // Iterate disconnectpool in reverse, so that we add transactions",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1314742050",
      "id" : 1314742050,
      "in_reply_to_id" : 1313753384,
      "line" : 301,
      "node_id" : "PRRC_kwDOABII585OXV8i",
      "original_commit_id" : "0c356aaafad6a45cd5a6c52d2a561f392751533a",
      "original_line" : 301,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 1,
      "pull_request_review_id" : 1609235600,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314742050/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-04T10:23:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314742050",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1314917018"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314917018"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is only used in `validation.cpp`, and one unit test, so I wonder if it makes sense to move it to a separate header? ",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-04T12:56:15Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1314917018",
      "id" : 1314917018,
      "line" : 250,
      "node_id" : "PRRC_kwDOABII585OYAqa",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 250,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : 18,
      "pull_request_review_id" : 1609499811,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314917018/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-04T12:56:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314917018",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1314920227"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314920227"
         }
      },
      "author_association" : "MEMBER",
      "body" : "makes sense to me. kernel/disconnected_transactions.h?",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-04T12:59:17Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1314920227",
      "id" : 1314920227,
      "in_reply_to_id" : 1314917018,
      "line" : 250,
      "node_id" : "PRRC_kwDOABII585OYBcj",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 250,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : 18,
      "pull_request_review_id" : 1609504968,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314920227/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-04T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314920227",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315098713"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315098713"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: would suggest reserving to avoid rehashing the set\r\n```suggestion\r\n        std::unordered_set<uint256, SaltedTxidHasher> txids;\r\n        txids.reserve(vtx.size());\r\n```",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-04T16:16:48Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315098713",
      "id" : 1315098713,
      "line" : 283,
      "node_id" : "PRRC_kwDOABII585OYtBZ",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 283,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : 51,
      "pull_request_review_id" : 1609794532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315098713/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-04T17:24:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315098713",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315106643"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315106643"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: could avoid creating `it_next`\r\n```suggestion\r\n            if (txids.count((*it)->GetHash()) > 0) {\r\n                cachedInnerUsage -= RecursiveDynamicUsage(*it);\r\n                it = queuedTx.erase(it);\r\n            } else {\r\n                ++it;\r\n            }\r\n```",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-04T16:27:33Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315106643",
      "id" : 1315106643,
      "line" : 293,
      "node_id" : "PRRC_kwDOABII585OYu9T",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 293,
      "original_position" : 61,
      "original_start_line" : 288,
      "path" : "src/validation.h",
      "position" : 61,
      "pull_request_review_id" : 1609794532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315106643/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 288,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-04T17:24:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315106643",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315116227"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315116227"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Or actually, could use `std::list::remove_if`. Quickly conveys the intent of the code imo, and looks like it speeds up the bench a tiny bit, going from \r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        7,204,642.33 |              138.80 |    0.2% |      0.87 | `AddAndRemoveDisconnectedBlockTransactions10`\r\n|        5,293,310.64 |              188.92 |    0.4% |      0.64 | `AddAndRemoveDisconnectedBlockTransactions100`\r\n|        6,931,825.73 |              144.26 |    0.9% |      0.84 | `AddAndRemoveDisconnectedBlockTransactions90`\r\n\r\nto\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        6,971,191.70 |              143.45 |    0.8% |      0.84 | `AddAndRemoveDisconnectedBlockTransactions10`\r\n|        4,991,280.27 |              200.35 |    0.7% |      0.60 | `AddAndRemoveDisconnectedBlockTransactions100`\r\n|        6,632,837.50 |              150.77 |    0.6% |      0.80 | `AddAndRemoveDisconnectedBlockTransactions90`\r\n\r\n<details>\r\n<summary>git diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/validation.h b/src/validation.h\r\nindex 3e1a024d09..c81331f950 100644\r\n--- a/src/validation.h\r\n+++ b/src/validation.h\r\n@@ -283,15 +283,13 @@ struct DisconnectedBlockTransactions {\r\n         std::unordered_set<uint256, SaltedTxidHasher> txids;\r\n         std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\r\n         // Iterate through entire list once, removing any transactions in the block.\r\n-        auto it = queuedTx.begin();\r\n-        while (it != queuedTx.end()) {\r\n-            auto it_next = std::next(it);\r\n-            if (txids.count((*it)->GetHash()) > 0) {\r\n-                cachedInnerUsage -= RecursiveDynamicUsage(*it);\r\n-                queuedTx.erase(it);\r\n+        queuedTx.remove_if([&](const CTransactionRef& tx) {\r\n+            if (txids.count(tx->GetHash()) > 0) {\r\n+                cachedInnerUsage -= RecursiveDynamicUsage(tx);\r\n+                return true;\r\n             }\r\n-            it = it_next;\r\n-        }\r\n+            return false;\r\n+        });\r\n     }\r\n \r\n     // Remove the earliest-inserted transaction.\r\n\r\n```\r\n</details>",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-04T16:46:39Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315116227",
      "id" : 1315116227,
      "in_reply_to_id" : 1315106643,
      "line" : 293,
      "node_id" : "PRRC_kwDOABII585OYxTD",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 293,
      "original_position" : 61,
      "original_start_line" : 288,
      "path" : "src/validation.h",
      "position" : 61,
      "pull_request_review_id" : 1609794532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315116227/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 288,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-04T17:24:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315116227",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315120053"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315120053"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Since the dynamic memory usage of `queuedTx` now changed, I think this is behaviour change as we'll be dropping entries less frequently?",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-04T16:54:45Z",
      "diff_hunk" : "@@ -2726,9 +2726,9 @@ bool Chainstate::DisconnectTip(BlockValidationState& state, DisconnectedBlockTra\n         }\n         while (disconnectpool->DynamicMemoryUsage() > MAX_DISCONNECTED_TX_POOL_SIZE * 1000) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315120053",
      "id" : 1315120053,
      "line" : 2727,
      "node_id" : "PRRC_kwDOABII585OYyO1",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 2727,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 13,
      "pull_request_review_id" : 1609794532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315120053/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-04T17:24:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315120053",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315121992"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315121992"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Perhaps worth adding an `assert(!disconnectpool->queuedTx.empty())` here? I know we already assume that's the case because `disconnectpool` is non-nullptr and because of the dynamic memory usage check, but i think adding an assertion may make this more robust, since for an empty vector we have UB here and two lines down.",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-04T16:59:13Z",
      "diff_hunk" : "@@ -2726,9 +2726,9 @@ bool Chainstate::DisconnectTip(BlockValidationState& state, DisconnectedBlockTra\n         }\n         while (disconnectpool->DynamicMemoryUsage() > MAX_DISCONNECTED_TX_POOL_SIZE * 1000) {\n             // Drop the earliest entry, and remove its children from the mempool.\n-            auto it = disconnectpool->queuedTx.get<insertion_order>().begin();\n-            m_mempool->removeRecursive(**it, MemPoolRemovalReason::REORG);\n-            disconnectpool->removeEntry(it);\n+            auto ptx = disconnectpool->queuedTx.front();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315121992",
      "id" : 1315121992,
      "line" : 2729,
      "node_id" : "PRRC_kwDOABII585OYytI",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 2729,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 18,
      "pull_request_review_id" : 1609794532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315121992/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-04T17:24:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315121992",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315126680"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315126680"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "[this comment](https://github.com/bitcoin/bitcoin/pull/28385/files#diff-97c3a52bc5fad452d82670a7fd291800bae20c7bc35bb82686c2c0a4ea7b5b98L298) still needs updating",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-04T17:10:35Z",
      "diff_hunk" : "@@ -301,8 +301,8 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n     // Iterate disconnectpool in reverse, so that we add transactions\n     // back to the mempool starting with the earliest transaction that had\n     // been previously seen in a block.\n-    auto it = disconnectpool.queuedTx.get<insertion_order>().rbegin();\n-    while (it != disconnectpool.queuedTx.get<insertion_order>().rend()) {\n+    auto it = disconnectpool.queuedTx.rbegin();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315126680",
      "id" : 1315126680,
      "line" : 304,
      "node_id" : "PRRC_kwDOABII585OYz2Y",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 304,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 6,
      "pull_request_review_id" : 1609794532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315126680/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-04T17:24:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315126680",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK - great stuff.\r\n\r\n> I think it's preferable to use stdlib data structures instead of depending on boost if we can achieve the same thing.\r\n\r\n+1",
      "created_at" : "2023-09-05T10:18:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1706343369",
      "id" : 1706343369,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28385",
      "node_id" : "IC_kwDOABII585ltLvJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1706343369/reactions"
      },
      "updated_at" : "2023-09-05T10:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1706343369",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315700650"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315700650"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`remove_if` doesn't change the size of the container, so your patch is incomplete, no?",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-05T10:27:25Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315700650",
      "id" : 1315700650,
      "in_reply_to_id" : 1315106643,
      "line" : 293,
      "node_id" : "PRRC_kwDOABII585Oa_-q",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 293,
      "original_position" : 61,
      "original_start_line" : 288,
      "path" : "src/validation.h",
      "position" : 61,
      "pull_request_review_id" : 1610734123,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315700650/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 288,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-05T10:27:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315700650",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315715972"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315715972"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`queuedTx` is not a vector but a list, so I think just removing it from the list is sufficient?",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-05T10:42:47Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315715972",
      "id" : 1315715972,
      "in_reply_to_id" : 1315106643,
      "line" : 293,
      "node_id" : "PRRC_kwDOABII585ObDuE",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 293,
      "original_position" : 61,
      "original_start_line" : 288,
      "path" : "src/validation.h",
      "position" : 61,
      "pull_request_review_id" : 1610758430,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315715972/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 288,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-05T10:42:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315715972",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315721974"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315721974"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why would the container make a difference? If I print `std::list::size()`, it remains unchanged.\r\n\r\n\r\n```cpp\r\n#include <algorithm>\r\n#include <iostream>\r\n#include <list>\r\n  \r\nint main()\r\n{\r\n    std::list<char> str1 {'T', ' ', 't'};\r\n\r\n \r\n    auto noSpaceEnd = std::remove(str1.begin(), str1.end(), ' ');\r\n \r\n         std::cout  << \" size: \" << str1.size() << '\\n';\r\n\r\n    str1.erase(noSpaceEnd, str1.end());\r\n \r\n     std::cout  << \" size: \" << str1.size() << '\\n';\r\n \r\n  \r\n}\r\n```\r\n\r\n```\r\n size: 3\r\n\r\n size: 2",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-05T10:49:01Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315721974",
      "id" : 1315721974,
      "in_reply_to_id" : 1315106643,
      "line" : 293,
      "node_id" : "PRRC_kwDOABII585ObFL2",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 293,
      "original_position" : 61,
      "original_start_line" : 288,
      "path" : "src/validation.h",
      "position" : 61,
      "pull_request_review_id" : 1610768061,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315721974/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 288,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-05T10:49:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315721974",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315735924"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315735924"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, sorry, you are using `std::list::remove_if`, not `std::remove_if`.",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-05T11:02:16Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315735924",
      "id" : 1315735924,
      "in_reply_to_id" : 1315106643,
      "line" : 293,
      "node_id" : "PRRC_kwDOABII585ObIl0",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 293,
      "original_position" : 61,
      "original_start_line" : 288,
      "path" : "src/validation.h",
      "position" : 61,
      "pull_request_review_id" : 1610789611,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315735924/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 288,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-05T11:02:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315735924",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315745332"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315745332"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, I didn't realize they behaved differently but with `std::list::remove_if` the items are indeed removed from the container, as opposed to just shifted:\r\n\r\n```\r\n#include <algorithm>\r\n#include <iostream>\r\n#include <list>\r\n  \r\nint main()\r\n{\r\n    std::list<char> str1 {'T', ' ', 't'};\r\n\r\n    str1.remove(' ');\r\n         std::cout  << \" size: \" << str1.size() << '\\n';\r\n  \r\n}\r\n```\r\n \r\n```\r\nsize: 2\r\n```",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-05T11:12:17Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315745332",
      "id" : 1315745332,
      "in_reply_to_id" : 1315106643,
      "line" : 293,
      "node_id" : "PRRC_kwDOABII585ObK40",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 293,
      "original_position" : 61,
      "original_start_line" : 288,
      "path" : "src/validation.h",
      "position" : 61,
      "pull_request_review_id" : 1610805064,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315745332/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 288,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-05T11:12:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315745332",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315818643"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315818643"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps (I think it's negligible compared to the transactions themselves), and would probably be an improvement.",
      "commit_id" : "0409dbcc9d5394d310da50e0ca326fb132b6d1e2",
      "created_at" : "2023-09-05T12:23:10Z",
      "diff_hunk" : "@@ -2726,9 +2726,9 @@ bool Chainstate::DisconnectTip(BlockValidationState& state, DisconnectedBlockTra\n         }\n         while (disconnectpool->DynamicMemoryUsage() > MAX_DISCONNECTED_TX_POOL_SIZE * 1000) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315818643",
      "id" : 1315818643,
      "in_reply_to_id" : 1315120053,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ObcyT",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 2727,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1610928529,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315818643/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-05T12:23:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315818643",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315830894"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315830894"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Wow, I just realized I was pushing changes to the wrong branch ð¤¦ \r\nI have changed this now",
      "commit_id" : "0409dbcc9d5394d310da50e0ca326fb132b6d1e2",
      "created_at" : "2023-09-05T12:33:46Z",
      "diff_hunk" : "@@ -301,8 +301,8 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n     // Iterate disconnectpool in reverse, so that we add transactions\n     // back to the mempool starting with the earliest transaction that had\n     // been previously seen in a block.\n-    auto it = disconnectpool.queuedTx.get<insertion_order>().rbegin();\n-    while (it != disconnectpool.queuedTx.get<insertion_order>().rend()) {\n+    auto it = disconnectpool.queuedTx.rbegin();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315830894",
      "id" : 1315830894,
      "in_reply_to_id" : 1315126680,
      "line" : 304,
      "node_id" : "PRRC_kwDOABII585Obfxu",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 304,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 15,
      "pull_request_review_id" : 1610948591,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 1,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315830894/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-05T13:15:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315830894",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315877339"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315877339"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This line went away with the list + map approach so marking as resolved",
      "commit_id" : "0409dbcc9d5394d310da50e0ca326fb132b6d1e2",
      "created_at" : "2023-09-05T13:11:10Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315877339",
      "id" : 1315877339,
      "in_reply_to_id" : 1315098713,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ObrHb",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 283,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 1610948591,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315877339/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-05T13:15:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315877339",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315877657"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315877657"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This line went away with the list + map approach so marking as resolved\r\n",
      "commit_id" : "0409dbcc9d5394d310da50e0ca326fb132b6d1e2",
      "created_at" : "2023-09-05T13:11:27Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315877657",
      "id" : 1315877657,
      "in_reply_to_id" : 1315106643,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ObrMZ",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 293,
      "original_position" : 61,
      "original_start_line" : 288,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 1610948591,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315877657/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-05T13:15:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315877657",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315880225"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315880225"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "0409dbcc9d5394d310da50e0ca326fb132b6d1e2",
      "created_at" : "2023-09-05T13:13:26Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315880225",
      "id" : 1315880225,
      "in_reply_to_id" : 1314917018,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Obr0h",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 250,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 1610948591,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315880225/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-05T13:15:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315880225",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315880709"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315880709"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added in the while loop condition, feels a bit more robust than crashing",
      "commit_id" : "0409dbcc9d5394d310da50e0ca326fb132b6d1e2",
      "created_at" : "2023-09-05T13:13:48Z",
      "diff_hunk" : "@@ -2726,9 +2726,9 @@ bool Chainstate::DisconnectTip(BlockValidationState& state, DisconnectedBlockTra\n         }\n         while (disconnectpool->DynamicMemoryUsage() > MAX_DISCONNECTED_TX_POOL_SIZE * 1000) {\n             // Drop the earliest entry, and remove its children from the mempool.\n-            auto it = disconnectpool->queuedTx.get<insertion_order>().begin();\n-            m_mempool->removeRecursive(**it, MemPoolRemovalReason::REORG);\n-            disconnectpool->removeEntry(it);\n+            auto ptx = disconnectpool->queuedTx.front();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315880709",
      "id" : 1315880709,
      "in_reply_to_id" : 1315121992,
      "line" : 2729,
      "node_id" : "PRRC_kwDOABII585Obr8F",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 2729,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 31,
      "pull_request_review_id" : 1610948591,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315880709/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-05T13:15:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315880709",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   }
]
