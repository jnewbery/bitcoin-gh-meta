[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [fanquake](https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1706343369), [instagibbs](https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1706993248), [theuni](https://github.com/bitcoin/bitcoin/pull/28385#pullrequestreview-1611340310), [stickies-v](https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1708154619) |\n| Approach ACK | [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/28385#pullrequestreview-1611253884) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28335](https://github.com/bitcoin/bitcoin/pull/28335) (RFC: Remove boost usage from kernel api / headers by TheCharlatan)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-09-01T15:52:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1702965783",
      "id" : 1702965783,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28385",
      "node_id" : "IC_kwDOABII585lgTIX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1702965783/reactions"
      },
      "updated_at" : "2023-09-06T11:22:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1702965783",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1313753384"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313753384"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The comment here about `insertion_order` needs updating.",
      "commit_id" : "0c356aaafad6a45cd5a6c52d2a561f392751533a",
      "created_at" : "2023-09-02T07:00:09Z",
      "diff_hunk" : "@@ -301,8 +301,8 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n     // Iterate disconnectpool in reverse, so that we add transactions",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1313753384",
      "id" : 1313753384,
      "line" : 301,
      "node_id" : "PRRC_kwDOABII585OTkko",
      "original_commit_id" : "0c356aaafad6a45cd5a6c52d2a561f392751533a",
      "original_line" : 301,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 1,
      "pull_request_review_id" : 1607967957,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313753384/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-02T07:00:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313753384",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "- Dropped last 2 commits since they're now in #28391\r\n- Switched to the list + map implementation. I thought about it more over the weekend and it feels more similar to the current impl + would be more performant in the average case.\r\n- Addressed https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1313753384\r\n- Improved the bench a little, reduced some duplicate code",
      "created_at" : "2023-09-04T10:23:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1705008336",
      "id" : 1705008336,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28385",
      "node_id" : "IC_kwDOABII585loFzQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1705008336/reactions"
      },
      "updated_at" : "2023-09-04T10:23:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1705008336",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1314742050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314742050"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done, thanks",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-04T10:23:53Z",
      "diff_hunk" : "@@ -301,8 +301,8 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n     // Iterate disconnectpool in reverse, so that we add transactions",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1314742050",
      "id" : 1314742050,
      "in_reply_to_id" : 1313753384,
      "line" : 301,
      "node_id" : "PRRC_kwDOABII585OXV8i",
      "original_commit_id" : "0c356aaafad6a45cd5a6c52d2a561f392751533a",
      "original_line" : 301,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 1,
      "pull_request_review_id" : 1609235600,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314742050/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-04T10:23:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314742050",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1314917018"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314917018"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is only used in `validation.cpp`, and one unit test, so I wonder if it makes sense to move it to a separate header? ",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-04T12:56:15Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1314917018",
      "id" : 1314917018,
      "line" : 250,
      "node_id" : "PRRC_kwDOABII585OYAqa",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 250,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : 18,
      "pull_request_review_id" : 1609499811,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314917018/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-04T12:56:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314917018",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1314920227"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314920227"
         }
      },
      "author_association" : "MEMBER",
      "body" : "makes sense to me. kernel/disconnected_transactions.h?",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-04T12:59:17Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1314920227",
      "id" : 1314920227,
      "in_reply_to_id" : 1314917018,
      "line" : 250,
      "node_id" : "PRRC_kwDOABII585OYBcj",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 250,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : 18,
      "pull_request_review_id" : 1609504968,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314920227/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-04T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314920227",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315098713"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315098713"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: would suggest reserving to avoid rehashing the set\r\n```suggestion\r\n        std::unordered_set<uint256, SaltedTxidHasher> txids;\r\n        txids.reserve(vtx.size());\r\n```",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-04T16:16:48Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315098713",
      "id" : 1315098713,
      "line" : 283,
      "node_id" : "PRRC_kwDOABII585OYtBZ",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 283,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : 51,
      "pull_request_review_id" : 1609794532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315098713/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-04T17:24:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315098713",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315106643"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315106643"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: could avoid creating `it_next`\r\n```suggestion\r\n            if (txids.count((*it)->GetHash()) > 0) {\r\n                cachedInnerUsage -= RecursiveDynamicUsage(*it);\r\n                it = queuedTx.erase(it);\r\n            } else {\r\n                ++it;\r\n            }\r\n```",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-04T16:27:33Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315106643",
      "id" : 1315106643,
      "line" : 293,
      "node_id" : "PRRC_kwDOABII585OYu9T",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 293,
      "original_position" : 61,
      "original_start_line" : 288,
      "path" : "src/validation.h",
      "position" : 61,
      "pull_request_review_id" : 1609794532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315106643/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 288,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-04T17:24:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315106643",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315116227"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315116227"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Or actually, could use `std::list::remove_if`. Quickly conveys the intent of the code imo, and looks like it speeds up the bench a tiny bit, going from \r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        7,204,642.33 |              138.80 |    0.2% |      0.87 | `AddAndRemoveDisconnectedBlockTransactions10`\r\n|        5,293,310.64 |              188.92 |    0.4% |      0.64 | `AddAndRemoveDisconnectedBlockTransactions100`\r\n|        6,931,825.73 |              144.26 |    0.9% |      0.84 | `AddAndRemoveDisconnectedBlockTransactions90`\r\n\r\nto\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        6,971,191.70 |              143.45 |    0.8% |      0.84 | `AddAndRemoveDisconnectedBlockTransactions10`\r\n|        4,991,280.27 |              200.35 |    0.7% |      0.60 | `AddAndRemoveDisconnectedBlockTransactions100`\r\n|        6,632,837.50 |              150.77 |    0.6% |      0.80 | `AddAndRemoveDisconnectedBlockTransactions90`\r\n\r\n<details>\r\n<summary>git diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/validation.h b/src/validation.h\r\nindex 3e1a024d09..c81331f950 100644\r\n--- a/src/validation.h\r\n+++ b/src/validation.h\r\n@@ -283,15 +283,13 @@ struct DisconnectedBlockTransactions {\r\n         std::unordered_set<uint256, SaltedTxidHasher> txids;\r\n         std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\r\n         // Iterate through entire list once, removing any transactions in the block.\r\n-        auto it = queuedTx.begin();\r\n-        while (it != queuedTx.end()) {\r\n-            auto it_next = std::next(it);\r\n-            if (txids.count((*it)->GetHash()) > 0) {\r\n-                cachedInnerUsage -= RecursiveDynamicUsage(*it);\r\n-                queuedTx.erase(it);\r\n+        queuedTx.remove_if([&](const CTransactionRef& tx) {\r\n+            if (txids.count(tx->GetHash()) > 0) {\r\n+                cachedInnerUsage -= RecursiveDynamicUsage(tx);\r\n+                return true;\r\n             }\r\n-            it = it_next;\r\n-        }\r\n+            return false;\r\n+        });\r\n     }\r\n \r\n     // Remove the earliest-inserted transaction.\r\n\r\n```\r\n</details>",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-04T16:46:39Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315116227",
      "id" : 1315116227,
      "in_reply_to_id" : 1315106643,
      "line" : 293,
      "node_id" : "PRRC_kwDOABII585OYxTD",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 293,
      "original_position" : 61,
      "original_start_line" : 288,
      "path" : "src/validation.h",
      "position" : 61,
      "pull_request_review_id" : 1609794532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315116227/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 288,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-04T17:24:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315116227",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315120053"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315120053"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Since the dynamic memory usage of `queuedTx` now changed, I think this is behaviour change as we'll be dropping entries less frequently?",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-04T16:54:45Z",
      "diff_hunk" : "@@ -2726,9 +2726,9 @@ bool Chainstate::DisconnectTip(BlockValidationState& state, DisconnectedBlockTra\n         }\n         while (disconnectpool->DynamicMemoryUsage() > MAX_DISCONNECTED_TX_POOL_SIZE * 1000) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315120053",
      "id" : 1315120053,
      "line" : 2727,
      "node_id" : "PRRC_kwDOABII585OYyO1",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 2727,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 13,
      "pull_request_review_id" : 1609794532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315120053/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-04T17:24:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315120053",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315121992"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315121992"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Perhaps worth adding an `assert(!disconnectpool->queuedTx.empty())` here? I know we already assume that's the case because `disconnectpool` is non-nullptr and because of the dynamic memory usage check, but i think adding an assertion may make this more robust, since for an empty vector we have UB here and two lines down.",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-04T16:59:13Z",
      "diff_hunk" : "@@ -2726,9 +2726,9 @@ bool Chainstate::DisconnectTip(BlockValidationState& state, DisconnectedBlockTra\n         }\n         while (disconnectpool->DynamicMemoryUsage() > MAX_DISCONNECTED_TX_POOL_SIZE * 1000) {\n             // Drop the earliest entry, and remove its children from the mempool.\n-            auto it = disconnectpool->queuedTx.get<insertion_order>().begin();\n-            m_mempool->removeRecursive(**it, MemPoolRemovalReason::REORG);\n-            disconnectpool->removeEntry(it);\n+            auto ptx = disconnectpool->queuedTx.front();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315121992",
      "id" : 1315121992,
      "line" : 2729,
      "node_id" : "PRRC_kwDOABII585OYytI",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 2729,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 18,
      "pull_request_review_id" : 1609794532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315121992/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-04T17:24:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315121992",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315126680"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315126680"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "[this comment](https://github.com/bitcoin/bitcoin/pull/28385/files#diff-97c3a52bc5fad452d82670a7fd291800bae20c7bc35bb82686c2c0a4ea7b5b98L298) still needs updating",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-04T17:10:35Z",
      "diff_hunk" : "@@ -301,8 +301,8 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n     // Iterate disconnectpool in reverse, so that we add transactions\n     // back to the mempool starting with the earliest transaction that had\n     // been previously seen in a block.\n-    auto it = disconnectpool.queuedTx.get<insertion_order>().rbegin();\n-    while (it != disconnectpool.queuedTx.get<insertion_order>().rend()) {\n+    auto it = disconnectpool.queuedTx.rbegin();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315126680",
      "id" : 1315126680,
      "line" : 304,
      "node_id" : "PRRC_kwDOABII585OYz2Y",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 304,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 6,
      "pull_request_review_id" : 1609794532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315126680/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-04T17:24:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315126680",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK - great stuff.\r\n\r\n> I think it's preferable to use stdlib data structures instead of depending on boost if we can achieve the same thing.\r\n\r\n+1",
      "created_at" : "2023-09-05T10:18:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1706343369",
      "id" : 1706343369,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28385",
      "node_id" : "IC_kwDOABII585ltLvJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1706343369/reactions"
      },
      "updated_at" : "2023-09-05T10:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1706343369",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315700650"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315700650"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`remove_if` doesn't change the size of the container, so your patch is incomplete, no?",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-05T10:27:25Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315700650",
      "id" : 1315700650,
      "in_reply_to_id" : 1315106643,
      "line" : 293,
      "node_id" : "PRRC_kwDOABII585Oa_-q",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 293,
      "original_position" : 61,
      "original_start_line" : 288,
      "path" : "src/validation.h",
      "position" : 61,
      "pull_request_review_id" : 1610734123,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315700650/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 288,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-05T10:27:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315700650",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315715972"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315715972"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`queuedTx` is not a vector but a list, so I think just removing it from the list is sufficient?",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-05T10:42:47Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315715972",
      "id" : 1315715972,
      "in_reply_to_id" : 1315106643,
      "line" : 293,
      "node_id" : "PRRC_kwDOABII585ObDuE",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 293,
      "original_position" : 61,
      "original_start_line" : 288,
      "path" : "src/validation.h",
      "position" : 61,
      "pull_request_review_id" : 1610758430,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315715972/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 288,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-05T10:42:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315715972",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315721974"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315721974"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why would the container make a difference? If I print `std::list::size()`, it remains unchanged.\r\n\r\n\r\n```cpp\r\n#include <algorithm>\r\n#include <iostream>\r\n#include <list>\r\n  \r\nint main()\r\n{\r\n    std::list<char> str1 {'T', ' ', 't'};\r\n\r\n \r\n    auto noSpaceEnd = std::remove(str1.begin(), str1.end(), ' ');\r\n \r\n         std::cout  << \" size: \" << str1.size() << '\\n';\r\n\r\n    str1.erase(noSpaceEnd, str1.end());\r\n \r\n     std::cout  << \" size: \" << str1.size() << '\\n';\r\n \r\n  \r\n}\r\n```\r\n\r\n```\r\n size: 3\r\n\r\n size: 2",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-05T10:49:01Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315721974",
      "id" : 1315721974,
      "in_reply_to_id" : 1315106643,
      "line" : 293,
      "node_id" : "PRRC_kwDOABII585ObFL2",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 293,
      "original_position" : 61,
      "original_start_line" : 288,
      "path" : "src/validation.h",
      "position" : 61,
      "pull_request_review_id" : 1610768061,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315721974/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 288,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-05T10:49:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315721974",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315735924"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315735924"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, sorry, you are using `std::list::remove_if`, not `std::remove_if`.",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-05T11:02:16Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315735924",
      "id" : 1315735924,
      "in_reply_to_id" : 1315106643,
      "line" : 293,
      "node_id" : "PRRC_kwDOABII585ObIl0",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 293,
      "original_position" : 61,
      "original_start_line" : 288,
      "path" : "src/validation.h",
      "position" : 61,
      "pull_request_review_id" : 1610789611,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315735924/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 288,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-05T11:02:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315735924",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315745332"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315745332"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, I didn't realize they behaved differently but with `std::list::remove_if` the items are indeed removed from the container, as opposed to just shifted:\r\n\r\n```\r\n#include <algorithm>\r\n#include <iostream>\r\n#include <list>\r\n  \r\nint main()\r\n{\r\n    std::list<char> str1 {'T', ' ', 't'};\r\n\r\n    str1.remove(' ');\r\n         std::cout  << \" size: \" << str1.size() << '\\n';\r\n  \r\n}\r\n```\r\n \r\n```\r\nsize: 2\r\n```",
      "commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "created_at" : "2023-09-05T11:12:17Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315745332",
      "id" : 1315745332,
      "in_reply_to_id" : 1315106643,
      "line" : 293,
      "node_id" : "PRRC_kwDOABII585ObK40",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 293,
      "original_position" : 61,
      "original_start_line" : 288,
      "path" : "src/validation.h",
      "position" : 61,
      "pull_request_review_id" : 1610805064,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315745332/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 288,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-05T11:12:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315745332",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315818643"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315818643"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps (I think it's negligible compared to the transactions themselves), and would probably be an improvement.",
      "commit_id" : "0409dbcc9d5394d310da50e0ca326fb132b6d1e2",
      "created_at" : "2023-09-05T12:23:10Z",
      "diff_hunk" : "@@ -2726,9 +2726,9 @@ bool Chainstate::DisconnectTip(BlockValidationState& state, DisconnectedBlockTra\n         }\n         while (disconnectpool->DynamicMemoryUsage() > MAX_DISCONNECTED_TX_POOL_SIZE * 1000) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315818643",
      "id" : 1315818643,
      "in_reply_to_id" : 1315120053,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ObcyT",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 2727,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1610928529,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315818643/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-05T12:23:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315818643",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315830894"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315830894"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Wow, I just realized I was pushing changes to the wrong branch ð¤¦ \r\nI have changed this now",
      "commit_id" : "0409dbcc9d5394d310da50e0ca326fb132b6d1e2",
      "created_at" : "2023-09-05T12:33:46Z",
      "diff_hunk" : "@@ -301,8 +301,8 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n     // Iterate disconnectpool in reverse, so that we add transactions\n     // back to the mempool starting with the earliest transaction that had\n     // been previously seen in a block.\n-    auto it = disconnectpool.queuedTx.get<insertion_order>().rbegin();\n-    while (it != disconnectpool.queuedTx.get<insertion_order>().rend()) {\n+    auto it = disconnectpool.queuedTx.rbegin();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315830894",
      "id" : 1315830894,
      "in_reply_to_id" : 1315126680,
      "line" : 304,
      "node_id" : "PRRC_kwDOABII585Obfxu",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 304,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 15,
      "pull_request_review_id" : 1610948591,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 1,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315830894/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-05T13:15:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315830894",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315877339"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315877339"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This line went away with the list + map approach so marking as resolved",
      "commit_id" : "0409dbcc9d5394d310da50e0ca326fb132b6d1e2",
      "created_at" : "2023-09-05T13:11:10Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315877339",
      "id" : 1315877339,
      "in_reply_to_id" : 1315098713,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ObrHb",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 283,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 1610948591,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315877339/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-05T13:15:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315877339",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315877657"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315877657"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This line went away with the list + map approach so marking as resolved\r\n",
      "commit_id" : "0409dbcc9d5394d310da50e0ca326fb132b6d1e2",
      "created_at" : "2023-09-05T13:11:27Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315877657",
      "id" : 1315877657,
      "in_reply_to_id" : 1315106643,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ObrMZ",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 293,
      "original_position" : 61,
      "original_start_line" : 288,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 1610948591,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315877657/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-05T13:15:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315877657",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315880225"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315880225"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "0409dbcc9d5394d310da50e0ca326fb132b6d1e2",
      "created_at" : "2023-09-05T13:13:26Z",
      "diff_hunk" : "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315880225",
      "id" : 1315880225,
      "in_reply_to_id" : 1314917018,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Obr0h",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 250,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 1610948591,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315880225/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-05T13:15:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315880225",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315880709"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315880709"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added in the while loop condition, feels a bit more robust than crashing",
      "commit_id" : "0409dbcc9d5394d310da50e0ca326fb132b6d1e2",
      "created_at" : "2023-09-05T13:13:48Z",
      "diff_hunk" : "@@ -2726,9 +2726,9 @@ bool Chainstate::DisconnectTip(BlockValidationState& state, DisconnectedBlockTra\n         }\n         while (disconnectpool->DynamicMemoryUsage() > MAX_DISCONNECTED_TX_POOL_SIZE * 1000) {\n             // Drop the earliest entry, and remove its children from the mempool.\n-            auto it = disconnectpool->queuedTx.get<insertion_order>().begin();\n-            m_mempool->removeRecursive(**it, MemPoolRemovalReason::REORG);\n-            disconnectpool->removeEntry(it);\n+            auto ptx = disconnectpool->queuedTx.front();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315880709",
      "id" : 1315880709,
      "in_reply_to_id" : 1315121992,
      "line" : 2729,
      "node_id" : "PRRC_kwDOABII585Obr8F",
      "original_commit_id" : "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "original_line" : 2729,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 31,
      "pull_request_review_id" : 1610948591,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315880709/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-05T13:15:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315880709",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315982561"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315982561"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think this should be included in `validation.cpp` instead.",
      "commit_id" : "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "created_at" : "2023-09-05T14:26:38Z",
      "diff_hunk" : "@@ -18,6 +18,7 @@\n #include <kernel/chainparams.h>\n #include <kernel/chainstatemanager_opts.h>\n #include <kernel/cs_main.h> // IWYU pragma: export\n+#include <kernel/disconnected_transactions.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315982561",
      "id" : 1315982561,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OcEzh",
      "original_commit_id" : "0409dbcc9d5394d310da50e0ca326fb132b6d1e2",
      "original_line" : 21,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 1611195190,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315982561/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-05T14:26:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315982561",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315983675"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315983675"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 5a1233c0:\r\n\r\nSmall idea: what about having an always increasing `lock_time` number?. It will ensure different tx ids and let you remove the `unique_set_num` as well as the fast RNG for the prevout hash which doesn't seems to be used anywhere.\r\n\r\nE.g.\r\n```c++\r\nstatic BlockTxns CreateRandomTransactions(size_t num_txns)\r\n{\r\n    static uint32_t next_locktime{0};\r\n\r\n    BlockTxns txns;\r\n    txns.reserve(num_txns);\r\n    // Simplest spk for every tx\r\n    CScript spk = CScript() << OP_TRUE;\r\n    for (uint32_t i = 0; i < num_txns; ++i) {\r\n        CMutableTransaction tx;\r\n        tx.vin.resize(1);\r\n        tx.vout.resize(1);\r\n        tx.vout.emplace_back(CTxOut{CENT, spk});\r\n        tx.nLockTime = next_locktime++;\r\n        txns.emplace_back(MakeTransactionRef(tx));\r\n    }\r\n    return txns;\r\n}\r\n```",
      "commit_id" : "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "created_at" : "2023-09-05T14:27:26Z",
      "diff_hunk" : "@@ -0,0 +1,137 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <test/util/random.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+constexpr size_t BLOCK_VTX_COUNT{4000};\n+constexpr size_t BLOCK_VTX_COUNT_10PERCENT{400};\n+\n+using BlockTxns = decltype(CBlock::vtx);\n+\n+/** Reorg where 1 block is disconnected and 2 blocks are connected. */\n+struct ReorgTxns {\n+    /** Disconnected block. */\n+    BlockTxns disconnected_txns;\n+    /** First connected block. */\n+    BlockTxns connected_txns_1;\n+    /** Second connected block, new chain tip. Has no overlap with disconnected_txns. */\n+    BlockTxns connected_txns_2;\n+    /** Transactions shared between disconnected_txns and connected_txns_1. */\n+    size_t num_shared;\n+};\n+\n+static BlockTxns CreateRandomTransactions(size_t num_txns, uint32_t unique_set_num)\n+{\n+    FastRandomContext det_rand{true};\n+    // The unique_set_num trick won't work otherwise. It assumes that there's a different\n+    // unique_set_num each time we call CreateRandomTransactions and each batch is <= 4000.\n+    assert(num_txns <= BLOCK_VTX_COUNT);\n+\n+    BlockTxns txns;\n+    txns.reserve(num_txns);\n+    // Simplest spk for every tx\n+    CScript spk = CScript() << OP_TRUE;\n+    for (uint32_t i = 0; i < num_txns; ++i) {\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        // We should get a different prevout hash every time. But just to be sure, change the index\n+        // as well to ensure every tx has a different txid.\n+        tx.vin.emplace_back(CTxIn{COutPoint{det_rand.rand256(), uint32_t(i + BLOCK_VTX_COUNT * unique_set_num)}});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315983675",
      "id" : 1315983675,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OcFE7",
      "original_commit_id" : "5a1233c098cb093e50ee31a77bb12aa53de545cf",
      "original_line" : 43,
      "original_position" : 43,
      "original_start_line" : 41,
      "path" : "src/bench/disconnected_transactions.cpp",
      "position" : null,
      "pull_request_review_id" : 1611196988,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315983675/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-05T14:29:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315983675",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315985759"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315985759"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In In 5a1233c0:\r\n\r\nUnused `testing_setup` arg",
      "commit_id" : "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "created_at" : "2023-09-05T14:28:55Z",
      "diff_hunk" : "@@ -0,0 +1,137 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <test/util/random.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+constexpr size_t BLOCK_VTX_COUNT{4000};\n+constexpr size_t BLOCK_VTX_COUNT_10PERCENT{400};\n+\n+using BlockTxns = decltype(CBlock::vtx);\n+\n+/** Reorg where 1 block is disconnected and 2 blocks are connected. */\n+struct ReorgTxns {\n+    /** Disconnected block. */\n+    BlockTxns disconnected_txns;\n+    /** First connected block. */\n+    BlockTxns connected_txns_1;\n+    /** Second connected block, new chain tip. Has no overlap with disconnected_txns. */\n+    BlockTxns connected_txns_2;\n+    /** Transactions shared between disconnected_txns and connected_txns_1. */\n+    size_t num_shared;\n+};\n+\n+static BlockTxns CreateRandomTransactions(size_t num_txns, uint32_t unique_set_num)\n+{\n+    FastRandomContext det_rand{true};\n+    // The unique_set_num trick won't work otherwise. It assumes that there's a different\n+    // unique_set_num each time we call CreateRandomTransactions and each batch is <= 4000.\n+    assert(num_txns <= BLOCK_VTX_COUNT);\n+\n+    BlockTxns txns;\n+    txns.reserve(num_txns);\n+    // Simplest spk for every tx\n+    CScript spk = CScript() << OP_TRUE;\n+    for (uint32_t i = 0; i < num_txns; ++i) {\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        // We should get a different prevout hash every time. But just to be sure, change the index\n+        // as well to ensure every tx has a different txid.\n+        tx.vin.emplace_back(CTxIn{COutPoint{det_rand.rand256(), uint32_t(i + BLOCK_VTX_COUNT * unique_set_num)}});\n+        tx.vout.resize(1);\n+        tx.vout.emplace_back(CTxOut{CENT, spk});\n+        txns.emplace_back(MakeTransactionRef(tx));\n+    }\n+    return txns;\n+}\n+\n+/** Creates 2 blocks with BLOCK_VTX_COUNT transactions each. There will be num_not_shared\n+ * transactions that are different, all other transactions the exact same. This is to simulate a\n+ * reorg in which all but num_not_shared transactions are confirmed in the new chain. */\n+static ReorgTxns CreateBlocks(TestChain100Setup& testing_setup, size_t num_not_shared)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315985759",
      "id" : 1315985759,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OcFlf",
      "original_commit_id" : "5a1233c098cb093e50ee31a77bb12aa53de545cf",
      "original_line" : 54,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/bench/disconnected_transactions.cpp",
      "position" : null,
      "pull_request_review_id" : 1611196988,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315985759/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-05T14:29:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315985759",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1316032835"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316032835"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point about using a static var. I've simplified this but instead of using locktime or prevout `n`, I'm just having each tx spend the previous one. Should be sufficient to ensure we don't get any duplicates, so that gets rid of unique_set_num and the rng.",
      "commit_id" : "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "created_at" : "2023-09-05T15:02:56Z",
      "diff_hunk" : "@@ -0,0 +1,137 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <test/util/random.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+constexpr size_t BLOCK_VTX_COUNT{4000};\n+constexpr size_t BLOCK_VTX_COUNT_10PERCENT{400};\n+\n+using BlockTxns = decltype(CBlock::vtx);\n+\n+/** Reorg where 1 block is disconnected and 2 blocks are connected. */\n+struct ReorgTxns {\n+    /** Disconnected block. */\n+    BlockTxns disconnected_txns;\n+    /** First connected block. */\n+    BlockTxns connected_txns_1;\n+    /** Second connected block, new chain tip. Has no overlap with disconnected_txns. */\n+    BlockTxns connected_txns_2;\n+    /** Transactions shared between disconnected_txns and connected_txns_1. */\n+    size_t num_shared;\n+};\n+\n+static BlockTxns CreateRandomTransactions(size_t num_txns, uint32_t unique_set_num)\n+{\n+    FastRandomContext det_rand{true};\n+    // The unique_set_num trick won't work otherwise. It assumes that there's a different\n+    // unique_set_num each time we call CreateRandomTransactions and each batch is <= 4000.\n+    assert(num_txns <= BLOCK_VTX_COUNT);\n+\n+    BlockTxns txns;\n+    txns.reserve(num_txns);\n+    // Simplest spk for every tx\n+    CScript spk = CScript() << OP_TRUE;\n+    for (uint32_t i = 0; i < num_txns; ++i) {\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        // We should get a different prevout hash every time. But just to be sure, change the index\n+        // as well to ensure every tx has a different txid.\n+        tx.vin.emplace_back(CTxIn{COutPoint{det_rand.rand256(), uint32_t(i + BLOCK_VTX_COUNT * unique_set_num)}});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1316032835",
      "id" : 1316032835,
      "in_reply_to_id" : 1315983675,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OcRFD",
      "original_commit_id" : "5a1233c098cb093e50ee31a77bb12aa53de545cf",
      "original_line" : 43,
      "original_position" : 43,
      "original_start_line" : 41,
      "path" : "src/bench/disconnected_transactions.cpp",
      "position" : null,
      "pull_request_review_id" : 1611275586,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316032835/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-05T15:02:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316032835",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1316033115"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316033115"
         }
      },
      "author_association" : "MEMBER",
      "body" : "deleted",
      "commit_id" : "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "created_at" : "2023-09-05T15:03:01Z",
      "diff_hunk" : "@@ -0,0 +1,137 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <test/util/random.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+constexpr size_t BLOCK_VTX_COUNT{4000};\n+constexpr size_t BLOCK_VTX_COUNT_10PERCENT{400};\n+\n+using BlockTxns = decltype(CBlock::vtx);\n+\n+/** Reorg where 1 block is disconnected and 2 blocks are connected. */\n+struct ReorgTxns {\n+    /** Disconnected block. */\n+    BlockTxns disconnected_txns;\n+    /** First connected block. */\n+    BlockTxns connected_txns_1;\n+    /** Second connected block, new chain tip. Has no overlap with disconnected_txns. */\n+    BlockTxns connected_txns_2;\n+    /** Transactions shared between disconnected_txns and connected_txns_1. */\n+    size_t num_shared;\n+};\n+\n+static BlockTxns CreateRandomTransactions(size_t num_txns, uint32_t unique_set_num)\n+{\n+    FastRandomContext det_rand{true};\n+    // The unique_set_num trick won't work otherwise. It assumes that there's a different\n+    // unique_set_num each time we call CreateRandomTransactions and each batch is <= 4000.\n+    assert(num_txns <= BLOCK_VTX_COUNT);\n+\n+    BlockTxns txns;\n+    txns.reserve(num_txns);\n+    // Simplest spk for every tx\n+    CScript spk = CScript() << OP_TRUE;\n+    for (uint32_t i = 0; i < num_txns; ++i) {\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        // We should get a different prevout hash every time. But just to be sure, change the index\n+        // as well to ensure every tx has a different txid.\n+        tx.vin.emplace_back(CTxIn{COutPoint{det_rand.rand256(), uint32_t(i + BLOCK_VTX_COUNT * unique_set_num)}});\n+        tx.vout.resize(1);\n+        tx.vout.emplace_back(CTxOut{CENT, spk});\n+        txns.emplace_back(MakeTransactionRef(tx));\n+    }\n+    return txns;\n+}\n+\n+/** Creates 2 blocks with BLOCK_VTX_COUNT transactions each. There will be num_not_shared\n+ * transactions that are different, all other transactions the exact same. This is to simulate a\n+ * reorg in which all but num_not_shared transactions are confirmed in the new chain. */\n+static ReorgTxns CreateBlocks(TestChain100Setup& testing_setup, size_t num_not_shared)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1316033115",
      "id" : 1316033115,
      "in_reply_to_id" : 1315985759,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OcRJb",
      "original_commit_id" : "5a1233c098cb093e50ee31a77bb12aa53de545cf",
      "original_line" : 54,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/bench/disconnected_transactions.cpp",
      "position" : null,
      "pull_request_review_id" : 1611275885,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316033115/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-05T15:03:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316033115",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1316033288"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316033288"
         }
      },
      "author_association" : "MEMBER",
      "body" : "moved",
      "commit_id" : "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "created_at" : "2023-09-05T15:03:05Z",
      "diff_hunk" : "@@ -18,6 +18,7 @@\n #include <kernel/chainparams.h>\n #include <kernel/chainstatemanager_opts.h>\n #include <kernel/cs_main.h> // IWYU pragma: export\n+#include <kernel/disconnected_transactions.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1316033288",
      "id" : 1316033288,
      "in_reply_to_id" : 1315982561,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OcRMI",
      "original_commit_id" : "0409dbcc9d5394d310da50e0ca326fb132b6d1e2",
      "original_line" : 21,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 1611276149,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316033288/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-05T15:03:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316033288",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@theuni you'll probably want to take a look here.",
      "created_at" : "2023-09-05T15:14:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1706815246",
      "id" : 1706815246,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28385",
      "node_id" : "IC_kwDOABII585lu-8O",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1706815246/reactions"
      },
      "updated_at" : "2023-09-05T15:14:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1706815246",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1316074161"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316074161"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I see how this happened here, but calling this list a `Queue` is super confusing :)",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-05T15:33:28Z",
      "diff_hunk" : "@@ -851,27 +851,11 @@ class CCoinsViewMemPool : public CCoinsViewBacked\n  * that are included in blocks in the new chain, and then process the remaining\n  * still-unconfirmed transactions at the end.\n  */\n-\n-// multi_index tag names\n-struct txid_index {};\n-struct insertion_order {};\n-\n struct DisconnectedBlockTransactions {\n-    typedef boost::multi_index_container<\n-        CTransactionRef,\n-        boost::multi_index::indexed_by<\n-            // sorted by txid\n-            boost::multi_index::hashed_unique<\n-                boost::multi_index::tag<txid_index>,\n-                mempoolentry_txid,\n-                SaltedTxidHasher\n-            >,\n-            // sorted by order in the blockchain\n-            boost::multi_index::sequenced<\n-                boost::multi_index::tag<insertion_order>\n-            >\n-        >\n-    > indexed_disconnected_transactions;\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+    using Queue = decltype(queuedTx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1316074161",
      "id" : 1316074161,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OcbKx",
      "original_commit_id" : "565247aec4e2c70e88f30a9074296dce7489d6b6",
      "original_line" : 857,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 1611340310,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 1,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316074161/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-05T17:47:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316074161",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1316079931"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316079931"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any reason not to add `std::list` to `memusage.h` instead?",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-05T15:37:52Z",
      "diff_hunk" : "@@ -883,47 +867,49 @@ struct DisconnectedBlockTransactions {\n     // reorg, besides draining this object).\n     ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n \n-    indexed_disconnected_transactions queuedTx;\n-    uint64_t cachedInnerUsage = 0;\n-\n-    // Estimate the overhead of queuedTx to be 6 pointers + an allocation, as\n-    // no exact formula for boost::multi_index_contained is implemented.\n     size_t DynamicMemoryUsage() const {\n-        return memusage::MallocUsage(sizeof(CTransactionRef) + 6 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+        // std::list has 3 pointers per entry\n+        return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::MallocUsage(3 * sizeof(void*)) * queuedTx.size();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1316079931",
      "id" : 1316079931,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Occk7",
      "original_commit_id" : "565247aec4e2c70e88f30a9074296dce7489d6b6",
      "original_line" : 872,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 1611340310,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316079931/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-05T17:47:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316079931",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1316117892"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316117892"
         }
      },
      "author_association" : "MEMBER",
      "body" : "~This could look a little cleaner using `extract()`~.\r\n```c++\r\nfor (const auto& tx : vtx) {\r\n    if (auto node = iters_by_txid.extract(tx->GetHash())) {\r\n        auto& list_iter = node.mapped();\r\n        cachedInnerUsage -= RecursiveDynamicUsage(*list_iter);\r\n        queuedTx.erase(list_iter);\r\n    }\r\n}\r\n```\r\nEdit: Ignore this. I benched and performance is worse.",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-05T16:05:51Z",
      "diff_hunk" : "@@ -883,47 +867,49 @@ struct DisconnectedBlockTransactions {\n     // reorg, besides draining this object).\n     ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n \n-    indexed_disconnected_transactions queuedTx;\n-    uint64_t cachedInnerUsage = 0;\n-\n-    // Estimate the overhead of queuedTx to be 6 pointers + an allocation, as\n-    // no exact formula for boost::multi_index_contained is implemented.\n     size_t DynamicMemoryUsage() const {\n-        return memusage::MallocUsage(sizeof(CTransactionRef) + 6 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+        // std::list has 3 pointers per entry\n+        return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::MallocUsage(3 * sizeof(void*)) * queuedTx.size();\n     }\n \n     void addTransaction(const CTransactionRef& tx)\n     {\n-        queuedTx.insert(tx);\n+        // Add new transactions to the end.\n+        auto it = queuedTx.insert(queuedTx.end(), tx);\n+        iters_by_txid.emplace(tx->GetHash(), it);\n         cachedInnerUsage += RecursiveDynamicUsage(tx);\n     }\n \n-    // Remove entries based on txid_index, and update memory usage.\n+    // Remove entries that are in this block.\n     void removeForBlock(const std::vector<CTransactionRef>& vtx)\n     {\n         // Short-circuit in the common case of a block being added to the tip\n         if (queuedTx.empty()) {\n             return;\n         }\n-        for (auto const &tx : vtx) {\n-            auto it = queuedTx.find(tx->GetHash());\n-            if (it != queuedTx.end()) {\n-                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n-                queuedTx.erase(it);\n+        for (const auto& tx : vtx) {\n+            auto iter = iters_by_txid.find(tx->GetHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1316117892",
      "id" : 1316117892,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Ocl2E",
      "original_commit_id" : "565247aec4e2c70e88f30a9074296dce7489d6b6",
      "original_line" : 891,
      "original_position" : 70,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 1611340310,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316117892/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-05T17:47:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316117892",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "approach ACK\r\n\r\niiuc we're looking at constant time access to oldest element, or any via txid, with constant time deletion/insertion for arbitrary elements. This accounts for deleting the oldest when busting allotted memory for the pool, or deleting transactions found in new blocks",
      "created_at" : "2023-09-05T17:07:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1706993248",
      "id" : 1706993248,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28385",
      "node_id" : "IC_kwDOABII585lvqZg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1706993248/reactions"
      },
      "updated_at" : "2023-09-05T17:07:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1706993248",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1316195386"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316195386"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hmm, why no `addTransactions(const std::vector<CTransactionRef>& vtx)` to match `removeForBlock()` ?\r\n\r\nIs it because the tx order needs to be reversed?\r\n\r\nThat would allow a `iters_by_txid.reserve(vtx.size());` which gets me a ~10% speedup in the benches.\r\n\r\nEdit: removed snark after finding the comment I needed.\r\n\r\nEdit2: I suppose this is a potential optimization unrelated to this PR, but  an `addTransactionsForBlock(const CBlock&)` would be unambiguous as to tx order if this is interesting.",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-05T17:34:45Z",
      "diff_hunk" : "@@ -883,47 +867,49 @@ struct DisconnectedBlockTransactions {\n     // reorg, besides draining this object).\n     ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n \n-    indexed_disconnected_transactions queuedTx;\n-    uint64_t cachedInnerUsage = 0;\n-\n-    // Estimate the overhead of queuedTx to be 6 pointers + an allocation, as\n-    // no exact formula for boost::multi_index_contained is implemented.\n     size_t DynamicMemoryUsage() const {\n-        return memusage::MallocUsage(sizeof(CTransactionRef) + 6 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+        // std::list has 3 pointers per entry\n+        return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::MallocUsage(3 * sizeof(void*)) * queuedTx.size();\n     }\n \n     void addTransaction(const CTransactionRef& tx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1316195386",
      "id" : 1316195386,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Oc4w6",
      "original_commit_id" : "565247aec4e2c70e88f30a9074296dce7489d6b6",
      "original_line" : 875,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 1611340310,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316195386/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T02:30:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316195386",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Really appreciate the added bench for this btw. It makes experimenting with this much easier.",
      "created_at" : "2023-09-05T17:53:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1707054141",
      "id" : 1707054141,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28385",
      "node_id" : "IC_kwDOABII585lv5Q9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1707054141/reactions"
      },
      "updated_at" : "2023-09-05T17:53:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1707054141",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Concept ACK, though I'm concerned about the public `queuedTx` staying in sync with the private `iters_by_txid`.\r\n> \r\n> For example: [here queuedTx is cleared without clearing iters_by_txid](https://github.com/bitcoin/bitcoin/blob/c19f4aabb608302ba7bb68b52a4e7592ccd5e34f/src/validation.cpp#L320). That looks like a bug to me?\r\n\r\nQuick POC commit which adds full encapsulation here: https://github.com/theuni/bitcoin/commit/98c0b86d7cb8455e3252c264ec7133d1ebc2305a (only validation fixed up, not tests/benches).",
      "created_at" : "2023-09-05T19:02:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1707165785",
      "id" : 1707165785,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28385",
      "node_id" : "IC_kwDOABII585lwUhZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1707165785/reactions"
      },
      "updated_at" : "2023-09-05T19:02:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1707165785",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Quick POC commit which adds full encapsulation here: [theuni@98c0b86](https://github.com/theuni/bitcoin/commit/98c0b86d7cb8455e3252c264ec7133d1ebc2305a) (only validation fixed up, not tests/benches).\r\n\r\nOh yes, strong approach ACK for this (left a few comments on the branch), nice!",
      "created_at" : "2023-09-06T11:22:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1708154619",
      "id" : 1708154619,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28385",
      "node_id" : "IC_kwDOABII585l0F77",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1708154619/reactions"
      },
      "updated_at" : "2023-09-06T11:22:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1708154619",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1317301214"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317301214"
         }
      },
      "author_association" : "MEMBER",
      "body" : ":sweat_smile: renamed to List",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-06T13:38:17Z",
      "diff_hunk" : "@@ -851,27 +851,11 @@ class CCoinsViewMemPool : public CCoinsViewBacked\n  * that are included in blocks in the new chain, and then process the remaining\n  * still-unconfirmed transactions at the end.\n  */\n-\n-// multi_index tag names\n-struct txid_index {};\n-struct insertion_order {};\n-\n struct DisconnectedBlockTransactions {\n-    typedef boost::multi_index_container<\n-        CTransactionRef,\n-        boost::multi_index::indexed_by<\n-            // sorted by txid\n-            boost::multi_index::hashed_unique<\n-                boost::multi_index::tag<txid_index>,\n-                mempoolentry_txid,\n-                SaltedTxidHasher\n-            >,\n-            // sorted by order in the blockchain\n-            boost::multi_index::sequenced<\n-                boost::multi_index::tag<insertion_order>\n-            >\n-        >\n-    > indexed_disconnected_transactions;\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+    using Queue = decltype(queuedTx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1317301214",
      "id" : 1317301214,
      "in_reply_to_id" : 1316074161,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OhGve",
      "original_commit_id" : "565247aec4e2c70e88f30a9074296dce7489d6b6",
      "original_line" : 857,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 1613366676,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317301214/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T13:38:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317301214",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1317305323"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317305323"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Hmm, why no addTransactions(const std::vector<CTransactionRef>& vtx) to match removeForBlock() ?\r\n\r\nI had been trying to keep the diff as small as possible\r\n\r\n> That would allow a iters_by_txid.reserve(vtx.size()); which gets me a ~10% speedup in the benches.\r\n\r\nThis is worth it though, so I've done this now - thanks!\r\n\r\n> Edit: removed snark after finding the comment I needed.\r\n\r\nAdded a comment as I agree it wasn't super obvious why we reverse vtx",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-06T13:41:03Z",
      "diff_hunk" : "@@ -883,47 +867,49 @@ struct DisconnectedBlockTransactions {\n     // reorg, besides draining this object).\n     ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n \n-    indexed_disconnected_transactions queuedTx;\n-    uint64_t cachedInnerUsage = 0;\n-\n-    // Estimate the overhead of queuedTx to be 6 pointers + an allocation, as\n-    // no exact formula for boost::multi_index_contained is implemented.\n     size_t DynamicMemoryUsage() const {\n-        return memusage::MallocUsage(sizeof(CTransactionRef) + 6 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+        // std::list has 3 pointers per entry\n+        return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::MallocUsage(3 * sizeof(void*)) * queuedTx.size();\n     }\n \n     void addTransaction(const CTransactionRef& tx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1317305323",
      "id" : 1317305323,
      "in_reply_to_id" : 1316195386,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OhHvr",
      "original_commit_id" : "565247aec4e2c70e88f30a9074296dce7489d6b6",
      "original_line" : 875,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 1613373391,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317305323/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T13:41:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317305323",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > Quick POC commit which adds full encapsulation here: [theuni@98c0b86](https://github.com/theuni/bitcoin/commit/98c0b86d7cb8455e3252c264ec7133d1ebc2305a) (only validation fixed up, not tests/benches).\r\n> \r\n> Oh yes, strong approach ACK for this (left a few comments on the branch), nice!\r\n\r\nAfter looking at that some more, I realized that the memory management was also not encapsulated. I took a quick run at a _completely_ encapsulated `DisconnectedBlockTransactions` [on that branch](https://github.com/theuni/bitcoin/commits/28385). One nice advantage there is that the max memory size is no longer hard-coded, so it should be possible to test/bench/fuzz much more effectively. (I switched to using CBlock for tx batches which was probably a mistake though, so just ignore that :).\r\n\r\n@glozow I know you wanted to keep the size of this diff down, so I suspect you won't want to take a cleaned up version of that here. But IMO we should do something like it soon after this.",
      "created_at" : "2023-09-06T14:38:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1708502411",
      "id" : 1708502411,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28385",
      "node_id" : "IC_kwDOABII585l1a2L",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1708502411/reactions"
      },
      "updated_at" : "2023-09-06T14:38:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1708502411",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> For example: [here queuedTx is cleared without clearing iters_by_txid](https://github.com/bitcoin/bitcoin/blob/c19f4aabb608302ba7bb68b52a4e7592ccd5e34f/src/validation.cpp#L320). That looks like a bug to me?\r\n\r\n> Quick POC commit which adds full encapsulation here: https://github.com/theuni/bitcoin/commit/98c0b86d7cb8455e3252c264ec7133d1ebc2305a (only validation fixed up, not tests/benches).\r\n\r\nDefinitely prefer this, thanks! It looks like we've been using the wrong `clear()` for a while :scream: https://github.com/bitcoin/bitcoin/pull/9208/files#diff-97c3a52bc5fad452d82670a7fd291800bae20c7bc35bb82686c2c0a4ea7b5b98R578\r\n\r\n> After looking at that some more, I realized that the memory management was also not encapsulated. I took a quick run at a completely encapsulated DisconnectedBlockTransactions [on that branch](https://github.com/theuni/bitcoin/commits/28385). One nice advantage there is that the max memory size is no longer hard-coded, so it should be possible to test/bench/fuzz much more effectively.\r\n\r\n> @glozow I know you wanted to keep the size of this diff down, so I suspect you won't want to take a cleaned up version of that here.\r\n\r\nI mean, this is pretty easy to add and I like it. I really don't mind if people are willing to review :P I only tried to keep this small as I wasn't sure if people would be interested in it.",
      "created_at" : "2023-09-06T14:51:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1708524648",
      "id" : 1708524648,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28385",
      "node_id" : "IC_kwDOABII585l1gRo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1708524648/reactions"
      },
      "updated_at" : "2023-09-06T14:51:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1708524648",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I mean, this is pretty easy to add and I like it. I really don't mind if people are willing to review :P I only tried to keep this small as I wasn't sure if people would be interested in it.\r\n\r\nIn that case, feel free to clean it up as you see fit and take it :)\r\n\r\nDon't worry about trying to keep the commits, I was just poking around.",
      "created_at" : "2023-09-06T14:54:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1708530094",
      "id" : 1708530094,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28385",
      "node_id" : "IC_kwDOABII585l1hmu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1708530094/reactions"
      },
      "updated_at" : "2023-09-06T14:54:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1708530094",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1317578852"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317578852"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for catching my problem here!",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-06T16:54:53Z",
      "diff_hunk" : "@@ -881,58 +873,68 @@ struct DisconnectedBlockTransactions {\n     // to be refactored such that this assumption is no longer true (for\n     // instance if there was some other way we cleaned up the mempool after a\n     // reorg, besides draining this object).\n-    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n-\n-    indexed_disconnected_transactions queuedTx;\n-    uint64_t cachedInnerUsage = 0;\n+    ~DisconnectedBlockTransactions() {\n+        assert(queuedTx.empty());\n+        assert(iters_by_txid.empty());\n+        assert(cachedInnerUsage == 0);\n+    }\n \n-    // Estimate the overhead of queuedTx to be 6 pointers + an allocation, as\n-    // no exact formula for boost::multi_index_contained is implemented.\n     size_t DynamicMemoryUsage() const {\n-        return memusage::MallocUsage(sizeof(CTransactionRef) + 6 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+        return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n     }\n \n-\t// Add transactions from the block, in reverse order.\n+    // Add transactions from the block, in reverse order.\n     void AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n     {\n         // Blocks are disconnected in descending order by block height. Within each block, add\n         // transactions in reverse order so that transactions with dependencies on other\n         // transactions (if any) are at the beginning. If this data structure grows too large, we\n-        // will trim transactions from the front. Transactions with fewer dependencies should be\n-        // removed first.\n+        // will trim transactions from the front, and should avoid removing transactions that other\n+        // ones depend on.\n+        iters_by_txid.reserve(iters_by_txid.size() + vtx.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1317578852",
      "id" : 1317578852,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OiKhk",
      "original_commit_id" : "fc8372947853c105508da5fac6db29512bc1e611",
      "original_line" : 894,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 1613811028,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317578852/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T17:42:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317578852",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1317582393"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317582393"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I realize this came from my patch but..\r\n\r\nI think we still want to `disconnectpool.clear()` here just in case. Otherwise it's potentially a change of behavior as we're keeping these tx's alive longer (until `disconnectpool` goes out of scope) than before.",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-06T16:58:23Z",
      "diff_hunk" : "@@ -316,7 +317,6 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n         }\n         ++it;\n     }\n-    disconnectpool.queuedTx.clear();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1317582393",
      "id" : 1317582393,
      "line" : 319,
      "node_id" : "PRRC_kwDOABII585OiLY5",
      "original_commit_id" : "fc8372947853c105508da5fac6db29512bc1e611",
      "original_line" : 319,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 44,
      "pull_request_review_id" : 1613811028,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317582393/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T17:42:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317582393",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1317596348"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317596348"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why prefer `take()` here? Seems like that's relying on the side-effect, as opposed to `clear()` which does the thing we want.",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-06T17:09:23Z",
      "diff_hunk" : "@@ -541,7 +541,7 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_snapshot_init, SnapshotTestSetup)\n     {\n         LOCK2(::cs_main, bg_chainstate.MempoolMutex());\n         BOOST_CHECK(bg_chainstate.DisconnectTip(unused_state, &unused_pool));\n-        unused_pool.clear();  // to avoid queuedTx assertion errors on teardown\n+        unused_pool.take();  // to avoid queuedTx assertion errors on teardown",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1317596348",
      "id" : 1317596348,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OiOy8",
      "original_commit_id" : "fc8372947853c105508da5fac6db29512bc1e611",
      "original_line" : 544,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/test/validation_chainstatemanager_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1613811028,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317596348/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T17:42:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317596348",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1317598419"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317598419"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: With private members and a ctor, I'd call this a `class` now. But that's arbitrary and I don't think we have any guidelines for it.",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-06T17:11:31Z",
      "diff_hunk" : "@@ -851,28 +851,20 @@ class CCoinsViewMemPool : public CCoinsViewBacked\n  * that are included in blocks in the new chain, and then process the remaining\n  * still-unconfirmed transactions at the end.\n  */\n-\n-// multi_index tag names\n-struct txid_index {};\n-struct insertion_order {};\n-\n struct DisconnectedBlockTransactions {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1317598419",
      "id" : 1317598419,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OiPTT",
      "original_commit_id" : "fc8372947853c105508da5fac6db29512bc1e611",
      "original_line" : 854,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 1613811028,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317598419/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T17:42:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317598419",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1317618061"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317618061"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This could potentially be done more efficiently by iterating to find the number to evict, then doing a single `splice()` rather than multiple `emplace_back()`. I doubt it's worth the code complexity though.",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-06T17:31:32Z",
      "diff_hunk" : "@@ -73,6 +80,15 @@ struct DisconnectedBlockTransactions {\n             iters_by_txid.emplace((*block_it)->GetHash(), it);\n             cachedInnerUsage += RecursiveDynamicUsage(*block_it);\n         }\n+\n+        // Trim the earliest-added entries until we are within memory bounds.\n+        while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n+            evicted.emplace_back(queuedTx.front());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1317618061",
      "id" : 1317618061,
      "line" : 82,
      "node_id" : "PRRC_kwDOABII585OiUGN",
      "original_commit_id" : "a1f378adbe00f82ccb76a108d49d38721698089f",
      "original_line" : 82,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "src/kernel/disconnected_transactions.h",
      "position" : 82,
      "pull_request_review_id" : 1613811028,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317618061/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T17:42:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317618061",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1317663782"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317663782"
         }
      },
      "author_association" : "MEMBER",
      "body" : "disconnectpool is cleared as part of `take()` though?",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-06T18:17:27Z",
      "diff_hunk" : "@@ -316,7 +317,6 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n         }\n         ++it;\n     }\n-    disconnectpool.queuedTx.clear();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1317663782",
      "id" : 1317663782,
      "in_reply_to_id" : 1317582393,
      "line" : 319,
      "node_id" : "PRRC_kwDOABII585OifQm",
      "original_commit_id" : "fc8372947853c105508da5fac6db29512bc1e611",
      "original_line" : 319,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 44,
      "pull_request_review_id" : 1613954142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317663782/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T18:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317663782",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1317668240"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317668240"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, sorry! I meant `queuedTx.clear()`.",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-06T18:22:22Z",
      "diff_hunk" : "@@ -316,7 +317,6 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n         }\n         ++it;\n     }\n-    disconnectpool.queuedTx.clear();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1317668240",
      "id" : 1317668240,
      "in_reply_to_id" : 1317582393,
      "line" : 319,
      "node_id" : "PRRC_kwDOABII585OigWQ",
      "original_commit_id" : "fc8372947853c105508da5fac6db29512bc1e611",
      "original_line" : 319,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 44,
      "pull_request_review_id" : 1613961098,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317668240/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T18:22:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317668240",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318353039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318353039"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: `TxList` seems like a more appropriate name. But I'd be equally happy just inlining it, just as readable imo.\r\n\r\n```suggestion\r\n    std::unordered_map<uint256, decltype(queuedTx)::iterator, SaltedTxidHasher> iters_by_txid;\r\n```",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-07T09:38:10Z",
      "diff_hunk" : "@@ -0,0 +1,120 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+#define BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+\n+#include <core_memusage.h>\n+#include <memusage.h>\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+\n+#include <list>\n+#include <unordered_map>\n+\n+/** Maximum kilobytes for transactions to store for processing during reorg */\n+static const unsigned int MAX_DISCONNECTED_TX_POOL_SIZE = 20000;\n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+private:\n+    uint64_t cachedInnerUsage = 0;\n+    const size_t m_max_mem_usage;\n+    std::list<CTransactionRef> queuedTx;\n+    using List = decltype(queuedTx);\n+    std::unordered_map<uint256, List::iterator, SaltedTxidHasher> iters_by_txid;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318353039",
      "id" : 1318353039,
      "line" : 38,
      "node_id" : "PRRC_kwDOABII585OlHiP",
      "original_commit_id" : "a1f378adbe00f82ccb76a108d49d38721698089f",
      "original_line" : 38,
      "original_position" : 38,
      "original_start_line" : 37,
      "path" : "src/kernel/disconnected_transactions.h",
      "position" : 38,
      "pull_request_review_id" : 1611163652,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318353039/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 37,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-07T13:45:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318353039",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318436895"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318436895"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It just seemed like slightly more realistic usage but that doesn't seem to be a concern here, so changed to `clear()` now.",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-07T10:56:23Z",
      "diff_hunk" : "@@ -541,7 +541,7 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_snapshot_init, SnapshotTestSetup)\n     {\n         LOCK2(::cs_main, bg_chainstate.MempoolMutex());\n         BOOST_CHECK(bg_chainstate.DisconnectTip(unused_state, &unused_pool));\n-        unused_pool.clear();  // to avoid queuedTx assertion errors on teardown\n+        unused_pool.take();  // to avoid queuedTx assertion errors on teardown",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318436895",
      "id" : 1318436895,
      "in_reply_to_id" : 1317596348,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OlcAf",
      "original_commit_id" : "fc8372947853c105508da5fac6db29512bc1e611",
      "original_line" : 544,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/test/validation_chainstatemanager_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1615168174,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318436895/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-07T10:56:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318436895",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318437314"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318437314"
         }
      },
      "author_association" : "MEMBER",
      "body" : "True, changed",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-07T10:56:47Z",
      "diff_hunk" : "@@ -851,28 +851,20 @@ class CCoinsViewMemPool : public CCoinsViewBacked\n  * that are included in blocks in the new chain, and then process the remaining\n  * still-unconfirmed transactions at the end.\n  */\n-\n-// multi_index tag names\n-struct txid_index {};\n-struct insertion_order {};\n-\n struct DisconnectedBlockTransactions {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318437314",
      "id" : 1318437314,
      "in_reply_to_id" : 1317598419,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OlcHC",
      "original_commit_id" : "fc8372947853c105508da5fac6db29512bc1e611",
      "original_line" : 854,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 1615168752,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318437314/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-07T10:56:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318437314",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318458796"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318458796"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "\"Blocks are disconnected in descending order by block height.\" I think this should be in the function docstring as it's not an implementation detail but an important part of its interface? We expect the caller to:\r\n- call this function for the outermost/highest block first\r\n- keep `vtx` in the same order as they appear in the block _(the reversion is an implementation detail and not relevant for this function's docstring imo, although we do want to document `take`'s behaviour as per my other comment)_\r\n- ensure all tx ids provided are unique, even across multiple calls\r\n\r\n(ideally using structured \"pre\" doxygen tags?)",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-07T11:19:07Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+#define BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+\n+#include <core_memusage.h>\n+#include <memusage.h>\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+\n+#include <list>\n+#include <unordered_map>\n+\n+/** Maximum kilobytes for transactions to store for processing during reorg */\n+static const unsigned int MAX_DISCONNECTED_TX_POOL_SIZE = 20000;\n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+class DisconnectedBlockTransactions {\n+private:\n+    uint64_t cachedInnerUsage = 0;\n+    const size_t m_max_mem_usage;\n+    std::list<CTransactionRef> queuedTx;\n+    using List = decltype(queuedTx);\n+    std::unordered_map<uint256, List::iterator, SaltedTxidHasher> iters_by_txid;\n+\n+public:\n+    DisconnectedBlockTransactions(size_t max_mem_usage) : m_max_mem_usage{max_mem_usage} {}\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() {\n+        assert(queuedTx.empty());\n+        assert(iters_by_txid.empty());\n+        assert(cachedInnerUsage == 0);\n+    }\n+\n+    size_t DynamicMemoryUsage() const {\n+        return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n+    }\n+\n+    // Add transactions from the block, in reverse order. We assume that callers will never give us\n+    // multiple transactions with the same txid, otherwise things can go very wrong in\n+    // removeForBlock due to queuedTx containing an item without a corresponding entry in iters_by_txid.\n+    // Returns vector of transactions that were evicted for size-limiting.\n+    [[nodiscard]] std::vector<CTransactionRef> AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        std::vector<CTransactionRef> evicted;\n+        // Blocks are disconnected in descending order by block height. Within each block, add",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318458796",
      "id" : 1318458796,
      "line" : 68,
      "node_id" : "PRRC_kwDOABII585OlhWs",
      "original_commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "original_line" : 68,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/kernel/disconnected_transactions.h",
      "position" : 68,
      "pull_request_review_id" : 1611163652,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318458796/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-07T13:45:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318458796",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318476721"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318476721"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Note: `DynamicMemoryUsage` in the boost implementation was returning a fixed estimate (+80B) for usage per entry, so the \"before\" size here would be 720 for 1 tx, 72000 for 100 (I'm not sure how accurate this is but those are the numbers).\r\n\r\nThis means the number has increased so we'd drop more stuff now than before (in the rare case of a multi-block reorg).",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-07T11:35:45Z",
      "diff_hunk" : "@@ -0,0 +1,94 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <test/util/setup_common.h>\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids for\n+    // this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+\n+    size_t usage_full{0};\n+    // DisconnectedBlockTransactions with a comfortable maximum memory usage s.t. nothing is evicted.\n+    {\n+        DisconnectedBlockTransactions disconnectpool{MAX_DISCONNECTED_TX_POOL_SIZE * 1000};\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(block_vtx);\n+        BOOST_CHECK_EQUAL(evicted_txns.size(), 0);\n+        BOOST_CHECK(disconnectpool.DynamicMemoryUsage() <= MAX_DISCONNECTED_TX_POOL_SIZE * 1000);\n+\n+        usage_full = disconnectpool.DynamicMemoryUsage();\n+\n+        disconnectpool.clear();\n+    }\n+\n+    // DisconnectedBlockTransactions that's just a little too small for all of the transactions.\n+    {\n+        const size_t MAX_MEMUSAGE_99{usage_full - sizeof(void*)};\n+        DisconnectedBlockTransactions disconnectpool{MAX_MEMUSAGE_99};\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(block_vtx);\n+        BOOST_CHECK(disconnectpool.DynamicMemoryUsage() <= MAX_MEMUSAGE_99);\n+\n+        // Only 1 transaction needed to be evicted\n+        BOOST_CHECK_EQUAL(1, evicted_txns.size());\n+\n+        // Transactions are added from back to front and eviction is FIFO.\n+        // The last transaction of block_vtx should be the first to be evicted.\n+        BOOST_CHECK_EQUAL(block_vtx.back(), evicted_txns.front());\n+\n+        disconnectpool.clear();\n+    }\n+}\n+\n+//! Sanity checks for DisconnectedBlockTransactions::DynamicMemoryUsage.\n+BOOST_AUTO_TEST_CASE(disconnectpool_memusage)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting DisconnectedBlockTransactions memusage tests early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup as they all have the same size and it\n+    // doesn't matter whether these transactions would realistically be in a block together. They\n+    // just need distinct txids for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+\n+    // Sanity check the sizes are as expected. If setup_common changes the size of coinbase\n+    // transactions, update COINBASE_TX_USAGE.\n+    const size_t COINBASE_TX_USAGE{640};\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+    for (const auto& tx : block_vtx) {\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), COINBASE_TX_USAGE);\n+    }\n+\n+    // Test DisconnectedBlockTransactions::DynamicMemoryUsage() for 100 transactions\n+    const size_t EXPECTED_USAGE_100{77648};\n+    {\n+        const size_t MAX_MEMUSAGE_100{EXPECTED_USAGE_100};\n+        DisconnectedBlockTransactions disconnectpool{MAX_MEMUSAGE_100};\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(block_vtx);\n+        BOOST_CHECK_EQUAL(evicted_txns.size(), 0);\n+        BOOST_CHECK_EQUAL(disconnectpool.DynamicMemoryUsage(), EXPECTED_USAGE_100);\n+        disconnectpool.clear();\n+    }\n+\n+    // Test DisconnectedBlockTransactions::DynamicMemoryUsage() for 1 transaction\n+    const size_t EXPECTED_USAGE_1{800};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318476721",
      "id" : 1318476721,
      "line" : 83,
      "node_id" : "PRRC_kwDOABII585Ollux",
      "original_commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "original_line" : 83,
      "original_position" : 83,
      "original_start_line" : 65,
      "path" : "src/test/disconnected_transactions.cpp",
      "position" : 83,
      "pull_request_review_id" : 1615230239,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318476721/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 65,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-07T11:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318476721",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318587592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318587592"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe I'm misunderstanding things, but I find this language quite unintuitive and if my understanding is correct - misleading. Assume we have a chaintip at height 100, and we reorged the last 2 blocks, i.e. 100 and 99 (in that order) are disconnected.\r\n- \"from oldest to newest\": I would call a tx in block 99 older than a tx in block 100, but disconnectpool.take() returns txs from block 100 before block 99\r\n- \"the latest mined block that was disconnected\" could mean (and this was my first intuition) \"the latest block _that was disconnected_\", i.e. block 99, or \"the highest of the block(s) that were disconnected\", i.e. the previous chaintip, which I think is what is meant here.\r\n\r\nSuggested rephrasing, which (imo) removes that ambiguity and also highlights the intent a bit more:\r\n```suggestion\r\n    // disconnectpool.take() returns entries first sorted by descending blockheight (i.e. txs from\r\n    // the previous chaintip appear first) and then by reversed in-block order.\r\n    // For example, if blocks 100 and 99 are disconnected, disconnectpool.take() returns \r\n    // [100:n, 100:n-1, ..., 100:0, 99:m, 99:m-1, ..., 99:0]\r\n    // Iterate disconnectpool.take(( in reverse, so that we ensure first adding parent transactions\r\n    // before children are added (if any).\r\n```\r\n\r\nActually, I think moving the first lines that describe the .take() return value to the `DisconnectedBlockTransactions::take` docstring makes probably more sense, and then just reference that here?",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-07T13:15:27Z",
      "diff_hunk" : "@@ -295,28 +294,31 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n     AssertLockHeld(cs_main);\n     AssertLockHeld(m_mempool->cs);\n     std::vector<uint256> vHashUpdate;\n-    // disconnectpool's insertion_order index sorts the entries from\n-    // oldest to newest, but the oldest entry will be the last tx from the\n+    // disconnectpool sorts the entries from\n+    // oldest to newest. The oldest entry will be the last tx from the\n     // latest mined block that was disconnected.\n     // Iterate disconnectpool in reverse, so that we add transactions\n     // back to the mempool starting with the earliest transaction that had\n     // been previously seen in a block.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318587592",
      "id" : 1318587592,
      "line" : 302,
      "node_id" : "PRRC_kwDOABII585OmAzI",
      "original_commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "original_line" : 302,
      "original_position" : 28,
      "original_start_line" : 297,
      "path" : "src/validation.cpp",
      "position" : 28,
      "pull_request_review_id" : 1611163652,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318587592/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 297,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-07T13:45:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318587592",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318589322"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318589322"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: can be const\r\n```suggestion\r\n        const auto queuedTx = disconnectpool.take();\r\n```",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-07T13:16:30Z",
      "diff_hunk" : "@@ -295,28 +294,31 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n     AssertLockHeld(cs_main);\n     AssertLockHeld(m_mempool->cs);\n     std::vector<uint256> vHashUpdate;\n-    // disconnectpool's insertion_order index sorts the entries from\n-    // oldest to newest, but the oldest entry will be the last tx from the\n+    // disconnectpool sorts the entries from\n+    // oldest to newest. The oldest entry will be the last tx from the\n     // latest mined block that was disconnected.\n     // Iterate disconnectpool in reverse, so that we add transactions\n     // back to the mempool starting with the earliest transaction that had\n     // been previously seen in a block.\n-    auto it = disconnectpool.queuedTx.get<insertion_order>().rbegin();\n-    while (it != disconnectpool.queuedTx.get<insertion_order>().rend()) {\n-        // ignore validation errors in resurrected transactions\n-        if (!fAddToMempool || (*it)->IsCoinBase() ||\n-            AcceptToMemoryPool(*this, *it, GetTime(),\n-                /*bypass_limits=*/true, /*test_accept=*/false).m_result_type !=\n-                    MempoolAcceptResult::ResultType::VALID) {\n-            // If the transaction doesn't make it in to the mempool, remove any\n-            // transactions that depend on it (which would now be orphans).\n-            m_mempool->removeRecursive(**it, MemPoolRemovalReason::REORG);\n-        } else if (m_mempool->exists(GenTxid::Txid((*it)->GetHash()))) {\n-            vHashUpdate.push_back((*it)->GetHash());\n-        }\n-        ++it;\n-    }\n-    disconnectpool.queuedTx.clear();\n+    {\n+        std::list<CTransactionRef> queuedTx = disconnectpool.take();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318589322",
      "id" : 1318589322,
      "line" : 304,
      "node_id" : "PRRC_kwDOABII585OmBOK",
      "original_commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "original_line" : 304,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 46,
      "pull_request_review_id" : 1611163652,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318589322/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-07T13:45:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318589322",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318618551"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318618551"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "For readability, would you consider moving this to its own private function?\r\n\r\n<details>\r\n<summary>git diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/kernel/disconnected_transactions.h b/src/kernel/disconnected_transactions.h\r\nindex 6e12059874..d1a8b5e989 100644\r\n--- a/src/kernel/disconnected_transactions.h\r\n+++ b/src/kernel/disconnected_transactions.h\r\n@@ -37,6 +37,20 @@ private:\r\n     using List = decltype(queuedTx);\r\n     std::unordered_map<uint256, List::iterator, SaltedTxidHasher> iters_by_txid;\r\n \r\n+    // Trim and return the earliest-added entries until we are within memory bounds.\r\n+    std::vector<CTransactionRef> EvictTransactionsIfNeeded()\r\n+    {\r\n+        std::vector<CTransactionRef> evicted;\r\n+        while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\r\n+            evicted.emplace_back(queuedTx.front());\r\n+            cachedInnerUsage -= RecursiveDynamicUsage(queuedTx.front());\r\n+            iters_by_txid.erase(queuedTx.front()->GetHash());\r\n+            queuedTx.pop_front();\r\n+        }\r\n+\r\n+        return evicted;\r\n+    }\r\n+\r\n public:\r\n     DisconnectedBlockTransactions(size_t max_mem_usage) : m_max_mem_usage{max_mem_usage} {}\r\n \r\n@@ -64,7 +78,6 @@ public:\r\n     // Returns vector of transactions that were evicted for size-limiting.\r\n     [[nodiscard]] std::vector<CTransactionRef> AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\r\n     {\r\n-        std::vector<CTransactionRef> evicted;\r\n         // Blocks are disconnected in descending order by block height. Within each block, add\r\n         // transactions in reverse order so that transactions with dependencies on other\r\n         // transactions (if any) are at the beginning. If this data structure grows too large, we\r\n@@ -77,13 +90,7 @@ public:\r\n             cachedInnerUsage += RecursiveDynamicUsage(*block_it);\r\n         }\r\n \r\n-        // Trim the earliest-added entries until we are within memory bounds.\r\n-        while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\r\n-            evicted.emplace_back(queuedTx.front());\r\n-            cachedInnerUsage -= RecursiveDynamicUsage(queuedTx.front());\r\n-            iters_by_txid.erase(queuedTx.front()->GetHash());\r\n-            queuedTx.pop_front();\r\n-        }\r\n+        const auto evicted{EvictTransactionsIfNeeded()};\r\n         return evicted;\r\n     }\r\n \r\n```\r\n</details>",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-07T13:34:11Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+#define BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+\n+#include <core_memusage.h>\n+#include <memusage.h>\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+\n+#include <list>\n+#include <unordered_map>\n+\n+/** Maximum kilobytes for transactions to store for processing during reorg */\n+static const unsigned int MAX_DISCONNECTED_TX_POOL_SIZE = 20000;\n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+class DisconnectedBlockTransactions {\n+private:\n+    uint64_t cachedInnerUsage = 0;\n+    const size_t m_max_mem_usage;\n+    std::list<CTransactionRef> queuedTx;\n+    using List = decltype(queuedTx);\n+    std::unordered_map<uint256, List::iterator, SaltedTxidHasher> iters_by_txid;\n+\n+public:\n+    DisconnectedBlockTransactions(size_t max_mem_usage) : m_max_mem_usage{max_mem_usage} {}\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() {\n+        assert(queuedTx.empty());\n+        assert(iters_by_txid.empty());\n+        assert(cachedInnerUsage == 0);\n+    }\n+\n+    size_t DynamicMemoryUsage() const {\n+        return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n+    }\n+\n+    // Add transactions from the block, in reverse order. We assume that callers will never give us\n+    // multiple transactions with the same txid, otherwise things can go very wrong in\n+    // removeForBlock due to queuedTx containing an item without a corresponding entry in iters_by_txid.\n+    // Returns vector of transactions that were evicted for size-limiting.\n+    [[nodiscard]] std::vector<CTransactionRef> AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        std::vector<CTransactionRef> evicted;\n+        // Blocks are disconnected in descending order by block height. Within each block, add\n+        // transactions in reverse order so that transactions with dependencies on other\n+        // transactions (if any) are at the beginning. If this data structure grows too large, we\n+        // will trim transactions from the front, and should avoid removing transactions that other\n+        // ones depend on.\n+        iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n+        for (auto block_it = vtx.rbegin(); block_it != vtx.rend(); ++block_it) {\n+            auto it = queuedTx.insert(queuedTx.end(), *block_it);\n+            iters_by_txid.emplace((*block_it)->GetHash(), it);\n+            cachedInnerUsage += RecursiveDynamicUsage(*block_it);\n+        }\n+\n+        // Trim the earliest-added entries until we are within memory bounds.\n+        while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n+            evicted.emplace_back(queuedTx.front());\n+            cachedInnerUsage -= RecursiveDynamicUsage(queuedTx.front());\n+            iters_by_txid.erase(queuedTx.front()->GetHash());\n+            queuedTx.pop_front();\n+        }\n+        return evicted;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318618551",
      "id" : 1318618551,
      "line" : 87,
      "node_id" : "PRRC_kwDOABII585OmIW3",
      "original_commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "original_line" : 87,
      "original_position" : 87,
      "original_start_line" : 80,
      "path" : "src/kernel/disconnected_transactions.h",
      "position" : 87,
      "pull_request_review_id" : 1611163652,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318618551/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 80,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-07T13:45:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318618551",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318623000"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318623000"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit\r\n```suggestion\r\nstatic const unsigned int MAX_DISCONNECTED_TX_POOL_SIZE = 20'000;\r\n```",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-07T13:37:19Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+#define BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+\n+#include <core_memusage.h>\n+#include <memusage.h>\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+\n+#include <list>\n+#include <unordered_map>\n+\n+/** Maximum kilobytes for transactions to store for processing during reorg */\n+static const unsigned int MAX_DISCONNECTED_TX_POOL_SIZE = 20000;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318623000",
      "id" : 1318623000,
      "line" : 17,
      "node_id" : "PRRC_kwDOABII585OmJcY",
      "original_commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "original_line" : 17,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/kernel/disconnected_transactions.h",
      "position" : 17,
      "pull_request_review_id" : 1611163652,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318623000/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-07T13:45:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318623000",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318625980"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318625980"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: less abbreviations if not necessary\r\n```suggestion\r\n    // DisconnectedBlockTransactions with a comfortable maximum memory usage so that nothing is evicted.\r\n```",
      "commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "created_at" : "2023-09-07T13:38:51Z",
      "diff_hunk" : "@@ -0,0 +1,94 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <test/util/setup_common.h>\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids for\n+    // this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+\n+    size_t usage_full{0};\n+    // DisconnectedBlockTransactions with a comfortable maximum memory usage s.t. nothing is evicted.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318625980",
      "id" : 1318625980,
      "line" : 21,
      "node_id" : "PRRC_kwDOABII585OmKK8",
      "original_commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "original_line" : 21,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/test/disconnected_transactions.cpp",
      "position" : 21,
      "pull_request_review_id" : 1611163652,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318625980/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-07T13:45:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318625980",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318935899"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318935899"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-07T17:43:41Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+#define BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+\n+#include <core_memusage.h>\n+#include <memusage.h>\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+\n+#include <list>\n+#include <unordered_map>\n+\n+/** Maximum kilobytes for transactions to store for processing during reorg */\n+static const unsigned int MAX_DISCONNECTED_TX_POOL_SIZE = 20000;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318935899",
      "id" : 1318935899,
      "in_reply_to_id" : 1318623000,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OnV1b",
      "original_commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "original_line" : 17,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/kernel/disconnected_transactions.h",
      "position" : null,
      "pull_request_review_id" : 1615957811,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318935899/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-11T11:55:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318935899",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318936085"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318936085"
         }
      },
      "author_association" : "MEMBER",
      "body" : "called it `TxList`",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-07T17:43:53Z",
      "diff_hunk" : "@@ -0,0 +1,120 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+#define BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+\n+#include <core_memusage.h>\n+#include <memusage.h>\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+\n+#include <list>\n+#include <unordered_map>\n+\n+/** Maximum kilobytes for transactions to store for processing during reorg */\n+static const unsigned int MAX_DISCONNECTED_TX_POOL_SIZE = 20000;\n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+private:\n+    uint64_t cachedInnerUsage = 0;\n+    const size_t m_max_mem_usage;\n+    std::list<CTransactionRef> queuedTx;\n+    using List = decltype(queuedTx);\n+    std::unordered_map<uint256, List::iterator, SaltedTxidHasher> iters_by_txid;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318936085",
      "id" : 1318936085,
      "in_reply_to_id" : 1318353039,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OnV4V",
      "original_commit_id" : "a1f378adbe00f82ccb76a108d49d38721698089f",
      "original_line" : 38,
      "original_position" : 38,
      "original_start_line" : 37,
      "path" : "src/kernel/disconnected_transactions.h",
      "position" : null,
      "pull_request_review_id" : 1615957811,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318936085/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-11T11:55:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318936085",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318936420"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318936420"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added notes about order of queuedTx in the class description and stated that the callers should go descending order by block height in the comment for this function.",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-07T17:44:17Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+#define BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+\n+#include <core_memusage.h>\n+#include <memusage.h>\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+\n+#include <list>\n+#include <unordered_map>\n+\n+/** Maximum kilobytes for transactions to store for processing during reorg */\n+static const unsigned int MAX_DISCONNECTED_TX_POOL_SIZE = 20000;\n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+class DisconnectedBlockTransactions {\n+private:\n+    uint64_t cachedInnerUsage = 0;\n+    const size_t m_max_mem_usage;\n+    std::list<CTransactionRef> queuedTx;\n+    using List = decltype(queuedTx);\n+    std::unordered_map<uint256, List::iterator, SaltedTxidHasher> iters_by_txid;\n+\n+public:\n+    DisconnectedBlockTransactions(size_t max_mem_usage) : m_max_mem_usage{max_mem_usage} {}\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() {\n+        assert(queuedTx.empty());\n+        assert(iters_by_txid.empty());\n+        assert(cachedInnerUsage == 0);\n+    }\n+\n+    size_t DynamicMemoryUsage() const {\n+        return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n+    }\n+\n+    // Add transactions from the block, in reverse order. We assume that callers will never give us\n+    // multiple transactions with the same txid, otherwise things can go very wrong in\n+    // removeForBlock due to queuedTx containing an item without a corresponding entry in iters_by_txid.\n+    // Returns vector of transactions that were evicted for size-limiting.\n+    [[nodiscard]] std::vector<CTransactionRef> AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        std::vector<CTransactionRef> evicted;\n+        // Blocks are disconnected in descending order by block height. Within each block, add",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318936420",
      "id" : 1318936420,
      "in_reply_to_id" : 1318458796,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OnV9k",
      "original_commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "original_line" : 68,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/kernel/disconnected_transactions.h",
      "position" : null,
      "pull_request_review_id" : 1615957811,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318936420/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-11T11:55:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318936420",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318940266"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318940266"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Didn't end up doing this as it requires knowing how much the memory usage will change and I'm not sure if I'd implement it 100% accurately...",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-07T17:48:19Z",
      "diff_hunk" : "@@ -73,6 +80,15 @@ struct DisconnectedBlockTransactions {\n             iters_by_txid.emplace((*block_it)->GetHash(), it);\n             cachedInnerUsage += RecursiveDynamicUsage(*block_it);\n         }\n+\n+        // Trim the earliest-added entries until we are within memory bounds.\n+        while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n+            evicted.emplace_back(queuedTx.front());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318940266",
      "id" : 1318940266,
      "in_reply_to_id" : 1317618061,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OnW5q",
      "original_commit_id" : "a1f378adbe00f82ccb76a108d49d38721698089f",
      "original_line" : 82,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "src/kernel/disconnected_transactions.h",
      "position" : null,
      "pull_request_review_id" : 1615957811,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318940266/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-11T11:55:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318940266",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318940427"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318940427"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sure, moved",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-07T17:48:31Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+#define BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+\n+#include <core_memusage.h>\n+#include <memusage.h>\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+\n+#include <list>\n+#include <unordered_map>\n+\n+/** Maximum kilobytes for transactions to store for processing during reorg */\n+static const unsigned int MAX_DISCONNECTED_TX_POOL_SIZE = 20000;\n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+class DisconnectedBlockTransactions {\n+private:\n+    uint64_t cachedInnerUsage = 0;\n+    const size_t m_max_mem_usage;\n+    std::list<CTransactionRef> queuedTx;\n+    using List = decltype(queuedTx);\n+    std::unordered_map<uint256, List::iterator, SaltedTxidHasher> iters_by_txid;\n+\n+public:\n+    DisconnectedBlockTransactions(size_t max_mem_usage) : m_max_mem_usage{max_mem_usage} {}\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() {\n+        assert(queuedTx.empty());\n+        assert(iters_by_txid.empty());\n+        assert(cachedInnerUsage == 0);\n+    }\n+\n+    size_t DynamicMemoryUsage() const {\n+        return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n+    }\n+\n+    // Add transactions from the block, in reverse order. We assume that callers will never give us\n+    // multiple transactions with the same txid, otherwise things can go very wrong in\n+    // removeForBlock due to queuedTx containing an item without a corresponding entry in iters_by_txid.\n+    // Returns vector of transactions that were evicted for size-limiting.\n+    [[nodiscard]] std::vector<CTransactionRef> AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        std::vector<CTransactionRef> evicted;\n+        // Blocks are disconnected in descending order by block height. Within each block, add\n+        // transactions in reverse order so that transactions with dependencies on other\n+        // transactions (if any) are at the beginning. If this data structure grows too large, we\n+        // will trim transactions from the front, and should avoid removing transactions that other\n+        // ones depend on.\n+        iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n+        for (auto block_it = vtx.rbegin(); block_it != vtx.rend(); ++block_it) {\n+            auto it = queuedTx.insert(queuedTx.end(), *block_it);\n+            iters_by_txid.emplace((*block_it)->GetHash(), it);\n+            cachedInnerUsage += RecursiveDynamicUsage(*block_it);\n+        }\n+\n+        // Trim the earliest-added entries until we are within memory bounds.\n+        while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n+            evicted.emplace_back(queuedTx.front());\n+            cachedInnerUsage -= RecursiveDynamicUsage(queuedTx.front());\n+            iters_by_txid.erase(queuedTx.front()->GetHash());\n+            queuedTx.pop_front();\n+        }\n+        return evicted;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318940427",
      "id" : 1318940427,
      "in_reply_to_id" : 1318618551,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OnW8L",
      "original_commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "original_line" : 87,
      "original_position" : 87,
      "original_start_line" : 80,
      "path" : "src/kernel/disconnected_transactions.h",
      "position" : null,
      "pull_request_review_id" : 1615957811,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318940427/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-11T11:55:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318940427",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318941541"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318941541"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-07T17:49:37Z",
      "diff_hunk" : "@@ -0,0 +1,94 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <test/util/setup_common.h>\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids for\n+    // this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+\n+    size_t usage_full{0};\n+    // DisconnectedBlockTransactions with a comfortable maximum memory usage s.t. nothing is evicted.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318941541",
      "id" : 1318941541,
      "in_reply_to_id" : 1318625980,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OnXNl",
      "original_commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "original_line" : 21,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/test/disconnected_transactions.cpp",
      "position" : null,
      "pull_request_review_id" : 1615957811,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318941541/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-11T11:55:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318941541",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318942435"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318942435"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Er, I found this a bit hard to parse too, so I've reworded the comment but a bit differently.",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-07T17:50:32Z",
      "diff_hunk" : "@@ -295,28 +294,31 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n     AssertLockHeld(cs_main);\n     AssertLockHeld(m_mempool->cs);\n     std::vector<uint256> vHashUpdate;\n-    // disconnectpool's insertion_order index sorts the entries from\n-    // oldest to newest, but the oldest entry will be the last tx from the\n+    // disconnectpool sorts the entries from\n+    // oldest to newest. The oldest entry will be the last tx from the\n     // latest mined block that was disconnected.\n     // Iterate disconnectpool in reverse, so that we add transactions\n     // back to the mempool starting with the earliest transaction that had\n     // been previously seen in a block.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318942435",
      "id" : 1318942435,
      "in_reply_to_id" : 1318587592,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OnXbj",
      "original_commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "original_line" : 302,
      "original_position" : 28,
      "original_start_line" : 297,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1615957811,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318942435/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-11T11:55:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318942435",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318943402"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318943402"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a local scope for `queuedTx` to go out of",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-07T17:51:37Z",
      "diff_hunk" : "@@ -316,7 +317,6 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n         }\n         ++it;\n     }\n-    disconnectpool.queuedTx.clear();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318943402",
      "id" : 1318943402,
      "in_reply_to_id" : 1317582393,
      "line" : 319,
      "node_id" : "PRRC_kwDOABII585OnXqq",
      "original_commit_id" : "fc8372947853c105508da5fac6db29512bc1e611",
      "original_line" : 319,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 42,
      "pull_request_review_id" : 1615957811,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318943402/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-11T11:55:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318943402",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318943493"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318943493"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-07T17:51:43Z",
      "diff_hunk" : "@@ -295,28 +294,31 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n     AssertLockHeld(cs_main);\n     AssertLockHeld(m_mempool->cs);\n     std::vector<uint256> vHashUpdate;\n-    // disconnectpool's insertion_order index sorts the entries from\n-    // oldest to newest, but the oldest entry will be the last tx from the\n+    // disconnectpool sorts the entries from\n+    // oldest to newest. The oldest entry will be the last tx from the\n     // latest mined block that was disconnected.\n     // Iterate disconnectpool in reverse, so that we add transactions\n     // back to the mempool starting with the earliest transaction that had\n     // been previously seen in a block.\n-    auto it = disconnectpool.queuedTx.get<insertion_order>().rbegin();\n-    while (it != disconnectpool.queuedTx.get<insertion_order>().rend()) {\n-        // ignore validation errors in resurrected transactions\n-        if (!fAddToMempool || (*it)->IsCoinBase() ||\n-            AcceptToMemoryPool(*this, *it, GetTime(),\n-                /*bypass_limits=*/true, /*test_accept=*/false).m_result_type !=\n-                    MempoolAcceptResult::ResultType::VALID) {\n-            // If the transaction doesn't make it in to the mempool, remove any\n-            // transactions that depend on it (which would now be orphans).\n-            m_mempool->removeRecursive(**it, MemPoolRemovalReason::REORG);\n-        } else if (m_mempool->exists(GenTxid::Txid((*it)->GetHash()))) {\n-            vHashUpdate.push_back((*it)->GetHash());\n-        }\n-        ++it;\n-    }\n-    disconnectpool.queuedTx.clear();\n+    {\n+        std::list<CTransactionRef> queuedTx = disconnectpool.take();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318943493",
      "id" : 1318943493,
      "in_reply_to_id" : 1318589322,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OnXsF",
      "original_commit_id" : "88dcf22abff266fd86b50838a41a0233dfd560af",
      "original_line" : 304,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1615957811,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318943493/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-11T11:55:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318943493",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318965303"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318965303"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes!",
      "commit_id" : "5e20c0dbbc9b0e69c45f85e91b78d9b14de07f0a",
      "created_at" : "2023-09-07T18:14:47Z",
      "diff_hunk" : "@@ -295,28 +295,30 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n     AssertLockHeld(cs_main);\n     AssertLockHeld(m_mempool->cs);\n     std::vector<uint256> vHashUpdate;\n-    // disconnectpool's insertion_order index sorts the entries from\n-    // oldest to newest, but the oldest entry will be the last tx from the\n-    // latest mined block that was disconnected.\n-    // Iterate disconnectpool in reverse, so that we add transactions\n-    // back to the mempool starting with the earliest transaction that had\n-    // been previously seen in a block.\n-    auto it = disconnectpool.queuedTx.get<insertion_order>().rbegin();\n-    while (it != disconnectpool.queuedTx.get<insertion_order>().rend()) {\n-        // ignore validation errors in resurrected transactions\n-        if (!fAddToMempool || (*it)->IsCoinBase() ||\n-            AcceptToMemoryPool(*this, *it, GetTime(),\n-                /*bypass_limits=*/true, /*test_accept=*/false).m_result_type !=\n-                    MempoolAcceptResult::ResultType::VALID) {\n-            // If the transaction doesn't make it in to the mempool, remove any\n-            // transactions that depend on it (which would now be orphans).\n-            m_mempool->removeRecursive(**it, MemPoolRemovalReason::REORG);\n-        } else if (m_mempool->exists(GenTxid::Txid((*it)->GetHash()))) {\n-            vHashUpdate.push_back((*it)->GetHash());\n-        }\n-        ++it;\n-    }\n-    disconnectpool.queuedTx.clear();\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1318965303",
      "id" : 1318965303,
      "line" : 297,
      "node_id" : "PRRC_kwDOABII585OndA3",
      "original_commit_id" : "a9e682194af3b2e888c9ca74ce1d1e365ea77eb7",
      "original_line" : 298,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 43,
      "pull_request_review_id" : 1616001879,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318965303/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-07T18:14:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318965303",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1320576421"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1320576421"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Here `list_iter` can never be [deduced](https://en.cppreference.com/w/cpp/language/auto) as a reference to `iter->second` which would then be erased right?\r\n\r\nAn alternative to avoid having to ask this question could be to simply erase from `iters_by_txid` last:\r\n```cpp\r\ncachedInnerUsage -= RecursiveDynamicUsage(*iter->second);\r\nqueuedTx.erase(iter->second);\r\niters_by_txid.erase(iter);\r\n```",
      "commit_id" : "5e20c0dbbc9b0e69c45f85e91b78d9b14de07f0a",
      "created_at" : "2023-09-09T14:21:14Z",
      "diff_hunk" : "@@ -881,59 +873,78 @@ struct DisconnectedBlockTransactions {\n     // to be refactored such that this assumption is no longer true (for\n     // instance if there was some other way we cleaned up the mempool after a\n     // reorg, besides draining this object).\n-    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n-\n-    indexed_disconnected_transactions queuedTx;\n-    uint64_t cachedInnerUsage = 0;\n+    ~DisconnectedBlockTransactions() {\n+        assert(queuedTx.empty());\n+        assert(iters_by_txid.empty());\n+        assert(cachedInnerUsage == 0);\n+    }\n \n-    // Estimate the overhead of queuedTx to be 6 pointers + an allocation, as\n-    // no exact formula for boost::multi_index_contained is implemented.\n     size_t DynamicMemoryUsage() const {\n-        return memusage::MallocUsage(sizeof(CTransactionRef) + 6 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+        return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n     }\n \n-\t/** Add transactions from the block, iterating through vtx in reverse order. Callers should call\n+    /** Add transactions from the block, iterating through vtx in reverse order. Callers should call\n      * this function for blocks in descending order by block height.\n      * We assume that callers never pass multiple transactions with the same txid, otherwise things\n      * can go very wrong in removeForBlock due to queuedTx containing an item without a\n      * corresponding entry in iters_by_txid.\n      */\n     void AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n     {\n+        iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n         for (auto block_it = vtx.rbegin(); block_it != vtx.rend(); ++block_it) {\n-            queuedTx.insert(*block_it);\n+            auto it = queuedTx.insert(queuedTx.end(), *block_it);\n+            iters_by_txid.emplace((*block_it)->GetHash(), it);\n             cachedInnerUsage += RecursiveDynamicUsage(*block_it);\n         }\n     }\n \n-    // Remove entries based on txid_index, and update memory usage.\n+    /** Remove any entries that are in this block. */\n     void removeForBlock(const std::vector<CTransactionRef>& vtx)\n     {\n         // Short-circuit in the common case of a block being added to the tip\n         if (queuedTx.empty()) {\n             return;\n         }\n-        for (auto const &tx : vtx) {\n-            auto it = queuedTx.find(tx->GetHash());\n-            if (it != queuedTx.end()) {\n-                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n-                queuedTx.erase(it);\n+        for (const auto& tx : vtx) {\n+            auto iter = iters_by_txid.find(tx->GetHash());\n+            if (iter != iters_by_txid.end()) {\n+                auto list_iter = iter->second;\n+                iters_by_txid.erase(iter);\n+                cachedInnerUsage -= RecursiveDynamicUsage(*list_iter);\n+                queuedTx.erase(list_iter);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1320576421",
      "id" : 1320576421,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OtmWl",
      "original_commit_id" : "a9e682194af3b2e888c9ca74ce1d1e365ea77eb7",
      "original_line" : 915,
      "original_position" : 101,
      "original_start_line" : 912,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 1618648240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1320576421/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-09T14:21:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1320576421",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1322889291"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322889291"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Currently, by inheriting from X, we're accounting for the size of X (as this will be included in `sizeof(list_node<X>)`. I think that makes sense - X is owned by the list.\r\n\r\nI'm not familiar with std::list implementations, but I'm not sure if accounting for both `X` as well as `void* ptr_val` makes sense. I think the node owning X is plenty, I don't see the need for an additional pointer?\r\n\r\nFinally, by inheriting from `private X` we cannot use this on non-class/struct types, e.g. it wouldn't work for `std::list<int>`. A suggestion to address both problems (and it seems the same approach was taken for e.g. `stl_tree_node`:\r\n\r\n```suggestion\r\nstruct list_node\r\n{\r\nprivate:\r\n    void* ptr_next;\r\n    void* ptr_prev;\r\n    X val;\r\n```",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-12T11:19:01Z",
      "diff_hunk" : "@@ -148,6 +149,21 @@ static inline size_t DynamicUsage(const std::shared_ptr<X>& p)\n     return p ? MallocUsage(sizeof(X)) + MallocUsage(sizeof(stl_shared_counter)) : 0;\n }\n \n+template<typename X>\n+struct list_node : private X\n+{\n+private:\n+    void* ptr_next;\n+    void* ptr_prev;\n+    void* ptr_val;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1322889291",
      "id" : 1322889291,
      "line" : 158,
      "node_id" : "PRRC_kwDOABII585O2bBL",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 158,
      "original_position" : 18,
      "original_start_line" : 153,
      "path" : "src/memusage.h",
      "position" : 18,
      "pull_request_review_id" : 1622008442,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322889291/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 153,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-12T12:36:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322889291",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1322892874"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322892874"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Do we not also need to account for `sizeof(l)` for the list overhead?\r\n```suggestion\r\n    return MallocUsage(sizeof(l)) + MallocUsage(sizeof(list_node<X>)) * l.size();\r\n```",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-12T11:22:29Z",
      "diff_hunk" : "@@ -148,6 +149,21 @@ static inline size_t DynamicUsage(const std::shared_ptr<X>& p)\n     return p ? MallocUsage(sizeof(X)) + MallocUsage(sizeof(stl_shared_counter)) : 0;\n }\n \n+template<typename X>\n+struct list_node : private X\n+{\n+private:\n+    void* ptr_next;\n+    void* ptr_prev;\n+    void* ptr_val;\n+};\n+\n+template<typename X>\n+static inline size_t DynamicUsage(const std::list<X>& l)\n+{\n+    return MallocUsage(sizeof(list_node<X>)) * l.size();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1322892874",
      "id" : 1322892874,
      "line" : 164,
      "node_id" : "PRRC_kwDOABII585O2b5K",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 164,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/memusage.h",
      "position" : 24,
      "pull_request_review_id" : 1622008442,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322892874/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T12:36:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322892874",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1322948452"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322948452"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think `cachedInnerUsage` shouldn't account for the memory usage of the `shared_ptr<CTransaction>`, only for the `CTransaction`. We already account for the `shared_ptr` in `DisconnectedBlockTransactions::DynamicMemoryUsage` (as I think it should be).\r\n\r\n<details>\r\n<summary>git diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/kernel/disconnected_transactions.h b/src/kernel/disconnected_transactions.h\r\nindex 0c170e7a4b..a3bc77b6fc 100644\r\n--- a/src/kernel/disconnected_transactions.h\r\n+++ b/src/kernel/disconnected_transactions.h\r\n@@ -50,7 +50,7 @@ private:\r\n \r\n         while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\r\n             evicted.emplace_back(queuedTx.front());\r\n-            cachedInnerUsage -= RecursiveDynamicUsage(queuedTx.front());\r\n+            cachedInnerUsage -= RecursiveDynamicUsage(*queuedTx.front());\r\n             iters_by_txid.erase(queuedTx.front()->GetHash());\r\n             queuedTx.pop_front();\r\n         }\r\n@@ -91,7 +91,7 @@ public:\r\n         for (auto block_it = vtx.rbegin(); block_it != vtx.rend(); ++block_it) {\r\n             auto it = queuedTx.insert(queuedTx.end(), *block_it);\r\n             iters_by_txid.emplace((*block_it)->GetHash(), it);\r\n-            cachedInnerUsage += RecursiveDynamicUsage(*block_it);\r\n+            cachedInnerUsage += RecursiveDynamicUsage(**block_it);\r\n         }\r\n         return LimitMemoryUsage();\r\n     }\r\n@@ -108,7 +108,7 @@ public:\r\n             if (iter != iters_by_txid.end()) {\r\n                 auto list_iter = iter->second;\r\n                 iters_by_txid.erase(iter);\r\n-                cachedInnerUsage -= RecursiveDynamicUsage(*list_iter);\r\n+                cachedInnerUsage -= RecursiveDynamicUsage(**list_iter);\r\n                 queuedTx.erase(list_iter);\r\n             }\r\n         }\r\n\r\n```\r\n</details>\r\n\r\n",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-12T12:15:37Z",
      "diff_hunk" : "@@ -0,0 +1,133 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+#define BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+\n+#include <core_memusage.h>\n+#include <memusage.h>\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+\n+#include <list>\n+#include <unordered_map>\n+\n+/** Maximum kilobytes for transactions to store for processing during reorg */\n+static const unsigned int MAX_DISCONNECTED_TX_POOL_SIZE = 20'000;\n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ *\n+ * Order of queuedTx:\n+ * The front of the list should be the most recently-confirmed transactions (transactions at the\n+ * end of vtx of blocks closer to the tip). If memory usage grows too large, we trim from the front\n+ * of the list. After trimming, transactions can be re-added to the mempool from the back of the\n+ * list to the front without running into missing inputs.\n+ */\n+class DisconnectedBlockTransactions {\n+private:\n+    uint64_t cachedInnerUsage = 0;\n+    const size_t m_max_mem_usage;\n+    std::list<CTransactionRef> queuedTx;\n+    using TxList = decltype(queuedTx);\n+    std::unordered_map<uint256, TxList::iterator, SaltedTxidHasher> iters_by_txid;\n+\n+    /** Trim the earliest-added entries until we are within memory bounds. */\n+    std::vector<CTransactionRef> LimitMemoryUsage()\n+    {\n+        std::vector<CTransactionRef> evicted;\n+\n+        while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n+            evicted.emplace_back(queuedTx.front());\n+            cachedInnerUsage -= RecursiveDynamicUsage(queuedTx.front());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1322948452",
      "id" : 1322948452,
      "line" : 53,
      "node_id" : "PRRC_kwDOABII585O2pdk",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 53,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/kernel/disconnected_transactions.h",
      "position" : 53,
      "pull_request_review_id" : 1622008442,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322948452/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T12:39:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322948452",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1322958591"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322958591"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: A docstring would be helpful I think:\r\n\r\n```suggestion\r\n    //! Memory usage of the CTransaction objects to which queuedTx holds references\r\n    uint64_t cachedInnerUsage = 0;\r\n```",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-12T12:24:19Z",
      "diff_hunk" : "@@ -0,0 +1,133 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+#define BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+\n+#include <core_memusage.h>\n+#include <memusage.h>\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+\n+#include <list>\n+#include <unordered_map>\n+\n+/** Maximum kilobytes for transactions to store for processing during reorg */\n+static const unsigned int MAX_DISCONNECTED_TX_POOL_SIZE = 20'000;\n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ *\n+ * Order of queuedTx:\n+ * The front of the list should be the most recently-confirmed transactions (transactions at the\n+ * end of vtx of blocks closer to the tip). If memory usage grows too large, we trim from the front\n+ * of the list. After trimming, transactions can be re-added to the mempool from the back of the\n+ * list to the front without running into missing inputs.\n+ */\n+class DisconnectedBlockTransactions {\n+private:\n+    uint64_t cachedInnerUsage = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1322958591",
      "id" : 1322958591,
      "line" : 40,
      "node_id" : "PRRC_kwDOABII585O2r7_",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 40,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/kernel/disconnected_transactions.h",
      "position" : 40,
      "pull_request_review_id" : 1622008442,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322958591/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T15:51:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322958591",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323054738"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323054738"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What's the purpose of these resizes? Do we want two vins and two vouts?",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-12T13:34:14Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <primitives/block.h>\n+#include <test/util/random.h>\n+#include <test/util/setup_common.h>\n+\n+constexpr size_t BLOCK_VTX_COUNT{4000};\n+constexpr size_t BLOCK_VTX_COUNT_10PERCENT{400};\n+\n+using BlockTxns = decltype(CBlock::vtx);\n+\n+/** Reorg where 1 block is disconnected and 2 blocks are connected. */\n+struct ReorgTxns {\n+    /** Disconnected block. */\n+    BlockTxns disconnected_txns;\n+    /** First connected block. */\n+    BlockTxns connected_txns_1;\n+    /** Second connected block, new chain tip. Has no overlap with disconnected_txns. */\n+    BlockTxns connected_txns_2;\n+    /** Transactions shared between disconnected_txns and connected_txns_1. */\n+    size_t num_shared;\n+};\n+\n+static BlockTxns CreateRandomTransactions(size_t num_txns)\n+{\n+    // Ensure every transaction has a different txid by having each one spend the previous one.\n+    static uint256 prevout_hash{uint256::ZERO};\n+\n+    BlockTxns txns;\n+    txns.reserve(num_txns);\n+    // Simplest spk for every tx\n+    CScript spk = CScript() << OP_TRUE;\n+    for (uint32_t i = 0; i < num_txns; ++i) {\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323054738",
      "id" : 1323054738,
      "line" : 39,
      "node_id" : "PRRC_kwDOABII585O3DaS",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 39,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/bench/disconnected_transactions.cpp",
      "position" : 39,
      "pull_request_review_id" : 1622272669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323054738/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T15:51:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323054738",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323069039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323069039"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit\r\n```suggestion\r\n/** Creates 1 disconnected block and 2 connected blocks, each with BLOCK_VTX_COUNT transactions. Between the disconnected and the first connected block, there will be num_not_shared\r\n * transactions that are different, all other transactions the exact same. This is to simulate a\r\n * reorg in which all but num_not_shared transactions are confirmed in the new chain. */\r\n```",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-12T13:44:16Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <primitives/block.h>\n+#include <test/util/random.h>\n+#include <test/util/setup_common.h>\n+\n+constexpr size_t BLOCK_VTX_COUNT{4000};\n+constexpr size_t BLOCK_VTX_COUNT_10PERCENT{400};\n+\n+using BlockTxns = decltype(CBlock::vtx);\n+\n+/** Reorg where 1 block is disconnected and 2 blocks are connected. */\n+struct ReorgTxns {\n+    /** Disconnected block. */\n+    BlockTxns disconnected_txns;\n+    /** First connected block. */\n+    BlockTxns connected_txns_1;\n+    /** Second connected block, new chain tip. Has no overlap with disconnected_txns. */\n+    BlockTxns connected_txns_2;\n+    /** Transactions shared between disconnected_txns and connected_txns_1. */\n+    size_t num_shared;\n+};\n+\n+static BlockTxns CreateRandomTransactions(size_t num_txns)\n+{\n+    // Ensure every transaction has a different txid by having each one spend the previous one.\n+    static uint256 prevout_hash{uint256::ZERO};\n+\n+    BlockTxns txns;\n+    txns.reserve(num_txns);\n+    // Simplest spk for every tx\n+    CScript spk = CScript() << OP_TRUE;\n+    for (uint32_t i = 0; i < num_txns; ++i) {\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        tx.vin.emplace_back(CTxIn{COutPoint{prevout_hash, 0}});\n+        tx.vout.resize(1);\n+        tx.vout.emplace_back(CTxOut{CENT, spk});\n+        auto ptx{MakeTransactionRef(tx)};\n+        txns.emplace_back(ptx);\n+        prevout_hash = ptx->GetHash();\n+    }\n+    return txns;\n+}\n+\n+/** Creates 2 blocks with BLOCK_VTX_COUNT transactions each. There will be num_not_shared\n+ * transactions that are different, all other transactions the exact same. This is to simulate a\n+ * reorg in which all but num_not_shared transactions are confirmed in the new chain. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323069039",
      "id" : 1323069039,
      "line" : 52,
      "node_id" : "PRRC_kwDOABII585O3G5v",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 52,
      "original_position" : 52,
      "original_start_line" : 50,
      "path" : "src/bench/disconnected_transactions.cpp",
      "position" : 52,
      "pull_request_review_id" : 1622272669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323069039/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 50,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-12T15:51:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323069039",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323091031"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323091031"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: docstrings seems to be from a previous version of this PR. Would suggest updating to e.g.:\r\n\r\n```suggestion\r\n/** Reorg scenario where all of the transactions in the newly connected block existed in the disconnected block. */\r\n```",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-12T13:59:18Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <primitives/block.h>\n+#include <test/util/random.h>\n+#include <test/util/setup_common.h>\n+\n+constexpr size_t BLOCK_VTX_COUNT{4000};\n+constexpr size_t BLOCK_VTX_COUNT_10PERCENT{400};\n+\n+using BlockTxns = decltype(CBlock::vtx);\n+\n+/** Reorg where 1 block is disconnected and 2 blocks are connected. */\n+struct ReorgTxns {\n+    /** Disconnected block. */\n+    BlockTxns disconnected_txns;\n+    /** First connected block. */\n+    BlockTxns connected_txns_1;\n+    /** Second connected block, new chain tip. Has no overlap with disconnected_txns. */\n+    BlockTxns connected_txns_2;\n+    /** Transactions shared between disconnected_txns and connected_txns_1. */\n+    size_t num_shared;\n+};\n+\n+static BlockTxns CreateRandomTransactions(size_t num_txns)\n+{\n+    // Ensure every transaction has a different txid by having each one spend the previous one.\n+    static uint256 prevout_hash{uint256::ZERO};\n+\n+    BlockTxns txns;\n+    txns.reserve(num_txns);\n+    // Simplest spk for every tx\n+    CScript spk = CScript() << OP_TRUE;\n+    for (uint32_t i = 0; i < num_txns; ++i) {\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        tx.vin.emplace_back(CTxIn{COutPoint{prevout_hash, 0}});\n+        tx.vout.resize(1);\n+        tx.vout.emplace_back(CTxOut{CENT, spk});\n+        auto ptx{MakeTransactionRef(tx)};\n+        txns.emplace_back(ptx);\n+        prevout_hash = ptx->GetHash();\n+    }\n+    return txns;\n+}\n+\n+/** Creates 2 blocks with BLOCK_VTX_COUNT transactions each. There will be num_not_shared\n+ * transactions that are different, all other transactions the exact same. This is to simulate a\n+ * reorg in which all but num_not_shared transactions are confirmed in the new chain. */\n+static ReorgTxns CreateBlocks(size_t num_not_shared)\n+{\n+    auto num_shared{BLOCK_VTX_COUNT - num_not_shared};\n+    const auto shared_txns{CreateRandomTransactions(/*num_txns=*/num_shared)};\n+\n+    // Create different sets of transactions...\n+    auto disconnected_block_txns{CreateRandomTransactions(/*num_txns=*/num_not_shared)};\n+    std::copy(shared_txns.begin(), shared_txns.end(), std::back_inserter(disconnected_block_txns));\n+\n+    auto connected_block_txns{CreateRandomTransactions(/*num_txns=*/num_not_shared)};\n+    std::copy(shared_txns.begin(), shared_txns.end(), std::back_inserter(connected_block_txns));\n+\n+    assert(disconnected_block_txns.size() == BLOCK_VTX_COUNT);\n+    assert(connected_block_txns.size() == BLOCK_VTX_COUNT);\n+\n+    return ReorgTxns{/*disconnected_txns=*/disconnected_block_txns,\n+                     /*connected_txns_1=*/connected_block_txns,\n+                     /*connected_txns_2=*/CreateRandomTransactions(BLOCK_VTX_COUNT),\n+                     /*num_shared=*/num_shared};\n+}\n+\n+static void Reorg(const ReorgTxns& reorg)\n+{\n+    DisconnectedBlockTransactions disconnectpool{MAX_DISCONNECTED_TX_POOL_SIZE * 1000};\n+    // Disconnect block\n+    const auto evicted = disconnectpool.AddTransactionsFromBlock(reorg.disconnected_txns);\n+    assert(evicted.empty());\n+\n+    // Connect first block\n+    disconnectpool.removeForBlock(reorg.connected_txns_1);\n+    // Connect new tip\n+    disconnectpool.removeForBlock(reorg.connected_txns_2);\n+\n+    // Sanity Check\n+    assert(disconnectpool.size() == BLOCK_VTX_COUNT - reorg.num_shared);\n+\n+    disconnectpool.clear();\n+}\n+\n+/** Add transactions from DisconnectedBlockTransactions, remove all of them, and then pop from the front until empty. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323091031",
      "id" : 1323091031,
      "line" : 92,
      "node_id" : "PRRC_kwDOABII585O3MRX",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 92,
      "original_position" : 92,
      "original_start_line" : null,
      "path" : "src/bench/disconnected_transactions.cpp",
      "position" : 92,
      "pull_request_review_id" : 1622272669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323091031/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T15:51:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323091031",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323108081"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323108081"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "tidy nit\r\n```suggestion\r\n    std::list<CTransactionRef> take()\r\n    {\r\n```",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-12T14:11:14Z",
      "diff_hunk" : "@@ -0,0 +1,133 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+#define BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+\n+#include <core_memusage.h>\n+#include <memusage.h>\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+\n+#include <list>\n+#include <unordered_map>\n+\n+/** Maximum kilobytes for transactions to store for processing during reorg */\n+static const unsigned int MAX_DISCONNECTED_TX_POOL_SIZE = 20'000;\n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ *\n+ * Order of queuedTx:\n+ * The front of the list should be the most recently-confirmed transactions (transactions at the\n+ * end of vtx of blocks closer to the tip). If memory usage grows too large, we trim from the front\n+ * of the list. After trimming, transactions can be re-added to the mempool from the back of the\n+ * list to the front without running into missing inputs.\n+ */\n+class DisconnectedBlockTransactions {\n+private:\n+    uint64_t cachedInnerUsage = 0;\n+    const size_t m_max_mem_usage;\n+    std::list<CTransactionRef> queuedTx;\n+    using TxList = decltype(queuedTx);\n+    std::unordered_map<uint256, TxList::iterator, SaltedTxidHasher> iters_by_txid;\n+\n+    /** Trim the earliest-added entries until we are within memory bounds. */\n+    std::vector<CTransactionRef> LimitMemoryUsage()\n+    {\n+        std::vector<CTransactionRef> evicted;\n+\n+        while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n+            evicted.emplace_back(queuedTx.front());\n+            cachedInnerUsage -= RecursiveDynamicUsage(queuedTx.front());\n+            iters_by_txid.erase(queuedTx.front()->GetHash());\n+            queuedTx.pop_front();\n+        }\n+        return evicted;\n+    }\n+\n+public:\n+    DisconnectedBlockTransactions(size_t max_mem_usage) : m_max_mem_usage{max_mem_usage} {}\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() {\n+        assert(queuedTx.empty());\n+        assert(iters_by_txid.empty());\n+        assert(cachedInnerUsage == 0);\n+    }\n+\n+    size_t DynamicMemoryUsage() const {\n+        return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n+    }\n+\n+    /** Add transactions from the block, iterating through vtx in reverse order. Callers should call\n+     * this function for blocks in descending order by block height.\n+     * We assume that callers never pass multiple transactions with the same txid, otherwise things\n+     * can go very wrong in removeForBlock due to queuedTx containing an item without a\n+     * corresponding entry in iters_by_txid.\n+     * @returns vector of transactions that were evicted for size-limiting.\n+     */\n+    [[nodiscard]] std::vector<CTransactionRef> AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n+        for (auto block_it = vtx.rbegin(); block_it != vtx.rend(); ++block_it) {\n+            auto it = queuedTx.insert(queuedTx.end(), *block_it);\n+            iters_by_txid.emplace((*block_it)->GetHash(), it);\n+            cachedInnerUsage += RecursiveDynamicUsage(*block_it);\n+        }\n+        return LimitMemoryUsage();\n+    }\n+\n+    /** Remove any entries that are in this block. */\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        for (const auto& tx : vtx) {\n+            auto iter = iters_by_txid.find(tx->GetHash());\n+            if (iter != iters_by_txid.end()) {\n+                auto list_iter = iter->second;\n+                iters_by_txid.erase(iter);\n+                cachedInnerUsage -= RecursiveDynamicUsage(*list_iter);\n+                queuedTx.erase(list_iter);\n+            }\n+        }\n+    }\n+\n+    size_t size() const { return queuedTx.size(); }\n+\n+    void clear()\n+    {\n+        cachedInnerUsage = 0;\n+        iters_by_txid.clear();\n+        queuedTx.clear();\n+    }\n+\n+    /** Clear all data structures and return the list of transactions. */\n+    std::list<CTransactionRef> take() {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323108081",
      "id" : 1323108081,
      "line" : 127,
      "node_id" : "PRRC_kwDOABII585O3Qbx",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 127,
      "original_position" : 127,
      "original_start_line" : null,
      "path" : "src/kernel/disconnected_transactions.h",
      "position" : 127,
      "pull_request_review_id" : 1622272669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323108081/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T15:51:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323108081",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323140597"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323140597"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: I think adding `take_first()` and then removing it in the next non-move commit is not ideal and seems like it could be avoided by moving the memory management commit to come before the boost removal commit, but (I didn't check) it's probably not worth the rebase hell.",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-12T14:33:23Z",
      "diff_hunk" : "@@ -881,59 +873,78 @@ struct DisconnectedBlockTransactions {\n     // to be refactored such that this assumption is no longer true (for\n     // instance if there was some other way we cleaned up the mempool after a\n     // reorg, besides draining this object).\n-    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n-\n-    indexed_disconnected_transactions queuedTx;\n-    uint64_t cachedInnerUsage = 0;\n+    ~DisconnectedBlockTransactions() {\n+        assert(queuedTx.empty());\n+        assert(iters_by_txid.empty());\n+        assert(cachedInnerUsage == 0);\n+    }\n \n-    // Estimate the overhead of queuedTx to be 6 pointers + an allocation, as\n-    // no exact formula for boost::multi_index_contained is implemented.\n     size_t DynamicMemoryUsage() const {\n-        return memusage::MallocUsage(sizeof(CTransactionRef) + 6 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+        return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n     }\n \n-\t/** Add transactions from the block, iterating through vtx in reverse order. Callers should call\n+    /** Add transactions from the block, iterating through vtx in reverse order. Callers should call\n      * this function for blocks in descending order by block height.\n      * We assume that callers never pass multiple transactions with the same txid, otherwise things\n      * can go very wrong in removeForBlock due to queuedTx containing an item without a\n      * corresponding entry in iters_by_txid.\n      */\n     void AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n     {\n+        iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n         for (auto block_it = vtx.rbegin(); block_it != vtx.rend(); ++block_it) {\n-            queuedTx.insert(*block_it);\n+            auto it = queuedTx.insert(queuedTx.end(), *block_it);\n+            iters_by_txid.emplace((*block_it)->GetHash(), it);\n             cachedInnerUsage += RecursiveDynamicUsage(*block_it);\n         }\n     }\n \n-    // Remove entries based on txid_index, and update memory usage.\n+    /** Remove any entries that are in this block. */\n     void removeForBlock(const std::vector<CTransactionRef>& vtx)\n     {\n         // Short-circuit in the common case of a block being added to the tip\n         if (queuedTx.empty()) {\n             return;\n         }\n-        for (auto const &tx : vtx) {\n-            auto it = queuedTx.find(tx->GetHash());\n-            if (it != queuedTx.end()) {\n-                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n-                queuedTx.erase(it);\n+        for (const auto& tx : vtx) {\n+            auto iter = iters_by_txid.find(tx->GetHash());\n+            if (iter != iters_by_txid.end()) {\n+                auto list_iter = iter->second;\n+                iters_by_txid.erase(iter);\n+                cachedInnerUsage -= RecursiveDynamicUsage(*list_iter);\n+                queuedTx.erase(list_iter);\n             }\n         }\n     }\n \n-    // Remove an entry by insertion_order index, and update memory usage.\n-    void removeEntry(indexed_disconnected_transactions::index<insertion_order>::type::iterator entry)\n+    /** Remove the first entry and update memory usage. */\n+    CTransactionRef take_first()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323140597",
      "id" : 1323140597,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O3YX1",
      "original_commit_id" : "a9e682194af3b2e888c9ca74ce1d1e365ea77eb7",
      "original_line" : 921,
      "original_position" : 109,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 1622272669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323140597/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T15:51:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323140597",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323146048"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323146048"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit\r\n```suggestion\r\n        // Save transactions to re-add to mempool at end of reorg. If any entries are evicted for exceeding memory limits,\r\n        // remove them and their descendants from the mempool.\r\n        for (auto&& evicted_tx : disconnectpool->AddTransactionsFromBlock(block.vtx)) {\r\n            m_mempool->removeRecursive(*evicted_tx, MemPoolRemovalReason::REORG);\r\n        }\r\n```",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-12T14:37:12Z",
      "diff_hunk" : "@@ -2720,15 +2721,10 @@ bool Chainstate::DisconnectTip(BlockValidationState& state, DisconnectedBlockTra\n     }\n \n     if (disconnectpool && m_mempool) {\n-        // Save transactions to re-add to mempool at end of reorg\n-        for (auto it = block.vtx.rbegin(); it != block.vtx.rend(); ++it) {\n-            disconnectpool->addTransaction(*it);\n-        }\n-        while (disconnectpool->DynamicMemoryUsage() > MAX_DISCONNECTED_TX_POOL_SIZE * 1000) {\n-            // Drop the earliest entry, and remove its children from the mempool.\n-            auto it = disconnectpool->queuedTx.get<insertion_order>().begin();\n-            m_mempool->removeRecursive(**it, MemPoolRemovalReason::REORG);\n-            disconnectpool->removeEntry(it);\n+        // Save transactions to re-add to mempool at end of reorg. If any entries are dropped,\n+        // remove their descendants from the mempool.\n+        for (auto&& ptx : disconnectpool->AddTransactionsFromBlock(block.vtx)) {\n+            m_mempool->removeRecursive(*ptx, MemPoolRemovalReason::REORG);\n         }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323146048",
      "id" : 1323146048,
      "line" : 2728,
      "node_id" : "PRRC_kwDOABII585O3ZtA",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 2728,
      "original_position" : 87,
      "original_start_line" : 2724,
      "path" : "src/validation.cpp",
      "position" : 87,
      "pull_request_review_id" : 1622272669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323146048/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 2724,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-12T15:51:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323146048",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323151846"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323151846"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: `#include <vector>`",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-12T14:41:11Z",
      "diff_hunk" : "@@ -0,0 +1,133 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+#define BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+\n+#include <core_memusage.h>\n+#include <memusage.h>\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+\n+#include <list>\n+#include <unordered_map>\n+\n+/** Maximum kilobytes for transactions to store for processing during reorg */\n+static const unsigned int MAX_DISCONNECTED_TX_POOL_SIZE = 20'000;\n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ *\n+ * Order of queuedTx:\n+ * The front of the list should be the most recently-confirmed transactions (transactions at the\n+ * end of vtx of blocks closer to the tip). If memory usage grows too large, we trim from the front\n+ * of the list. After trimming, transactions can be re-added to the mempool from the back of the\n+ * list to the front without running into missing inputs.\n+ */\n+class DisconnectedBlockTransactions {\n+private:\n+    uint64_t cachedInnerUsage = 0;\n+    const size_t m_max_mem_usage;\n+    std::list<CTransactionRef> queuedTx;\n+    using TxList = decltype(queuedTx);\n+    std::unordered_map<uint256, TxList::iterator, SaltedTxidHasher> iters_by_txid;\n+\n+    /** Trim the earliest-added entries until we are within memory bounds. */\n+    std::vector<CTransactionRef> LimitMemoryUsage()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323151846",
      "id" : 1323151846,
      "line" : 47,
      "node_id" : "PRRC_kwDOABII585O3bHm",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 47,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/kernel/disconnected_transactions.h",
      "position" : 47,
      "pull_request_review_id" : 1622272669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323151846/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T15:51:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323151846",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323225091"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323225091"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think this is correct. `reserve` makes sure the buckets are allocated, but the map's `size` remains unchanged. So `MAP_100` significantly underestimates the dynamic usage I think?",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-12T15:32:08Z",
      "diff_hunk" : "@@ -0,0 +1,89 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <test/util/setup_common.h>\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(2);\n+    const size_t MAP_2{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323225091",
      "id" : 1323225091,
      "line" : 33,
      "node_id" : "PRRC_kwDOABII585O3tAD",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 33,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/test/disconnected_transactions.cpp",
      "position" : 33,
      "pull_request_review_id" : 1622272669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323225091/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T15:51:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323225091",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323228444"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323228444"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It's not immediately obvious to me why this is expected behaviour, when we instantiated `disconnectpool` to the memory usage of a map of 2 + overhead. At the moment, I think this is the case because (as per my previous comment) the `MAP_x` vars don't include the map nodes, but that seems unintuitive/unexpected?",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-12T15:34:27Z",
      "diff_hunk" : "@@ -0,0 +1,89 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <test/util/setup_common.h>\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(2);\n+    const size_t MAP_2{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx) BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 16 * memusage::MallocUsage(sizeof(void*))};\n+\n+    // DisconnectedBlockTransactions that's just big enough for 1 transaction.\n+    {\n+        DisconnectedBlockTransactions disconnectpool{MAP_2 + ENTRY_USAGE_OVERESTIMATE};\n+        // Just 2 transactions because the allocation depends on the number of txns passed in.\n+        std::vector<CTransactionRef> two_txns({block_vtx.at(0), block_vtx.at(1)});\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(two_txns);\n+        BOOST_CHECK(disconnectpool.DynamicMemoryUsage() <= MAP_2 + ENTRY_USAGE_OVERESTIMATE);\n+\n+        // Only 1 transaction can be kept",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323228444",
      "id" : 1323228444,
      "line" : 48,
      "node_id" : "PRRC_kwDOABII585O3t0c",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 48,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/test/disconnected_transactions.cpp",
      "position" : 48,
      "pull_request_review_id" : 1622272669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323228444/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T15:51:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323228444",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323243772"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323243772"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why not use CTransactionRef here so we can better estimate the shared_ptr overhead?\r\n```suggestion\r\n    std::unordered_map<uint256, CTransactionRef, SaltedTxidHasher> temp_map;\r\n```",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-12T15:46:24Z",
      "diff_hunk" : "@@ -0,0 +1,89 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <test/util/setup_common.h>\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323243772",
      "id" : 1323243772,
      "line" : 29,
      "node_id" : "PRRC_kwDOABII585O3xj8",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 29,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/test/disconnected_transactions.cpp",
      "position" : 29,
      "pull_request_review_id" : 1622272669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323243772/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T15:51:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323243772",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323354371"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323354371"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I was looking into this yesterday and arrived at both of the same conclusions.\r\n\r\nPoked at libstdc++'s impl with gdb:\r\n\r\n`(gdb) print -pretty off -raw-values -- queuedTx`\r\n`... _M_node = {<std::__detail::_List_node_base> = {_M_next = 0x55555556aeb0, _M_prev = 0x55555556aed0}, _M_size = 2}}} ...`\r\n\r\nWhich agrees with (on 64bit):\r\n```\r\n(gdb) print sizeof(queuedTx)\r\n$7 = 24\r\n```\r\nSo it appears to me that in general a list will be:\r\nA structure with pointer to its head and tail nodes, plus an additional int for size.\r\nPlus for each node: a pointer to prev, next, and the data itself.\r\n\r\nI'm still working on confirming those numbers fully with an implementation though.",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-12T17:27:29Z",
      "diff_hunk" : "@@ -148,6 +149,21 @@ static inline size_t DynamicUsage(const std::shared_ptr<X>& p)\n     return p ? MallocUsage(sizeof(X)) + MallocUsage(sizeof(stl_shared_counter)) : 0;\n }\n \n+template<typename X>\n+struct list_node : private X\n+{\n+private:\n+    void* ptr_next;\n+    void* ptr_prev;\n+    void* ptr_val;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1323354371",
      "id" : 1323354371,
      "in_reply_to_id" : 1322889291,
      "line" : 158,
      "node_id" : "PRRC_kwDOABII585O4MkD",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 158,
      "original_position" : 18,
      "original_start_line" : 153,
      "path" : "src/memusage.h",
      "position" : 18,
      "pull_request_review_id" : 1622771205,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323354371/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 153,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-12T17:27:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323354371",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324161832"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324161832"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think that part is dynamically allocated...?",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-13T08:26:23Z",
      "diff_hunk" : "@@ -148,6 +149,21 @@ static inline size_t DynamicUsage(const std::shared_ptr<X>& p)\n     return p ? MallocUsage(sizeof(X)) + MallocUsage(sizeof(stl_shared_counter)) : 0;\n }\n \n+template<typename X>\n+struct list_node : private X\n+{\n+private:\n+    void* ptr_next;\n+    void* ptr_prev;\n+    void* ptr_val;\n+};\n+\n+template<typename X>\n+static inline size_t DynamicUsage(const std::list<X>& l)\n+{\n+    return MallocUsage(sizeof(list_node<X>)) * l.size();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324161832",
      "id" : 1324161832,
      "in_reply_to_id" : 1322892874,
      "line" : 164,
      "node_id" : "PRRC_kwDOABII585O7Rso",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 164,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/memusage.h",
      "position" : 24,
      "pull_request_review_id" : 1623984616,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324161832/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-13T08:26:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324161832",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324177176"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324177176"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah yes the hint is in the function name, woops ð",
      "commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "created_at" : "2023-09-13T08:38:38Z",
      "diff_hunk" : "@@ -148,6 +149,21 @@ static inline size_t DynamicUsage(const std::shared_ptr<X>& p)\n     return p ? MallocUsage(sizeof(X)) + MallocUsage(sizeof(stl_shared_counter)) : 0;\n }\n \n+template<typename X>\n+struct list_node : private X\n+{\n+private:\n+    void* ptr_next;\n+    void* ptr_prev;\n+    void* ptr_val;\n+};\n+\n+template<typename X>\n+static inline size_t DynamicUsage(const std::list<X>& l)\n+{\n+    return MallocUsage(sizeof(list_node<X>)) * l.size();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324177176",
      "id" : 1324177176,
      "in_reply_to_id" : 1322892874,
      "line" : 164,
      "node_id" : "PRRC_kwDOABII585O7VcY",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 164,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/memusage.h",
      "position" : 24,
      "pull_request_review_id" : 1624008337,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324177176/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-13T08:38:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324177176",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324311607"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324311607"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed",
      "commit_id" : "305b14fb569a9ad137636e1210b636653fa74b23",
      "created_at" : "2023-09-13T10:29:37Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <primitives/block.h>\n+#include <test/util/random.h>\n+#include <test/util/setup_common.h>\n+\n+constexpr size_t BLOCK_VTX_COUNT{4000};\n+constexpr size_t BLOCK_VTX_COUNT_10PERCENT{400};\n+\n+using BlockTxns = decltype(CBlock::vtx);\n+\n+/** Reorg where 1 block is disconnected and 2 blocks are connected. */\n+struct ReorgTxns {\n+    /** Disconnected block. */\n+    BlockTxns disconnected_txns;\n+    /** First connected block. */\n+    BlockTxns connected_txns_1;\n+    /** Second connected block, new chain tip. Has no overlap with disconnected_txns. */\n+    BlockTxns connected_txns_2;\n+    /** Transactions shared between disconnected_txns and connected_txns_1. */\n+    size_t num_shared;\n+};\n+\n+static BlockTxns CreateRandomTransactions(size_t num_txns)\n+{\n+    // Ensure every transaction has a different txid by having each one spend the previous one.\n+    static uint256 prevout_hash{uint256::ZERO};\n+\n+    BlockTxns txns;\n+    txns.reserve(num_txns);\n+    // Simplest spk for every tx\n+    CScript spk = CScript() << OP_TRUE;\n+    for (uint32_t i = 0; i < num_txns; ++i) {\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324311607",
      "id" : 1324311607,
      "in_reply_to_id" : 1323054738,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O72Q3",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 39,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/bench/disconnected_transactions.cpp",
      "position" : null,
      "pull_request_review_id" : 1624222254,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324311607/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-13T11:58:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324311607",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324314362"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324314362"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(mostly) taken, some of the documentation lives on the `Reorg` definition.",
      "commit_id" : "305b14fb569a9ad137636e1210b636653fa74b23",
      "created_at" : "2023-09-13T10:32:24Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <primitives/block.h>\n+#include <test/util/random.h>\n+#include <test/util/setup_common.h>\n+\n+constexpr size_t BLOCK_VTX_COUNT{4000};\n+constexpr size_t BLOCK_VTX_COUNT_10PERCENT{400};\n+\n+using BlockTxns = decltype(CBlock::vtx);\n+\n+/** Reorg where 1 block is disconnected and 2 blocks are connected. */\n+struct ReorgTxns {\n+    /** Disconnected block. */\n+    BlockTxns disconnected_txns;\n+    /** First connected block. */\n+    BlockTxns connected_txns_1;\n+    /** Second connected block, new chain tip. Has no overlap with disconnected_txns. */\n+    BlockTxns connected_txns_2;\n+    /** Transactions shared between disconnected_txns and connected_txns_1. */\n+    size_t num_shared;\n+};\n+\n+static BlockTxns CreateRandomTransactions(size_t num_txns)\n+{\n+    // Ensure every transaction has a different txid by having each one spend the previous one.\n+    static uint256 prevout_hash{uint256::ZERO};\n+\n+    BlockTxns txns;\n+    txns.reserve(num_txns);\n+    // Simplest spk for every tx\n+    CScript spk = CScript() << OP_TRUE;\n+    for (uint32_t i = 0; i < num_txns; ++i) {\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        tx.vin.emplace_back(CTxIn{COutPoint{prevout_hash, 0}});\n+        tx.vout.resize(1);\n+        tx.vout.emplace_back(CTxOut{CENT, spk});\n+        auto ptx{MakeTransactionRef(tx)};\n+        txns.emplace_back(ptx);\n+        prevout_hash = ptx->GetHash();\n+    }\n+    return txns;\n+}\n+\n+/** Creates 2 blocks with BLOCK_VTX_COUNT transactions each. There will be num_not_shared\n+ * transactions that are different, all other transactions the exact same. This is to simulate a\n+ * reorg in which all but num_not_shared transactions are confirmed in the new chain. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324314362",
      "id" : 1324314362,
      "in_reply_to_id" : 1323069039,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O7276",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 52,
      "original_position" : 52,
      "original_start_line" : 50,
      "path" : "src/bench/disconnected_transactions.cpp",
      "position" : null,
      "pull_request_review_id" : 1624222254,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324314362/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-13T11:58:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324314362",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324318199"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324318199"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's the other way around actually, but added.",
      "commit_id" : "305b14fb569a9ad137636e1210b636653fa74b23",
      "created_at" : "2023-09-13T10:36:14Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <primitives/block.h>\n+#include <test/util/random.h>\n+#include <test/util/setup_common.h>\n+\n+constexpr size_t BLOCK_VTX_COUNT{4000};\n+constexpr size_t BLOCK_VTX_COUNT_10PERCENT{400};\n+\n+using BlockTxns = decltype(CBlock::vtx);\n+\n+/** Reorg where 1 block is disconnected and 2 blocks are connected. */\n+struct ReorgTxns {\n+    /** Disconnected block. */\n+    BlockTxns disconnected_txns;\n+    /** First connected block. */\n+    BlockTxns connected_txns_1;\n+    /** Second connected block, new chain tip. Has no overlap with disconnected_txns. */\n+    BlockTxns connected_txns_2;\n+    /** Transactions shared between disconnected_txns and connected_txns_1. */\n+    size_t num_shared;\n+};\n+\n+static BlockTxns CreateRandomTransactions(size_t num_txns)\n+{\n+    // Ensure every transaction has a different txid by having each one spend the previous one.\n+    static uint256 prevout_hash{uint256::ZERO};\n+\n+    BlockTxns txns;\n+    txns.reserve(num_txns);\n+    // Simplest spk for every tx\n+    CScript spk = CScript() << OP_TRUE;\n+    for (uint32_t i = 0; i < num_txns; ++i) {\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        tx.vin.emplace_back(CTxIn{COutPoint{prevout_hash, 0}});\n+        tx.vout.resize(1);\n+        tx.vout.emplace_back(CTxOut{CENT, spk});\n+        auto ptx{MakeTransactionRef(tx)};\n+        txns.emplace_back(ptx);\n+        prevout_hash = ptx->GetHash();\n+    }\n+    return txns;\n+}\n+\n+/** Creates 2 blocks with BLOCK_VTX_COUNT transactions each. There will be num_not_shared\n+ * transactions that are different, all other transactions the exact same. This is to simulate a\n+ * reorg in which all but num_not_shared transactions are confirmed in the new chain. */\n+static ReorgTxns CreateBlocks(size_t num_not_shared)\n+{\n+    auto num_shared{BLOCK_VTX_COUNT - num_not_shared};\n+    const auto shared_txns{CreateRandomTransactions(/*num_txns=*/num_shared)};\n+\n+    // Create different sets of transactions...\n+    auto disconnected_block_txns{CreateRandomTransactions(/*num_txns=*/num_not_shared)};\n+    std::copy(shared_txns.begin(), shared_txns.end(), std::back_inserter(disconnected_block_txns));\n+\n+    auto connected_block_txns{CreateRandomTransactions(/*num_txns=*/num_not_shared)};\n+    std::copy(shared_txns.begin(), shared_txns.end(), std::back_inserter(connected_block_txns));\n+\n+    assert(disconnected_block_txns.size() == BLOCK_VTX_COUNT);\n+    assert(connected_block_txns.size() == BLOCK_VTX_COUNT);\n+\n+    return ReorgTxns{/*disconnected_txns=*/disconnected_block_txns,\n+                     /*connected_txns_1=*/connected_block_txns,\n+                     /*connected_txns_2=*/CreateRandomTransactions(BLOCK_VTX_COUNT),\n+                     /*num_shared=*/num_shared};\n+}\n+\n+static void Reorg(const ReorgTxns& reorg)\n+{\n+    DisconnectedBlockTransactions disconnectpool{MAX_DISCONNECTED_TX_POOL_SIZE * 1000};\n+    // Disconnect block\n+    const auto evicted = disconnectpool.AddTransactionsFromBlock(reorg.disconnected_txns);\n+    assert(evicted.empty());\n+\n+    // Connect first block\n+    disconnectpool.removeForBlock(reorg.connected_txns_1);\n+    // Connect new tip\n+    disconnectpool.removeForBlock(reorg.connected_txns_2);\n+\n+    // Sanity Check\n+    assert(disconnectpool.size() == BLOCK_VTX_COUNT - reorg.num_shared);\n+\n+    disconnectpool.clear();\n+}\n+\n+/** Add transactions from DisconnectedBlockTransactions, remove all of them, and then pop from the front until empty. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324318199",
      "id" : 1324318199,
      "in_reply_to_id" : 1323091031,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O7333",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 92,
      "original_position" : 92,
      "original_start_line" : null,
      "path" : "src/bench/disconnected_transactions.cpp",
      "position" : null,
      "pull_request_review_id" : 1624222254,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324318199/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-13T11:58:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324318199",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324320533"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324320533"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks! I think this is correct, changed.",
      "commit_id" : "305b14fb569a9ad137636e1210b636653fa74b23",
      "created_at" : "2023-09-13T10:38:33Z",
      "diff_hunk" : "@@ -148,6 +149,21 @@ static inline size_t DynamicUsage(const std::shared_ptr<X>& p)\n     return p ? MallocUsage(sizeof(X)) + MallocUsage(sizeof(stl_shared_counter)) : 0;\n }\n \n+template<typename X>\n+struct list_node : private X\n+{\n+private:\n+    void* ptr_next;\n+    void* ptr_prev;\n+    void* ptr_val;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324320533",
      "id" : 1324320533,
      "in_reply_to_id" : 1322889291,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O74cV",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 158,
      "original_position" : 18,
      "original_start_line" : 153,
      "path" : "src/memusage.h",
      "position" : null,
      "pull_request_review_id" : 1624222254,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324320533/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-13T11:58:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324320533",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324332842"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324332842"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Doesn't this invalidate `iter`, as it would point to something that's since been erased from `queuedTx`?",
      "commit_id" : "305b14fb569a9ad137636e1210b636653fa74b23",
      "created_at" : "2023-09-13T10:50:31Z",
      "diff_hunk" : "@@ -881,59 +873,78 @@ struct DisconnectedBlockTransactions {\n     // to be refactored such that this assumption is no longer true (for\n     // instance if there was some other way we cleaned up the mempool after a\n     // reorg, besides draining this object).\n-    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n-\n-    indexed_disconnected_transactions queuedTx;\n-    uint64_t cachedInnerUsage = 0;\n+    ~DisconnectedBlockTransactions() {\n+        assert(queuedTx.empty());\n+        assert(iters_by_txid.empty());\n+        assert(cachedInnerUsage == 0);\n+    }\n \n-    // Estimate the overhead of queuedTx to be 6 pointers + an allocation, as\n-    // no exact formula for boost::multi_index_contained is implemented.\n     size_t DynamicMemoryUsage() const {\n-        return memusage::MallocUsage(sizeof(CTransactionRef) + 6 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+        return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n     }\n \n-\t/** Add transactions from the block, iterating through vtx in reverse order. Callers should call\n+    /** Add transactions from the block, iterating through vtx in reverse order. Callers should call\n      * this function for blocks in descending order by block height.\n      * We assume that callers never pass multiple transactions with the same txid, otherwise things\n      * can go very wrong in removeForBlock due to queuedTx containing an item without a\n      * corresponding entry in iters_by_txid.\n      */\n     void AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n     {\n+        iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n         for (auto block_it = vtx.rbegin(); block_it != vtx.rend(); ++block_it) {\n-            queuedTx.insert(*block_it);\n+            auto it = queuedTx.insert(queuedTx.end(), *block_it);\n+            iters_by_txid.emplace((*block_it)->GetHash(), it);\n             cachedInnerUsage += RecursiveDynamicUsage(*block_it);\n         }\n     }\n \n-    // Remove entries based on txid_index, and update memory usage.\n+    /** Remove any entries that are in this block. */\n     void removeForBlock(const std::vector<CTransactionRef>& vtx)\n     {\n         // Short-circuit in the common case of a block being added to the tip\n         if (queuedTx.empty()) {\n             return;\n         }\n-        for (auto const &tx : vtx) {\n-            auto it = queuedTx.find(tx->GetHash());\n-            if (it != queuedTx.end()) {\n-                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n-                queuedTx.erase(it);\n+        for (const auto& tx : vtx) {\n+            auto iter = iters_by_txid.find(tx->GetHash());\n+            if (iter != iters_by_txid.end()) {\n+                auto list_iter = iter->second;\n+                iters_by_txid.erase(iter);\n+                cachedInnerUsage -= RecursiveDynamicUsage(*list_iter);\n+                queuedTx.erase(list_iter);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324332842",
      "id" : 1324332842,
      "in_reply_to_id" : 1320576421,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O77cq",
      "original_commit_id" : "a9e682194af3b2e888c9ca74ce1d1e365ea77eb7",
      "original_line" : 915,
      "original_position" : 101,
      "original_start_line" : 912,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 1624222254,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324332842/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-13T11:58:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324332842",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324345300"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324345300"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I agree it's not worth it as it's still an interface change + implementation change on separate commits, so resolving this.",
      "commit_id" : "305b14fb569a9ad137636e1210b636653fa74b23",
      "created_at" : "2023-09-13T11:02:30Z",
      "diff_hunk" : "@@ -881,59 +873,78 @@ struct DisconnectedBlockTransactions {\n     // to be refactored such that this assumption is no longer true (for\n     // instance if there was some other way we cleaned up the mempool after a\n     // reorg, besides draining this object).\n-    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n-\n-    indexed_disconnected_transactions queuedTx;\n-    uint64_t cachedInnerUsage = 0;\n+    ~DisconnectedBlockTransactions() {\n+        assert(queuedTx.empty());\n+        assert(iters_by_txid.empty());\n+        assert(cachedInnerUsage == 0);\n+    }\n \n-    // Estimate the overhead of queuedTx to be 6 pointers + an allocation, as\n-    // no exact formula for boost::multi_index_contained is implemented.\n     size_t DynamicMemoryUsage() const {\n-        return memusage::MallocUsage(sizeof(CTransactionRef) + 6 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+        return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n     }\n \n-\t/** Add transactions from the block, iterating through vtx in reverse order. Callers should call\n+    /** Add transactions from the block, iterating through vtx in reverse order. Callers should call\n      * this function for blocks in descending order by block height.\n      * We assume that callers never pass multiple transactions with the same txid, otherwise things\n      * can go very wrong in removeForBlock due to queuedTx containing an item without a\n      * corresponding entry in iters_by_txid.\n      */\n     void AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n     {\n+        iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n         for (auto block_it = vtx.rbegin(); block_it != vtx.rend(); ++block_it) {\n-            queuedTx.insert(*block_it);\n+            auto it = queuedTx.insert(queuedTx.end(), *block_it);\n+            iters_by_txid.emplace((*block_it)->GetHash(), it);\n             cachedInnerUsage += RecursiveDynamicUsage(*block_it);\n         }\n     }\n \n-    // Remove entries based on txid_index, and update memory usage.\n+    /** Remove any entries that are in this block. */\n     void removeForBlock(const std::vector<CTransactionRef>& vtx)\n     {\n         // Short-circuit in the common case of a block being added to the tip\n         if (queuedTx.empty()) {\n             return;\n         }\n-        for (auto const &tx : vtx) {\n-            auto it = queuedTx.find(tx->GetHash());\n-            if (it != queuedTx.end()) {\n-                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n-                queuedTx.erase(it);\n+        for (const auto& tx : vtx) {\n+            auto iter = iters_by_txid.find(tx->GetHash());\n+            if (iter != iters_by_txid.end()) {\n+                auto list_iter = iter->second;\n+                iters_by_txid.erase(iter);\n+                cachedInnerUsage -= RecursiveDynamicUsage(*list_iter);\n+                queuedTx.erase(list_iter);\n             }\n         }\n     }\n \n-    // Remove an entry by insertion_order index, and update memory usage.\n-    void removeEntry(indexed_disconnected_transactions::index<insertion_order>::type::iterator entry)\n+    /** Remove the first entry and update memory usage. */\n+    CTransactionRef take_first()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324345300",
      "id" : 1324345300,
      "in_reply_to_id" : 1323140597,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O7-fU",
      "original_commit_id" : "a9e682194af3b2e888c9ca74ce1d1e365ea77eb7",
      "original_line" : 921,
      "original_position" : 109,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 1624222254,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324345300/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-13T11:58:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324345300",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324346511"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324346511"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added",
      "commit_id" : "305b14fb569a9ad137636e1210b636653fa74b23",
      "created_at" : "2023-09-13T11:03:37Z",
      "diff_hunk" : "@@ -0,0 +1,133 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+#define BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+\n+#include <core_memusage.h>\n+#include <memusage.h>\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+\n+#include <list>\n+#include <unordered_map>\n+\n+/** Maximum kilobytes for transactions to store for processing during reorg */\n+static const unsigned int MAX_DISCONNECTED_TX_POOL_SIZE = 20'000;\n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ *\n+ * Order of queuedTx:\n+ * The front of the list should be the most recently-confirmed transactions (transactions at the\n+ * end of vtx of blocks closer to the tip). If memory usage grows too large, we trim from the front\n+ * of the list. After trimming, transactions can be re-added to the mempool from the back of the\n+ * list to the front without running into missing inputs.\n+ */\n+class DisconnectedBlockTransactions {\n+private:\n+    uint64_t cachedInnerUsage = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324346511",
      "id" : 1324346511,
      "in_reply_to_id" : 1322958591,
      "line" : 43,
      "node_id" : "PRRC_kwDOABII585O7-yP",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 43,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/kernel/disconnected_transactions.h",
      "position" : 43,
      "pull_request_review_id" : 1624222254,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324346511/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-13T11:58:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324346511",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324347019"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324347019"
         }
      },
      "author_association" : "MEMBER",
      "body" : "added",
      "commit_id" : "305b14fb569a9ad137636e1210b636653fa74b23",
      "created_at" : "2023-09-13T11:04:10Z",
      "diff_hunk" : "@@ -0,0 +1,133 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+#define BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+\n+#include <core_memusage.h>\n+#include <memusage.h>\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+\n+#include <list>\n+#include <unordered_map>\n+\n+/** Maximum kilobytes for transactions to store for processing during reorg */\n+static const unsigned int MAX_DISCONNECTED_TX_POOL_SIZE = 20'000;\n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ *\n+ * Order of queuedTx:\n+ * The front of the list should be the most recently-confirmed transactions (transactions at the\n+ * end of vtx of blocks closer to the tip). If memory usage grows too large, we trim from the front\n+ * of the list. After trimming, transactions can be re-added to the mempool from the back of the\n+ * list to the front without running into missing inputs.\n+ */\n+class DisconnectedBlockTransactions {\n+private:\n+    uint64_t cachedInnerUsage = 0;\n+    const size_t m_max_mem_usage;\n+    std::list<CTransactionRef> queuedTx;\n+    using TxList = decltype(queuedTx);\n+    std::unordered_map<uint256, TxList::iterator, SaltedTxidHasher> iters_by_txid;\n+\n+    /** Trim the earliest-added entries until we are within memory bounds. */\n+    std::vector<CTransactionRef> LimitMemoryUsage()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324347019",
      "id" : 1324347019,
      "in_reply_to_id" : 1323151846,
      "line" : 50,
      "node_id" : "PRRC_kwDOABII585O7-6L",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 50,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/kernel/disconnected_transactions.h",
      "position" : 50,
      "pull_request_review_id" : 1624222254,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324347019/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-13T11:58:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324347019",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324347223"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324347223"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I agree, changed (but in the rewrite commit instead of here)",
      "commit_id" : "305b14fb569a9ad137636e1210b636653fa74b23",
      "created_at" : "2023-09-13T11:04:20Z",
      "diff_hunk" : "@@ -0,0 +1,133 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+#define BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+\n+#include <core_memusage.h>\n+#include <memusage.h>\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+\n+#include <list>\n+#include <unordered_map>\n+\n+/** Maximum kilobytes for transactions to store for processing during reorg */\n+static const unsigned int MAX_DISCONNECTED_TX_POOL_SIZE = 20'000;\n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ *\n+ * Order of queuedTx:\n+ * The front of the list should be the most recently-confirmed transactions (transactions at the\n+ * end of vtx of blocks closer to the tip). If memory usage grows too large, we trim from the front\n+ * of the list. After trimming, transactions can be re-added to the mempool from the back of the\n+ * list to the front without running into missing inputs.\n+ */\n+class DisconnectedBlockTransactions {\n+private:\n+    uint64_t cachedInnerUsage = 0;\n+    const size_t m_max_mem_usage;\n+    std::list<CTransactionRef> queuedTx;\n+    using TxList = decltype(queuedTx);\n+    std::unordered_map<uint256, TxList::iterator, SaltedTxidHasher> iters_by_txid;\n+\n+    /** Trim the earliest-added entries until we are within memory bounds. */\n+    std::vector<CTransactionRef> LimitMemoryUsage()\n+    {\n+        std::vector<CTransactionRef> evicted;\n+\n+        while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n+            evicted.emplace_back(queuedTx.front());\n+            cachedInnerUsage -= RecursiveDynamicUsage(queuedTx.front());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324347223",
      "id" : 1324347223,
      "in_reply_to_id" : 1322948452,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O7-9X",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 53,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/kernel/disconnected_transactions.h",
      "position" : null,
      "pull_request_review_id" : 1624222254,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324347223/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-13T11:58:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324347223",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324349231"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324349231"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I felt that a raw pointer would be more accurate as the map is from txids to iterators",
      "commit_id" : "305b14fb569a9ad137636e1210b636653fa74b23",
      "created_at" : "2023-09-13T11:06:18Z",
      "diff_hunk" : "@@ -0,0 +1,89 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <test/util/setup_common.h>\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324349231",
      "id" : 1324349231,
      "in_reply_to_id" : 1323243772,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O7_cv",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 29,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/test/disconnected_transactions.cpp",
      "position" : null,
      "pull_request_review_id" : 1624222254,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324349231/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-13T11:58:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324349231",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324350061"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324350061"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This estimation was meant to be for overhead of just the hashmap (see comment above) rather than the full container. I was just trying to make the estimate more accurate as I couldn't get there just by multiplying an entry usage x number of elements.",
      "commit_id" : "305b14fb569a9ad137636e1210b636653fa74b23",
      "created_at" : "2023-09-13T11:07:10Z",
      "diff_hunk" : "@@ -0,0 +1,89 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <test/util/setup_common.h>\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(2);\n+    const size_t MAP_2{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324350061",
      "id" : 1324350061,
      "in_reply_to_id" : 1323225091,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O7_pt",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 33,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/test/disconnected_transactions.cpp",
      "position" : null,
      "pull_request_review_id" : 1624222254,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324350061/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-13T11:58:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324350061",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324409286"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324409286"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "4313c77400eb8eaa8586db39a7e29a861772ea80",
      "created_at" : "2023-09-13T12:04:30Z",
      "diff_hunk" : "@@ -0,0 +1,133 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+#define BITCOIN_KERNEL_DISCONNECTED_TRANSACTIONS_H\n+\n+#include <core_memusage.h>\n+#include <memusage.h>\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+\n+#include <list>\n+#include <unordered_map>\n+\n+/** Maximum kilobytes for transactions to store for processing during reorg */\n+static const unsigned int MAX_DISCONNECTED_TX_POOL_SIZE = 20'000;\n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ *\n+ * Order of queuedTx:\n+ * The front of the list should be the most recently-confirmed transactions (transactions at the\n+ * end of vtx of blocks closer to the tip). If memory usage grows too large, we trim from the front\n+ * of the list. After trimming, transactions can be re-added to the mempool from the back of the\n+ * list to the front without running into missing inputs.\n+ */\n+class DisconnectedBlockTransactions {\n+private:\n+    uint64_t cachedInnerUsage = 0;\n+    const size_t m_max_mem_usage;\n+    std::list<CTransactionRef> queuedTx;\n+    using TxList = decltype(queuedTx);\n+    std::unordered_map<uint256, TxList::iterator, SaltedTxidHasher> iters_by_txid;\n+\n+    /** Trim the earliest-added entries until we are within memory bounds. */\n+    std::vector<CTransactionRef> LimitMemoryUsage()\n+    {\n+        std::vector<CTransactionRef> evicted;\n+\n+        while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n+            evicted.emplace_back(queuedTx.front());\n+            cachedInnerUsage -= RecursiveDynamicUsage(queuedTx.front());\n+            iters_by_txid.erase(queuedTx.front()->GetHash());\n+            queuedTx.pop_front();\n+        }\n+        return evicted;\n+    }\n+\n+public:\n+    DisconnectedBlockTransactions(size_t max_mem_usage) : m_max_mem_usage{max_mem_usage} {}\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() {\n+        assert(queuedTx.empty());\n+        assert(iters_by_txid.empty());\n+        assert(cachedInnerUsage == 0);\n+    }\n+\n+    size_t DynamicMemoryUsage() const {\n+        return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n+    }\n+\n+    /** Add transactions from the block, iterating through vtx in reverse order. Callers should call\n+     * this function for blocks in descending order by block height.\n+     * We assume that callers never pass multiple transactions with the same txid, otherwise things\n+     * can go very wrong in removeForBlock due to queuedTx containing an item without a\n+     * corresponding entry in iters_by_txid.\n+     * @returns vector of transactions that were evicted for size-limiting.\n+     */\n+    [[nodiscard]] std::vector<CTransactionRef> AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n+        for (auto block_it = vtx.rbegin(); block_it != vtx.rend(); ++block_it) {\n+            auto it = queuedTx.insert(queuedTx.end(), *block_it);\n+            iters_by_txid.emplace((*block_it)->GetHash(), it);\n+            cachedInnerUsage += RecursiveDynamicUsage(*block_it);\n+        }\n+        return LimitMemoryUsage();\n+    }\n+\n+    /** Remove any entries that are in this block. */\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        for (const auto& tx : vtx) {\n+            auto iter = iters_by_txid.find(tx->GetHash());\n+            if (iter != iters_by_txid.end()) {\n+                auto list_iter = iter->second;\n+                iters_by_txid.erase(iter);\n+                cachedInnerUsage -= RecursiveDynamicUsage(*list_iter);\n+                queuedTx.erase(list_iter);\n+            }\n+        }\n+    }\n+\n+    size_t size() const { return queuedTx.size(); }\n+\n+    void clear()\n+    {\n+        cachedInnerUsage = 0;\n+        iters_by_txid.clear();\n+        queuedTx.clear();\n+    }\n+\n+    /** Clear all data structures and return the list of transactions. */\n+    std::list<CTransactionRef> take() {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324409286",
      "id" : 1324409286,
      "in_reply_to_id" : 1323108081,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O8OHG",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 130,
      "original_position" : 127,
      "original_start_line" : null,
      "path" : "src/kernel/disconnected_transactions.h",
      "position" : null,
      "pull_request_review_id" : 1624375319,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324409286/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-13T12:04:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324409286",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324409363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324409363"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "4313c77400eb8eaa8586db39a7e29a861772ea80",
      "created_at" : "2023-09-13T12:04:35Z",
      "diff_hunk" : "@@ -2720,15 +2721,10 @@ bool Chainstate::DisconnectTip(BlockValidationState& state, DisconnectedBlockTra\n     }\n \n     if (disconnectpool && m_mempool) {\n-        // Save transactions to re-add to mempool at end of reorg\n-        for (auto it = block.vtx.rbegin(); it != block.vtx.rend(); ++it) {\n-            disconnectpool->addTransaction(*it);\n-        }\n-        while (disconnectpool->DynamicMemoryUsage() > MAX_DISCONNECTED_TX_POOL_SIZE * 1000) {\n-            // Drop the earliest entry, and remove its children from the mempool.\n-            auto it = disconnectpool->queuedTx.get<insertion_order>().begin();\n-            m_mempool->removeRecursive(**it, MemPoolRemovalReason::REORG);\n-            disconnectpool->removeEntry(it);\n+        // Save transactions to re-add to mempool at end of reorg. If any entries are dropped,\n+        // remove their descendants from the mempool.\n+        for (auto&& ptx : disconnectpool->AddTransactionsFromBlock(block.vtx)) {\n+            m_mempool->removeRecursive(*ptx, MemPoolRemovalReason::REORG);\n         }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324409363",
      "id" : 1324409363,
      "in_reply_to_id" : 1323146048,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O8OIT",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 2728,
      "original_position" : 87,
      "original_start_line" : 2724,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1624375455,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324409363/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-13T12:04:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324409363",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324482843"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324482843"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah yes, you're right.",
      "commit_id" : "4313c77400eb8eaa8586db39a7e29a861772ea80",
      "created_at" : "2023-09-13T13:04:12Z",
      "diff_hunk" : "@@ -0,0 +1,89 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <test/util/setup_common.h>\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324482843",
      "id" : 1324482843,
      "in_reply_to_id" : 1323243772,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O8gEb",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 29,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/test/disconnected_transactions.cpp",
      "position" : null,
      "pull_request_review_id" : 1624495030,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324482843/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-13T13:04:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324482843",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324503221"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324503221"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What do you mean with the other way around?\r\n\r\nStill nit, but, I think the first part of the new description (i.e. \"Add transactions from DisconnectedBlockTransactions, remove all but one (the disconnected block's coinbase transaction) of them, and then pop from the front until empty.\") is too much of an implementation detail for this docstring. And the other 2 benches would probably benefit from a consistent docstring. So new suggestion:\r\n\r\n\"Test DisconnectedBlockTransactions in a reorg in which {\\*all\\*, \\*90%\\*, \\*10%\\*} of the non-coinbase transactions in the disconnected chain also exist in the new chain.\"\r\n\r\n\r\n\r\n\r\n\r\n",
      "commit_id" : "4313c77400eb8eaa8586db39a7e29a861772ea80",
      "created_at" : "2023-09-13T13:18:09Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <primitives/block.h>\n+#include <test/util/random.h>\n+#include <test/util/setup_common.h>\n+\n+constexpr size_t BLOCK_VTX_COUNT{4000};\n+constexpr size_t BLOCK_VTX_COUNT_10PERCENT{400};\n+\n+using BlockTxns = decltype(CBlock::vtx);\n+\n+/** Reorg where 1 block is disconnected and 2 blocks are connected. */\n+struct ReorgTxns {\n+    /** Disconnected block. */\n+    BlockTxns disconnected_txns;\n+    /** First connected block. */\n+    BlockTxns connected_txns_1;\n+    /** Second connected block, new chain tip. Has no overlap with disconnected_txns. */\n+    BlockTxns connected_txns_2;\n+    /** Transactions shared between disconnected_txns and connected_txns_1. */\n+    size_t num_shared;\n+};\n+\n+static BlockTxns CreateRandomTransactions(size_t num_txns)\n+{\n+    // Ensure every transaction has a different txid by having each one spend the previous one.\n+    static uint256 prevout_hash{uint256::ZERO};\n+\n+    BlockTxns txns;\n+    txns.reserve(num_txns);\n+    // Simplest spk for every tx\n+    CScript spk = CScript() << OP_TRUE;\n+    for (uint32_t i = 0; i < num_txns; ++i) {\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        tx.vin.emplace_back(CTxIn{COutPoint{prevout_hash, 0}});\n+        tx.vout.resize(1);\n+        tx.vout.emplace_back(CTxOut{CENT, spk});\n+        auto ptx{MakeTransactionRef(tx)};\n+        txns.emplace_back(ptx);\n+        prevout_hash = ptx->GetHash();\n+    }\n+    return txns;\n+}\n+\n+/** Creates 2 blocks with BLOCK_VTX_COUNT transactions each. There will be num_not_shared\n+ * transactions that are different, all other transactions the exact same. This is to simulate a\n+ * reorg in which all but num_not_shared transactions are confirmed in the new chain. */\n+static ReorgTxns CreateBlocks(size_t num_not_shared)\n+{\n+    auto num_shared{BLOCK_VTX_COUNT - num_not_shared};\n+    const auto shared_txns{CreateRandomTransactions(/*num_txns=*/num_shared)};\n+\n+    // Create different sets of transactions...\n+    auto disconnected_block_txns{CreateRandomTransactions(/*num_txns=*/num_not_shared)};\n+    std::copy(shared_txns.begin(), shared_txns.end(), std::back_inserter(disconnected_block_txns));\n+\n+    auto connected_block_txns{CreateRandomTransactions(/*num_txns=*/num_not_shared)};\n+    std::copy(shared_txns.begin(), shared_txns.end(), std::back_inserter(connected_block_txns));\n+\n+    assert(disconnected_block_txns.size() == BLOCK_VTX_COUNT);\n+    assert(connected_block_txns.size() == BLOCK_VTX_COUNT);\n+\n+    return ReorgTxns{/*disconnected_txns=*/disconnected_block_txns,\n+                     /*connected_txns_1=*/connected_block_txns,\n+                     /*connected_txns_2=*/CreateRandomTransactions(BLOCK_VTX_COUNT),\n+                     /*num_shared=*/num_shared};\n+}\n+\n+static void Reorg(const ReorgTxns& reorg)\n+{\n+    DisconnectedBlockTransactions disconnectpool{MAX_DISCONNECTED_TX_POOL_SIZE * 1000};\n+    // Disconnect block\n+    const auto evicted = disconnectpool.AddTransactionsFromBlock(reorg.disconnected_txns);\n+    assert(evicted.empty());\n+\n+    // Connect first block\n+    disconnectpool.removeForBlock(reorg.connected_txns_1);\n+    // Connect new tip\n+    disconnectpool.removeForBlock(reorg.connected_txns_2);\n+\n+    // Sanity Check\n+    assert(disconnectpool.size() == BLOCK_VTX_COUNT - reorg.num_shared);\n+\n+    disconnectpool.clear();\n+}\n+\n+/** Add transactions from DisconnectedBlockTransactions, remove all of them, and then pop from the front until empty. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1324503221",
      "id" : 1324503221,
      "in_reply_to_id" : 1323091031,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O8lC1",
      "original_commit_id" : "9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d",
      "original_line" : 92,
      "original_position" : 92,
      "original_start_line" : null,
      "path" : "src/bench/disconnected_transactions.cpp",
      "position" : null,
      "pull_request_review_id" : 1624532574,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324503221/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-13T13:18:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1324503221",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   }
]
