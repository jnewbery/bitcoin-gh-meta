[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept NACK | [petertodd](https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1423474935), [ghost](https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1462547782) |\n| Concept ACK | [theStack](https://github.com/bitcoin/bitcoin/pull/27050#pullrequestreview-1285591706), [john-moffett](https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419403357), [kristapsk](https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1420879641), [ajtowns](https://github.com/bitcoin/bitcoin/pull/27050#pullrequestreview-1292333858), [naumenkogs](https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1427705233) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27125](https://github.com/bitcoin/bitcoin/pull/27125) (refactor, kernel: Decouple ArgsManager from blockstorage by TheCharlatan)\n* [#26326](https://github.com/bitcoin/bitcoin/pull/26326) (net: don't lock cs_main while reading blocks in net processing by andrewtoth)\n* [#25781](https://github.com/bitcoin/bitcoin/pull/25781) (Remove almost all blockstorage globals by MarcoFalke)\n* [#24008](https://github.com/bitcoin/bitcoin/pull/24008) (assumeutxo: net_processing changes by jamesob)\n* [#15606](https://github.com/bitcoin/bitcoin/pull/15606) (assumeutxo by jamesob)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-02-06T15:11:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419239592",
      "id" : 1419239592,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585Ul-Co",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419239592/reactions"
      },
      "updated_at" : "2023-06-26T19:41:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419239592",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27050#discussion_r1097532417"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1097532417"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Can we also check if we are after the first segwit block? The blocks before have no witness data so don't require any more bandwidth, and then peers can still serve directly from disk.",
      "commit_id" : "1abf5b71105001bb140f737eea538441d0b05ae3",
      "created_at" : "2023-02-06T15:23:49Z",
      "diff_hunk" : "@@ -2380,6 +2381,15 @@ uint32_t PeerManagerImpl::GetFetchFlags(const Peer& peer) const\n     return nFetchFlags;\n }\n \n+uint32_t PeerManagerImpl::GetBlockFetchFlags(const Peer& peer, const CBlockIndex* index) const\n+{\n+    uint32_t fetch_flags = GetFetchFlags(peer);\n+    if (m_chainman.m_blockman.IsPruneMode() && WITH_LOCK(m_chainman.GetMutex(), return m_chainman.IsAssumedValid(index))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#discussion_r1097532417",
      "id" : 1097532417,
      "line" : 2387,
      "node_id" : "PRRC_kwDOABII585BawQB",
      "original_commit_id" : "1abf5b71105001bb140f737eea538441d0b05ae3",
      "original_line" : 2387,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 15,
      "pull_request_review_id" : 1285428521,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27050",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1097532417/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-06T15:23:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1097532417",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27050#discussion_r1097618534"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1097618534"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes I think that would be possible, although I wonder if that should happen on the server side (That is, have the server always serve pre-segwit blocks straight from disk). It doesn't seem like it makes sense to support serving pre-segwit blocks not directly from disk.",
      "commit_id" : "1abf5b71105001bb140f737eea538441d0b05ae3",
      "created_at" : "2023-02-06T16:26:07Z",
      "diff_hunk" : "@@ -2380,6 +2381,15 @@ uint32_t PeerManagerImpl::GetFetchFlags(const Peer& peer) const\n     return nFetchFlags;\n }\n \n+uint32_t PeerManagerImpl::GetBlockFetchFlags(const Peer& peer, const CBlockIndex* index) const\n+{\n+    uint32_t fetch_flags = GetFetchFlags(peer);\n+    if (m_chainman.m_blockman.IsPruneMode() && WITH_LOCK(m_chainman.GetMutex(), return m_chainman.IsAssumedValid(index))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#discussion_r1097618534",
      "id" : 1097618534,
      "in_reply_to_id" : 1097532417,
      "line" : 2387,
      "node_id" : "PRRC_kwDOABII585BbFRm",
      "original_commit_id" : "1abf5b71105001bb140f737eea538441d0b05ae3",
      "original_line" : 2387,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 15,
      "pull_request_review_id" : 1285556033,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27050",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1097618534/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-06T16:26:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1097618534",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2023-02-06T16:53:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419403357",
      "id" : 1419403357,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585UmmBd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419403357/reactions"
      },
      "updated_at" : "2023-02-06T16:53:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419403357",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/116917595?v=4",
         "events_url" : "https://api.github.com/users/john-moffett/events{/privacy}",
         "followers_url" : "https://api.github.com/users/john-moffett/followers",
         "following_url" : "https://api.github.com/users/john-moffett/following{/other_user}",
         "gists_url" : "https://api.github.com/users/john-moffett/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/john-moffett",
         "id" : 116917595,
         "login" : "john-moffett",
         "node_id" : "U_kgDOBvgFWw",
         "organizations_url" : "https://api.github.com/users/john-moffett/orgs",
         "received_events_url" : "https://api.github.com/users/john-moffett/received_events",
         "repos_url" : "https://api.github.com/users/john-moffett/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/john-moffett/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/john-moffett/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/john-moffett"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "As @sipa pointed out in the Stack Overflow:\r\n\r\n> `assumevalid` currently in Bitcoin Core only skips script validation. But there are other rules that involve witness data, such as resource limits and the rule that no witness data is allowed for non-witness inputs. \r\n\r\nSo it shifts the meaning of (our baked in) `-assumevalid` somewhat, but only for pruned nodes. Uses may not expect that syncing with `-prune` performs less validation than without. So this probably needs a separate configuration flag.\r\n\r\n> One downside is that nodes serving blocks without witnesses can't serve them directly from disk. They have to un-serialize and re-serialize without the witnesses before sending them.\r\n\r\nDo you mean serving nodes that don't have the witness data? Or do you mean nodes that do (but that's already the case then)?\r\n\r\n\r\nFor nodes that come fresh out of IBD we should carefully test the behavior before and after the assumevalid drops below the prune height. Because at that point we should signal `NODE_WITNESS`. For better discoverability we should probably always announce that. In that case we should start downloading witness data a bit before the `assumevalid` block if we're a recent release. But this gets tricky, because the node doesn't know how big future blocks are, so doesn't know when to start downloading witness data. We could change the release process to ensure `assumevalid` is deep enough to account for that.",
      "created_at" : "2023-02-06T17:18:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419443888",
      "id" : 1419443888,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585Umv6w",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419443888/reactions"
      },
      "updated_at" : "2023-02-06T17:18:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419443888",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "One potential issue with this is that when we write blocks to disk, we would be writing them without witness data. I think this could create a problem if you shut down a node in the middle of IBD and restart it with a different assumevalid value (such as disabling assumevalid) -- we would think we have a block that is invalid, because we're missing the witnesses.\r\n\r\nWhile it's an interesting thought experiment to see how much work would be required to optimize for this use case, I'm a bit skeptical that the complexity of implementing this optimization is worth it.  But if you keep working on it and get to something that you think is robust I would be curious to see what it looks like.",
      "created_at" : "2023-02-06T17:26:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419455201",
      "id" : 1419455201,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585Umyrh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419455201/reactions"
      },
      "updated_at" : "2023-02-06T17:26:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419455201",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm not sure skipping size checks is substantially different from skipping the script evaluation for security purposes.\r\n\r\nBut I also tend to agree with @sdaftuar that the complexity needed here probably isn't worth it. Additionally, some thought would need to be given to privacy implications (we already identify version explicitly, but do we want to make full history validation an externally-visible attribute?).",
      "created_at" : "2023-02-06T18:35:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419565049",
      "id" : 1419565049,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585UnNf5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419565049/reactions"
      },
      "updated_at" : "2023-02-06T18:35:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419565049",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> One potential issue with this is that when we write blocks to disk, we would be writing them without witness data. I think this could create a problem if you shut down a node in the middle of IBD and restart it with a different assumevalid value (such as disabling assumevalid) -- we would think we have a block that is invalid, because we're missing the witnesses.\r\n\r\nGood point; it may require some flag in the blockindex to note \"valid modulo the possible the lack of witness data\".\r\n\r\n> While it's an interesting thought experiment to see how much work would be required to optimize for this use case, I'm a bit skeptical that the complexity of implementing this optimization is worth it. But if you keep working on it and get to something that you think is robust I would be curious to see what it looks like.\r\n\r\nIt's a pretty substantial savings in IBD bandwidth; in the last 100000 blocks, 43% of the serialized size is in witness data (47.8 GiB out of 110.6 GiB). Maybe that makes it worth looking into more?\r\n\r\n> I'm not sure skipping size checks is substantially different from skipping the script evaluation for security purposes.\r\n\r\nAgree. I think it's important to note that it's a change in what constitutes assumevalid, but it's not like it's harder to run validation for the new set of things covered by it (in fact, it's hard to just check script validity without checking the rest...).\r\n\r\n> Additionally, some thought would need to be given to privacy implications (we already identify version explicitly, but do we want to make full history validation an externally-visible attribute?).\r\n\r\nThe change only affects IBD, and only affects blocks that won't be available to peers anymore once IBD is over (even in the scenario of interrupting and changing assumevalid in between). Are there other privacy concerns you're worried about?",
      "created_at" : "2023-02-06T19:15:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419611954",
      "id" : 1419611954,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585UnY8y",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419611954/reactions"
      },
      "updated_at" : "2023-02-06T19:15:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419611954",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> It's a pretty substantial savings in IBD bandwidth; in the last 100000 blocks, 43% of the serialized size is in witness data (47.8 GiB out of 110.6 GiB). Maybe that makes it worth looking into more?\r\n\r\nWell I was more focused on my perception of the complexity than the benefit I guess, but you may be right.  I have a number of thoughts that likely could be addressed if we can think about these issues clearly enough, but some things to consider:\r\n\r\n- whether we are in \"prune mode\" is a slightly nuanced idea. Nodes that are configured to have huge block databases and nodes that only prune when manually told to would both qualify as \"pruning nodes\" in the logic used here, which means that nodes might download blocks without witness and never actually delete them. (If we restarted with pruning disabled, then we would need to detect that our block storage is missing witnesses and force a reindex, which in turn would cause us to have to redownload all those blocks.). This is all doable logic, but just a messy edge case to consider.\r\n\r\n- we should be careful about having our code be robust to situations where a pruning node might find itself relaying a block at its tip even while it's catching up, and if the user has set their assumevalid close to the network's tip then you might imagine a problem being created from the pruning node advertising a block without the witness data to go with it.  Maybe there is a clean way to think about this, where we enforce that a pruning node will never announce a block unless the block and the prior 288 blocks were all downloaded with witness?\r\n\r\nWhen I first started thinking about this, I was contemplating that assumeutxo would be where we should spend our engineering resources, but now that I think a little more, maybe this feature (if we can design it properly) would compose nicely with assumeutxo (specifically around how much background validation happens when a node downloads the chain from scratch -- maybe we could allow users to have different levels of validation like we do today). ",
      "created_at" : "2023-02-06T21:02:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419751142",
      "id" : 1419751142,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585Un67m",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419751142/reactions"
      },
      "updated_at" : "2023-02-06T21:02:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419751142",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> it may require some flag in the blockindex to note \"valid modulo the possible the lack of witness data\".\r\n\r\nFrankly, we should probably have a way to indicate this for every softfork anyway. And in that sense, it probably makes more sense as a per-rule-introduction range of blocks that have been checked, rather than a flag on each block index entry. But that may be complicated due to the existence of multiple conflicting chains.\r\n\r\n(It might be possible to \"cheat\" on this issue for now and simply require those blocks to get pruned immediately.)\r\n\r\n>The change only affects IBD, and only affects blocks that won't be available to peers anymore once IBD is over (even in the scenario of interrupting and changing assumevalid in between). Are there other privacy concerns you're worried about?\r\n\r\nMy thought is that during IBD, your peers will know you're doing an assumevalid IBD. This might actually rise to the level of a security issue since they then know they might be able to get away with feeding you blocks with invalid witnesses...",
      "created_at" : "2023-02-07T01:26:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1420035663",
      "id" : 1420035663,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585UpAZP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1420035663/reactions"
      },
      "updated_at" : "2023-02-07T01:26:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1420035663",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@luke-jr wrote:\r\n\r\n> might be able to get away with feeding you blocks with invalid witnesses\r\n\r\nI don't believe so, because up until you've synced headers beyond the assumevalid block, your node is indistinguishable. Once you have the headers, your node has the initiative and is going to ask specific blocks. (And you don't need the witness data itself to check the block hash).",
      "created_at" : "2023-02-07T09:06:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1420426700",
      "id" : 1420426700,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585Uqf3M",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1420426700/reactions"
      },
      "updated_at" : "2023-02-07T09:06:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1420426700",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2023-02-07T14:36:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1420879641",
      "id" : 1420879641,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585UsOcZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1420879641/reactions"
      },
      "updated_at" : "2023-02-07T14:36:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1420879641",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4500994?v=4",
         "events_url" : "https://api.github.com/users/kristapsk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristapsk/followers",
         "following_url" : "https://api.github.com/users/kristapsk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristapsk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristapsk",
         "id" : 4500994,
         "login" : "kristapsk",
         "node_id" : "MDQ6VXNlcjQ1MDA5OTQ=",
         "organizations_url" : "https://api.github.com/users/kristapsk/orgs",
         "received_events_url" : "https://api.github.com/users/kristapsk/received_events",
         "repos_url" : "https://api.github.com/users/kristapsk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristapsk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristapsk"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Sjors\r\n\r\n> Do you mean serving nodes that don't have the witness data? \r\n\r\nMy comment was about serving nodes that store witnesses, because we do not support an archival full node mode that doesn't keep the witnesses.\r\n\r\n> Or do you mean nodes that do (but that's already the case then)?\r\n\r\nYes even currently, if asked for blocks without witnesses then we need to read, un-serialize and re-serialize without the witnesses. I was trying to imply that this does not happen very often currently, as (Bitcoin Core) nodes will always ask for blocks with witnesses from peers that signal `NODE_WITNESS`. However with this PR, pruned nodes will primarily ask for blocks without the witnesses during IBD (up to the assume-valid point), which results in some extra computational cost for serving nodes (this can be optimized a little bit, as [andrewtoth pointed out](https://github.com/bitcoin/bitcoin/pull/27050#discussion_r1097532417).) The relevant logic can be found [here](https://github.com/bitcoin/bitcoin/blob/6e08e5cb5cca57cef9e7a6b557e359ef911dbfaa/src/net_processing.cpp#L2172-L2188).\r\n\r\n---\r\n\r\nThank you all for the discussion so far! I updated the PR description to include the edge cases and suggestions mentioned here as TODOs.\r\n",
      "created_at" : "2023-02-07T14:41:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1420887952",
      "id" : 1420887952,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585UsQeQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1420887952/reactions"
      },
      "updated_at" : "2023-02-07T14:41:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1420887952",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "It's important to recognize that this *is* a security reduction, even though it only applies to assumed-valid blocks: one of the reasons why assume-valid is acceptable, is because the data that we're assuming is valid is widely available for independent auditing and our peers can't distinguish between nodes that are and are not actually checking it. Skipping the downloading of witnesses negates that security by making it possible to sync a pruned node without anyone having that data available.\r\n\r\nA concrete example where this could become relevant is in the event that courts order Bitcoin node operators to not serve specific blocks that are claimed to contain illegal data: an adversary can easily spin up patched Bitcoin nodes that do not serve those witnesses, in conjunction with the distribution of a new assumed-valid hash.\r\n\r\nSimilarly, in conjunction with the above - or as a stand alone action - courts can simply order Bitcoin devs/node runners to use an assumed valid hash that contains a transaction with an invalid signature to confiscate/\"recover\" funds. This of course is a possible outcome of the Craig Wright case.\r\n\r\nThe difference with this patch from the status quo, is we'd already be shipping software that without any user intervention other than running with the appropriate assumed valid flag, would appear to work even though it was impossible for anyone to prove that something nefarious was going on.\r\n\r\nNACK - This is not worth the consequences for a 43% savings.",
      "created_at" : "2023-02-09T01:22:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1423474935",
      "id" : 1423474935,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585U2ID3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1423474935/reactions"
      },
      "updated_at" : "2023-02-09T01:22:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1423474935",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">  an adversary can easily spin up patched Bitcoin nodes that do not serve those witnesses, in conjunction with the distribution of a new assumed-valid hash.\r\n\r\nNot without also putting enough PoW in the chain with the alternative assumed-valid hash. This attack doesn't seem cheaper than a regular 51% large reorg.\r\n\r\n\r\nI do agree with these two more general concerns, but I'm not sure if they apply here, because the proposal is limited to pruned nodes:\r\n\r\n1.\r\n\r\n> the data that we're assuming is valid is widely available for independent auditing\r\n\r\nArchival nodes will still have it. Pruned nodes only have it for recent blocks, just like they do for non-witness data.\r\n\r\n2.\r\n\r\n> and our peers can't distinguish between nodes that are and are not actually checking it.\r\n\r\nThis is partially the case, because nodes won't reveal if they're going to ask for the witness data until they have the headers. It also helps if during IBD we don't reveal whether the node is going to be pruned or not (I assume we set `NODE_NETWORK_LIMITED` and `NODE_NETWORK` _after_ IBD, but I haven't checked). An attacker could still make an educated guess based on defaults and majority behavior, I don't know if that's exploitable.",
      "created_at" : "2023-02-09T11:57:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1424070225",
      "id" : 1424070225,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585U4ZZR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1424070225/reactions"
      },
      "updated_at" : "2023-02-09T12:12:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1424070225",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "\n\nOn February 9, 2023 12:57:27 PM GMT+01:00, Sjors Provoost ***@***.***> wrote:\n>>  an adversary can easily spin up patched Bitcoin nodes that do not serve those witnesses, in conjunction with the distribution of a new assumed-valid hash.\n>\n>Not without also putting enough PoW in the chain with the alternative assumed-valid hash. This attack doesn't seem cheaper than a regular 51% large reorg.\n\nThe status quo does not trust miners. What you are suggesting does trust miners.\n\nRecently the US based Foundry USA approached 50% of hash power, and it appears that much of the hashing power pointed to them is contractually obliged to mine at Foundry. Assuming that miners only mine valid blocks is not a good idea.\n\nAnother way of looking at it is if you aren't validating signatures, at least indirectly, why are you even bothering to download witnesses? Why not just use a UTXO snapshot? You aren't even doing a good job of inflation control: theft of lost coins _is_ an example of inflation.\n",
      "created_at" : "2023-02-09T12:59:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1424155432",
      "id" : 1424155432,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585U4uMo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1424155432/reactions"
      },
      "updated_at" : "2023-02-09T12:59:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1424155432",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "To clarify, so the scenario you have in mind here is a prolonged >51% attack involving blocks with invalid witness data, where in addition they have coopted Bitcoin Core to ship a false `assumevalid` block?\r\n\r\nNo existing node would follow that chain. Nor would any unpruned node. The concern here is about freshly started pruned nodes.",
      "created_at" : "2023-02-09T13:59:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1424233385",
      "id" : 1424233385,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585U5BOp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1424233385/reactions"
      },
      "updated_at" : "2023-02-09T13:59:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1424233385",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27050#discussion_r1102243571"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102243571"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Perhaps clearer to write\r\n\r\n```c++\r\nbool check_witness = DeploymentActiveAfter(..);\r\nif (check_witness && IsPruneMode()) {\r\n    LOCK(chainman.GetMutex());\r\n    if (IsAssumedValid()) check_witness = false;\r\n}\r\nif (check_witness) { ... }\r\n```",
      "commit_id" : "1abf5b71105001bb140f737eea538441d0b05ae3",
      "created_at" : "2023-02-10T03:40:58Z",
      "diff_hunk" : "@@ -3612,7 +3612,8 @@ static bool ContextualCheckBlock(const CBlock& block, BlockValidationState& stat\n     //   {0xaa, 0x21, 0xa9, 0xed}, and the following 32 bytes are SHA256^2(witness root, witness reserved value). In case there are\n     //   multiple, the last one is used.\n     bool fHaveWitness = false;\n-    if (DeploymentActiveAfter(pindexPrev, chainman, Consensus::DEPLOYMENT_SEGWIT)) {\n+    if (DeploymentActiveAfter(pindexPrev, chainman, Consensus::DEPLOYMENT_SEGWIT) &&\n+        (!chainman.m_blockman.IsPruneMode() || WITH_LOCK(chainman.GetMutex(), return !chainman.IsAssumedValid(block.GetHash())))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#discussion_r1102243571",
      "id" : 1102243571,
      "line" : 3616,
      "node_id" : "PRRC_kwDOABII585Bsubz",
      "original_commit_id" : "16a8a6bd9c26210b6c515e822eb14bbc3071ddd7",
      "original_line" : 3616,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 6,
      "pull_request_review_id" : 1292333858,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27050",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102243571/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-10T04:03:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102243571",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Skipping the downloading of witnesses negates that security by making it possible to sync a pruned node without anyone having that data available.\r\n\r\nIt's true that, if witness data from Assumevalid blocks is not available, the new type of pruned node will be depositing more trust on a previously reviewed Assumevalid (the specific release of Assumevalid cannot be audited now because the witnesses are missing). So the trust assumption here is: **If there is no archival node accessible, we still trust an Assumevalid release that was audited/reviewed although it's not possible to currently audit it.** \r\n\r\nThis is true because archival nodes, by definition, store all witness data. So if there's no archival node but, for some reason there are nodes serving all non-witness data and witness data from non-Assumevalid blocks, this type of pruned node will operate under a stronger assumption (that a previous Assumevalid release is valid, although not auditable).\r\n\r\nHowever Bitcoin **is already** operating under the assumption that archival nodes are available. If they weren't available no full node would be able to sync. If the new pruned node type is introduced, these nodes could still sync if only witness data from Assumevalid blocks is missing. \r\n\r\nRuling out a systematic failure that makes all archival nodes to lose only witness data from Assumevalid blocks, the only way something like that could happen is if all archival nodes decided to selectively delete/not serve Assumevalid witness data, but store/serve everything else. If no node served historic data in general (witness and non-witness), it would be impossible for our new type of pruned node to sync, and if all \"archival\" nodes were pre-segwit, then our node couldn't sync either.\r\n\r\nIt seems to me that this doesn't change anything fundamentally. I could of course be wrong.\r\n\r\n",
      "created_at" : "2023-02-10T15:59:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1426014422",
      "id" : 1426014422,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585U_0DW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1426014422/reactions"
      },
      "updated_at" : "2023-02-10T16:16:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1426014422",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/83597627?v=4",
         "events_url" : "https://api.github.com/users/JoseSK999/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JoseSK999/followers",
         "following_url" : "https://api.github.com/users/JoseSK999/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JoseSK999/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JoseSK999",
         "id" : 83597627,
         "login" : "JoseSK999",
         "node_id" : "MDQ6VXNlcjgzNTk3NjI3",
         "organizations_url" : "https://api.github.com/users/JoseSK999/orgs",
         "received_events_url" : "https://api.github.com/users/JoseSK999/received_events",
         "repos_url" : "https://api.github.com/users/JoseSK999/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JoseSK999/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JoseSK999/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JoseSK999"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@petertodd Thanks for commenting and challenging the approach!\r\n\r\nIf I understand correctly, your main concern is about witness availability. As it currently stands that availability is required to sync a full node (pruned or not), as we are checking that the witness merkle root that is committed to matches with the witnesses that are actually downloaded. So even though we are skipping script validation, we require the exact witnesses (which we are assuming to be valid) to be available. By enabling pruned nodes to not download the witnesses (which requires skipping the witness merkle root check), we remove the requirement of witness availability (at least for assumed-valid blocks) to sync a pruned node. Witness availability is obviously important to be able to audit the chain with `-assumevalid=0`, which is a big part of our security assumptions behind assume-valid.\r\n\r\nYou are not arguing that stopping to request witnesses (i.e. removing the need to have them available for syncing) somehow makes them less available, right? My thoughts on this would be similar/the same to what Sjors said: pruned nodes already don't serve historical witnesses and this PR does not prevent archival nodes from storing/serving them, so IMO witness availability is not directly threatened by this PR.\r\n\r\niiuc, you are saying that removing the witness availability requirement makes it possible to assume a chain valid without ever seeing the invalid witnesses (since witnesses are no longer forced to be revealed). This seems entirely possible but updating the default assume valid hash in Bitcoin Core always involves auditing (I would expect anyone to audit their own choice of that hash as well) and a chain that fails the audit due to witness unavailability would not be made the default. Of course like you say, a court could try to mandate the inclusion of a specific assume-valid hash but that just leads us to the final backstop we always have:  As long as a economic majority can't be forced to upgrade their nodes, the new rules won't be adopted. Under the assumption that that is in fact possible, a court can mandate worse things than an invalid assume-valid hash.\r\n\r\nIt is currently not possible to set the assume-valid hash to a chain with unavailable witnesses, however it is currently possible to set it to a chain with available but invalid witnesses. What is worse, unavailable or invalid witnesses? I would argue, that they are equally bad because they can achieve the exact same nefarious outcomes.\r\n\r\n> The difference with this patch from the status quo, is we'd already be shipping software that without any user intervention other than running with the appropriate assumed valid flag, would appear to work even though it was impossible for anyone to prove that something nefarious was going on.\r\n\r\nBeing forced to assume a chain valid which I can't audit (due to witness unavailability), sounds like a clear indication of something nefarious going on to me (but yea, one couldn't *prove* that).",
      "created_at" : "2023-02-10T16:23:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1426044832",
      "id" : 1426044832,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585U_7eg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1426044832/reactions"
      },
      "updated_at" : "2023-02-10T16:23:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1426044832",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "One thing we could do to mitigate the concern of missing witness data, is to download it for a small random sample of blocks. When that fails, we fall back to redownloading _all_ witness data (which would presumably also fail). So in a scenario where witness data is really gone, pruned nodes will behave the same as unpruned nodes during IBD.",
      "created_at" : "2023-02-11T09:38:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1426676349",
      "id" : 1426676349,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585VCVp9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1426676349/reactions"
      },
      "updated_at" : "2023-02-11T09:38:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1426676349",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\nI think the 43% saving is a big deal, and the code change amount seems fine, although worth prototyping those corner cases first :)\r\n\r\nW.r.t. the security reduction pointed out by @petertodd, I agree with the @JoseSK999 [comment](https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1426014422) almost entirely.\r\nIt could be emphasized further â 43% saving by itself helps the node-running culture as a whole (more than it hurts it by dropping witness checks).\r\n\r\nI agree with @sdaftuar it plays nicely together with assumeutxo.",
      "created_at" : "2023-02-13T10:32:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1427705233",
      "id" : 1427705233,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585VGQ2R",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1427705233/reactions"
      },
      "updated_at" : "2023-02-13T10:32:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1427705233",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@dergoegge \r\n\r\n> I would expect anyone to audit their own choice of that hash as well\r\n\r\nNotice how in the assume-UTXO work, we've chosen to not even give users the ability to choose their own assumed-valid UTXO set. Instead, the hashes are fixed by Bitcoin Core because we don't trust users to audit their own choice of UTXO set.\r\n\r\n@naumenkogs assumeutxo is much more likely to \"help node running culture\" in terms of getting more pruned nodes up and running. And it has the advantage of having much more clear security considerations: you are trusting the assumed UTXO. \r\n\r\nAnyway, a way to mitigate these concerns about the reduction in security margin would be to simply put \"skip-witness\" mode behind a command line flag and leave it default off. Remember that many, probably most, nodes have ample bandwidth available and thus won't actually see an improvement from skipping witness downloads. That's certainly been the case for most of my nodes, which are mostly in data centers, and have been IO/CPU limited during IBD, not bandwidth limited. \"Node-in-a-box\" solutions like Umbrel and Start9, more frequently used on slower home internet connections and Tor, can consider enabling the skip-witness mode by default (or perhaps after a bandwidth test).",
      "created_at" : "2023-02-13T13:47:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1427970070",
      "id" : 1427970070,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585VHRgW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1427970070/reactions"
      },
      "updated_at" : "2023-02-13T13:47:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1427970070",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Making witness skipping opt-in makes sense. In addition our GUI initial setup wizard could help the user with this (as it does with suggesting pruning).",
      "created_at" : "2023-02-14T12:49:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1429695634",
      "id" : 1429695634,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585VN2yS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1429695634/reactions"
      },
      "updated_at" : "2023-02-14T12:49:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1429695634",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Could we please pick a different name for old witnessless syncing than \"pruned\"? It's different from the existing pruned node type that entirely discards old blocks. Old witnessless nodes could reindex and rescan as well as provide old witnessless blocks to other nodes doing IBD of this type. We need a new name for this.",
      "created_at" : "2023-03-01T07:21:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1449474465",
      "id" : 1449474465,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585WZTmh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1449474465/reactions"
      },
      "updated_at" : "2023-03-01T07:42:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1449474465",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/93665?v=4",
         "events_url" : "https://api.github.com/users/wtogami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/wtogami/followers",
         "following_url" : "https://api.github.com/users/wtogami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/wtogami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/wtogami",
         "id" : 93665,
         "login" : "wtogami",
         "node_id" : "MDQ6VXNlcjkzNjY1",
         "organizations_url" : "https://api.github.com/users/wtogami/orgs",
         "received_events_url" : "https://api.github.com/users/wtogami/received_events",
         "repos_url" : "https://api.github.com/users/wtogami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/wtogami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/wtogami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/wtogami"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@wtogami This PR does not introduce a new  witnessless archival mode (which is what you are describing iiuc). It only makes pruned nodes skip downloading the witnesses up to the assume-valid point (since they're not validated and deleted shortly after anyway).\r\n\r\nI would agree that witnessless archival nodes should not be called \"pruned\", but again that is not what this PR is introducing.",
      "created_at" : "2023-03-01T10:28:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1449815580",
      "id" : 1449815580,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585Wam4c",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1449815580/reactions"
      },
      "updated_at" : "2023-03-01T10:28:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1449815580",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> It's important to recognize that this is a security reduction, even though it only applies to assumed-valid blocks: one of the reasons why assume-valid is acceptable, is because the data that we're assuming is valid is widely available for independent auditing and our peers can't distinguish between nodes that are and are not actually checking it. Skipping the downloading of witnesses negates that security by making it possible to sync a pruned node without anyone having that data available.\r\n\r\n> A concrete example where this could become relevant is in the event that courts order Bitcoin node operators to not serve specific blocks that are claimed to contain illegal data: an adversary can easily spin up patched Bitcoin nodes that do not serve those witnesses, in conjunction with the distribution of a new assumed-valid hash.\r\n\r\n> Similarly, in conjunction with the above - or as a stand alone action - courts can simply order Bitcoin devs/node runners to use an assumed valid hash that contains a transaction with an invalid signature to confiscate/\"recover\" funds. This of course is a possible outcome of the Craig Wright case.\r\n\r\n> The difference with this patch from the status quo, is we'd already be shipping software that without any user intervention other than running with the appropriate assumed valid flag, would appear to work even though it was impossible for anyone to prove that something nefarious was going on.\r\n\r\n> NACK - This is not worth the consequences for a 43% savings.\r\n\r\n> The status quo does not trust miners. What you are suggesting does trust miners.\r\n\r\n> Recently the US based Foundry USA approached 50% of hash power, and it appears that much of the hashing power pointed to them is contractually obliged to mine at Foundry. Assuming that miners only mine valid blocks is not a good idea.\r\n\r\n> Another way of looking at it is if you aren't validating signatures, at least indirectly, why are you even bothering to download witnesses? Why not just use a UTXO snapshot? You aren't even doing a good job of inflation control: theft of lost coins _is_ an example of inflation.\r\n\r\nLove the adversarial thinking shared in quoted comments by Peter Todd leaving aside the emotions.\r\n\r\nNACK \r\n\r\nI do not agree with the changes made in this pull request\r\n\r\n> Anyway, a way to mitigate these concerns about the reduction in security margin would be to simply put \"skip-witness\" mode behind a command line flag and leave it default off. Remember that many, probably most, nodes have ample bandwidth available and thus won't actually see an improvement from skipping witness downloads. That's certainly been the case for most of my nodes, which are mostly in data centers, and have been IO/CPU limited during IBD, not bandwidth limited. \"Node-in-a-box\" solutions like Umbrel and Start9, more frequently used on slower home internet connections and Tor, can consider enabling the skip-witness mode by default (or perhaps after a bandwidth test).\r\n\r\nMaybe we can have such useless options similar to the patch created by Luke Dashjr recently\r\n\r\nNote: Default matters a lot in bitcoin core and its used by 99% nodes. Nobody wants to play with their money and use different values unless they know what they are doing.",
      "created_at" : "2023-03-09T18:14:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1462547782",
      "id" : 1462547782,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585XLLVG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1462547782/reactions"
      },
      "updated_at" : "2023-03-09T18:14:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1462547782",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94559964?v=4",
         "events_url" : "https://api.github.com/users/1440000bytes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/1440000bytes/followers",
         "following_url" : "https://api.github.com/users/1440000bytes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/1440000bytes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/1440000bytes",
         "id" : 94559964,
         "login" : "1440000bytes",
         "node_id" : "U_kgDOBaLe3A",
         "organizations_url" : "https://api.github.com/users/1440000bytes/orgs",
         "received_events_url" : "https://api.github.com/users/1440000bytes/received_events",
         "repos_url" : "https://api.github.com/users/1440000bytes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/1440000bytes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/1440000bytes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/1440000bytes"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-03-15T23:48:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1470991332",
      "id" : 1470991332,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585XrYvk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1470991332/reactions"
      },
      "updated_at" : "2023-03-15T23:48:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1470991332",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27050#discussion_r1141172272"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1141172272"
         }
      },
      "author_association" : "NONE",
      "body" : "not sure what this comment means.\r\n\"ever\" could be a misspelt \"every\". If that's the case, best to change it to from 'every' to 'all the'",
      "commit_id" : "5d91fae234234f76048bb770b26f949863942131",
      "created_at" : "2023-03-18T21:54:26Z",
      "diff_hunk" : "@@ -364,6 +364,12 @@ bool BlockManager::LoadBlockIndexDB(const Consensus::Params& consensus_params)\n         LogPrintf(\"LoadBlockIndexDB(): Block files have previously been pruned\\n\");\n     }\n \n+    // Check whether we have ever pruned block & undo files",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#discussion_r1141172272",
      "id" : 1141172272,
      "line" : 367,
      "node_id" : "PRRC_kwDOABII585EBOgw",
      "original_commit_id" : "5d91fae234234f76048bb770b26f949863942131",
      "original_line" : 367,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/node/blockstorage.cpp",
      "position" : 4,
      "pull_request_review_id" : 1347256056,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27050",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1141172272/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-18T21:54:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1141172272",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4791983?v=4",
         "events_url" : "https://api.github.com/users/paulkania/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paulkania/followers",
         "following_url" : "https://api.github.com/users/paulkania/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paulkania/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paulkania",
         "id" : 4791983,
         "login" : "paulkania",
         "node_id" : "MDQ6VXNlcjQ3OTE5ODM=",
         "organizations_url" : "https://api.github.com/users/paulkania/orgs",
         "received_events_url" : "https://api.github.com/users/paulkania/received_events",
         "repos_url" : "https://api.github.com/users/paulkania/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paulkania/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paulkania/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paulkania"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Can be marked up for grabs",
      "created_at" : "2023-08-07T14:03:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1667922866",
      "id" : 1667922866,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585januy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1667922866/reactions"
      },
      "updated_at" : "2023-08-07T14:03:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1667922866",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   }
]
