[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29415).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [andrewtoth](https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2008043439), [zzzi2p](https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2025920443), [nothingmuch](https://github.com/bitcoin/bitcoin/pull/29415#pullrequestreview-1984991157) |\n| Stale ACK | [pinheadmz](https://github.com/bitcoin/bitcoin/pull/29415#pullrequestreview-1928558982) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30065](https://github.com/bitcoin/bitcoin/pull/30065) (init: fixes file descriptor accounting by sr-gi)\n* [#30058](https://github.com/bitcoin/bitcoin/pull/30058) (Encapsulate warnings in generalized node::Warnings and remove globals by stickies-v)\n* [#29798](https://github.com/bitcoin/bitcoin/pull/29798) (Logging cleanup by vasild)\n* [#29700](https://github.com/bitcoin/bitcoin/pull/29700) (kernel, refactor: return error status on all fatal errors by ryanofsky)\n* [#29680](https://github.com/bitcoin/bitcoin/pull/29680) (wallet: fix unrelated parent conflict doesn't cause child tx to be marked as conflict by Eunovo)\n* [#29625](https://github.com/bitcoin/bitcoin/pull/29625) (Several randomness improvements by sipa)\n* [#29605](https://github.com/bitcoin/bitcoin/pull/29605) (net: Favor peers from addrman over fetching seednodes by sr-gi)\n* [#29432](https://github.com/bitcoin/bitcoin/pull/29432) (Stratum v2 Template Provider (take 3) by Sjors)\n* [#29431](https://github.com/bitcoin/bitcoin/pull/29431) (test/BIP324: disconnection scenarios during v2 handshake by stratospher)\n* [#29346](https://github.com/bitcoin/bitcoin/pull/29346) (Stratum v2 Noise Protocol by Sjors)\n* [#29278](https://github.com/bitcoin/bitcoin/pull/29278) (Wallet:  Add `maxfeerate` wallet startup option by ismaelsadeeq)\n* [#29256](https://github.com/bitcoin/bitcoin/pull/29256) (Improve new LogDebug/Trace/Info/Warning/Error Macros by ryanofsky)\n* [#28488](https://github.com/bitcoin/bitcoin/pull/28488) (p2p: Evict outbound peers with high minFeeRate by naumenkogs)\n* [#28463](https://github.com/bitcoin/bitcoin/pull/28463) (p2p: Increase inbound capacity for block-relay only connections by mzumsande)\n* [#27865](https://github.com/bitcoin/bitcoin/pull/27865) (wallet: Track no-longer-spendable TXOs separately by achow101)\n* [#27826](https://github.com/bitcoin/bitcoin/pull/27826) (validation: log which peer sent us a header by Sjors)\n* [#27539](https://github.com/bitcoin/bitcoin/pull/27539) (init: Fixes for file descriptor accounting by Empact)\n* [#26697](https://github.com/bitcoin/bitcoin/pull/26697) (logging: use bitset for categories by LarryRuane)\n* [#25832](https://github.com/bitcoin/bitcoin/pull/25832) (tracing: network connection tracepoints by 0xB10C)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2024-02-09T13:39:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1935952116",
      "id" : 1935952116,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII585zZEj0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1935952116/reactions"
      },
      "updated_at" : "2024-05-09T07:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1935952116",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I am not sure about this approach to improve privacy. Is it necessary to open new short lived tor/i2p connections for broadcasting the transaction? What are the trade-offs in this implementation vs a simple implementation to relay tx to one or more peers that our node is already connected to?\r\n\r\nRelated issues:\r\n\r\nhttps://github.com/bitcoin/bitcoin/issues/21876\r\nhttps://github.com/bitcoin/bitcoin/issues/28636",
      "created_at" : "2024-02-09T14:12:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1936003083",
      "id" : 1936003083,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII585zZRAL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1936003083/reactions"
      },
      "updated_at" : "2024-02-09T14:12:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1936003083",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/147166694?v=4",
         "events_url" : "https://api.github.com/users/1440000bytes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/1440000bytes/followers",
         "following_url" : "https://api.github.com/users/1440000bytes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/1440000bytes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/1440000bytes",
         "id" : 147166694,
         "login" : "1440000bytes",
         "node_id" : "U_kgDOCMWV5g",
         "organizations_url" : "https://api.github.com/users/1440000bytes/orgs",
         "received_events_url" : "https://api.github.com/users/1440000bytes/received_events",
         "repos_url" : "https://api.github.com/users/1440000bytes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/1440000bytes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/1440000bytes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/1440000bytes"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I think I forgot mentioned:\r\n\r\n- You have been working since last year\r\n- Lot of years reviewed \r\n\r\nStill I would NACK if it does not work for BITCOIN",
      "created_at" : "2024-02-09T20:42:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1936576857",
      "id" : 1936576857,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII585zbdFZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1936576857/reactions"
      },
      "updated_at" : "2024-02-09T20:42:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1936576857",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/147166694?v=4",
         "events_url" : "https://api.github.com/users/1440000bytes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/1440000bytes/followers",
         "following_url" : "https://api.github.com/users/1440000bytes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/1440000bytes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/1440000bytes",
         "id" : 147166694,
         "login" : "1440000bytes",
         "node_id" : "U_kgDOCMWV5g",
         "organizations_url" : "https://api.github.com/users/1440000bytes/orgs",
         "received_events_url" : "https://api.github.com/users/1440000bytes/received_events",
         "repos_url" : "https://api.github.com/users/1440000bytes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/1440000bytes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/1440000bytes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/1440000bytes"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@1440000bytes, thanks for asking! There is some discussion at https://github.com/bitcoin/bitcoin/pull/27509 (the previous attempt on this).\r\n\r\n> Is it necessary to open new short lived tor/i2p connections for broadcasting the transaction?\r\n\r\nYes, it is. See below.\r\n\r\n> What are the trade-offs in this implementation vs a simple implementation to relay tx to one or more peers that our node is already connected to?\r\n\r\nSending the transaction over clearnet reveals the IP address/geolocation of the sender. A spy with many connections to the network could try to guess who was the originator. So, why not send it to our Tor peers only? Because it is relatively easy for a spy to fingerprint and link clearnet and Tor connections to the same peer. That is, a long running connection over Tor could be linked to a long running clearnet connection. This is why the proposed changes open a short-lived connection that does not reveal any of the identity of the sender.\r\n\r\nWould this benefit nodes that don't have clearnet connections, e.g. Tor/I2P-only nodes? Yes! In the case where the sender sends two otherwise unrelated transactions over the same long-running Tor connection, the recipient will know that they have the same origin, even though they are not related on-chain. Using single shot connections fixes that too.\r\n\r\n> Related issues:\r\n\r\nLinked in the OP, thanks!",
      "created_at" : "2024-02-10T12:16:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1936992757",
      "id" : 1936992757,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII585zdCn1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1936992757/reactions"
      },
      "updated_at" : "2024-02-10T12:17:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1936992757",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1485310634"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485310634"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "While touching this, maybe `BCLog::UTIL` which is not used since https://github.com/bitcoin/bitcoin/pull/27896 should be dropped?",
      "commit_id" : "74ba7c7fb58e3a77eef7d69739145d22bb937f1c",
      "created_at" : "2024-02-10T21:48:08Z",
      "diff_hunk" : "@@ -142,49 +141,58 @@ bool BCLog::Logger::DefaultShrinkDebugFile() const\n     return m_categories == BCLog::NONE;\n }\n \n-struct CLogCategoryDesc {\n-    BCLog::LogFlags flag;\n-    std::string category;\n-};\n-\n-const CLogCategoryDesc LogCategories[] =\n-{\n-    {BCLog::NONE, \"0\"},\n-    {BCLog::NONE, \"\"},\n-    {BCLog::NET, \"net\"},\n-    {BCLog::TOR, \"tor\"},\n-    {BCLog::MEMPOOL, \"mempool\"},\n-    {BCLog::HTTP, \"http\"},\n-    {BCLog::BENCH, \"bench\"},\n-    {BCLog::ZMQ, \"zmq\"},\n-    {BCLog::WALLETDB, \"walletdb\"},\n-    {BCLog::RPC, \"rpc\"},\n-    {BCLog::ESTIMATEFEE, \"estimatefee\"},\n-    {BCLog::ADDRMAN, \"addrman\"},\n-    {BCLog::SELECTCOINS, \"selectcoins\"},\n-    {BCLog::REINDEX, \"reindex\"},\n-    {BCLog::CMPCTBLOCK, \"cmpctblock\"},\n-    {BCLog::RAND, \"rand\"},\n-    {BCLog::PRUNE, \"prune\"},\n-    {BCLog::PROXY, \"proxy\"},\n-    {BCLog::MEMPOOLREJ, \"mempoolrej\"},\n-    {BCLog::LIBEVENT, \"libevent\"},\n-    {BCLog::COINDB, \"coindb\"},\n-    {BCLog::QT, \"qt\"},\n-    {BCLog::LEVELDB, \"leveldb\"},\n-    {BCLog::VALIDATION, \"validation\"},\n-    {BCLog::I2P, \"i2p\"},\n-    {BCLog::IPC, \"ipc\"},\n+static const std::map<std::string, BCLog::LogFlags> LOG_CATEGORIES_BY_STR{\n+    {\"0\", BCLog::NONE},\n+    {\"\", BCLog::NONE},\n+    {\"net\", BCLog::NET},\n+    {\"tor\", BCLog::TOR},\n+    {\"mempool\", BCLog::MEMPOOL},\n+    {\"http\", BCLog::HTTP},\n+    {\"bench\", BCLog::BENCH},\n+    {\"zmq\", BCLog::ZMQ},\n+    {\"walletdb\", BCLog::WALLETDB},\n+    {\"rpc\", BCLog::RPC},\n+    {\"estimatefee\", BCLog::ESTIMATEFEE},\n+    {\"addrman\", BCLog::ADDRMAN},\n+    {\"selectcoins\", BCLog::SELECTCOINS},\n+    {\"reindex\", BCLog::REINDEX},\n+    {\"cmpctblock\", BCLog::CMPCTBLOCK},\n+    {\"rand\", BCLog::RAND},\n+    {\"prune\", BCLog::PRUNE},\n+    {\"proxy\", BCLog::PROXY},\n+    {\"mempoolrej\", BCLog::MEMPOOLREJ},\n+    {\"libevent\", BCLog::LIBEVENT},\n+    {\"coindb\", BCLog::COINDB},\n+    {\"qt\", BCLog::QT},\n+    {\"leveldb\", BCLog::LEVELDB},\n+    {\"validation\", BCLog::VALIDATION},\n+    {\"i2p\", BCLog::I2P},\n+    {\"ipc\", BCLog::IPC},\n #ifdef DEBUG_LOCKCONTENTION\n-    {BCLog::LOCK, \"lock\"},\n+    {\"lock\", BCLog::LOCK},\n #endif\n-    {BCLog::UTIL, \"util\"},\n-    {BCLog::BLOCKSTORAGE, \"blockstorage\"},\n-    {BCLog::TXRECONCILIATION, \"txreconciliation\"},\n-    {BCLog::SCAN, \"scan\"},\n-    {BCLog::TXPACKAGES, \"txpackages\"},\n-    {BCLog::ALL, \"1\"},\n-    {BCLog::ALL, \"all\"},\n+    {\"util\", BCLog::UTIL},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1485310634",
      "id" : 1485310634,
      "line" : 174,
      "node_id" : "PRRC_kwDOABII585YiAqq",
      "original_commit_id" : "2b05af27608f9e4e9a1b5f5c83c7870a8e6c9425",
      "original_line" : 174,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 86,
      "pull_request_review_id" : 1874263137,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485310634/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-10T21:50:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485310634",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2257631?v=4",
         "events_url" : "https://api.github.com/users/davidgumberg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/davidgumberg/followers",
         "following_url" : "https://api.github.com/users/davidgumberg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/davidgumberg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/davidgumberg",
         "id" : 2257631,
         "login" : "davidgumberg",
         "node_id" : "MDQ6VXNlcjIyNTc2MzE=",
         "organizations_url" : "https://api.github.com/users/davidgumberg/orgs",
         "received_events_url" : "https://api.github.com/users/davidgumberg/received_events",
         "repos_url" : "https://api.github.com/users/davidgumberg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/davidgumberg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/davidgumberg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/davidgumberg"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "v2 Transport will be enabled by default in the next release (https://github.com/bitcoin/bitcoin/pull/29347).\r\n\r\nIf there were eventually a change to _force_ clearnet transactions over v2 transport (so the details of the communications were encrypted), would that solve the same problem that this PR is aiming to solve?",
      "created_at" : "2024-02-10T21:56:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1937228496",
      "id" : 1937228496,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII585zd8LQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937228496/reactions"
      },
      "updated_at" : "2024-02-10T21:56:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937228496",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/109078515?v=4",
         "events_url" : "https://api.github.com/users/epiccurious/events{/privacy}",
         "followers_url" : "https://api.github.com/users/epiccurious/followers",
         "following_url" : "https://api.github.com/users/epiccurious/following{/other_user}",
         "gists_url" : "https://api.github.com/users/epiccurious/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/epiccurious",
         "id" : 109078515,
         "login" : "epiccurious",
         "node_id" : "U_kgDOBoBn8w",
         "organizations_url" : "https://api.github.com/users/epiccurious/orgs",
         "received_events_url" : "https://api.github.com/users/epiccurious/received_events",
         "repos_url" : "https://api.github.com/users/epiccurious/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/epiccurious/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/epiccurious/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/epiccurious"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@epiccurious, p2p encryption \"solves\" the spying from intermediate routers on clearnet (aka man-in-the-middle). Tor, I2P and CJDNS solve that too. While this PR uses only Tor and I2P it would solve that problem. But there is more - it will as well solve issues with spying bitcoin nodes.",
      "created_at" : "2024-02-11T14:13:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1937766372",
      "id" : 1937766372,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII585zf_fk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937766372/reactions"
      },
      "updated_at" : "2024-02-11T14:13:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937766372",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1485605463"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485605463"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done in https://github.com/bitcoin/bitcoin/pull/29419, thanks for the suggestion!",
      "commit_id" : "74ba7c7fb58e3a77eef7d69739145d22bb937f1c",
      "created_at" : "2024-02-11T14:28:49Z",
      "diff_hunk" : "@@ -142,49 +141,58 @@ bool BCLog::Logger::DefaultShrinkDebugFile() const\n     return m_categories == BCLog::NONE;\n }\n \n-struct CLogCategoryDesc {\n-    BCLog::LogFlags flag;\n-    std::string category;\n-};\n-\n-const CLogCategoryDesc LogCategories[] =\n-{\n-    {BCLog::NONE, \"0\"},\n-    {BCLog::NONE, \"\"},\n-    {BCLog::NET, \"net\"},\n-    {BCLog::TOR, \"tor\"},\n-    {BCLog::MEMPOOL, \"mempool\"},\n-    {BCLog::HTTP, \"http\"},\n-    {BCLog::BENCH, \"bench\"},\n-    {BCLog::ZMQ, \"zmq\"},\n-    {BCLog::WALLETDB, \"walletdb\"},\n-    {BCLog::RPC, \"rpc\"},\n-    {BCLog::ESTIMATEFEE, \"estimatefee\"},\n-    {BCLog::ADDRMAN, \"addrman\"},\n-    {BCLog::SELECTCOINS, \"selectcoins\"},\n-    {BCLog::REINDEX, \"reindex\"},\n-    {BCLog::CMPCTBLOCK, \"cmpctblock\"},\n-    {BCLog::RAND, \"rand\"},\n-    {BCLog::PRUNE, \"prune\"},\n-    {BCLog::PROXY, \"proxy\"},\n-    {BCLog::MEMPOOLREJ, \"mempoolrej\"},\n-    {BCLog::LIBEVENT, \"libevent\"},\n-    {BCLog::COINDB, \"coindb\"},\n-    {BCLog::QT, \"qt\"},\n-    {BCLog::LEVELDB, \"leveldb\"},\n-    {BCLog::VALIDATION, \"validation\"},\n-    {BCLog::I2P, \"i2p\"},\n-    {BCLog::IPC, \"ipc\"},\n+static const std::map<std::string, BCLog::LogFlags> LOG_CATEGORIES_BY_STR{\n+    {\"0\", BCLog::NONE},\n+    {\"\", BCLog::NONE},\n+    {\"net\", BCLog::NET},\n+    {\"tor\", BCLog::TOR},\n+    {\"mempool\", BCLog::MEMPOOL},\n+    {\"http\", BCLog::HTTP},\n+    {\"bench\", BCLog::BENCH},\n+    {\"zmq\", BCLog::ZMQ},\n+    {\"walletdb\", BCLog::WALLETDB},\n+    {\"rpc\", BCLog::RPC},\n+    {\"estimatefee\", BCLog::ESTIMATEFEE},\n+    {\"addrman\", BCLog::ADDRMAN},\n+    {\"selectcoins\", BCLog::SELECTCOINS},\n+    {\"reindex\", BCLog::REINDEX},\n+    {\"cmpctblock\", BCLog::CMPCTBLOCK},\n+    {\"rand\", BCLog::RAND},\n+    {\"prune\", BCLog::PRUNE},\n+    {\"proxy\", BCLog::PROXY},\n+    {\"mempoolrej\", BCLog::MEMPOOLREJ},\n+    {\"libevent\", BCLog::LIBEVENT},\n+    {\"coindb\", BCLog::COINDB},\n+    {\"qt\", BCLog::QT},\n+    {\"leveldb\", BCLog::LEVELDB},\n+    {\"validation\", BCLog::VALIDATION},\n+    {\"i2p\", BCLog::I2P},\n+    {\"ipc\", BCLog::IPC},\n #ifdef DEBUG_LOCKCONTENTION\n-    {BCLog::LOCK, \"lock\"},\n+    {\"lock\", BCLog::LOCK},\n #endif\n-    {BCLog::UTIL, \"util\"},\n-    {BCLog::BLOCKSTORAGE, \"blockstorage\"},\n-    {BCLog::TXRECONCILIATION, \"txreconciliation\"},\n-    {BCLog::SCAN, \"scan\"},\n-    {BCLog::TXPACKAGES, \"txpackages\"},\n-    {BCLog::ALL, \"1\"},\n-    {BCLog::ALL, \"all\"},\n+    {\"util\", BCLog::UTIL},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1485605463",
      "id" : 1485605463,
      "in_reply_to_id" : 1485310634,
      "line" : 174,
      "node_id" : "PRRC_kwDOABII585YjIpX",
      "original_commit_id" : "2b05af27608f9e4e9a1b5f5c83c7870a8e6c9425",
      "original_line" : 174,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 86,
      "pull_request_review_id" : 1874379420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485605463/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-11T14:28:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485605463",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`74ba7c7fb5...6fad02cf03`: rebase due to conflicts",
      "created_at" : "2024-02-29T13:18:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1971120973",
      "id" : 1971120973,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5851fOtN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1971120973/reactions"
      },
      "updated_at" : "2024-02-29T13:18:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1971120973",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "concept ACK 6fad02cf03 \r\n\r\n(code review in progress)\r\n\r\nI am also testing this feature in Warnet, which deploys a regtest network and even has an internal Tor DA so I can simulate onion routing locally. Currently using a 20-node [graph](https://github.com/pinheadmz/warnet/blob/priv-broadcast/test/data/onion.graphml) and a [scenario](https://github.com/pinheadmz/warnet/blob/priv-broadcast/src/scenarios/onion_init.py) which connects the graph, adds onion addresses to the test node, and then sends a raw transaction from the node running this branch.\r\n\r\nThe private broadcast succeeds frequently but not always. In Warnet anyway I had better luck when the test node had `-listenonion=0`, I tried that after suspecting that inbound onion connections were removing potential peers from the private broadcast list, but I'm not sure.\r\n\r\nI think I noticed this in the original PR as well, if multiple transactions are sent, the count keeps going up without a limit: \r\n\r\n```\r\n [privatebroadcast] Requested to open 60 connection(s), trying to open one\r\n```\r\n\r\nScreenshot below, I managed to capture a private broadcast connection! I'll mention when i get to that commit in review as well, but the connection type `\"privbcast\"` is breaking the very nice `-netinfo` table :-)\r\n\r\n\r\nSo far I have a few questions about the strategy:\r\n\r\n1. How do we pick the onion peers to relay to? If we avoid reusing peers then (especially in my miniature network) we can run out quickly, and nothing ever gets broadcast.\r\n\r\n2. Are we using fresh Tor identities for these connections? I think [Wasabi does something like this:](https://docs.wasabiwallet.app/why-wasabi/NetworkLevelPrivacy.html)\r\n\r\n> Wasabi connects to each peer through a different Tor stream. \r\n\r\n3. Do you think we need any RPC to get the status of private tx sends or provide the option to abandon (or revert to clearnet?)\r\n\r\n4. I assume you are restricting the feature to sendraw so the wallet doesn't get involved and try something silly like rebroadcasting over clearnet or inserting in to our own mempool? Do you think future work will integrate the wallet?\r\n\r\n\r\n![privbroadcast](https://github.com/bitcoin/bitcoin/assets/2084648/ec172be1-e5d8-4c00-94fc-e219dccacdec)\r\n\r\n\r\n",
      "created_at" : "2024-03-08T16:32:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1986011938",
      "id" : 1986011938,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5852YCMi",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986011938/reactions"
      },
      "updated_at" : "2024-03-08T16:32:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986011938",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1517972760"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517972760"
         }
      },
      "author_association" : "MEMBER",
      "body" : "e672e55ddb49378bd5c8e4f03fadae5774310c70 does this mean there is only one bit left in `LogFlags : uint32_t` ?!",
      "commit_id" : "6fad02cf03d6b37d0a22443a411ec92649b1d39d",
      "created_at" : "2024-03-08T16:42:11Z",
      "diff_hunk" : "@@ -70,6 +70,7 @@ namespace BCLog {\n         TXRECONCILIATION = (1 << 27),\n         SCAN        = (1 << 28),\n         TXPACKAGES  = (1 << 29),\n+        PRIVATE_BROADCAST = (1 << 30),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1517972760",
      "id" : 1517972760,
      "line" : 73,
      "node_id" : "PRRC_kwDOABII585aem0Y",
      "original_commit_id" : "e672e55ddb49378bd5c8e4f03fadae5774310c70",
      "original_line" : 73,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 4,
      "pull_request_review_id" : 1925311361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517972760/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-08T20:59:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517972760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1517981961"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517981961"
         }
      },
      "author_association" : "MEMBER",
      "body" : "72f0dbc99e6eed26bef21965dabc5f0bebf01b33 if user sets `-onlynet=onion` do we require (by the time we get to this line) that NET_ONION is reachable? Or couldn't it come up later, similar to the `-listenonion` configuration?",
      "commit_id" : "6fad02cf03d6b37d0a22443a411ec92649b1d39d",
      "created_at" : "2024-03-08T16:50:30Z",
      "diff_hunk" : "@@ -1900,6 +1911,23 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     connOptions.m_i2p_accept_incoming = args.GetBoolArg(\"-i2pacceptincoming\", DEFAULT_I2P_ACCEPT_INCOMING);\n \n+    if (args.GetBoolArg(\"-privatebroadcast\", DEFAULT_PRIVATE_BROADCAST)) {\n+        // If -listenonion is set, then NET_ONION may not be reachable now\n+        // but may become reachable later, thus only error here if it is not\n+        // reachable and will not become reachable for sure.\n+        if (!g_reachable_nets.Contains(NET_I2P) && !g_reachable_nets.Contains(NET_ONION) &&\n+            (!listenonion || args.IsArgSet(\"-onlynet\"))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1517981961",
      "id" : 1517981961,
      "line" : 1936,
      "node_id" : "PRRC_kwDOABII585aepEJ",
      "original_commit_id" : "72f0dbc99e6eed26bef21965dabc5f0bebf01b33",
      "original_line" : 1919,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 100,
      "pull_request_review_id" : 1925311361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517981961/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-08T20:59:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517981961",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518063388"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518063388"
         }
      },
      "author_association" : "MEMBER",
      "body" : "7a0f492104c1621b7089a64fa330c72b06d30574 `\"privbcast\"` needs to be <= 6 characters to fit nicely in the table layout, or you could extend the column width:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1cd2e29870e4ad3b7c57b1d567df0e6df56572b0/src/bitcoin-cli.cpp#L549-L552",
      "commit_id" : "6fad02cf03d6b37d0a22443a411ec92649b1d39d",
      "created_at" : "2024-03-08T17:51:51Z",
      "diff_hunk" : "@@ -452,6 +452,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         if (conn_type == \"block-relay-only\") return \"block\";\n         if (conn_type == \"manual\" || conn_type == \"feeler\") return conn_type;\n         if (conn_type == \"addr-fetch\") return \"addr\";\n+        if (conn_type == \"private-broadcast\") return \"privbcast\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518063388",
      "id" : 1518063388,
      "line" : 455,
      "node_id" : "PRRC_kwDOABII585ae88c",
      "original_commit_id" : "7a0f492104c1621b7089a64fa330c72b06d30574",
      "original_line" : 455,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 4,
      "pull_request_review_id" : 1925311361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518063388/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-08T20:59:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518063388",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518080397"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518080397"
         }
      },
      "author_association" : "MEMBER",
      "body" : "7a0f492104c1621b7089a64fa330c72b06d30574 I noticed this wasn't added to the fuzzer, dunno if it needs to be:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1cd2e29870e4ad3b7c57b1d567df0e6df56572b0/src/test/util/net.h#L112-L119",
      "commit_id" : "6fad02cf03d6b37d0a22443a411ec92649b1d39d",
      "created_at" : "2024-03-08T18:06:46Z",
      "diff_hunk" : "@@ -75,6 +75,13 @@ enum class ConnectionType {\n      * AddrMan is empty.\n      */\n     ADDR_FETCH,\n+\n+    /**\n+     * Private broadcast connections are short-lived and only opened to\n+     * privacy networks (Tor, I2P) for relaying privacy-sensitive data (like\n+     * our own transactions) and closed afterwards.\n+     */\n+    PRIVATE_BROADCAST,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518080397",
      "id" : 1518080397,
      "line" : 84,
      "node_id" : "PRRC_kwDOABII585afBGN",
      "original_commit_id" : "7a0f492104c1621b7089a64fa330c72b06d30574",
      "original_line" : 84,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/node/connection_types.h",
      "position" : 10,
      "pull_request_review_id" : 1925311361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518080397/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-08T20:59:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518080397",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@pinheadmz, excellent! Thank you for looking into this! Replies inline:\r\n\r\n> The private broadcast succeeds frequently but not always\r\n\r\nLets debug this in a sub-thread in order not to overwhelm the PR main thread: [here](https://github.com/bitcoin/bitcoin/pull/29415/files#r1519402830).\r\n\r\n> suspecting that inbound onion connections were removing potential peers from the private broadcast list\r\n\r\nNo, this cannot be the case. Inbound onion connections appear as IPv4 connections coming from the Tor daemon. They do not have any source address associated with them, other than the one of the Tor daemon itself (usually `127.0.0.1`).\r\n\r\n> I think I noticed this in the original PR as well, if multiple transactions are sent, the count keeps going up without a limit\r\n\r\nThat is now capped at `size_t MAX_PRIVATE_BROADCAST_CONNECTIONS{64}`.\r\n\r\n> the connection type `\"privbcast\"` is breaking the very nice `-netinfo` table\r\n\r\nThis better be addressed in the visualization engine, e.g. by using `%5.5s`\r\n\r\n> How do we pick the onion peers to relay to? If we avoid reusing peers then...\r\n\r\nWe pick a random Tor (or I2P) peer. In the same way we choose the address when we want to have an outbound connection to a peer from a particular network. No attempt to avoid reuse. But we don't connect to already connected peers. This is the logic as in `master`.\r\n\r\n> Are we using fresh Tor identities for these connections?\r\n\r\nYes, if `-proxyrandomize=1` (the default). This is the same in `master` - separate Tor circuit per connection. This PR does the same as Wasabi: https://docs.wasabiwallet.app/why-wasabi/NetworkLevelPrivacy.html#wasabi-wallet-light-node\r\n\r\n> Do you think we need any RPC to get the status of private tx sends or provide the option to abandon (or revert to clearnet?)\r\n\r\nYes, both would be useful, but as a followup PR. I am afraid putting those here would bloat this PR too much. I could however implement that and publish it under Draft PR that depends on this one, so people can use it during testing.\r\n\r\n> I assume you are restricting the feature to sendraw so the wallet doesn't get involved and try something silly like rebroadcasting over clearnet or inserting in to our own mempool?\r\n\r\nThe reason to omit the wallet is that it currently does not count non-mempool change. For example, if we have 1 BTC and send 0.6 to somebody and 0.4 as change, the wallet will show a balance of 0 (or 1, unchanged? somebody correct me if I am wrong) until the transaction enters the mempool (or gets mined in a block). This would be quite rough user experience. Note that this is already the case in `master` if `-walletbroadcast=0`.\r\n\r\n> Do you think future work will integrate the wallet?\r\n\r\nYes, but I left that for another PR. Omitting it here reduces the size of this PR and allows to deal with the wallet in isolation, after all the distracting infrastructure is in (e.g. log category, new type of connection, the \"net\" code, etc).\r\n",
      "created_at" : "2024-03-08T18:21:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1986188327",
      "id" : 1986188327,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5852YtQn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 1,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986188327/reactions"
      },
      "updated_at" : "2024-03-11T09:35:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986188327",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518132032"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518132032"
         }
      },
      "author_association" : "MEMBER",
      "body" : "4e19f9cc9834c0b76a2d03fea0921879de46fea9 Just to clarify: if a i2p sam session already exists, normally we would re-use it. But in the case of private broadcast we force a new transient session? Comment might be nice here.",
      "commit_id" : "6fad02cf03d6b37d0a22443a411ec92649b1d39d",
      "created_at" : "2024-03-08T18:38:29Z",
      "diff_hunk" : "@@ -456,7 +456,7 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n         if (addrConnect.IsI2P() && use_proxy) {\n             i2p::Connection conn;\n \n-            if (m_i2p_sam_session) {\n+            if (m_i2p_sam_session && conn_type != ConnectionType::PRIVATE_BROADCAST) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518132032",
      "id" : 1518132032,
      "line" : 468,
      "node_id" : "PRRC_kwDOABII585afNtA",
      "original_commit_id" : "4e19f9cc9834c0b76a2d03fea0921879de46fea9",
      "original_line" : 459,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 23,
      "pull_request_review_id" : 1925311361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518132032/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-08T20:59:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518132032",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518175963"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518175963"
         }
      },
      "author_association" : "MEMBER",
      "body" : "4e19f9cc9834c0b76a2d03fea0921879de46fea9 Feels like this log message is not in the right place since this function does not try to open a connection.",
      "commit_id" : "6fad02cf03d6b37d0a22443a411ec92649b1d39d",
      "created_at" : "2024-03-08T19:01:46Z",
      "diff_hunk" : "@@ -2413,6 +2413,63 @@ bool CConnman::MaybePickPreferredNetwork(std::optional<Network>& network)\n     return false;\n }\n \n+/**\n+ * Decide whether to open a private broadcast connection and if yes, to which network.\n+ * @param[in,out] net If the previous attempt to open a connection was an attempt to\n+ * open a private broadcast connection (successful or not), then this should have a\n+ * value. When the function ends if this has value then it will contain the network\n+ * to which to open the connection.\n+ * @param[in] num_needed Number of private broadcast connections that need to be opened.\n+ * @param[in] num_opened Number of private broadcast connections that are currently opened.\n+ */\n+static void MaybePickPrivateBroadcastNetwork(std::optional<Network>& net, size_t num_needed, size_t num_opened)\n+{\n+    if (net.has_value()) {\n+        // Yield to other connection types.\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    if (num_needed == 0) {\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    if (num_opened >= MAX_PRIVATE_BROADCAST_CONNECTIONS) {\n+        LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                      BCLog::Level::Debug,\n+                      \"Requested to open %d connection(s), but there are already %d \"\n+                      \"connections opened. Will wait for some of them to be closed \"\n+                      \"before opening a new one\\n\",\n+                      num_needed,\n+                      num_opened);\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    const bool tor_reachable{g_reachable_nets.Contains(NET_ONION)};\n+    const bool i2p_reachable{g_reachable_nets.Contains(NET_I2P)};\n+    if (tor_reachable && i2p_reachable) {\n+        net = FastRandomContext{}.randbool() ? NET_ONION : NET_I2P;\n+    } else if (tor_reachable) {\n+        net = NET_ONION;\n+    } else if (i2p_reachable) {\n+        net = NET_I2P;\n+    } else {\n+        LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                      BCLog::Level::Warning,\n+                      \"Requested to open %d connection(s) but none of the Tor or I2P networks is reachable.\\n\",\n+                      num_needed);\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                  BCLog::Level::Debug,\n+                  \"Requested to open %d connection(s), trying to open one\\n\",\n+                  num_needed);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518175963",
      "id" : 1518175963,
      "line" : 2479,
      "node_id" : "PRRC_kwDOABII585afYbb",
      "original_commit_id" : "4e19f9cc9834c0b76a2d03fea0921879de46fea9",
      "original_line" : 2470,
      "original_position" : 67,
      "original_start_line" : 2467,
      "path" : "src/net.cpp",
      "position" : 93,
      "pull_request_review_id" : 1925311361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518175963/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 2476,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-03-08T20:59:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518175963",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518178949"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518178949"
         }
      },
      "author_association" : "MEMBER",
      "body" : "4e19f9cc9834c0b76a2d03fea0921879de46fea9 does this need underflow protection? Just like an `Assume()` even?",
      "commit_id" : "6fad02cf03d6b37d0a22443a411ec92649b1d39d",
      "created_at" : "2024-03-08T19:04:52Z",
      "diff_hunk" : "@@ -2886,6 +2964,16 @@ void CConnman::OpenNetworkConnection(const CAddress& addrConnect, bool fCountFai\n         return;\n     pnode->grantOutbound = std::move(grant_outbound);\n \n+    if (conn_type == ConnectionType::PRIVATE_BROADCAST) {\n+        const size_t before_sub{m_private_broadcast_connections_to_open.fetch_sub(1)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518178949",
      "id" : 1518178949,
      "line" : 2977,
      "node_id" : "PRRC_kwDOABII585afZKF",
      "original_commit_id" : "4e19f9cc9834c0b76a2d03fea0921879de46fea9",
      "original_line" : 2968,
      "original_position" : 170,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 274,
      "pull_request_review_id" : 1925311361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518178949/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-08T20:59:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518178949",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518194970"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518194970"
         }
      },
      "author_association" : "MEMBER",
      "body" : "532e63279a3c04fef8da2c1bb95e5280c94abc4e consider rephrasing the comment on the previous line since `relay=true` isn't a thing any more?",
      "commit_id" : "6fad02cf03d6b37d0a22443a411ec92649b1d39d",
      "created_at" : "2024-03-08T19:22:32Z",
      "diff_hunk" : "@@ -2051,7 +2065,7 @@ NodeClock::time_point CWallet::GetDefaultNextResend() { return FastRandomContext\n // that depends on the `relay` option. Periodic rebroadcast uses the pattern\n // relay=true force=false, while loading into the mempool\n // (on start, or after import) uses relay=false force=true.\n-void CWallet::ResubmitWalletTransactions(bool relay, bool force)\n+void CWallet::ResubmitWalletTransactions(TxBroadcastMethod broadcast_method, bool force)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518194970",
      "id" : 1518194970,
      "line" : 2068,
      "node_id" : "PRRC_kwDOABII585afdEa",
      "original_commit_id" : "532e63279a3c04fef8da2c1bb95e5280c94abc4e",
      "original_line" : 2068,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 46,
      "pull_request_review_id" : 1925311361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518194970/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-08T20:59:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518194970",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518225842"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518225842"
         }
      },
      "author_association" : "MEMBER",
      "body" : "eb9d7386ca82319ab682fc20ab35c13340d108a4 Hashing a hash? Does this just make the `std::unordered_map` lookups faster because the keys are smaller (looks like 64 bits?)",
      "commit_id" : "6fad02cf03d6b37d0a22443a411ec92649b1d39d",
      "created_at" : "2024-03-08T19:47:41Z",
      "diff_hunk" : "@@ -1083,6 +1087,62 @@ class PeerManagerImpl final : public PeerManager\n \n     void AddAddressKnown(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\n     void PushAddress(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\n+\n+    /**\n+     * Store a list of transactions to be broadcast privately. Supports the following operations:\n+     * - Add a new transaction\n+     * - Remove a transaction, after it has been seen by the network\n+     * - Mark a broadcast of a transaction (remember when and how many times)\n+     * - Get a transaction for broadcast, the one that has been broadcast less times and least recently\n+     */\n+    class PrivateBroadcast\n+    {\n+    public:\n+        void Add(const CTransactionRef& tx) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+        {\n+            const Txid& txid = tx->GetHash();\n+            LOCK(m_mutex);\n+            auto [pos, inserted] = m_by_txid.emplace(txid, TxWithPriority{.tx = tx, .priority = Priority{}});\n+            if (inserted) {\n+                m_by_priority.emplace(Priority{}, txid);\n+            }\n+        }\n+\n+    private:\n+        struct Priority {\n+            size_t num_broadcasted{0};\n+            std::chrono::microseconds last_broadcasted{0};\n+\n+            bool operator<(const Priority& other) const\n+            {\n+                if (num_broadcasted < other.num_broadcasted) {\n+                    return true;\n+                }\n+                return last_broadcasted < other.last_broadcasted;\n+            }\n+        };\n+\n+        struct TxWithPriority {\n+            CTransactionRef tx;\n+            Priority priority;\n+        };\n+\n+        struct TxidHasher {\n+            size_t operator()(const Txid& txid) const { return SipHashUint256(0, 0, txid.ToUint256()); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518225842",
      "id" : 1518225842,
      "line" : 1236,
      "node_id" : "PRRC_kwDOABII585afkmy",
      "original_commit_id" : "eb9d7386ca82319ab682fc20ab35c13340d108a4",
      "original_line" : 1131,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 195,
      "pull_request_review_id" : 1925311361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518225842/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-08T20:59:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518225842",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518256562"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518256562"
         }
      },
      "author_association" : "MEMBER",
      "body" : "07dee91112189be02c6694385de261570725b56b this would be unexpected if we had the txid in the priority list but not in the actual txid list, right? Maybe we should at least remove the txid from the priority list if this ever happens, or log something, or like, call the police or something?",
      "commit_id" : "6fad02cf03d6b37d0a22443a411ec92649b1d39d",
      "created_at" : "2024-03-08T20:23:23Z",
      "diff_hunk" : "@@ -1108,6 +1116,71 @@ class PeerManagerImpl final : public PeerManager\n             }\n         }\n \n+        /**\n+         * Get the transaction that has been broadcast less times and least recently.\n+         */\n+        std::optional<CTransactionRef> GetTxForBroadcast() const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+        {\n+            LOCK(m_mutex);\n+            if (m_by_priority.empty()) {\n+                return std::nullopt;\n+            }\n+            const Txid& txid = m_by_priority.begin()->second;\n+            auto it = m_by_txid.find(txid);\n+            if (it == m_by_txid.end()) {\n+                return std::nullopt;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518256562",
      "id" : 1518256562,
      "line" : 1150,
      "node_id" : "PRRC_kwDOABII585afsGy",
      "original_commit_id" : "07dee91112189be02c6694385de261570725b56b",
      "original_line" : 1131,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 109,
      "pull_request_review_id" : 1925311361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518256562/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-08T20:59:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518256562",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518263617"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518263617"
         }
      },
      "author_association" : "MEMBER",
      "body" : "07dee91112189be02c6694385de261570725b56b could this just be blank?",
      "commit_id" : "6fad02cf03d6b37d0a22443a411ec92649b1d39d",
      "created_at" : "2024-03-08T20:32:24Z",
      "diff_hunk" : "@@ -1566,26 +1665,53 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    MakeAndPushMessage(pnode, NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, CNetAddr::V1(addr_you), // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CNetAddr::V1(CService{}), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay);\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsPrivateBroadcastConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518263617",
      "id" : 1518263617,
      "line" : 1712,
      "node_id" : "PRRC_kwDOABII585aft1B",
      "original_commit_id" : "07dee91112189be02c6694385de261570725b56b",
      "original_line" : 1680,
      "original_position" : 172,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 271,
      "pull_request_review_id" : 1925311361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518263617/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-08T20:59:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518263617",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518279844"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518279844"
         }
      },
      "author_association" : "MEMBER",
      "body" : "07dee91112189be02c6694385de261570725b56b do you need this here? I thought you had filtered out all the unnecessary messages already in `CConnman::PushMessage()`",
      "commit_id" : "6fad02cf03d6b37d0a22443a411ec92649b1d39d",
      "created_at" : "2024-03-08T20:52:20Z",
      "diff_hunk" : "@@ -3706,7 +3885,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                       (mapped_as ? strprintf(\", mapped_as=%d\", mapped_as) : \"\"));\n         }\n \n-        if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION) {\n+        if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION && !pfrom.IsPrivateBroadcastConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518279844",
      "id" : 1518279844,
      "line" : 3973,
      "node_id" : "PRRC_kwDOABII585afxyk",
      "original_commit_id" : "07dee91112189be02c6694385de261570725b56b",
      "original_line" : 3888,
      "original_position" : 291,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 618,
      "pull_request_review_id" : 1925311361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518279844/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-08T20:59:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518279844",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518282738"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518282738"
         }
      },
      "author_association" : "MEMBER",
      "body" : "07dee91112189be02c6694385de261570725b56b `BroadcastEnd()` returns a `bool`, seems like you could include that in the log message where you have the word \"probably\"",
      "commit_id" : "6fad02cf03d6b37d0a22443a411ec92649b1d39d",
      "created_at" : "2024-03-08T20:55:54Z",
      "diff_hunk" : "@@ -4929,6 +5133,16 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     if (ping_time.count() >= 0) {\n                         // Let connman know about this successful ping-pong\n                         pfrom.PongReceived(ping_time);\n+                        if (pfrom.IsPrivateBroadcastConn()) {\n+                            m_tx_for_private_broadcast.BroadcastEnd(pfrom.GetId(), /*confirmed_by_node=*/true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518282738",
      "id" : 1518282738,
      "line" : 5232,
      "node_id" : "PRRC_kwDOABII585afyfy",
      "original_commit_id" : "07dee91112189be02c6694385de261570725b56b",
      "original_line" : 5137,
      "original_position" : 339,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 701,
      "pull_request_review_id" : 1925311361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518282738/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-08T20:59:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518282738",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-03-09T02:12:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1986694091",
      "id" : 1986694091,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5852aovL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986694091/reactions"
      },
      "updated_at" : "2024-03-09T02:12:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986694091",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1519402830"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1519402830"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "From the PR main thread https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1986011938:\r\n\r\n> The private broadcast succeeds frequently but not always\r\n\r\nIn the originator's log you can check to whom is the transaction being sent. Then in the recipient's logs you can check if it was accepted and further broadcast to everybody. Enable `-debug=net -debug=privatebroadcast`.",
      "commit_id" : "6fad02cf03d6b37d0a22443a411ec92649b1d39d",
      "created_at" : "2024-03-11T09:35:14Z",
      "diff_hunk" : "@@ -452,6 +452,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         if (conn_type == \"block-relay-only\") return \"block\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1519402830",
      "id" : 1519402830,
      "line" : 452,
      "node_id" : "PRRC_kwDOABII585akD9O",
      "original_commit_id" : "6fad02cf03d6b37d0a22443a411ec92649b1d39d",
      "original_line" : 452,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 1,
      "pull_request_review_id" : 1927346768,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1519402830/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T09:35:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1519402830",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1519831611"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1519831611"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes. `LogFlags` is not stored on disk (I hope!) or participate in some permanent on-disk format. It is memory only and can be flipped to `uint64_t` when needed.",
      "commit_id" : "6fad02cf03d6b37d0a22443a411ec92649b1d39d",
      "created_at" : "2024-03-11T14:37:03Z",
      "diff_hunk" : "@@ -70,6 +70,7 @@ namespace BCLog {\n         TXRECONCILIATION = (1 << 27),\n         SCAN        = (1 << 28),\n         TXPACKAGES  = (1 << 29),\n+        PRIVATE_BROADCAST = (1 << 30),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1519831611",
      "id" : 1519831611,
      "in_reply_to_id" : 1517972760,
      "line" : 73,
      "node_id" : "PRRC_kwDOABII585also7",
      "original_commit_id" : "e672e55ddb49378bd5c8e4f03fadae5774310c70",
      "original_line" : 73,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 4,
      "pull_request_review_id" : 1928014516,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1519831611/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T14:37:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1519831611",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520116658"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520116658"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> if user sets `-onlynet=onion` do we require (by the time we get to this line) that NET_ONION is reachable?\r\n\r\nNo. `-listen=1 -listenonion=1 -torcontrol=... -torpassword=... -onlynet=onion` would get us here with `NET_ONION` being unreachable.\r\n\r\n> Or couldn't it come up later, similar to the `-listenonion` configuration?\r\n\r\nYes, if `-listenonion=1 -torcontrol=... -torpassword=...` is given then we will later, after startup, connect to the Tor daemon and possibly make `NET_ONION` reachable.",
      "commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "created_at" : "2024-03-11T17:15:17Z",
      "diff_hunk" : "@@ -1900,6 +1911,23 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     connOptions.m_i2p_accept_incoming = args.GetBoolArg(\"-i2pacceptincoming\", DEFAULT_I2P_ACCEPT_INCOMING);\n \n+    if (args.GetBoolArg(\"-privatebroadcast\", DEFAULT_PRIVATE_BROADCAST)) {\n+        // If -listenonion is set, then NET_ONION may not be reachable now\n+        // but may become reachable later, thus only error here if it is not\n+        // reachable and will not become reachable for sure.\n+        if (!g_reachable_nets.Contains(NET_I2P) && !g_reachable_nets.Contains(NET_ONION) &&\n+            (!listenonion || args.IsArgSet(\"-onlynet\"))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520116658",
      "id" : 1520116658,
      "in_reply_to_id" : 1517981961,
      "line" : 1961,
      "node_id" : "PRRC_kwDOABII585amyOy",
      "original_commit_id" : "72f0dbc99e6eed26bef21965dabc5f0bebf01b33",
      "original_line" : 1961,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 100,
      "pull_request_review_id" : 1928519119,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520116658/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T17:15:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520116658",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520122930"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520122930"
         }
      },
      "author_association" : "MEMBER",
      "body" : "bc05ddc7b9369cf263bf88d0a773ca853d3c9af5 maybe I'm missing something, but should we not also adjust `m_private_broadcast_connections_to_open` when we get our privately broadcast tx back over regular relay? In my first local test, all 5 onion connections were completed before I got the tx back. But if the very first private connection relays the tx around and we get it back, do we still need to bother with the next 4?",
      "commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "created_at" : "2024-03-11T17:19:46Z",
      "diff_hunk" : "@@ -4499,6 +4515,16 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         const uint256& hash = peer->m_wtxid_relay ? wtxid : txid;\n         AddKnownTx(*peer, hash);\n \n+        if (m_tx_for_private_broadcast.Remove(ptx)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520122930",
      "id" : 1520122930,
      "line" : 4604,
      "node_id" : "PRRC_kwDOABII585amzwy",
      "original_commit_id" : "bc05ddc7b9369cf263bf88d0a773ca853d3c9af5",
      "original_line" : 4604,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 665,
      "pull_request_review_id" : 1928530676,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520122930/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T17:19:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520122930",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520128211"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520128211"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ok so then isn't it possible for a user to start with `-privatebroadcast` but i2p and onion aren't reachable *yet*? They would get an init error but the Tor daemon could become reachable later, by the time we need it.",
      "commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "created_at" : "2024-03-11T17:23:32Z",
      "diff_hunk" : "@@ -1900,6 +1911,23 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     connOptions.m_i2p_accept_incoming = args.GetBoolArg(\"-i2pacceptincoming\", DEFAULT_I2P_ACCEPT_INCOMING);\n \n+    if (args.GetBoolArg(\"-privatebroadcast\", DEFAULT_PRIVATE_BROADCAST)) {\n+        // If -listenonion is set, then NET_ONION may not be reachable now\n+        // but may become reachable later, thus only error here if it is not\n+        // reachable and will not become reachable for sure.\n+        if (!g_reachable_nets.Contains(NET_I2P) && !g_reachable_nets.Contains(NET_ONION) &&\n+            (!listenonion || args.IsArgSet(\"-onlynet\"))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520128211",
      "id" : 1520128211,
      "in_reply_to_id" : 1517981961,
      "line" : 1961,
      "node_id" : "PRRC_kwDOABII585am1DT",
      "original_commit_id" : "72f0dbc99e6eed26bef21965dabc5f0bebf01b33",
      "original_line" : 1961,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 100,
      "pull_request_review_id" : 1928539673,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520128211/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T17:23:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520128211",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520139562"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520139562"
         }
      },
      "author_association" : "MEMBER",
      "body" : "4e19f9cc9834c0b76a2d03fea0921879de46fea9 what if `MaybePickPrivateBroadcastNetwork()` chooses i2p but we don't have any addrs for that network? I think the `while` loop below may try forever until addrman finally has something for i2p? But we *could* call `MaybePickPrivateBroadcastNetwork()` again or just switch to Tor if we know we have addrs there.",
      "commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "created_at" : "2024-03-11T17:31:42Z",
      "diff_hunk" : "@@ -2657,7 +2733,9 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             CAddress addr;\n             NodeSeconds addr_last_try{0s};\n \n-            if (fFeeler) {\n+            if (open_private_broadcast_to.has_value()) {\n+                std::tie(addr, addr_last_try) = addrman.Select(/*new_only=*/false, open_private_broadcast_to.value());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520139562",
      "id" : 1520139562,
      "line" : 2744,
      "node_id" : "PRRC_kwDOABII585am30q",
      "original_commit_id" : "4e19f9cc9834c0b76a2d03fea0921879de46fea9",
      "original_line" : 2744,
      "original_position" : 160,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 267,
      "pull_request_review_id" : 1928558982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520139562/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T18:41:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520139562",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520152548"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520152548"
         }
      },
      "author_association" : "MEMBER",
      "body" : "c09d6409c957af7c449a60778689d6715d9a6628 `num_stale` is a count of transactions but the other two numbers here count p2p connections, are we still going to use `NUM_PRIVATE_BROADCAST_PER_TX` here?",
      "commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "created_at" : "2024-03-11T17:40:18Z",
      "diff_hunk" : "@@ -1797,10 +1820,56 @@ void PeerManagerImpl::ReattemptInitialBroadcast(CScheduler& scheduler)\n         }\n     }\n \n-    // Schedule next run for 10-15 minutes in the future.\n-    // We add randomness on every cycle to avoid the possibility of P2P fingerprinting.\n-    const std::chrono::milliseconds delta = 10min + GetRandMillis(5min);\n-    scheduler.scheduleFromNow([&] { ReattemptInitialBroadcast(scheduler); }, delta);\n+    scheduler.scheduleFromNow([&] { ReattemptInitialBroadcast(scheduler); }, NextTxBroadcast());\n+}\n+\n+void PeerManagerImpl::ReattemptPrivateBroadcast(CScheduler& scheduler)\n+{\n+    // The following heuristic is subject to races, but that is ok: if it overshoots,\n+    // we will open some private connections in vain, if it undershoots, the stale\n+    // transactions will be picked on the next run.\n+\n+    size_t num_active{0};\n+    m_connman.ForEachNode([&num_active](const CNode* node) {\n+        if (node->IsPrivateBroadcastConn()) {\n+            ++num_active;\n+        }\n+    });\n+\n+    const size_t num_to_open{m_connman.NumPrivateBroadcastToOpen()};\n+\n+    // Remove stale transactions that are no longer relevant (e.g. already in\n+    // the mempool or mined) and count the remaining ones.\n+    size_t num_stale{0};\n+    const auto stale_txs = m_tx_for_private_broadcast.GetStale();\n+    {\n+        LOCK(cs_main);\n+        for (const auto& stale_tx : stale_txs) {\n+            auto mempool_acceptable = m_chainman.ProcessTransaction(stale_tx, /*test_accept=*/true);\n+            if (mempool_acceptable.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n+                LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                              BCLog::Level::Debug,\n+                              \"Reattempting broadcast of stale txid=%s wtxid=%s\\n\",\n+                              stale_tx->GetHash().ToString(),\n+                              stale_tx->GetWitnessHash().ToString());\n+                ++num_stale;\n+            } else {\n+                LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                              BCLog::Level::Info,\n+                              \"Giving up broadcast attempts for txid=%s wtxid=%s: %s\\n\",\n+                              stale_tx->GetHash().ToString(),\n+                              stale_tx->GetWitnessHash().ToString(),\n+                              mempool_acceptable.m_state.ToString());\n+                m_tx_for_private_broadcast.Remove(stale_tx);\n+            }\n+        }\n+    }\n+\n+    if (num_stale > num_active + num_to_open) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520152548",
      "id" : 1520152548,
      "line" : 1885,
      "node_id" : "PRRC_kwDOABII585am6_k",
      "original_commit_id" : "c09d6409c957af7c449a60778689d6715d9a6628",
      "original_line" : 1885,
      "original_position" : 97,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 385,
      "pull_request_review_id" : 1928558982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520152548/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T18:41:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520152548",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520180548"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520180548"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed to `privat`. Feel free to suggest another name.",
      "commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "created_at" : "2024-03-11T17:54:41Z",
      "diff_hunk" : "@@ -452,6 +452,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         if (conn_type == \"block-relay-only\") return \"block\";\n         if (conn_type == \"manual\" || conn_type == \"feeler\") return conn_type;\n         if (conn_type == \"addr-fetch\") return \"addr\";\n+        if (conn_type == \"private-broadcast\") return \"privbcast\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520180548",
      "id" : 1520180548,
      "in_reply_to_id" : 1518063388,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585anB1E",
      "original_commit_id" : "7a0f492104c1621b7089a64fa330c72b06d30574",
      "original_line" : 455,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 1928640468,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520180548/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T17:54:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520180548",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520182217"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520182217"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good catch, added!",
      "commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "created_at" : "2024-03-11T17:55:04Z",
      "diff_hunk" : "@@ -75,6 +75,13 @@ enum class ConnectionType {\n      * AddrMan is empty.\n      */\n     ADDR_FETCH,\n+\n+    /**\n+     * Private broadcast connections are short-lived and only opened to\n+     * privacy networks (Tor, I2P) for relaying privacy-sensitive data (like\n+     * our own transactions) and closed afterwards.\n+     */\n+    PRIVATE_BROADCAST,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520182217",
      "id" : 1520182217,
      "in_reply_to_id" : 1518080397,
      "line" : 84,
      "node_id" : "PRRC_kwDOABII585anCPJ",
      "original_commit_id" : "7a0f492104c1621b7089a64fa330c72b06d30574",
      "original_line" : 84,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/node/connection_types.h",
      "position" : 10,
      "pull_request_review_id" : 1928643867,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520182217/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T17:55:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520182217",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520183380"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520183380"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes. Added a comment.",
      "commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "created_at" : "2024-03-11T17:55:22Z",
      "diff_hunk" : "@@ -456,7 +456,7 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n         if (addrConnect.IsI2P() && use_proxy) {\n             i2p::Connection conn;\n \n-            if (m_i2p_sam_session) {\n+            if (m_i2p_sam_session && conn_type != ConnectionType::PRIVATE_BROADCAST) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520183380",
      "id" : 1520183380,
      "in_reply_to_id" : 1518132032,
      "line" : 466,
      "node_id" : "PRRC_kwDOABII585anChU",
      "original_commit_id" : "4e19f9cc9834c0b76a2d03fea0921879de46fea9",
      "original_line" : 466,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 26,
      "pull_request_review_id" : 1928646551,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520183380/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T17:55:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520183380",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`6fad02cf03...d10a0649b0`: rebase due to conflicts and address some suggestions",
      "created_at" : "2024-03-11T17:56:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1989094391",
      "id" : 1989094391,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5852jyv3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1989094391/reactions"
      },
      "updated_at" : "2024-03-11T17:56:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1989094391",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520191910"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520191910"
         }
      },
      "author_association" : "MEMBER",
      "body" : "e36a1b4848f8f762b550a9469993211d41bd6cb9 heh, makes the placement of this function in `mempool.cpp` a bit arbitrary now!",
      "commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "created_at" : "2024-03-11T17:59:08Z",
      "diff_hunk" : "@@ -89,11 +91,14 @@ static RPCHelpMan sendrawtransaction()\n             std::string err_string;\n             AssertLockNotHeld(cs_main);\n             NodeContext& node = EnsureAnyNodeContext(request.context);\n+            const auto method = gArgs.GetBoolArg(\"-privatebroadcast\", DEFAULT_PRIVATE_BROADCAST) ?\n+                                    NO_MEMPOOL_PRIVATE_BROADCAST :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520191910",
      "id" : 1520191910,
      "line" : 95,
      "node_id" : "PRRC_kwDOABII585anEmm",
      "original_commit_id" : "e36a1b4848f8f762b550a9469993211d41bd6cb9",
      "original_line" : 95,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 17,
      "pull_request_review_id" : 1928558982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520191910/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520191910",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520210992"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520210992"
         }
      },
      "author_association" : "MEMBER",
      "body" : "2b2e747455699236200fa3cddddfff7005f6a44a Could be overkill, but you could actually adjust the \"dummy response\" a few lines up to actually respond accurately, in particular the `REPLY` field could be used to report a connection failure back to bitcoind.\r\n\r\nFrom https://www.rfc-editor.org/rfc/rfc1928\r\n\r\n```diff\r\ndiff --git a/test/functional/test_framework/socks5.py b/test/functional/test_framework/socks5.py\r\nindex 48ad8bbeea..568e9fa64c 100644\r\n--- a/test/functional/test_framework/socks5.py\r\n+++ b/test/functional/test_framework/socks5.py\r\n@@ -123,7 +123,14 @@ class Socks5Connection():\r\n             port = (port_hi << 8) | port_lo\r\n \r\n             # Send dummy response\r\n-            self.conn.sendall(bytearray([0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]))\r\n+            self.conn.sendall(bytearray([\r\n+                0x05, # Protocol version\r\n+                0x00, # Reply (0x00 = success)\r\n+                0x00, # Reserved (must be 0x00)\r\n+                0x01, # Server bound address type (0x01 = ipv4)\r\n+                0x00, 0x00, 0x00, 0x00, # Server bound ipv4 address\r\n+                0x00, 0x00 # Server bound port\r\n+            ]))\r\n \r\n             cmdin = Socks5Command(cmd, atyp, addr, port, username, password)\r\n             self.serv.queue.put(cmdin)\r\n\r\n```",
      "commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "created_at" : "2024-03-11T18:13:52Z",
      "diff_hunk" : "@@ -117,6 +128,33 @@ def handle(self):\n             cmdin = Socks5Command(cmd, atyp, addr, port, username, password)\n             self.serv.queue.put(cmdin)\n             logger.debug('Proxy: %s', cmdin)\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520210992",
      "id" : 1520210992,
      "line" : 131,
      "node_id" : "PRRC_kwDOABII585anJQw",
      "original_commit_id" : "2b2e747455699236200fa3cddddfff7005f6a44a",
      "original_line" : 131,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/socks5.py",
      "position" : 29,
      "pull_request_review_id" : 1928558982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520210992/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T18:41:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520210992",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520232425"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520232425"
         }
      },
      "author_association" : "MEMBER",
      "body" : "d10a0649b018638574fa7dc316b3e783bf6cee69 just a guess, would this work?\r\n1. start the node with `-addnode=<ipv4>` x10\r\n2. wait for 10 outbounds to connect\r\n3. `addpeeraddress` with all the onion and i2p addrs\r\n4. send raw, etc...",
      "commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "created_at" : "2024-03-11T18:21:54Z",
      "diff_hunk" : "@@ -0,0 +1,311 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when private broadcast is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (tx_originator)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The private broadcast TX recipients\n+               |   |       (NUM_PRIVATE_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> Bitcoin Core (node1) (self.socks5_server.conf.destinations[i][\"node\"] is None)\n+               |   |                          ^\n+               |   |                          *----< P2PInterface (far_observer) (to check Bitcoin Core relays the tx)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< P2PDataStore (observer_inbound)\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+NUM_INITIAL_CONNECTIONS = MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS\n+NUM_PRIVATE_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520232425",
      "id" : 1520232425,
      "line" : 66,
      "node_id" : "PRRC_kwDOABII585anOfp",
      "original_commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "original_line" : 66,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "test/functional/p2p_private_broadcast.py",
      "position" : 66,
      "pull_request_review_id" : 1928558982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520232425/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T18:41:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520232425",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520245249"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520245249"
         }
      },
      "author_association" : "MEMBER",
      "body" : "d10a0649b018638574fa7dc316b3e783bf6cee69 nit: slightly confusing to prefix these with `listen_` I would expect, like:\r\n`to_addr` `to_port` `requested_to_addr`",
      "commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "created_at" : "2024-03-11T18:26:52Z",
      "diff_hunk" : "@@ -0,0 +1,311 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when private broadcast is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (tx_originator)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The private broadcast TX recipients\n+               |   |       (NUM_PRIVATE_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> Bitcoin Core (node1) (self.socks5_server.conf.destinations[i][\"node\"] is None)\n+               |   |                          ^\n+               |   |                          *----< P2PInterface (far_observer) (to check Bitcoin Core relays the tx)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< P2PDataStore (observer_inbound)\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+NUM_INITIAL_CONNECTIONS = MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS\n+NUM_PRIVATE_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for private broadcast.\n+addresses = [\n+    \"1.65.195.98\",\n+    \"2.59.236.56\",\n+    \"2.83.114.20\",\n+    \"2.248.194.16\",\n+    \"5.2.154.6\",\n+    \"5.101.140.30\",\n+    \"5.128.87.126\",\n+    \"5.144.21.49\",\n+    \"5.172.132.104\",\n+    \"5.188.62.18\",\n+    \"5.200.2.180\",\n+    \"8.129.184.255\",\n+    \"8.209.105.138\",\n+    \"12.34.98.148\",\n+    \"14.199.102.151\",\n+    \"18.27.79.17\",\n+    \"18.27.124.231\",\n+    \"18.216.249.151\",\n+    \"23.88.155.58\",\n+    \"23.93.101.158\",\n+    \"[2001:19f0:1000:1db3:5400:4ff:fe56:5a8d]\",\n+    \"[2001:19f0:5:24da:3eec:efff:feb9:f36e]\",\n+    \"[2001:19f0:5:24da::]\",\n+    \"[2001:19f0:5:4535:3eec:efff:feb9:87e4]\",\n+    \"[2001:19f0:5:4535::]\",\n+    \"[2001:1bc0:c1::2000]\",\n+    \"[2001:1c04:4008:6300:8a5f:2678:114b:a660]\",\n+    \"[2001:41d0:203:3739::]\",\n+    \"[2001:41d0:203:8f49::]\",\n+    \"[2001:41d0:203:bb0a::]\",\n+    \"[2001:41d0:2:bf8f::]\",\n+    \"[2001:41d0:303:de8b::]\",\n+    \"[2001:41d0:403:3d61::]\",\n+    \"[2001:41d0:405:9600::]\",\n+    \"[2001:41d0:8:ed7f::1]\",\n+    \"[2001:41d0:a:69a2::1]\",\n+    \"[2001:41f0::62:6974:636f:696e]\",\n+    \"[2001:470:1b62::]\",\n+    \"[2001:470:1f05:43b:2831:8530:7179:5864]\",\n+    \"[2001:470:1f09:b14::11]\",\n+    \"2bqghnldu6mcug4pikzprwhtjjnsyederctvci6klcwzepnjd46ikjyd.onion\",\n+    \"4lr3w2iyyl5u5l6tosizclykf5v3smqroqdn2i4h3kq6pfbbjb2xytad.onion\",\n+    \"5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion\",\n+    \"5sbmcl4m5api5tqafi4gcckrn3y52sz5mskxf3t6iw4bp7erwiptrgqd.onion\",\n+    \"776aegl7tfhg6oiqqy76jnwrwbvcytsx2qegcgh2mjqujll4376ohlid.onion\",\n+    \"77mdte42srl42shdh2mhtjr7nf7dmedqrw6bkcdekhdvmnld6ojyyiad.onion\",\n+    \"azbpsh4arqlm6442wfimy7qr65bmha2zhgjg7wbaji6vvaug53hur2qd.onion\",\n+    \"b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion\",\n+    \"bsqbtcparrfihlwolt4xgjbf4cgqckvrvsfyvy6vhiqrnh4w6ghixoid.onion\",\n+    \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\n+    \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\n+    \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\n+    \"devinbtctu7uctl7hly2juu3thbgeivfnvw3ckj3phy6nyvpnx66yeyd.onion\",\n+    \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\n+    \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\n+    \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\n+    \"emzybtc3ewh7zihpkdvuwlgxrhzcxy2p5fvjggp7ngjbxcytxvt4rjid.onion\",\n+    \"emzybtc454ewbviqnmgtgx3rgublsgkk23r4onbhidcv36wremue4kqd.onion\",\n+    \"emzybtc5bnpb2o6gh54oquiox54o4r7yn4a2wiiwzrjonlouaibm2zid.onion\",\n+    \"fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion\",\n+    \"255fhcp6ajvftnyo7bwz3an3t4a4brhopm3bamyh2iu5r3gnr2rq.b32.i2p\",\n+    \"27yrtht5b5bzom2w5ajb27najuqvuydtzb7bavlak25wkufec5mq.b32.i2p\",\n+    \"3gocb7wc4zvbmmebktet7gujccuux4ifk3kqilnxnj5wpdpqx2hq.b32.i2p\",\n+    \"4fcc23wt3hyjk3csfzcdyjz5pcwg5dzhdqgma6bch2qyiakcbboa.b32.i2p\",\n+    \"4osyqeknhx5qf3a73jeimexwclmt42cju6xdp7icja4ixxguu2hq.b32.i2p\",\n+    \"4umsi4nlmgyp4rckosg4vegd2ysljvid47zu7pqsollkaszcbpqq.b32.i2p\",\n+    \"6j2ezegd3e2e2x3o3pox335f5vxfthrrigkdrbgfbdjchm5h4awa.b32.i2p\",\n+    \"6n36ljyr55szci5ygidmxqer64qr24f4qmnymnbvgehz7qinxnla.b32.i2p\",\n+    \"72yjs6mvlby3ky6mgpvvlemmwq5pfcznrzd34jkhclgrishqdxva.b32.i2p\",\n+    \"a5qsnv3maw77mlmmzlcglu6twje6ttctd3fhpbfwcbpmewx6fczq.b32.i2p\",\n+    \"aovep2pco7v2k4rheofrgytbgk23eg22dczpsjqgqtxcqqvmxk6a.b32.i2p\",\n+    \"bitcoi656nll5hu6u7ddzrmzysdtwtnzcnrjd4rfdqbeey7dmn5a.b32.i2p\",\n+    \"brifkruhlkgrj65hffybrjrjqcgdgqs2r7siizb5b2232nruik3a.b32.i2p\",\n+    \"c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p\",\n+    \"day3hgxyrtwjslt54sikevbhxxs4qzo7d6vi72ipmscqtq3qmijq.b32.i2p\",\n+    \"du5kydummi23bjfp6bd7owsvrijgt7zhvxmz5h5f5spcioeoetwq.b32.i2p\",\n+    \"e55k6wu46rzp4pg5pk5npgbr3zz45bc3ihtzu2xcye5vwnzdy7pq.b32.i2p\",\n+    \"eciohu5nq7vsvwjjc52epskuk75d24iccgzmhbzrwonw6lx4gdva.b32.i2p\",\n+    \"ejlnngarmhqvune74ko7kk55xtgbz5i5ncs4vmnvjpy3l7y63xaa.b32.i2p\",\n+    \"fhzlp3xroabohnmjonu5iqazwhlbbwh5cpujvw2azcu3srqdceja.b32.i2p\",\n+    \"[fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa]\",\n+    \"[fcc7:be49:ccd1:dc91:3125:f0da:457d:8ce]\",\n+    \"[fcdc:73ae:b1a9:1bf8:d4c2:811:a4c7:c34e]\",\n+]\n+\n+class P2PPrivateBroadcast(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.disable_autoconnect = False\n+        self.num_nodes = 2\n+\n+    def setup_nodes(self):\n+        # Start a SOCKS5 proxy server.\n+        socks5_server_config = Socks5Configuration()\n+        # self.nodes[0] listens on p2p_port(0),\n+        # self.nodes[1] listens on p2p_port(1),\n+        # thus we tell the SOCKS5 server to listen on p2p_port(self.num_nodes (which is 2))\n+        socks5_server_config.addr = (\"127.0.0.1\", p2p_port(self.num_nodes))\n+        socks5_server_config.unauth = True\n+        socks5_server_config.auth = True\n+\n+        self.socks5_server = Socks5Server(socks5_server_config)\n+        self.socks5_server.start()\n+\n+        ports_base = p2p_port(MAX_NODES) + 15000\n+\n+        # Add 2 because one feeler and one extra block relay connections may\n+        # sneak in between the private broadcast connections.\n+        for i in range(NUM_INITIAL_CONNECTIONS + NUM_PRIVATE_BROADCAST_PER_TX + 2):\n+            if i == NUM_INITIAL_CONNECTIONS:\n+                # Instruct the SOCKS5 server to redirect the first private\n+                # broadcast connection from nodes[0] to nodes[1]\n+                self.socks5_server.conf.destinations.append({\n+                    \"listen_addr\": \"127.0.0.1\", # nodes[1] listen address\n+                    \"listen_port\": p2p_port(1), # nodes[1] listen port",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520245249",
      "id" : 1520245249,
      "line" : 182,
      "node_id" : "PRRC_kwDOABII585anRoB",
      "original_commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "original_line" : 182,
      "original_position" : 182,
      "original_start_line" : 181,
      "path" : "test/functional/p2p_private_broadcast.py",
      "position" : 182,
      "pull_request_review_id" : 1928558982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520245249/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 181,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-03-11T18:41:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520245249",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520261754"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520261754"
         }
      },
      "author_association" : "MEMBER",
      "body" : "d10a0649b018638574fa7dc316b3e783bf6cee69 sanity check: you can assert this because none of the private-broadcast peers are connected back to the `tx_originator`?",
      "commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "created_at" : "2024-03-11T18:40:21Z",
      "diff_hunk" : "@@ -0,0 +1,311 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when private broadcast is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (tx_originator)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The private broadcast TX recipients\n+               |   |       (NUM_PRIVATE_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> Bitcoin Core (node1) (self.socks5_server.conf.destinations[i][\"node\"] is None)\n+               |   |                          ^\n+               |   |                          *----< P2PInterface (far_observer) (to check Bitcoin Core relays the tx)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< P2PDataStore (observer_inbound)\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+NUM_INITIAL_CONNECTIONS = MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS\n+NUM_PRIVATE_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for private broadcast.\n+addresses = [\n+    \"1.65.195.98\",\n+    \"2.59.236.56\",\n+    \"2.83.114.20\",\n+    \"2.248.194.16\",\n+    \"5.2.154.6\",\n+    \"5.101.140.30\",\n+    \"5.128.87.126\",\n+    \"5.144.21.49\",\n+    \"5.172.132.104\",\n+    \"5.188.62.18\",\n+    \"5.200.2.180\",\n+    \"8.129.184.255\",\n+    \"8.209.105.138\",\n+    \"12.34.98.148\",\n+    \"14.199.102.151\",\n+    \"18.27.79.17\",\n+    \"18.27.124.231\",\n+    \"18.216.249.151\",\n+    \"23.88.155.58\",\n+    \"23.93.101.158\",\n+    \"[2001:19f0:1000:1db3:5400:4ff:fe56:5a8d]\",\n+    \"[2001:19f0:5:24da:3eec:efff:feb9:f36e]\",\n+    \"[2001:19f0:5:24da::]\",\n+    \"[2001:19f0:5:4535:3eec:efff:feb9:87e4]\",\n+    \"[2001:19f0:5:4535::]\",\n+    \"[2001:1bc0:c1::2000]\",\n+    \"[2001:1c04:4008:6300:8a5f:2678:114b:a660]\",\n+    \"[2001:41d0:203:3739::]\",\n+    \"[2001:41d0:203:8f49::]\",\n+    \"[2001:41d0:203:bb0a::]\",\n+    \"[2001:41d0:2:bf8f::]\",\n+    \"[2001:41d0:303:de8b::]\",\n+    \"[2001:41d0:403:3d61::]\",\n+    \"[2001:41d0:405:9600::]\",\n+    \"[2001:41d0:8:ed7f::1]\",\n+    \"[2001:41d0:a:69a2::1]\",\n+    \"[2001:41f0::62:6974:636f:696e]\",\n+    \"[2001:470:1b62::]\",\n+    \"[2001:470:1f05:43b:2831:8530:7179:5864]\",\n+    \"[2001:470:1f09:b14::11]\",\n+    \"2bqghnldu6mcug4pikzprwhtjjnsyederctvci6klcwzepnjd46ikjyd.onion\",\n+    \"4lr3w2iyyl5u5l6tosizclykf5v3smqroqdn2i4h3kq6pfbbjb2xytad.onion\",\n+    \"5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion\",\n+    \"5sbmcl4m5api5tqafi4gcckrn3y52sz5mskxf3t6iw4bp7erwiptrgqd.onion\",\n+    \"776aegl7tfhg6oiqqy76jnwrwbvcytsx2qegcgh2mjqujll4376ohlid.onion\",\n+    \"77mdte42srl42shdh2mhtjr7nf7dmedqrw6bkcdekhdvmnld6ojyyiad.onion\",\n+    \"azbpsh4arqlm6442wfimy7qr65bmha2zhgjg7wbaji6vvaug53hur2qd.onion\",\n+    \"b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion\",\n+    \"bsqbtcparrfihlwolt4xgjbf4cgqckvrvsfyvy6vhiqrnh4w6ghixoid.onion\",\n+    \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\n+    \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\n+    \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\n+    \"devinbtctu7uctl7hly2juu3thbgeivfnvw3ckj3phy6nyvpnx66yeyd.onion\",\n+    \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\n+    \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\n+    \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\n+    \"emzybtc3ewh7zihpkdvuwlgxrhzcxy2p5fvjggp7ngjbxcytxvt4rjid.onion\",\n+    \"emzybtc454ewbviqnmgtgx3rgublsgkk23r4onbhidcv36wremue4kqd.onion\",\n+    \"emzybtc5bnpb2o6gh54oquiox54o4r7yn4a2wiiwzrjonlouaibm2zid.onion\",\n+    \"fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion\",\n+    \"255fhcp6ajvftnyo7bwz3an3t4a4brhopm3bamyh2iu5r3gnr2rq.b32.i2p\",\n+    \"27yrtht5b5bzom2w5ajb27najuqvuydtzb7bavlak25wkufec5mq.b32.i2p\",\n+    \"3gocb7wc4zvbmmebktet7gujccuux4ifk3kqilnxnj5wpdpqx2hq.b32.i2p\",\n+    \"4fcc23wt3hyjk3csfzcdyjz5pcwg5dzhdqgma6bch2qyiakcbboa.b32.i2p\",\n+    \"4osyqeknhx5qf3a73jeimexwclmt42cju6xdp7icja4ixxguu2hq.b32.i2p\",\n+    \"4umsi4nlmgyp4rckosg4vegd2ysljvid47zu7pqsollkaszcbpqq.b32.i2p\",\n+    \"6j2ezegd3e2e2x3o3pox335f5vxfthrrigkdrbgfbdjchm5h4awa.b32.i2p\",\n+    \"6n36ljyr55szci5ygidmxqer64qr24f4qmnymnbvgehz7qinxnla.b32.i2p\",\n+    \"72yjs6mvlby3ky6mgpvvlemmwq5pfcznrzd34jkhclgrishqdxva.b32.i2p\",\n+    \"a5qsnv3maw77mlmmzlcglu6twje6ttctd3fhpbfwcbpmewx6fczq.b32.i2p\",\n+    \"aovep2pco7v2k4rheofrgytbgk23eg22dczpsjqgqtxcqqvmxk6a.b32.i2p\",\n+    \"bitcoi656nll5hu6u7ddzrmzysdtwtnzcnrjd4rfdqbeey7dmn5a.b32.i2p\",\n+    \"brifkruhlkgrj65hffybrjrjqcgdgqs2r7siizb5b2232nruik3a.b32.i2p\",\n+    \"c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p\",\n+    \"day3hgxyrtwjslt54sikevbhxxs4qzo7d6vi72ipmscqtq3qmijq.b32.i2p\",\n+    \"du5kydummi23bjfp6bd7owsvrijgt7zhvxmz5h5f5spcioeoetwq.b32.i2p\",\n+    \"e55k6wu46rzp4pg5pk5npgbr3zz45bc3ihtzu2xcye5vwnzdy7pq.b32.i2p\",\n+    \"eciohu5nq7vsvwjjc52epskuk75d24iccgzmhbzrwonw6lx4gdva.b32.i2p\",\n+    \"ejlnngarmhqvune74ko7kk55xtgbz5i5ncs4vmnvjpy3l7y63xaa.b32.i2p\",\n+    \"fhzlp3xroabohnmjonu5iqazwhlbbwh5cpujvw2azcu3srqdceja.b32.i2p\",\n+    \"[fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa]\",\n+    \"[fcc7:be49:ccd1:dc91:3125:f0da:457d:8ce]\",\n+    \"[fcdc:73ae:b1a9:1bf8:d4c2:811:a4c7:c34e]\",\n+]\n+\n+class P2PPrivateBroadcast(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.disable_autoconnect = False\n+        self.num_nodes = 2\n+\n+    def setup_nodes(self):\n+        # Start a SOCKS5 proxy server.\n+        socks5_server_config = Socks5Configuration()\n+        # self.nodes[0] listens on p2p_port(0),\n+        # self.nodes[1] listens on p2p_port(1),\n+        # thus we tell the SOCKS5 server to listen on p2p_port(self.num_nodes (which is 2))\n+        socks5_server_config.addr = (\"127.0.0.1\", p2p_port(self.num_nodes))\n+        socks5_server_config.unauth = True\n+        socks5_server_config.auth = True\n+\n+        self.socks5_server = Socks5Server(socks5_server_config)\n+        self.socks5_server.start()\n+\n+        ports_base = p2p_port(MAX_NODES) + 15000\n+\n+        # Add 2 because one feeler and one extra block relay connections may\n+        # sneak in between the private broadcast connections.\n+        for i in range(NUM_INITIAL_CONNECTIONS + NUM_PRIVATE_BROADCAST_PER_TX + 2):\n+            if i == NUM_INITIAL_CONNECTIONS:\n+                # Instruct the SOCKS5 server to redirect the first private\n+                # broadcast connection from nodes[0] to nodes[1]\n+                self.socks5_server.conf.destinations.append({\n+                    \"listen_addr\": \"127.0.0.1\", # nodes[1] listen address\n+                    \"listen_port\": p2p_port(1), # nodes[1] listen port\n+                    \"node\": None,\n+                    \"requested_to_addr\": None,\n+                })\n+            else:\n+                # Create a Python P2P listening node and add it to self.socks5_server.conf.destinations[]\n+                listener = P2PInterface()\n+                listener.peer_connect_helper(dstaddr=\"0.0.0.0\", dstport=0, net=self.chain, timeout_factor=self.options.timeout_factor)\n+                listener.peer_connect_send_version(services=P2P_SERVICES)\n+                self.network_thread.listen(\n+                    p2p=listener,\n+                    # Instruct the SOCKS5 server to redirect a connection to this Python P2P listener.\n+                    callback=lambda addr, port: self.socks5_server.conf.destinations.append({\n+                        \"listen_addr\": addr,\n+                        \"listen_port\": port,\n+                        \"node\": None,\n+                        \"requested_to_addr\": None,\n+                    }),\n+                    addr=\"127.0.0.1\",\n+                    port=ports_base + i)\n+                # Wait until the callback has been called and it has done append().\n+                self.wait_until(lambda: len(self.socks5_server.conf.destinations) == i + 1)\n+\n+                self.socks5_server.conf.destinations[i][\"node\"] = listener\n+\n+        self.extra_args = [\n+            [\n+                \"-peerbloomfilters\", # needed to test replies to MEMPOOL\n+                \"-cjdnsreachable\", # needed to be able to add CJDNS addresses to addrman (otherwise they are unroutable).\n+                \"-privatebroadcast\",\n+                f\"-proxy={socks5_server_config.addr[0]}:{socks5_server_config.addr[1]}\",\n+            ],\n+            [\n+                \"-connect=0\",\n+                f\"-bind=127.0.0.1:{p2p_port(1)}=onion\", # consider all incoming as coming from Tor\n+            ],\n+        ]\n+        super().setup_nodes()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        tx_originator = self.nodes[0]\n+\n+        observer_inbound = tx_originator.add_p2p_connection(P2PDataStore())\n+\n+        # Fill tx_originator's addrman.\n+        for addr in addresses:\n+            res = tx_originator.addpeeraddress(address=addr, port=8333, tried=False)\n+            if res[\"success\"]:\n+                self.log.debug(f\"Added {addr} to tx_originator's addrman\")\n+            else:\n+                self.log.debug(f\"Could not add {addr} to tx_originator's addrman (collision?)\")\n+\n+        self.wait_until(lambda: self.socks5_server.conf.destinations_used == NUM_INITIAL_CONNECTIONS)\n+\n+        node1 = self.nodes[1]\n+        far_observer = node1.add_p2p_connection(P2PInterface())\n+\n+        # The next opened connections should be \"private broadcast\" for sending the transaction.\n+\n+        miniwallet = MiniWallet(tx_originator)\n+        tx = miniwallet.send_self_transfer(from_node=tx_originator)\n+        self.log.info(f\"Created transaction txid={tx['txid']}\")\n+\n+        self.log.debug(f\"Inspecting outbound connection i={NUM_INITIAL_CONNECTIONS}, must be the first private broadcast connection\")\n+        self.wait_until(lambda: len(node1.getrawmempool()) > 0)\n+        far_observer.wait_for_tx(tx[\"txid\"])\n+        self.log.debug(f\"Outbound connection i={NUM_INITIAL_CONNECTIONS}: the private broadcast target received and further relayed the transaction\")\n+\n+        num_private_broadcast_opened = 1 # already 1 connection to node1, confirmed by far_observer getting the tx\n+        for i in range(NUM_INITIAL_CONNECTIONS + 1, len(self.socks5_server.conf.destinations)):\n+            self.log.debug(f\"Inspecting outbound connection i={i}\")\n+            # At this point the connection may not yet have been established (A),\n+            # may be active (B), or may have already been closed (C).\n+            peer = self.socks5_server.conf.destinations[i][\"node\"]\n+            peer.wait_until(lambda: peer.message_count[\"version\"] == 1, check_connected=False)\n+            # Now it is either (B) or (C).\n+            requested_to_addr = self.socks5_server.conf.destinations[i][\"requested_to_addr\"]\n+            if peer.last_message[\"version\"].nServices != 0:\n+                self.log.debug(f\"Outbound connection i={i} to {requested_to_addr} not a private broadcast, ignoring it (maybe feeler or extra block only)\")\n+                continue\n+            self.log.debug(f\"Outbound connection i={i} to {requested_to_addr} must be a private broadcast, checking it\")\n+            assert requested_to_addr.endswith(\".onion\")\n+            peer.wait_for_disconnect()\n+            # Now it is (C).\n+            assert_equal(peer.message_count, {\n+                \"version\": 1,\n+                \"verack\": 1,\n+                \"tx\": 1,\n+                \"ping\": 1\n+            })\n+            dummy_address = CAddress()\n+            dummy_address.nServices = 0\n+            assert_equal(peer.last_message[\"version\"].nVersion, P2P_VERSION)\n+            assert_equal(peer.last_message[\"version\"].nServices, 0)\n+            assert_equal(peer.last_message[\"version\"].nTime, 0)\n+            assert_equal(peer.last_message[\"version\"].addrTo, dummy_address)\n+            assert_equal(peer.last_message[\"version\"].addrFrom, dummy_address)\n+            assert_equal(peer.last_message[\"version\"].strSubVer, \"/pynode:0.0.1/\")\n+            assert_equal(peer.last_message[\"version\"].nStartingHeight, 0)\n+            assert_equal(peer.last_message[\"version\"].relay, 0)\n+            assert_equal(peer.last_message[\"tx\"].tx.rehash(), tx[\"txid\"])\n+            self.log.debug(f\"Outbound connection i={i} is proper private broadcast, test ok\")\n+            num_private_broadcast_opened += 1\n+            if num_private_broadcast_opened == NUM_PRIVATE_BROADCAST_PER_TX:\n+                break\n+        assert_equal(num_private_broadcast_opened, NUM_PRIVATE_BROADCAST_PER_TX)\n+\n+        wtxid_int = int(tx[\"wtxid\"], 16)\n+        inv = CInv(MSG_WTX, wtxid_int)\n+\n+        self.log.info(\"Checking that the transaction is not in the originator node's mempool\")\n+        assert len(tx_originator.getrawmempool()) == 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520261754",
      "id" : 1520261754,
      "line" : 296,
      "node_id" : "PRRC_kwDOABII585anVp6",
      "original_commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "original_line" : 296,
      "original_position" : 296,
      "original_start_line" : 295,
      "path" : "test/functional/p2p_private_broadcast.py",
      "position" : 296,
      "pull_request_review_id" : 1928558982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520261754/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 295,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-03-11T18:41:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520261754",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521442428"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521442428"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It would be possible.\r\n`-privatebroadcast=1 -listenonion=1 -torcontrol=... -torpassword=...` would do exactly that and allow the startup to proceed. However, `args.IsArgSet(\"-onlynet\")` was misplaced. It was intended to give error on things like\r\n`-privatebroadcast=1 -listenonion=1 -torcontrol=... -torpassword=... -onlynet=ipv4` but it was too strong and would mistakenly forbid\r\n`-privatebroadcast=1 -listenonion=1 -torcontrol=... -torpassword=... -onlynet=onion` as well.\r\n\r\nChanged.",
      "commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "created_at" : "2024-03-12T13:12:59Z",
      "diff_hunk" : "@@ -1900,6 +1911,23 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     connOptions.m_i2p_accept_incoming = args.GetBoolArg(\"-i2pacceptincoming\", DEFAULT_I2P_ACCEPT_INCOMING);\n \n+    if (args.GetBoolArg(\"-privatebroadcast\", DEFAULT_PRIVATE_BROADCAST)) {\n+        // If -listenonion is set, then NET_ONION may not be reachable now\n+        // but may become reachable later, thus only error here if it is not\n+        // reachable and will not become reachable for sure.\n+        if (!g_reachable_nets.Contains(NET_I2P) && !g_reachable_nets.Contains(NET_ONION) &&\n+            (!listenonion || args.IsArgSet(\"-onlynet\"))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521442428",
      "id" : 1521442428,
      "in_reply_to_id" : 1517981961,
      "line" : 1961,
      "node_id" : "PRRC_kwDOABII585ar158",
      "original_commit_id" : "72f0dbc99e6eed26bef21965dabc5f0bebf01b33",
      "original_line" : 1961,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 100,
      "pull_request_review_id" : 1931025116,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521442428/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-12T13:12:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521442428",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521449066"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521449066"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think it is ok. This function is a helper of the caller which opens the connection. The doc of the function reads: `Decide whether to open a private broadcast connection and if yes, to which network.`",
      "commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "created_at" : "2024-03-12T13:16:53Z",
      "diff_hunk" : "@@ -2413,6 +2413,63 @@ bool CConnman::MaybePickPreferredNetwork(std::optional<Network>& network)\n     return false;\n }\n \n+/**\n+ * Decide whether to open a private broadcast connection and if yes, to which network.\n+ * @param[in,out] net If the previous attempt to open a connection was an attempt to\n+ * open a private broadcast connection (successful or not), then this should have a\n+ * value. When the function ends if this has value then it will contain the network\n+ * to which to open the connection.\n+ * @param[in] num_needed Number of private broadcast connections that need to be opened.\n+ * @param[in] num_opened Number of private broadcast connections that are currently opened.\n+ */\n+static void MaybePickPrivateBroadcastNetwork(std::optional<Network>& net, size_t num_needed, size_t num_opened)\n+{\n+    if (net.has_value()) {\n+        // Yield to other connection types.\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    if (num_needed == 0) {\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    if (num_opened >= MAX_PRIVATE_BROADCAST_CONNECTIONS) {\n+        LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                      BCLog::Level::Debug,\n+                      \"Requested to open %d connection(s), but there are already %d \"\n+                      \"connections opened. Will wait for some of them to be closed \"\n+                      \"before opening a new one\\n\",\n+                      num_needed,\n+                      num_opened);\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    const bool tor_reachable{g_reachable_nets.Contains(NET_ONION)};\n+    const bool i2p_reachable{g_reachable_nets.Contains(NET_I2P)};\n+    if (tor_reachable && i2p_reachable) {\n+        net = FastRandomContext{}.randbool() ? NET_ONION : NET_I2P;\n+    } else if (tor_reachable) {\n+        net = NET_ONION;\n+    } else if (i2p_reachable) {\n+        net = NET_I2P;\n+    } else {\n+        LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                      BCLog::Level::Warning,\n+                      \"Requested to open %d connection(s) but none of the Tor or I2P networks is reachable.\\n\",\n+                      num_needed);\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                  BCLog::Level::Debug,\n+                  \"Requested to open %d connection(s), trying to open one\\n\",\n+                  num_needed);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521449066",
      "id" : 1521449066,
      "in_reply_to_id" : 1518175963,
      "line" : 2477,
      "node_id" : "PRRC_kwDOABII585ar3hq",
      "original_commit_id" : "4e19f9cc9834c0b76a2d03fea0921879de46fea9",
      "original_line" : 2477,
      "original_position" : 67,
      "original_start_line" : 2467,
      "path" : "src/net.cpp",
      "position" : 96,
      "pull_request_review_id" : 1931037458,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521449066/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 2474,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-03-12T13:16:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521449066",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521573338"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521573338"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Added `Assume()`",
      "commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "created_at" : "2024-03-12T14:29:17Z",
      "diff_hunk" : "@@ -2886,6 +2964,16 @@ void CConnman::OpenNetworkConnection(const CAddress& addrConnect, bool fCountFai\n         return;\n     pnode->grantOutbound = std::move(grant_outbound);\n \n+    if (conn_type == ConnectionType::PRIVATE_BROADCAST) {\n+        const size_t before_sub{m_private_broadcast_connections_to_open.fetch_sub(1)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521573338",
      "id" : 1521573338,
      "in_reply_to_id" : 1518178949,
      "line" : 2975,
      "node_id" : "PRRC_kwDOABII585asV3a",
      "original_commit_id" : "4e19f9cc9834c0b76a2d03fea0921879de46fea9",
      "original_line" : 2975,
      "original_position" : 170,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 277,
      "pull_request_review_id" : 1931240276,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521573338/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-12T14:29:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521573338",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521584926"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521584926"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Right, changed.",
      "commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "created_at" : "2024-03-12T14:36:08Z",
      "diff_hunk" : "@@ -2051,7 +2065,7 @@ NodeClock::time_point CWallet::GetDefaultNextResend() { return FastRandomContext\n // that depends on the `relay` option. Periodic rebroadcast uses the pattern\n // relay=true force=false, while loading into the mempool\n // (on start, or after import) uses relay=false force=true.\n-void CWallet::ResubmitWalletTransactions(bool relay, bool force)\n+void CWallet::ResubmitWalletTransactions(TxBroadcastMethod broadcast_method, bool force)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521584926",
      "id" : 1521584926,
      "in_reply_to_id" : 1518194970,
      "line" : 2068,
      "node_id" : "PRRC_kwDOABII585asYse",
      "original_commit_id" : "532e63279a3c04fef8da2c1bb95e5280c94abc4e",
      "original_line" : 2068,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 46,
      "pull_request_review_id" : 1931259359,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521584926/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-12T14:36:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521584926",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521812693"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521812693"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://www.erisian.com.au/bitcoin-core-dev/log-2024-03-12.html#l-136 switched to `SaltedTxidHasher`.",
      "commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "created_at" : "2024-03-12T16:49:32Z",
      "diff_hunk" : "@@ -1083,6 +1087,62 @@ class PeerManagerImpl final : public PeerManager\n \n     void AddAddressKnown(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\n     void PushAddress(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\n+\n+    /**\n+     * Store a list of transactions to be broadcast privately. Supports the following operations:\n+     * - Add a new transaction\n+     * - Remove a transaction, after it has been seen by the network\n+     * - Mark a broadcast of a transaction (remember when and how many times)\n+     * - Get a transaction for broadcast, the one that has been broadcast less times and least recently\n+     */\n+    class PrivateBroadcast\n+    {\n+    public:\n+        void Add(const CTransactionRef& tx) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+        {\n+            const Txid& txid = tx->GetHash();\n+            LOCK(m_mutex);\n+            auto [pos, inserted] = m_by_txid.emplace(txid, TxWithPriority{.tx = tx, .priority = Priority{}});\n+            if (inserted) {\n+                m_by_priority.emplace(Priority{}, txid);\n+            }\n+        }\n+\n+    private:\n+        struct Priority {\n+            size_t num_broadcasted{0};\n+            std::chrono::microseconds last_broadcasted{0};\n+\n+            bool operator<(const Priority& other) const\n+            {\n+                if (num_broadcasted < other.num_broadcasted) {\n+                    return true;\n+                }\n+                return last_broadcasted < other.last_broadcasted;\n+            }\n+        };\n+\n+        struct TxWithPriority {\n+            CTransactionRef tx;\n+            Priority priority;\n+        };\n+\n+        struct TxidHasher {\n+            size_t operator()(const Txid& txid) const { return SipHashUint256(0, 0, txid.ToUint256()); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521812693",
      "id" : 1521812693,
      "in_reply_to_id" : 1518225842,
      "line" : 1236,
      "node_id" : "PRRC_kwDOABII585atQTV",
      "original_commit_id" : "eb9d7386ca82319ab682fc20ab35c13340d108a4",
      "original_line" : 1236,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 195,
      "pull_request_review_id" : 1931643945,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521812693/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-12T16:49:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521812693",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521854424"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521854424"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Added `Assume()` that the entry is found.",
      "commit_id" : "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "created_at" : "2024-03-12T17:20:01Z",
      "diff_hunk" : "@@ -1108,6 +1116,71 @@ class PeerManagerImpl final : public PeerManager\n             }\n         }\n \n+        /**\n+         * Get the transaction that has been broadcast less times and least recently.\n+         */\n+        std::optional<CTransactionRef> GetTxForBroadcast() const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+        {\n+            LOCK(m_mutex);\n+            if (m_by_priority.empty()) {\n+                return std::nullopt;\n+            }\n+            const Txid& txid = m_by_priority.begin()->second;\n+            auto it = m_by_txid.find(txid);\n+            if (it == m_by_txid.end()) {\n+                return std::nullopt;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521854424",
      "id" : 1521854424,
      "in_reply_to_id" : 1518256562,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585atafY",
      "original_commit_id" : "07dee91112189be02c6694385de261570725b56b",
      "original_line" : 1150,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1931752158,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521854424/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-12T17:20:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521854424",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521863661"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521863661"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "See this: https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214671917",
      "commit_id" : "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "created_at" : "2024-03-12T17:27:09Z",
      "diff_hunk" : "@@ -1566,26 +1665,53 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    MakeAndPushMessage(pnode, NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, CNetAddr::V1(addr_you), // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CNetAddr::V1(CService{}), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay);\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsPrivateBroadcastConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521863661",
      "id" : 1521863661,
      "in_reply_to_id" : 1518263617,
      "line" : 1726,
      "node_id" : "PRRC_kwDOABII585atcvt",
      "original_commit_id" : "07dee91112189be02c6694385de261570725b56b",
      "original_line" : 1726,
      "original_position" : 172,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 268,
      "pull_request_review_id" : 1931777320,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521863661/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-12T17:27:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521863661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521865397"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521865397"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Somehow I find this more clear. Some redundancy doesn't hurt.",
      "commit_id" : "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "created_at" : "2024-03-12T17:28:08Z",
      "diff_hunk" : "@@ -3706,7 +3885,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                       (mapped_as ? strprintf(\", mapped_as=%d\", mapped_as) : \"\"));\n         }\n \n-        if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION) {\n+        if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION && !pfrom.IsPrivateBroadcastConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521865397",
      "id" : 1521865397,
      "in_reply_to_id" : 1518279844,
      "line" : 3993,
      "node_id" : "PRRC_kwDOABII585atdK1",
      "original_commit_id" : "07dee91112189be02c6694385de261570725b56b",
      "original_line" : 3993,
      "original_position" : 291,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 616,
      "pull_request_review_id" : 1931781298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521865397/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-12T17:28:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521865397",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521879812"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521879812"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "By \"probably successful private broadcast\" I meant that probably the transaction will successfully reach the network, not that we successfully gave it to one peer. Reworded.\r\n\r\n~Also the return value of `BroadcastEnd()` was not used by the callers. Changed it to `void`.~ ignore this nonsense",
      "commit_id" : "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "created_at" : "2024-03-12T17:37:14Z",
      "diff_hunk" : "@@ -4929,6 +5133,16 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     if (ping_time.count() >= 0) {\n                         // Let connman know about this successful ping-pong\n                         pfrom.PongReceived(ping_time);\n+                        if (pfrom.IsPrivateBroadcastConn()) {\n+                            m_tx_for_private_broadcast.BroadcastEnd(pfrom.GetId(), /*confirmed_by_node=*/true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521879812",
      "id" : 1521879812,
      "in_reply_to_id" : 1518282738,
      "line" : 5253,
      "node_id" : "PRRC_kwDOABII585atgsE",
      "original_commit_id" : "07dee91112189be02c6694385de261570725b56b",
      "original_line" : 5253,
      "original_position" : 339,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 699,
      "pull_request_review_id" : 1931815592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521879812/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-12T18:01:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521879812",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521896483"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521896483"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "No, in that case `Select()` will return an invalid address and we will `break;` from the inside loop. Then the outside loop will call `MaybePickPrivateBroadcastNetwork()` again.",
      "commit_id" : "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "created_at" : "2024-03-12T17:50:14Z",
      "diff_hunk" : "@@ -2657,7 +2733,9 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             CAddress addr;\n             NodeSeconds addr_last_try{0s};\n \n-            if (fFeeler) {\n+            if (open_private_broadcast_to.has_value()) {\n+                std::tie(addr, addr_last_try) = addrman.Select(/*new_only=*/false, open_private_broadcast_to.value());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521896483",
      "id" : 1521896483,
      "in_reply_to_id" : 1520139562,
      "line" : 2746,
      "node_id" : "PRRC_kwDOABII585atkwj",
      "original_commit_id" : "4e19f9cc9834c0b76a2d03fea0921879de46fea9",
      "original_line" : 2746,
      "original_position" : 160,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 267,
      "pull_request_review_id" : 1931861170,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521896483/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-12T17:50:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521896483",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521900121"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521900121"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`NUM_PRIVATE_BROADCAST_PER_TX` is just for the initial broadcast. Then if a transaction gets stale, we retry one shot at a time. There is no special reason for this. Could be either way.",
      "commit_id" : "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "created_at" : "2024-03-12T17:53:17Z",
      "diff_hunk" : "@@ -1797,10 +1820,56 @@ void PeerManagerImpl::ReattemptInitialBroadcast(CScheduler& scheduler)\n         }\n     }\n \n-    // Schedule next run for 10-15 minutes in the future.\n-    // We add randomness on every cycle to avoid the possibility of P2P fingerprinting.\n-    const std::chrono::milliseconds delta = 10min + GetRandMillis(5min);\n-    scheduler.scheduleFromNow([&] { ReattemptInitialBroadcast(scheduler); }, delta);\n+    scheduler.scheduleFromNow([&] { ReattemptInitialBroadcast(scheduler); }, NextTxBroadcast());\n+}\n+\n+void PeerManagerImpl::ReattemptPrivateBroadcast(CScheduler& scheduler)\n+{\n+    // The following heuristic is subject to races, but that is ok: if it overshoots,\n+    // we will open some private connections in vain, if it undershoots, the stale\n+    // transactions will be picked on the next run.\n+\n+    size_t num_active{0};\n+    m_connman.ForEachNode([&num_active](const CNode* node) {\n+        if (node->IsPrivateBroadcastConn()) {\n+            ++num_active;\n+        }\n+    });\n+\n+    const size_t num_to_open{m_connman.NumPrivateBroadcastToOpen()};\n+\n+    // Remove stale transactions that are no longer relevant (e.g. already in\n+    // the mempool or mined) and count the remaining ones.\n+    size_t num_stale{0};\n+    const auto stale_txs = m_tx_for_private_broadcast.GetStale();\n+    {\n+        LOCK(cs_main);\n+        for (const auto& stale_tx : stale_txs) {\n+            auto mempool_acceptable = m_chainman.ProcessTransaction(stale_tx, /*test_accept=*/true);\n+            if (mempool_acceptable.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n+                LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                              BCLog::Level::Debug,\n+                              \"Reattempting broadcast of stale txid=%s wtxid=%s\\n\",\n+                              stale_tx->GetHash().ToString(),\n+                              stale_tx->GetWitnessHash().ToString());\n+                ++num_stale;\n+            } else {\n+                LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                              BCLog::Level::Info,\n+                              \"Giving up broadcast attempts for txid=%s wtxid=%s: %s\\n\",\n+                              stale_tx->GetHash().ToString(),\n+                              stale_tx->GetWitnessHash().ToString(),\n+                              mempool_acceptable.m_state.ToString());\n+                m_tx_for_private_broadcast.Remove(stale_tx);\n+            }\n+        }\n+    }\n+\n+    if (num_stale > num_active + num_to_open) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521900121",
      "id" : 1521900121,
      "in_reply_to_id" : 1520152548,
      "line" : 1887,
      "node_id" : "PRRC_kwDOABII585atlpZ",
      "original_commit_id" : "c09d6409c957af7c449a60778689d6715d9a6628",
      "original_line" : 1887,
      "original_position" : 97,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 382,
      "pull_request_review_id" : 1931871701,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521900121/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-12T17:53:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521900121",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`d10a0649b0...5ca891f4e0`: address some suggestions",
      "created_at" : "2024-03-12T18:03:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1992254693",
      "id" : 1992254693,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5852v2Tl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1992254693/reactions"
      },
      "updated_at" : "2024-03-12T18:03:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1992254693",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-03-12T18:04:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1992257289",
      "id" : 1992257289,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5852v28J",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1992257289/reactions"
      },
      "updated_at" : "2024-03-12T18:04:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1992257289",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`5ca891f4e0...b6dce67064`: rebase due to conflicts",
      "created_at" : "2024-03-12T18:06:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1992260133",
      "id" : 1992260133,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5852v3ol",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1992260133/reactions"
      },
      "updated_at" : "2024-03-12T18:06:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1992260133",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1523138657"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523138657"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, it was before as well. Somehow the code and the comments around this say that \"the transaction is sent to the mempool for broadcast\" which is not quite accurate (in `master`). I don't think that the mempool is broadcasting the transaction. Will leave it as it is for now.",
      "commit_id" : "cc867ebd6253deb0905be9547f915ab6d04aea8a",
      "created_at" : "2024-03-13T12:27:09Z",
      "diff_hunk" : "@@ -89,11 +91,14 @@ static RPCHelpMan sendrawtransaction()\n             std::string err_string;\n             AssertLockNotHeld(cs_main);\n             NodeContext& node = EnsureAnyNodeContext(request.context);\n+            const auto method = gArgs.GetBoolArg(\"-privatebroadcast\", DEFAULT_PRIVATE_BROADCAST) ?\n+                                    NO_MEMPOOL_PRIVATE_BROADCAST :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1523138657",
      "id" : 1523138657,
      "in_reply_to_id" : 1520191910,
      "line" : 95,
      "node_id" : "PRRC_kwDOABII585ayUBh",
      "original_commit_id" : "e36a1b4848f8f762b550a9469993211d41bd6cb9",
      "original_line" : 95,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 17,
      "pull_request_review_id" : 1933992798,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523138657/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-13T12:27:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523138657",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1523162366"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523162366"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, exactly.",
      "commit_id" : "cc867ebd6253deb0905be9547f915ab6d04aea8a",
      "created_at" : "2024-03-13T12:40:40Z",
      "diff_hunk" : "@@ -0,0 +1,311 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when private broadcast is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (tx_originator)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The private broadcast TX recipients\n+               |   |       (NUM_PRIVATE_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> Bitcoin Core (node1) (self.socks5_server.conf.destinations[i][\"node\"] is None)\n+               |   |                          ^\n+               |   |                          *----< P2PInterface (far_observer) (to check Bitcoin Core relays the tx)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< P2PDataStore (observer_inbound)\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+NUM_INITIAL_CONNECTIONS = MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS\n+NUM_PRIVATE_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for private broadcast.\n+addresses = [\n+    \"1.65.195.98\",\n+    \"2.59.236.56\",\n+    \"2.83.114.20\",\n+    \"2.248.194.16\",\n+    \"5.2.154.6\",\n+    \"5.101.140.30\",\n+    \"5.128.87.126\",\n+    \"5.144.21.49\",\n+    \"5.172.132.104\",\n+    \"5.188.62.18\",\n+    \"5.200.2.180\",\n+    \"8.129.184.255\",\n+    \"8.209.105.138\",\n+    \"12.34.98.148\",\n+    \"14.199.102.151\",\n+    \"18.27.79.17\",\n+    \"18.27.124.231\",\n+    \"18.216.249.151\",\n+    \"23.88.155.58\",\n+    \"23.93.101.158\",\n+    \"[2001:19f0:1000:1db3:5400:4ff:fe56:5a8d]\",\n+    \"[2001:19f0:5:24da:3eec:efff:feb9:f36e]\",\n+    \"[2001:19f0:5:24da::]\",\n+    \"[2001:19f0:5:4535:3eec:efff:feb9:87e4]\",\n+    \"[2001:19f0:5:4535::]\",\n+    \"[2001:1bc0:c1::2000]\",\n+    \"[2001:1c04:4008:6300:8a5f:2678:114b:a660]\",\n+    \"[2001:41d0:203:3739::]\",\n+    \"[2001:41d0:203:8f49::]\",\n+    \"[2001:41d0:203:bb0a::]\",\n+    \"[2001:41d0:2:bf8f::]\",\n+    \"[2001:41d0:303:de8b::]\",\n+    \"[2001:41d0:403:3d61::]\",\n+    \"[2001:41d0:405:9600::]\",\n+    \"[2001:41d0:8:ed7f::1]\",\n+    \"[2001:41d0:a:69a2::1]\",\n+    \"[2001:41f0::62:6974:636f:696e]\",\n+    \"[2001:470:1b62::]\",\n+    \"[2001:470:1f05:43b:2831:8530:7179:5864]\",\n+    \"[2001:470:1f09:b14::11]\",\n+    \"2bqghnldu6mcug4pikzprwhtjjnsyederctvci6klcwzepnjd46ikjyd.onion\",\n+    \"4lr3w2iyyl5u5l6tosizclykf5v3smqroqdn2i4h3kq6pfbbjb2xytad.onion\",\n+    \"5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion\",\n+    \"5sbmcl4m5api5tqafi4gcckrn3y52sz5mskxf3t6iw4bp7erwiptrgqd.onion\",\n+    \"776aegl7tfhg6oiqqy76jnwrwbvcytsx2qegcgh2mjqujll4376ohlid.onion\",\n+    \"77mdte42srl42shdh2mhtjr7nf7dmedqrw6bkcdekhdvmnld6ojyyiad.onion\",\n+    \"azbpsh4arqlm6442wfimy7qr65bmha2zhgjg7wbaji6vvaug53hur2qd.onion\",\n+    \"b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion\",\n+    \"bsqbtcparrfihlwolt4xgjbf4cgqckvrvsfyvy6vhiqrnh4w6ghixoid.onion\",\n+    \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\n+    \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\n+    \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\n+    \"devinbtctu7uctl7hly2juu3thbgeivfnvw3ckj3phy6nyvpnx66yeyd.onion\",\n+    \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\n+    \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\n+    \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\n+    \"emzybtc3ewh7zihpkdvuwlgxrhzcxy2p5fvjggp7ngjbxcytxvt4rjid.onion\",\n+    \"emzybtc454ewbviqnmgtgx3rgublsgkk23r4onbhidcv36wremue4kqd.onion\",\n+    \"emzybtc5bnpb2o6gh54oquiox54o4r7yn4a2wiiwzrjonlouaibm2zid.onion\",\n+    \"fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion\",\n+    \"255fhcp6ajvftnyo7bwz3an3t4a4brhopm3bamyh2iu5r3gnr2rq.b32.i2p\",\n+    \"27yrtht5b5bzom2w5ajb27najuqvuydtzb7bavlak25wkufec5mq.b32.i2p\",\n+    \"3gocb7wc4zvbmmebktet7gujccuux4ifk3kqilnxnj5wpdpqx2hq.b32.i2p\",\n+    \"4fcc23wt3hyjk3csfzcdyjz5pcwg5dzhdqgma6bch2qyiakcbboa.b32.i2p\",\n+    \"4osyqeknhx5qf3a73jeimexwclmt42cju6xdp7icja4ixxguu2hq.b32.i2p\",\n+    \"4umsi4nlmgyp4rckosg4vegd2ysljvid47zu7pqsollkaszcbpqq.b32.i2p\",\n+    \"6j2ezegd3e2e2x3o3pox335f5vxfthrrigkdrbgfbdjchm5h4awa.b32.i2p\",\n+    \"6n36ljyr55szci5ygidmxqer64qr24f4qmnymnbvgehz7qinxnla.b32.i2p\",\n+    \"72yjs6mvlby3ky6mgpvvlemmwq5pfcznrzd34jkhclgrishqdxva.b32.i2p\",\n+    \"a5qsnv3maw77mlmmzlcglu6twje6ttctd3fhpbfwcbpmewx6fczq.b32.i2p\",\n+    \"aovep2pco7v2k4rheofrgytbgk23eg22dczpsjqgqtxcqqvmxk6a.b32.i2p\",\n+    \"bitcoi656nll5hu6u7ddzrmzysdtwtnzcnrjd4rfdqbeey7dmn5a.b32.i2p\",\n+    \"brifkruhlkgrj65hffybrjrjqcgdgqs2r7siizb5b2232nruik3a.b32.i2p\",\n+    \"c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p\",\n+    \"day3hgxyrtwjslt54sikevbhxxs4qzo7d6vi72ipmscqtq3qmijq.b32.i2p\",\n+    \"du5kydummi23bjfp6bd7owsvrijgt7zhvxmz5h5f5spcioeoetwq.b32.i2p\",\n+    \"e55k6wu46rzp4pg5pk5npgbr3zz45bc3ihtzu2xcye5vwnzdy7pq.b32.i2p\",\n+    \"eciohu5nq7vsvwjjc52epskuk75d24iccgzmhbzrwonw6lx4gdva.b32.i2p\",\n+    \"ejlnngarmhqvune74ko7kk55xtgbz5i5ncs4vmnvjpy3l7y63xaa.b32.i2p\",\n+    \"fhzlp3xroabohnmjonu5iqazwhlbbwh5cpujvw2azcu3srqdceja.b32.i2p\",\n+    \"[fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa]\",\n+    \"[fcc7:be49:ccd1:dc91:3125:f0da:457d:8ce]\",\n+    \"[fcdc:73ae:b1a9:1bf8:d4c2:811:a4c7:c34e]\",\n+]\n+\n+class P2PPrivateBroadcast(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.disable_autoconnect = False\n+        self.num_nodes = 2\n+\n+    def setup_nodes(self):\n+        # Start a SOCKS5 proxy server.\n+        socks5_server_config = Socks5Configuration()\n+        # self.nodes[0] listens on p2p_port(0),\n+        # self.nodes[1] listens on p2p_port(1),\n+        # thus we tell the SOCKS5 server to listen on p2p_port(self.num_nodes (which is 2))\n+        socks5_server_config.addr = (\"127.0.0.1\", p2p_port(self.num_nodes))\n+        socks5_server_config.unauth = True\n+        socks5_server_config.auth = True\n+\n+        self.socks5_server = Socks5Server(socks5_server_config)\n+        self.socks5_server.start()\n+\n+        ports_base = p2p_port(MAX_NODES) + 15000\n+\n+        # Add 2 because one feeler and one extra block relay connections may\n+        # sneak in between the private broadcast connections.\n+        for i in range(NUM_INITIAL_CONNECTIONS + NUM_PRIVATE_BROADCAST_PER_TX + 2):\n+            if i == NUM_INITIAL_CONNECTIONS:\n+                # Instruct the SOCKS5 server to redirect the first private\n+                # broadcast connection from nodes[0] to nodes[1]\n+                self.socks5_server.conf.destinations.append({\n+                    \"listen_addr\": \"127.0.0.1\", # nodes[1] listen address\n+                    \"listen_port\": p2p_port(1), # nodes[1] listen port\n+                    \"node\": None,\n+                    \"requested_to_addr\": None,\n+                })\n+            else:\n+                # Create a Python P2P listening node and add it to self.socks5_server.conf.destinations[]\n+                listener = P2PInterface()\n+                listener.peer_connect_helper(dstaddr=\"0.0.0.0\", dstport=0, net=self.chain, timeout_factor=self.options.timeout_factor)\n+                listener.peer_connect_send_version(services=P2P_SERVICES)\n+                self.network_thread.listen(\n+                    p2p=listener,\n+                    # Instruct the SOCKS5 server to redirect a connection to this Python P2P listener.\n+                    callback=lambda addr, port: self.socks5_server.conf.destinations.append({\n+                        \"listen_addr\": addr,\n+                        \"listen_port\": port,\n+                        \"node\": None,\n+                        \"requested_to_addr\": None,\n+                    }),\n+                    addr=\"127.0.0.1\",\n+                    port=ports_base + i)\n+                # Wait until the callback has been called and it has done append().\n+                self.wait_until(lambda: len(self.socks5_server.conf.destinations) == i + 1)\n+\n+                self.socks5_server.conf.destinations[i][\"node\"] = listener\n+\n+        self.extra_args = [\n+            [\n+                \"-peerbloomfilters\", # needed to test replies to MEMPOOL\n+                \"-cjdnsreachable\", # needed to be able to add CJDNS addresses to addrman (otherwise they are unroutable).\n+                \"-privatebroadcast\",\n+                f\"-proxy={socks5_server_config.addr[0]}:{socks5_server_config.addr[1]}\",\n+            ],\n+            [\n+                \"-connect=0\",\n+                f\"-bind=127.0.0.1:{p2p_port(1)}=onion\", # consider all incoming as coming from Tor\n+            ],\n+        ]\n+        super().setup_nodes()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        tx_originator = self.nodes[0]\n+\n+        observer_inbound = tx_originator.add_p2p_connection(P2PDataStore())\n+\n+        # Fill tx_originator's addrman.\n+        for addr in addresses:\n+            res = tx_originator.addpeeraddress(address=addr, port=8333, tried=False)\n+            if res[\"success\"]:\n+                self.log.debug(f\"Added {addr} to tx_originator's addrman\")\n+            else:\n+                self.log.debug(f\"Could not add {addr} to tx_originator's addrman (collision?)\")\n+\n+        self.wait_until(lambda: self.socks5_server.conf.destinations_used == NUM_INITIAL_CONNECTIONS)\n+\n+        node1 = self.nodes[1]\n+        far_observer = node1.add_p2p_connection(P2PInterface())\n+\n+        # The next opened connections should be \"private broadcast\" for sending the transaction.\n+\n+        miniwallet = MiniWallet(tx_originator)\n+        tx = miniwallet.send_self_transfer(from_node=tx_originator)\n+        self.log.info(f\"Created transaction txid={tx['txid']}\")\n+\n+        self.log.debug(f\"Inspecting outbound connection i={NUM_INITIAL_CONNECTIONS}, must be the first private broadcast connection\")\n+        self.wait_until(lambda: len(node1.getrawmempool()) > 0)\n+        far_observer.wait_for_tx(tx[\"txid\"])\n+        self.log.debug(f\"Outbound connection i={NUM_INITIAL_CONNECTIONS}: the private broadcast target received and further relayed the transaction\")\n+\n+        num_private_broadcast_opened = 1 # already 1 connection to node1, confirmed by far_observer getting the tx\n+        for i in range(NUM_INITIAL_CONNECTIONS + 1, len(self.socks5_server.conf.destinations)):\n+            self.log.debug(f\"Inspecting outbound connection i={i}\")\n+            # At this point the connection may not yet have been established (A),\n+            # may be active (B), or may have already been closed (C).\n+            peer = self.socks5_server.conf.destinations[i][\"node\"]\n+            peer.wait_until(lambda: peer.message_count[\"version\"] == 1, check_connected=False)\n+            # Now it is either (B) or (C).\n+            requested_to_addr = self.socks5_server.conf.destinations[i][\"requested_to_addr\"]\n+            if peer.last_message[\"version\"].nServices != 0:\n+                self.log.debug(f\"Outbound connection i={i} to {requested_to_addr} not a private broadcast, ignoring it (maybe feeler or extra block only)\")\n+                continue\n+            self.log.debug(f\"Outbound connection i={i} to {requested_to_addr} must be a private broadcast, checking it\")\n+            assert requested_to_addr.endswith(\".onion\")\n+            peer.wait_for_disconnect()\n+            # Now it is (C).\n+            assert_equal(peer.message_count, {\n+                \"version\": 1,\n+                \"verack\": 1,\n+                \"tx\": 1,\n+                \"ping\": 1\n+            })\n+            dummy_address = CAddress()\n+            dummy_address.nServices = 0\n+            assert_equal(peer.last_message[\"version\"].nVersion, P2P_VERSION)\n+            assert_equal(peer.last_message[\"version\"].nServices, 0)\n+            assert_equal(peer.last_message[\"version\"].nTime, 0)\n+            assert_equal(peer.last_message[\"version\"].addrTo, dummy_address)\n+            assert_equal(peer.last_message[\"version\"].addrFrom, dummy_address)\n+            assert_equal(peer.last_message[\"version\"].strSubVer, \"/pynode:0.0.1/\")\n+            assert_equal(peer.last_message[\"version\"].nStartingHeight, 0)\n+            assert_equal(peer.last_message[\"version\"].relay, 0)\n+            assert_equal(peer.last_message[\"tx\"].tx.rehash(), tx[\"txid\"])\n+            self.log.debug(f\"Outbound connection i={i} is proper private broadcast, test ok\")\n+            num_private_broadcast_opened += 1\n+            if num_private_broadcast_opened == NUM_PRIVATE_BROADCAST_PER_TX:\n+                break\n+        assert_equal(num_private_broadcast_opened, NUM_PRIVATE_BROADCAST_PER_TX)\n+\n+        wtxid_int = int(tx[\"wtxid\"], 16)\n+        inv = CInv(MSG_WTX, wtxid_int)\n+\n+        self.log.info(\"Checking that the transaction is not in the originator node's mempool\")\n+        assert len(tx_originator.getrawmempool()) == 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1523162366",
      "id" : 1523162366,
      "in_reply_to_id" : 1520261754,
      "line" : 296,
      "node_id" : "PRRC_kwDOABII585ayZz-",
      "original_commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "original_line" : 296,
      "original_position" : 296,
      "original_start_line" : 295,
      "path" : "test/functional/p2p_private_broadcast.py",
      "position" : 296,
      "pull_request_review_id" : 1934036115,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523162366/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 295,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-03-13T12:40:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1523162366",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`b6dce67064...cc867ebd62`: rebase due to conflicts",
      "created_at" : "2024-03-13T12:44:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1994313253",
      "id" : 1994313253,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII58523s4l",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1994313253/reactions"
      },
      "updated_at" : "2024-03-13T12:44:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1994313253",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Is this going to be on by default or just an option?\r\n\r\nHaven't had a chance to look at the code submissions yet but I do have concerns if this is on by default that many corporate networks will start blocking installation or that transactions will not be submitted as many corporate networks block Tor or I2P connections by default at the corporate firewall level.\r\n\r\nI assume it has failovers as well if it is by default?",
      "created_at" : "2024-03-15T17:56:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2000166681",
      "id" : 2000166681,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5853OB8Z",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2000166681/reactions"
      },
      "updated_at" : "2024-03-15T17:56:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2000166681",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/101424448?v=4",
         "events_url" : "https://api.github.com/users/iotamega/events{/privacy}",
         "followers_url" : "https://api.github.com/users/iotamega/followers",
         "following_url" : "https://api.github.com/users/iotamega/following{/other_user}",
         "gists_url" : "https://api.github.com/users/iotamega/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/iotamega",
         "id" : 101424448,
         "login" : "iotamega",
         "node_id" : "U_kgDOBgudQA",
         "organizations_url" : "https://api.github.com/users/iotamega/orgs",
         "received_events_url" : "https://api.github.com/users/iotamega/received_events",
         "repos_url" : "https://api.github.com/users/iotamega/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/iotamega/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/iotamega/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/iotamega"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Is this going to be on by default or just an option?\r\n\r\nThis PR only affects transactions sent with RPC `sendrawtransaction` and only if `-privatebroadcast=1` is configured, which is not default",
      "created_at" : "2024-03-15T19:09:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2000288460",
      "id" : 2000288460,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5853OfrM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 1,
         "total_count" : 3,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2000288460/reactions"
      },
      "updated_at" : "2024-03-15T19:09:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2000288460",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1528651929"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1528651929"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I will leave it as it is, looks too complicated after looking at doing this for some time.",
      "commit_id" : "4828d462094d527dc95b8666627db0e1411f02a5",
      "created_at" : "2024-03-18T14:16:14Z",
      "diff_hunk" : "@@ -117,6 +128,33 @@ def handle(self):\n             cmdin = Socks5Command(cmd, atyp, addr, port, username, password)\n             self.serv.queue.put(cmdin)\n             logger.debug('Proxy: %s', cmdin)\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1528651929",
      "id" : 1528651929,
      "in_reply_to_id" : 1520210992,
      "line" : 131,
      "node_id" : "PRRC_kwDOABII585bHWCZ",
      "original_commit_id" : "2b2e747455699236200fa3cddddfff7005f6a44a",
      "original_line" : 131,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/socks5.py",
      "position" : 29,
      "pull_request_review_id" : 1943216946,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1528651929/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T14:16:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1528651929",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1528654321"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1528654321"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "No, because `-addnode` is counted separately from the `10` automatic outbound connections.",
      "commit_id" : "4828d462094d527dc95b8666627db0e1411f02a5",
      "created_at" : "2024-03-18T14:17:49Z",
      "diff_hunk" : "@@ -0,0 +1,311 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when private broadcast is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (tx_originator)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The private broadcast TX recipients\n+               |   |       (NUM_PRIVATE_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> Bitcoin Core (node1) (self.socks5_server.conf.destinations[i][\"node\"] is None)\n+               |   |                          ^\n+               |   |                          *----< P2PInterface (far_observer) (to check Bitcoin Core relays the tx)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< P2PDataStore (observer_inbound)\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+NUM_INITIAL_CONNECTIONS = MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS\n+NUM_PRIVATE_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1528654321",
      "id" : 1528654321,
      "in_reply_to_id" : 1520232425,
      "line" : 66,
      "node_id" : "PRRC_kwDOABII585bHWnx",
      "original_commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "original_line" : 66,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "test/functional/p2p_private_broadcast.py",
      "position" : 66,
      "pull_request_review_id" : 1943220975,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1528654321/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T14:17:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1528654321",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1528677093"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1528677093"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Renamed.",
      "commit_id" : "4828d462094d527dc95b8666627db0e1411f02a5",
      "created_at" : "2024-03-18T14:29:42Z",
      "diff_hunk" : "@@ -0,0 +1,311 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when private broadcast is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (tx_originator)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The private broadcast TX recipients\n+               |   |       (NUM_PRIVATE_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> Bitcoin Core (node1) (self.socks5_server.conf.destinations[i][\"node\"] is None)\n+               |   |                          ^\n+               |   |                          *----< P2PInterface (far_observer) (to check Bitcoin Core relays the tx)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< P2PDataStore (observer_inbound)\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+NUM_INITIAL_CONNECTIONS = MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS\n+NUM_PRIVATE_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for private broadcast.\n+addresses = [\n+    \"1.65.195.98\",\n+    \"2.59.236.56\",\n+    \"2.83.114.20\",\n+    \"2.248.194.16\",\n+    \"5.2.154.6\",\n+    \"5.101.140.30\",\n+    \"5.128.87.126\",\n+    \"5.144.21.49\",\n+    \"5.172.132.104\",\n+    \"5.188.62.18\",\n+    \"5.200.2.180\",\n+    \"8.129.184.255\",\n+    \"8.209.105.138\",\n+    \"12.34.98.148\",\n+    \"14.199.102.151\",\n+    \"18.27.79.17\",\n+    \"18.27.124.231\",\n+    \"18.216.249.151\",\n+    \"23.88.155.58\",\n+    \"23.93.101.158\",\n+    \"[2001:19f0:1000:1db3:5400:4ff:fe56:5a8d]\",\n+    \"[2001:19f0:5:24da:3eec:efff:feb9:f36e]\",\n+    \"[2001:19f0:5:24da::]\",\n+    \"[2001:19f0:5:4535:3eec:efff:feb9:87e4]\",\n+    \"[2001:19f0:5:4535::]\",\n+    \"[2001:1bc0:c1::2000]\",\n+    \"[2001:1c04:4008:6300:8a5f:2678:114b:a660]\",\n+    \"[2001:41d0:203:3739::]\",\n+    \"[2001:41d0:203:8f49::]\",\n+    \"[2001:41d0:203:bb0a::]\",\n+    \"[2001:41d0:2:bf8f::]\",\n+    \"[2001:41d0:303:de8b::]\",\n+    \"[2001:41d0:403:3d61::]\",\n+    \"[2001:41d0:405:9600::]\",\n+    \"[2001:41d0:8:ed7f::1]\",\n+    \"[2001:41d0:a:69a2::1]\",\n+    \"[2001:41f0::62:6974:636f:696e]\",\n+    \"[2001:470:1b62::]\",\n+    \"[2001:470:1f05:43b:2831:8530:7179:5864]\",\n+    \"[2001:470:1f09:b14::11]\",\n+    \"2bqghnldu6mcug4pikzprwhtjjnsyederctvci6klcwzepnjd46ikjyd.onion\",\n+    \"4lr3w2iyyl5u5l6tosizclykf5v3smqroqdn2i4h3kq6pfbbjb2xytad.onion\",\n+    \"5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion\",\n+    \"5sbmcl4m5api5tqafi4gcckrn3y52sz5mskxf3t6iw4bp7erwiptrgqd.onion\",\n+    \"776aegl7tfhg6oiqqy76jnwrwbvcytsx2qegcgh2mjqujll4376ohlid.onion\",\n+    \"77mdte42srl42shdh2mhtjr7nf7dmedqrw6bkcdekhdvmnld6ojyyiad.onion\",\n+    \"azbpsh4arqlm6442wfimy7qr65bmha2zhgjg7wbaji6vvaug53hur2qd.onion\",\n+    \"b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion\",\n+    \"bsqbtcparrfihlwolt4xgjbf4cgqckvrvsfyvy6vhiqrnh4w6ghixoid.onion\",\n+    \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\n+    \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\n+    \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\n+    \"devinbtctu7uctl7hly2juu3thbgeivfnvw3ckj3phy6nyvpnx66yeyd.onion\",\n+    \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\n+    \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\n+    \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\n+    \"emzybtc3ewh7zihpkdvuwlgxrhzcxy2p5fvjggp7ngjbxcytxvt4rjid.onion\",\n+    \"emzybtc454ewbviqnmgtgx3rgublsgkk23r4onbhidcv36wremue4kqd.onion\",\n+    \"emzybtc5bnpb2o6gh54oquiox54o4r7yn4a2wiiwzrjonlouaibm2zid.onion\",\n+    \"fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion\",\n+    \"255fhcp6ajvftnyo7bwz3an3t4a4brhopm3bamyh2iu5r3gnr2rq.b32.i2p\",\n+    \"27yrtht5b5bzom2w5ajb27najuqvuydtzb7bavlak25wkufec5mq.b32.i2p\",\n+    \"3gocb7wc4zvbmmebktet7gujccuux4ifk3kqilnxnj5wpdpqx2hq.b32.i2p\",\n+    \"4fcc23wt3hyjk3csfzcdyjz5pcwg5dzhdqgma6bch2qyiakcbboa.b32.i2p\",\n+    \"4osyqeknhx5qf3a73jeimexwclmt42cju6xdp7icja4ixxguu2hq.b32.i2p\",\n+    \"4umsi4nlmgyp4rckosg4vegd2ysljvid47zu7pqsollkaszcbpqq.b32.i2p\",\n+    \"6j2ezegd3e2e2x3o3pox335f5vxfthrrigkdrbgfbdjchm5h4awa.b32.i2p\",\n+    \"6n36ljyr55szci5ygidmxqer64qr24f4qmnymnbvgehz7qinxnla.b32.i2p\",\n+    \"72yjs6mvlby3ky6mgpvvlemmwq5pfcznrzd34jkhclgrishqdxva.b32.i2p\",\n+    \"a5qsnv3maw77mlmmzlcglu6twje6ttctd3fhpbfwcbpmewx6fczq.b32.i2p\",\n+    \"aovep2pco7v2k4rheofrgytbgk23eg22dczpsjqgqtxcqqvmxk6a.b32.i2p\",\n+    \"bitcoi656nll5hu6u7ddzrmzysdtwtnzcnrjd4rfdqbeey7dmn5a.b32.i2p\",\n+    \"brifkruhlkgrj65hffybrjrjqcgdgqs2r7siizb5b2232nruik3a.b32.i2p\",\n+    \"c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p\",\n+    \"day3hgxyrtwjslt54sikevbhxxs4qzo7d6vi72ipmscqtq3qmijq.b32.i2p\",\n+    \"du5kydummi23bjfp6bd7owsvrijgt7zhvxmz5h5f5spcioeoetwq.b32.i2p\",\n+    \"e55k6wu46rzp4pg5pk5npgbr3zz45bc3ihtzu2xcye5vwnzdy7pq.b32.i2p\",\n+    \"eciohu5nq7vsvwjjc52epskuk75d24iccgzmhbzrwonw6lx4gdva.b32.i2p\",\n+    \"ejlnngarmhqvune74ko7kk55xtgbz5i5ncs4vmnvjpy3l7y63xaa.b32.i2p\",\n+    \"fhzlp3xroabohnmjonu5iqazwhlbbwh5cpujvw2azcu3srqdceja.b32.i2p\",\n+    \"[fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa]\",\n+    \"[fcc7:be49:ccd1:dc91:3125:f0da:457d:8ce]\",\n+    \"[fcdc:73ae:b1a9:1bf8:d4c2:811:a4c7:c34e]\",\n+]\n+\n+class P2PPrivateBroadcast(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.disable_autoconnect = False\n+        self.num_nodes = 2\n+\n+    def setup_nodes(self):\n+        # Start a SOCKS5 proxy server.\n+        socks5_server_config = Socks5Configuration()\n+        # self.nodes[0] listens on p2p_port(0),\n+        # self.nodes[1] listens on p2p_port(1),\n+        # thus we tell the SOCKS5 server to listen on p2p_port(self.num_nodes (which is 2))\n+        socks5_server_config.addr = (\"127.0.0.1\", p2p_port(self.num_nodes))\n+        socks5_server_config.unauth = True\n+        socks5_server_config.auth = True\n+\n+        self.socks5_server = Socks5Server(socks5_server_config)\n+        self.socks5_server.start()\n+\n+        ports_base = p2p_port(MAX_NODES) + 15000\n+\n+        # Add 2 because one feeler and one extra block relay connections may\n+        # sneak in between the private broadcast connections.\n+        for i in range(NUM_INITIAL_CONNECTIONS + NUM_PRIVATE_BROADCAST_PER_TX + 2):\n+            if i == NUM_INITIAL_CONNECTIONS:\n+                # Instruct the SOCKS5 server to redirect the first private\n+                # broadcast connection from nodes[0] to nodes[1]\n+                self.socks5_server.conf.destinations.append({\n+                    \"listen_addr\": \"127.0.0.1\", # nodes[1] listen address\n+                    \"listen_port\": p2p_port(1), # nodes[1] listen port",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1528677093",
      "id" : 1528677093,
      "in_reply_to_id" : 1520245249,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585bHcLl",
      "original_commit_id" : "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "original_line" : 182,
      "original_position" : 182,
      "original_start_line" : 181,
      "path" : "test/functional/p2p_private_broadcast.py",
      "position" : null,
      "pull_request_review_id" : 1943255900,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1528677093/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-03-18T14:29:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1528677093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`cc867ebd62...4828d46209`: rebase and address suggestions",
      "created_at" : "2024-03-18T14:33:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2004081907",
      "id" : 2004081907,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5853c9zz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2004081907/reactions"
      },
      "updated_at" : "2024-03-18T14:33:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2004081907",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1528683066"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1528683066"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, good idea. Implemented.",
      "commit_id" : "4828d462094d527dc95b8666627db0e1411f02a5",
      "created_at" : "2024-03-18T14:33:28Z",
      "diff_hunk" : "@@ -4499,6 +4515,16 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         const uint256& hash = peer->m_wtxid_relay ? wtxid : txid;\n         AddKnownTx(*peer, hash);\n \n+        if (m_tx_for_private_broadcast.Remove(ptx)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1528683066",
      "id" : 1528683066,
      "in_reply_to_id" : 1520122930,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585bHdo6",
      "original_commit_id" : "bc05ddc7b9369cf263bf88d0a773ca853d3c9af5",
      "original_line" : 4663,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1943267875,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1528683066/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T14:33:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1528683066",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1528684259"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1528684259"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I also renamed the variables to make it clear that we are comparing number of transactions with number of connections.",
      "commit_id" : "4828d462094d527dc95b8666627db0e1411f02a5",
      "created_at" : "2024-03-18T14:34:17Z",
      "diff_hunk" : "@@ -1797,10 +1820,56 @@ void PeerManagerImpl::ReattemptInitialBroadcast(CScheduler& scheduler)\n         }\n     }\n \n-    // Schedule next run for 10-15 minutes in the future.\n-    // We add randomness on every cycle to avoid the possibility of P2P fingerprinting.\n-    const std::chrono::milliseconds delta = 10min + GetRandMillis(5min);\n-    scheduler.scheduleFromNow([&] { ReattemptInitialBroadcast(scheduler); }, delta);\n+    scheduler.scheduleFromNow([&] { ReattemptInitialBroadcast(scheduler); }, NextTxBroadcast());\n+}\n+\n+void PeerManagerImpl::ReattemptPrivateBroadcast(CScheduler& scheduler)\n+{\n+    // The following heuristic is subject to races, but that is ok: if it overshoots,\n+    // we will open some private connections in vain, if it undershoots, the stale\n+    // transactions will be picked on the next run.\n+\n+    size_t num_active{0};\n+    m_connman.ForEachNode([&num_active](const CNode* node) {\n+        if (node->IsPrivateBroadcastConn()) {\n+            ++num_active;\n+        }\n+    });\n+\n+    const size_t num_to_open{m_connman.NumPrivateBroadcastToOpen()};\n+\n+    // Remove stale transactions that are no longer relevant (e.g. already in\n+    // the mempool or mined) and count the remaining ones.\n+    size_t num_stale{0};\n+    const auto stale_txs = m_tx_for_private_broadcast.GetStale();\n+    {\n+        LOCK(cs_main);\n+        for (const auto& stale_tx : stale_txs) {\n+            auto mempool_acceptable = m_chainman.ProcessTransaction(stale_tx, /*test_accept=*/true);\n+            if (mempool_acceptable.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n+                LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                              BCLog::Level::Debug,\n+                              \"Reattempting broadcast of stale txid=%s wtxid=%s\\n\",\n+                              stale_tx->GetHash().ToString(),\n+                              stale_tx->GetWitnessHash().ToString());\n+                ++num_stale;\n+            } else {\n+                LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                              BCLog::Level::Info,\n+                              \"Giving up broadcast attempts for txid=%s wtxid=%s: %s\\n\",\n+                              stale_tx->GetHash().ToString(),\n+                              stale_tx->GetWitnessHash().ToString(),\n+                              mempool_acceptable.m_state.ToString());\n+                m_tx_for_private_broadcast.Remove(stale_tx);\n+            }\n+        }\n+    }\n+\n+    if (num_stale > num_active + num_to_open) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1528684259",
      "id" : 1528684259,
      "in_reply_to_id" : 1520152548,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585bHd7j",
      "original_commit_id" : "c09d6409c957af7c449a60778689d6715d9a6628",
      "original_line" : 1901,
      "original_position" : 97,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1943270053,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1528684259/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-18T14:34:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1528684259",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nI made similar solutions for [EPS](https://github.com/chris-belcher/electrum-personal-server/pull/124) and [CoreLightning](https://github.com/andrewtoth/broadcast-over-tor), which I'm happy to see being obviated by adding this functionality to the source!\r\n\r\nCurious why this is just pushing an unsolicited `TX` message instead of using `INV`/`GETDATA`/`TX`? [This conversation](https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1186579724) seems to convince me the latter is better?\r\nAlso, if the submitted tx is spending unconfirmed outputs, should we support sending the parents to the peer if requested?\r\n",
      "created_at" : "2024-03-19T20:10:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2008043439",
      "id" : 2008043439,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5853sE-v",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2008043439/reactions"
      },
      "updated_at" : "2024-03-19T20:10:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2008043439",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Curious why this is just pushing an unsolicited TX message instead of using INV/GETDATA/TX? https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1186579724 seems to convince me the latter is better?\r\n\r\nI followed up in that conversion. For now I am keeping it as it is, but if you are happy with all the rest and would otherwise ACK, then say so! ;-)\r\n\r\n> Also, if the submitted tx is spending unconfirmed outputs, should we support sending the parents to the peer if requested?\r\n\r\nRight now in `master` `sendrawtransaction` RPC operates on a single transaction. Its parents must already be in the mempool. This PR keeps it that way. Parent+child is more for the `submitpackage` RPC. That + the wallet I will deal with in a followup PRs.",
      "created_at" : "2024-03-21T17:23:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2013120102",
      "id" : 2013120102,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5853_cZm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2013120102/reactions"
      },
      "updated_at" : "2024-03-21T17:23:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2013120102",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > Curious why this is just pushing an unsolicited TX message instead of using INV/GETDATA/TX? [#27509 (comment)](https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1186579724) seems to convince me the latter is better?\r\n> \r\n> I followed up in that conversion. For now I am keeping it as it is, but if you are happy with all the rest and would otherwise ACK, then say so! ;-)\r\n\r\nThanks. I read through the proposal to not accept unsolicited `TX` messages, and the reasoning to reject it makes sense to me. I suppose if you know you're the originator of a tx, the only reason *not* to push the tx unsolicited to all your peers is for privacy reasons. However, in this case the privacy reasons are moot because of the ephemeral private connections.\r\n\r\n> \r\n> > Also, if the submitted tx is spending unconfirmed outputs, should we support sending the parents to the peer if requested?\r\n> \r\n> Right now in `master` `sendrawtransaction` RPC operates on a single transaction. Its parents must already be in the mempool. This PR keeps it that way. Parent+child is more for the `submitpackage` RPC. That + the wallet I will deal with in a followup PRs.\r\n\r\nI mean the case where we have a parent unconfirmed tx in our mempool, and the peer we connected to does not. If we push a tx spending that unconfirmed parent, the peer will respond with a `GETDATA` for the parent tx. So we can either:\r\n1. Ignore the `GETDATA` . This will result in our tx not relaying through this connection if the peer doesn't have all unconfirmed parents.\r\n2. Wait for the `GETDATA` and respond with a `TX` message. We won't know if the peer will eventually ask for the parent, so this will be tricky and we will have to wait for some time. However, in this time if we receive an `INV` for it from another peer we can close because we know we were successful.\r\n3. Push all unconfirmed parents along with the tx we are sending. This will result in potentially wasted bandwidth.\r\n",
      "created_at" : "2024-03-22T14:43:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2015255608",
      "id" : 2015255608,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5854Hlw4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2015255608/reactions"
      },
      "updated_at" : "2024-03-22T14:52:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2015255608",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1539838051"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539838051"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "typo: sensitive (this and next line)",
      "commit_id" : "4828d462094d527dc95b8666627db0e1411f02a5",
      "created_at" : "2024-03-26T17:58:08Z",
      "diff_hunk" : "@@ -514,7 +514,10 @@ RPCConsole::RPCConsole(interfaces::Node& node, const PlatformStyle *_platformSty\n         tr(\"Outbound Feeler: short-lived, for testing addresses\"),\n         /*: Explanatory text for a short-lived outbound peer connection that is used\n             to request addresses from a peer. */\n-        tr(\"Outbound Address Fetch: short-lived, for soliciting addresses\")};\n+        tr(\"Outbound Address Fetch: short-lived, for soliciting addresses\"),\n+        /*: Explanatory text for a short-lived outbound peer connection that is used\n+            to broadcast privacy-sensitve data (like our transactions). */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1539838051",
      "id" : 1539838051,
      "line" : 519,
      "node_id" : "PRRC_kwDOABII585byBBj",
      "original_commit_id" : "9eee0e9d71b4d80dd1fe7439882d07adbd23ee42",
      "original_line" : 519,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/qt/rpcconsole.cpp",
      "position" : 7,
      "pull_request_review_id" : 1961307297,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539838051/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-26T21:47:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539838051",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1539858047"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539858047"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It seems excessive that `MAX_PRIVATE_BROADCAST_CONNECTIONS=64` has the power to reduce `nMaxConnections` to a lower value even in the case where private broadcast isn't enabled.\r\nMight be better to make that conditional on `privatebroadcast`, similar to how it's done with `nBind`.",
      "commit_id" : "4828d462094d527dc95b8666627db0e1411f02a5",
      "created_at" : "2024-03-26T18:13:16Z",
      "diff_hunk" : "@@ -1007,10 +1012,22 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n #endif\n     // Trim requested connection counts, to fit into system limitations\n     // <int> in std::min<int>(...) to work around FreeBSD compilation issue described in #2695\n-    nMaxConnections = std::max(std::min<int>(nMaxConnections, fd_max - nBind - MIN_CORE_FILEDESCRIPTORS - MAX_ADDNODE_CONNECTIONS - NUM_FDS_MESSAGE_CAPTURE), 0);\n+    nMaxConnections = std::max(std::min<int>(nMaxConnections,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1539858047",
      "id" : 1539858047,
      "line" : 1015,
      "node_id" : "PRRC_kwDOABII585byF5_",
      "original_commit_id" : "64742d7881d7646a382d97a934c05347c8bdd04d",
      "original_line" : 1015,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 46,
      "pull_request_review_id" : 1961307297,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539858047/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-26T21:47:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1539858047",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1540013020"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540013020"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Wouldn't this fit better into `node/transaction.h` , together with `BroadcastTransaction` ?",
      "commit_id" : "4828d462094d527dc95b8666627db0e1411f02a5",
      "created_at" : "2024-03-26T19:53:53Z",
      "diff_hunk" : "@@ -439,4 +439,18 @@ class GenTxid\n     friend bool operator<(const GenTxid& a, const GenTxid& b) { return std::tie(a.m_is_wtxid, a.m_hash) < std::tie(b.m_is_wtxid, b.m_hash); }\n };\n \n+/**\n+ * Methods to broadcast a local transaction.\n+ * Used to influence BroadcastTransaction() and its callers.\n+ */\n+enum TxBroadcastMethod : uint8_t {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1540013020",
      "id" : 1540013020,
      "line" : 446,
      "node_id" : "PRRC_kwDOABII585byrvc",
      "original_commit_id" : "52e6a40d2aab620e71eed23da26b43e3e3457503",
      "original_line" : 446,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/primitives/transaction.h",
      "position" : 8,
      "pull_request_review_id" : 1961307297,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540013020/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-26T21:47:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540013020",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1540139554"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540139554"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> The peer starts connecting to (clearnet) nodes and sends them a VERSION message which contains our nonce. If the peer manages to connect to us we would disconnect.\r\n\r\nI'm confused by this attack. First, if the peer connects to us over clearnet it would be an inbound connection for us - we don't disconnect inbounds, see `!pnode->IsInboundConn()` a few lines below. Second, even if we did disconnect, I still don't see the how the attack could work - it would be a new connection with a new ID and a new nonce (the nonce is created using the peer id [here](https://github.com/bitcoin/bitcoin/blob/d04324a7056a735c1127ba8ccdc720a16e7281a3/src/net.cpp#L509), so it should be different for each peer).",
      "commit_id" : "4828d462094d527dc95b8666627db0e1411f02a5",
      "created_at" : "2024-03-26T21:35:28Z",
      "diff_hunk" : "@@ -366,7 +366,16 @@ bool CConnman::CheckIncomingNonce(uint64_t nonce)\n {\n     LOCK(m_nodes_mutex);\n     for (const CNode* pnode : m_nodes) {\n-        if (!pnode->fSuccessfullyConnected && !pnode->IsInboundConn() && pnode->GetLocalNonce() == nonce)\n+        // Omit private broadcast connections from this check to prevent this privacy attack:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1540139554",
      "id" : 1540139554,
      "line" : 369,
      "node_id" : "PRRC_kwDOABII585bzKoi",
      "original_commit_id" : "5ce95d9960a3935e633fba08ddd9efe3f5b20b0d",
      "original_line" : 369,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 5,
      "pull_request_review_id" : 1961307297,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540139554/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-26T21:47:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540139554",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Oh wow just saw this! Thank you. Will review.",
      "created_at" : "2024-03-27T15:51:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2023117355",
      "id" : 2023117355,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5854llIr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2023117355/reactions"
      },
      "updated_at" : "2024-03-27T15:51:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2023117355",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/45598?v=4",
         "events_url" : "https://api.github.com/users/jb55/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jb55/followers",
         "following_url" : "https://api.github.com/users/jb55/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jb55/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jb55",
         "id" : 45598,
         "login" : "jb55",
         "node_id" : "MDQ6VXNlcjQ1NTk4",
         "organizations_url" : "https://api.github.com/users/jb55/orgs",
         "received_events_url" : "https://api.github.com/users/jb55/received_events",
         "repos_url" : "https://api.github.com/users/jb55/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jb55/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jb55/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jb55"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1542970441"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1542970441"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think so, but this drags some further changes, are you ok with those:\r\n\r\n<details>\r\n<summary>[patch] move TxBroadcastMethod from primitives/transaction.h to node/transaction.h</summary>\r\n\r\n```diff\r\ndiff --git i/src/interfaces/chain.h w/src/interfaces/chain.h\r\nindex 315211ae49..eeb5fef42b 100644\r\n--- i/src/interfaces/chain.h\r\n+++ w/src/interfaces/chain.h\r\n@@ -4,12 +4,13 @@\r\n \r\n #ifndef BITCOIN_INTERFACES_CHAIN_H\r\n #define BITCOIN_INTERFACES_CHAIN_H\r\n \r\n #include <blockfilter.h>\r\n #include <common/settings.h>\r\n+#include <node/transaction.h>\r\n #include <primitives/transaction.h> // For CTransactionRef\r\n #include <util/result.h>\r\n \r\n #include <functional>\r\n #include <memory>\r\n #include <optional>\r\n@@ -215,13 +216,13 @@ public:\r\n     //! @param[in] broadcast_method Whether to add the transaction to the\r\n     //! mempool and how/whether to broadcast it.\r\n     //! @param[out] err_string Set if an error occurs.\r\n     //! @return False if the transaction could not be added due to the fee or for another reason.\r\n     virtual bool broadcastTransaction(const CTransactionRef& tx,\r\n                                       const CAmount& max_tx_fee,\r\n-                                      TxBroadcastMethod broadcast_method,\r\n+                                      node::TxBroadcastMethod broadcast_method,\r\n                                       std::string& err_string) = 0;\r\n \r\n     //! Calculate mempool ancestor and descendant counts for the given transaction.\r\n     virtual void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants, size_t* ancestorsize = nullptr, CAmount* ancestorfees = nullptr) = 0;\r\n \r\n     //! For each outpoint, calculate the fee-bumping cost to spend this outpoint at the specified\r\ndiff --git i/src/node/transaction.h w/src/node/transaction.h\r\nindex 75c50bab28..01cdfaf1ff 100644\r\n--- i/src/node/transaction.h\r\n+++ w/src/node/transaction.h\r\n@@ -29,12 +29,26 @@ static const CFeeRate DEFAULT_MAX_RAW_TX_FEE_RATE{COIN / 10};\r\n /** Maximum burn value for sendrawtransaction, submitpackage, and testmempoolaccept RPC calls.\r\n  * By default, a transaction with a burn value higher than this will be rejected\r\n  * by these RPCs and the GUI. This can be overridden with the maxburnamount argument.\r\n  */\r\n static const CAmount DEFAULT_MAX_BURN_AMOUNT{0};\r\n \r\n+/**\r\n+ * Methods to broadcast a local transaction.\r\n+ * Used to influence BroadcastTransaction() and its callers.\r\n+ */\r\n+enum TxBroadcastMethod : uint8_t {\r\n+    /// Add the transaction to the mempool and broadcast to all currently connected peers.\r\n+    ADD_TO_MEMPOOL_AND_BROADCAST_TO_ALL,\r\n+    /// Add the transaction to the mempool, but don't broadcast to anybody.\r\n+    ADD_TO_MEMPOOL_NO_BROADCAST,\r\n+    /// Omit the mempool and directly send the transaction via a few dedicated connections to\r\n+    /// peers on privacy networks.\r\n+    NO_MEMPOOL_PRIVATE_BROADCAST,\r\n+};\r\n+\r\n /**\r\n  * Submit a transaction to the mempool and (optionally) relay it to all P2P peers.\r\n  *\r\n  * Mempool submission can be synchronous (will await mempool entry notification\r\n  * over the CValidationInterface) or asynchronous (will submit and not wait for\r\n  * notification), depending on the value of wait_callback. wait_callback MUST\r\ndiff --git i/src/primitives/transaction.h w/src/primitives/transaction.h\r\nindex 2051ebae5a..ccbeb3ec49 100644\r\n--- i/src/primitives/transaction.h\r\n+++ w/src/primitives/transaction.h\r\n@@ -436,21 +436,7 @@ public:\r\n     bool IsWtxid() const { return m_is_wtxid; }\r\n     const uint256& GetHash() const LIFETIMEBOUND { return m_hash; }\r\n     friend bool operator==(const GenTxid& a, const GenTxid& b) { return a.m_is_wtxid == b.m_is_wtxid && a.m_hash == b.m_hash; }\r\n     friend bool operator<(const GenTxid& a, const GenTxid& b) { return std::tie(a.m_is_wtxid, a.m_hash) < std::tie(b.m_is_wtxid, b.m_hash); }\r\n };\r\n \r\n-/**\r\n- * Methods to broadcast a local transaction.\r\n- * Used to influence BroadcastTransaction() and its callers.\r\n- */\r\n-enum TxBroadcastMethod : uint8_t {\r\n-    /// Add the transaction to the mempool and broadcast to all currently connected peers.\r\n-    ADD_TO_MEMPOOL_AND_BROADCAST_TO_ALL,\r\n-    /// Add the transaction to the mempool, but don't broadcast to anybody.\r\n-    ADD_TO_MEMPOOL_NO_BROADCAST,\r\n-    /// Omit the mempool and directly send the transaction via a few dedicated connections to\r\n-    /// peers on privacy networks.\r\n-    NO_MEMPOOL_PRIVATE_BROADCAST,\r\n-};\r\n-\r\n #endif // BITCOIN_PRIMITIVES_TRANSACTION_H\r\ndiff --git i/src/rpc/mempool.cpp w/src/rpc/mempool.cpp\r\nindex 14d303a0b1..ba69446f36 100644\r\n--- i/src/rpc/mempool.cpp\r\n+++ w/src/rpc/mempool.cpp\r\n@@ -8,12 +8,13 @@\r\n #include <kernel/mempool_persist.h>\r\n \r\n #include <chainparams.h>\r\n #include <core_io.h>\r\n #include <kernel/mempool_entry.h>\r\n #include <node/mempool_persist_args.h>\r\n+#include <node/transaction.h>\r\n #include <policy/rbf.h>\r\n #include <policy/settings.h>\r\n #include <primitives/transaction.h>\r\n #include <rpc/server.h>\r\n #include <rpc/server_util.h>\r\n #include <rpc/util.h>\r\n@@ -91,13 +92,13 @@ static RPCHelpMan sendrawtransaction()\r\n             AssertLockNotHeld(cs_main);\r\n             NodeContext& node = EnsureAnyNodeContext(request.context);\r\n             const TransactionError err = BroadcastTransaction(node,\r\n                                                               tx,\r\n                                                               err_string,\r\n                                                               max_raw_tx_fee,\r\n-                                                              ADD_TO_MEMPOOL_AND_BROADCAST_TO_ALL,\r\n+                                                              node::ADD_TO_MEMPOOL_AND_BROADCAST_TO_ALL,\r\n                                                               /*wait_callback=*/true);\r\n             if (TransactionError::OK != err) {\r\n                 throw JSONRPCTransactionError(err, err_string);\r\n             }\r\n \r\n             return tx->GetHash().GetHex();\r\n@@ -953,13 +954,13 @@ static RPCHelpMan submitpackage()\r\n                 // We do not expect an error here; we are only broadcasting things already/still in mempool\r\n                 std::string err_string;\r\n                 const auto err = BroadcastTransaction(node,\r\n                                                       tx,\r\n                                                       err_string,\r\n                                                       /*max_tx_fee=*/0,\r\n-                                                      ADD_TO_MEMPOOL_AND_BROADCAST_TO_ALL,\r\n+                                                      node::ADD_TO_MEMPOOL_AND_BROADCAST_TO_ALL,\r\n                                                       /*wait_callback=*/true);\r\n                 if (err != TransactionError::OK) {\r\n                     throw JSONRPCTransactionError(err,\r\n                         strprintf(\"transaction broadcast failed: %s (%d transactions were broadcast successfully)\",\r\n                             err_string, num_broadcast));\r\n                 }\r\ndiff --git i/src/wallet/rpc/backup.cpp w/src/wallet/rpc/backup.cpp\r\nindex fdbd44ffe5..2e61a0e945 100644\r\n--- i/src/wallet/rpc/backup.cpp\r\n+++ w/src/wallet/rpc/backup.cpp\r\n@@ -10,12 +10,13 @@\r\n #include <clientversion.h>\r\n #include <core_io.h>\r\n #include <hash.h>\r\n #include <interfaces/chain.h>\r\n #include <key_io.h>\r\n #include <merkleblock.h>\r\n+#include <node/transaction.h>\r\n #include <rpc/util.h>\r\n #include <script/descriptor.h>\r\n #include <script/script.h>\r\n #include <script/solver.h>\r\n #include <sync.h>\r\n #include <uint256.h>\r\n@@ -308,13 +309,13 @@ RPCHelpMan importaddress()\r\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address or script\");\r\n         }\r\n     }\r\n     if (fRescan)\r\n     {\r\n         RescanWallet(*pwallet, reserver);\r\n-        pwallet->ResubmitWalletTransactions(ADD_TO_MEMPOOL_NO_BROADCAST, /*force=*/true);\r\n+        pwallet->ResubmitWalletTransactions(node::ADD_TO_MEMPOOL_NO_BROADCAST, /*force=*/true);\r\n     }\r\n \r\n     return UniValue::VNULL;\r\n },\r\n     };\r\n }\r\n@@ -479,13 +480,13 @@ RPCHelpMan importpubkey()\r\n \r\n         pwallet->ImportPubKeys({pubKey.GetID()}, {{pubKey.GetID(), pubKey}} , /*key_origins=*/{}, /*add_keypool=*/false, /*internal=*/false, /*timestamp=*/1);\r\n     }\r\n     if (fRescan)\r\n     {\r\n         RescanWallet(*pwallet, reserver);\r\n-        pwallet->ResubmitWalletTransactions(ADD_TO_MEMPOOL_NO_BROADCAST, /*force=*/true);\r\n+        pwallet->ResubmitWalletTransactions(node::ADD_TO_MEMPOOL_NO_BROADCAST, /*force=*/true);\r\n     }\r\n \r\n     return UniValue::VNULL;\r\n },\r\n     };\r\n }\r\n@@ -1400,13 +1401,13 @@ RPCHelpMan importmulti()\r\n                 nLowestTimestamp = timestamp;\r\n             }\r\n         }\r\n     }\r\n     if (fRescan && fRunScan && requests.size()) {\r\n         int64_t scannedTime = pwallet->RescanFromTime(nLowestTimestamp, reserver, /*update=*/true);\r\n-        pwallet->ResubmitWalletTransactions(ADD_TO_MEMPOOL_NO_BROADCAST, /*force=*/true);\r\n+        pwallet->ResubmitWalletTransactions(node::ADD_TO_MEMPOOL_NO_BROADCAST, /*force=*/true);\r\n \r\n         if (pwallet->IsAbortingRescan()) {\r\n             throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted by user.\");\r\n         }\r\n         if (scannedTime > nLowestTimestamp) {\r\n             std::vector<UniValue> results = response.getValues();\r\n@@ -1694,13 +1695,13 @@ RPCHelpMan importdescriptors()\r\n         pwallet->ConnectScriptPubKeyManNotifiers();\r\n     }\r\n \r\n     // Rescan the blockchain using the lowest timestamp\r\n     if (rescan) {\r\n         int64_t scanned_time = pwallet->RescanFromTime(lowest_timestamp, reserver, /*update=*/true);\r\n-        pwallet->ResubmitWalletTransactions(ADD_TO_MEMPOOL_NO_BROADCAST, /*force=*/true);\r\n+        pwallet->ResubmitWalletTransactions(node::ADD_TO_MEMPOOL_NO_BROADCAST, /*force=*/true);\r\n \r\n         if (pwallet->IsAbortingRescan()) {\r\n             throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted by user.\");\r\n         }\r\n \r\n         if (scanned_time > lowest_timestamp) {\r\ndiff --git i/src/wallet/test/wallet_tests.cpp w/src/wallet/test/wallet_tests.cpp\r\nindex 003d1aab29..2377c71e21 100644\r\n--- i/src/wallet/test/wallet_tests.cpp\r\n+++ w/src/wallet/test/wallet_tests.cpp\r\n@@ -10,12 +10,13 @@\r\n #include <vector>\r\n \r\n #include <addresstype.h>\r\n #include <interfaces/chain.h>\r\n #include <key_io.h>\r\n #include <node/blockstorage.h>\r\n+#include <node/transaction.h>\r\n #include <policy/policy.h>\r\n #include <rpc/server.h>\r\n #include <script/solver.h>\r\n #include <test/util/logging.h>\r\n #include <test/util/random.h>\r\n #include <test/util/setup_common.h>\r\n@@ -819,13 +820,13 @@ BOOST_FIXTURE_TEST_CASE(CreateWallet, TestChain100Setup)\r\n     });\r\n     std::string error;\r\n     m_coinbase_txns.push_back(CreateAndProcessBlock({}, GetScriptForRawPubKey(coinbaseKey.GetPubKey())).vtx[0]);\r\n     auto block_tx = TestSimpleSpend(*m_coinbase_txns[0], 0, coinbaseKey, GetScriptForRawPubKey(key.GetPubKey()));\r\n     m_coinbase_txns.push_back(CreateAndProcessBlock({block_tx}, GetScriptForRawPubKey(coinbaseKey.GetPubKey())).vtx[0]);\r\n     auto mempool_tx = TestSimpleSpend(*m_coinbase_txns[1], 0, coinbaseKey, GetScriptForRawPubKey(key.GetPubKey()));\r\n-    BOOST_CHECK(m_node.chain->broadcastTransaction(MakeTransactionRef(mempool_tx), DEFAULT_TRANSACTION_MAXFEE, ADD_TO_MEMPOOL_NO_BROADCAST, error));\r\n+    BOOST_CHECK(m_node.chain->broadcastTransaction(MakeTransactionRef(mempool_tx), DEFAULT_TRANSACTION_MAXFEE, node::ADD_TO_MEMPOOL_NO_BROADCAST, error));\r\n \r\n \r\n     // Reload wallet and make sure new transactions are detected despite events\r\n     // being blocked\r\n     // Loading will also ask for current mempool transactions\r\n     wallet = TestLoadWallet(context);\r\n@@ -861,13 +862,13 @@ BOOST_FIXTURE_TEST_CASE(CreateWallet, TestChain100Setup)\r\n     auto handler = HandleLoadWallet(context, [&](std::unique_ptr<interfaces::Wallet> wallet) {\r\n             BOOST_CHECK(rescan_completed);\r\n             m_coinbase_txns.push_back(CreateAndProcessBlock({}, GetScriptForRawPubKey(coinbaseKey.GetPubKey())).vtx[0]);\r\n             block_tx = TestSimpleSpend(*m_coinbase_txns[2], 0, coinbaseKey, GetScriptForRawPubKey(key.GetPubKey()));\r\n             m_coinbase_txns.push_back(CreateAndProcessBlock({block_tx}, GetScriptForRawPubKey(coinbaseKey.GetPubKey())).vtx[0]);\r\n             mempool_tx = TestSimpleSpend(*m_coinbase_txns[3], 0, coinbaseKey, GetScriptForRawPubKey(key.GetPubKey()));\r\n-            BOOST_CHECK(m_node.chain->broadcastTransaction(MakeTransactionRef(mempool_tx), DEFAULT_TRANSACTION_MAXFEE, ADD_TO_MEMPOOL_NO_BROADCAST, error));\r\n+            BOOST_CHECK(m_node.chain->broadcastTransaction(MakeTransactionRef(mempool_tx), DEFAULT_TRANSACTION_MAXFEE, node::ADD_TO_MEMPOOL_NO_BROADCAST, error));\r\n             m_node.validation_signals->SyncWithValidationInterfaceQueue();\r\n         });\r\n     wallet = TestLoadWallet(context);\r\n     // Since mempool transactions are requested at the end of loading, there will\r\n     // be 2 additional AddToWallet calls, one from the previous test, and a duplicate for mempool_tx\r\n     BOOST_CHECK_EQUAL(addtx_count, 2 + 2);\r\ndiff --git i/src/wallet/wallet.cpp w/src/wallet/wallet.cpp\r\nindex 0904399926..2566b2d543 100644\r\n--- i/src/wallet/wallet.cpp\r\n+++ w/src/wallet/wallet.cpp\r\n@@ -24,12 +24,13 @@\r\n #include <interfaces/wallet.h>\r\n #include <kernel/chain.h>\r\n #include <kernel/mempool_removal_reason.h>\r\n #include <key.h>\r\n #include <key_io.h>\r\n #include <logging.h>\r\n+#include <node/transaction.h>\r\n #include <outputtype.h>\r\n #include <policy/feerate.h>\r\n #include <primitives/block.h>\r\n #include <primitives/transaction.h>\r\n #include <psbt.h>\r\n #include <pubkey.h>\r\n@@ -1999,13 +2000,13 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\r\n     }\r\n     return result;\r\n }\r\n \r\n bool CWallet::SubmitTxMemoryPoolAndRelay(CWalletTx& wtx,\r\n                                          std::string& err_string,\r\n-                                         TxBroadcastMethod broadcast_method) const\r\n+                                         node::TxBroadcastMethod broadcast_method) const\r\n {\r\n     AssertLockHeld(cs_wallet);\r\n \r\n     // Can't relay if wallet is not broadcasting\r\n     if (!GetBroadcastTransactions()) return false;\r\n     // Don't relay abandoned transactions\r\n@@ -2016,19 +2017,19 @@ bool CWallet::SubmitTxMemoryPoolAndRelay(CWalletTx& wtx,\r\n     // Don't try to submit conflicted or confirmed transactions.\r\n     if (GetTxDepthInMainChain(wtx) != 0) return false;\r\n \r\n     // Submit transaction to mempool for relay\r\n     const char* what{\"\"};\r\n     switch (broadcast_method) {\r\n-    case ADD_TO_MEMPOOL_AND_BROADCAST_TO_ALL:\r\n+    case node::ADD_TO_MEMPOOL_AND_BROADCAST_TO_ALL:\r\n         what = \"to mempool and for broadcast to all peers\";\r\n         break;\r\n-    case ADD_TO_MEMPOOL_NO_BROADCAST:\r\n+    case node::ADD_TO_MEMPOOL_NO_BROADCAST:\r\n         what = \"to mempool without broadcast\";\r\n         break;\r\n-    case NO_MEMPOOL_PRIVATE_BROADCAST:\r\n+    case node::NO_MEMPOOL_PRIVATE_BROADCAST:\r\n         what = \"for private broadcast without adding to the mempool\";\r\n         break;\r\n     }\r\n     WalletLogPrintf(\"Submitting wtx %s %s\\n\", wtx.GetHash().ToString(), what);\r\n     // We must set TxStateInMempool here. Even though it will also be set later by the\r\n     // entered-mempool callback, if we did not there would be a race where a\r\n@@ -2095,13 +2096,13 @@ NodeClock::time_point CWallet::GetDefaultNextResend() { return FastRandomContext\r\n // The `force` option results in all unconfirmed transactions being submitted to\r\n // the mempool. This does not necessarily result in those transactions being relayed,\r\n // that depends on the `broadcast_method` option. Periodic rebroadcast uses the pattern\r\n // broadcast_method=ADD_TO_MEMPOOL_AND_BROADCAST_TO_ALL force=false, while loading into\r\n // the mempool (on start, or after import) uses\r\n // broadcast_method=ADD_TO_MEMPOOL_NO_BROADCAST force=true.\r\n-void CWallet::ResubmitWalletTransactions(TxBroadcastMethod broadcast_method, bool force)\r\n+void CWallet::ResubmitWalletTransactions(node::TxBroadcastMethod broadcast_method, bool force)\r\n {\r\n     // Don't attempt to resubmit if the wallet is configured to not broadcast,\r\n     // even if forcing.\r\n     if (!fBroadcastTransactions) return;\r\n \r\n     int submitted_tx_count = 0;\r\n@@ -2136,13 +2137,13 @@ void CWallet::ResubmitWalletTransactions(TxBroadcastMethod broadcast_method, boo\r\n /** @} */ // end of mapWallet\r\n \r\n void MaybeResendWalletTxs(WalletContext& context)\r\n {\r\n     for (const std::shared_ptr<CWallet>& pwallet : GetWallets(context)) {\r\n         if (!pwallet->ShouldResend()) continue;\r\n-        pwallet->ResubmitWalletTransactions(ADD_TO_MEMPOOL_AND_BROADCAST_TO_ALL, /*force=*/false);\r\n+        pwallet->ResubmitWalletTransactions(node::ADD_TO_MEMPOOL_AND_BROADCAST_TO_ALL, /*force=*/false);\r\n         pwallet->SetNextResend();\r\n     }\r\n }\r\n \r\n \r\n /** @defgroup Actions\r\n@@ -2344,13 +2345,13 @@ void CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::ve\r\n     if (!fBroadcastTransactions) {\r\n         // Don't submit tx to the mempool\r\n         return;\r\n     }\r\n \r\n     std::string err_string;\r\n-    if (!SubmitTxMemoryPoolAndRelay(*wtx, err_string, ADD_TO_MEMPOOL_AND_BROADCAST_TO_ALL)) {\r\n+    if (!SubmitTxMemoryPoolAndRelay(*wtx, err_string, node::ADD_TO_MEMPOOL_AND_BROADCAST_TO_ALL)) {\r\n         WalletLogPrintf(\"CommitTransaction(): Transaction cannot be broadcast immediately, %s\\n\", err_string);\r\n         // TODO: if we expect the failure to be long term or permanent, instead delete wtx from the wallet and return failure.\r\n     }\r\n }\r\n \r\n DBErrors CWallet::LoadWallet()\r\n@@ -3389,13 +3390,13 @@ bool CWallet::UpgradeWallet(int version, bilingual_str& error)\r\n }\r\n \r\n void CWallet::postInitProcess()\r\n {\r\n     // Add wallet transactions that aren't already in a block to mempool\r\n     // Do this here as mempool requires genesis block to be loaded\r\n-    ResubmitWalletTransactions(ADD_TO_MEMPOOL_NO_BROADCAST, /*force=*/true);\r\n+    ResubmitWalletTransactions(node::ADD_TO_MEMPOOL_NO_BROADCAST, /*force=*/true);\r\n \r\n     // Update wallet transactions with current mempool transactions.\r\n     WITH_LOCK(cs_wallet, chain().requestMempoolTransactions(*this));\r\n }\r\n \r\n bool CWallet::BackupWallet(const std::string& strDest) const\r\ndiff --git i/src/wallet/wallet.h w/src/wallet/wallet.h\r\nindex 8f9881c304..ceadabf165 100644\r\n--- i/src/wallet/wallet.h\r\n+++ w/src/wallet/wallet.h\r\n@@ -9,12 +9,13 @@\r\n #include <addresstype.h>\r\n #include <consensus/amount.h>\r\n #include <interfaces/chain.h>\r\n #include <interfaces/handler.h>\r\n #include <kernel/cs_main.h>\r\n #include <logging.h>\r\n+#include <node/transaction.h>\r\n #include <outputtype.h>\r\n #include <policy/feerate.h>\r\n #include <primitives/transaction.h>\r\n #include <script/interpreter.h>\r\n #include <script/script.h>\r\n #include <support/allocators/secure.h>\r\n@@ -631,13 +632,13 @@ public:\r\n     ScanResult ScanForWalletTransactions(const uint256& start_block, int start_height, std::optional<int> max_height, const WalletRescanReserver& reserver, bool fUpdate, const bool save_progress);\r\n     void transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRemovalReason reason) override;\r\n     /** Set the next time this wallet should resend transactions to 12-36 hours from now, ~1 day on average. */\r\n     void SetNextResend() { m_next_resend = GetDefaultNextResend(); }\r\n     /** Return true if all conditions for periodically resending transactions are met. */\r\n     bool ShouldResend() const;\r\n-    void ResubmitWalletTransactions(TxBroadcastMethod broadcast_method, bool force);\r\n+    void ResubmitWalletTransactions(node::TxBroadcastMethod broadcast_method, bool force);\r\n \r\n     OutputType TransactionChangeType(const std::optional<OutputType>& change_type, const std::vector<CRecipient>& vecSend) const;\r\n \r\n     /** Fetch the inputs and sign with SIGHASH_ALL. */\r\n     bool SignTransaction(CMutableTransaction& tx) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\r\n     /** Sign the tx given the input coins and sighash. */\r\n@@ -676,13 +677,13 @@ public:\r\n      * @param[in] mapValue key-values to be set on the transaction.\r\n      * @param[in] orderForm BIP 70 / BIP 21 order form details to be set on the transaction.\r\n      */\r\n     void CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::vector<std::pair<std::string, std::string>> orderForm);\r\n \r\n     /** Pass this transaction to node for optional mempool insertion and relay to peers. */\r\n-    bool SubmitTxMemoryPoolAndRelay(CWalletTx& wtx, std::string& err_string, TxBroadcastMethod broadcast_method) const\r\n+    bool SubmitTxMemoryPoolAndRelay(CWalletTx& wtx, std::string& err_string, node::TxBroadcastMethod broadcast_method) const\r\n         EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\r\n \r\n     bool ImportScripts(const std::set<CScript> scripts, int64_t timestamp) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\r\n     bool ImportPrivKeys(const std::map<CKeyID, CKey>& privkey_map, const int64_t timestamp) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\r\n     bool ImportPubKeys(const std::vector<CKeyID>& ordered_pubkeys, const std::map<CKeyID, CPubKey>& pubkey_map, const std::map<CKeyID, std::pair<CPubKey, KeyOriginInfo>>& key_origins, const bool add_keypool, const bool internal, const int64_t timestamp) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\r\n     bool ImportScriptPubKeys(const std::string& label, const std::set<CScript>& script_pub_keys, const bool have_solving_data, const bool apply_label, const int64_t timestamp) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\r\n```\r\n\r\n</details>",
      "commit_id" : "4828d462094d527dc95b8666627db0e1411f02a5",
      "created_at" : "2024-03-28T13:22:43Z",
      "diff_hunk" : "@@ -439,4 +439,18 @@ class GenTxid\n     friend bool operator<(const GenTxid& a, const GenTxid& b) { return std::tie(a.m_is_wtxid, a.m_hash) < std::tie(b.m_is_wtxid, b.m_hash); }\n };\n \n+/**\n+ * Methods to broadcast a local transaction.\n+ * Used to influence BroadcastTransaction() and its callers.\n+ */\n+enum TxBroadcastMethod : uint8_t {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1542970441",
      "id" : 1542970441,
      "in_reply_to_id" : 1540013020,
      "line" : 446,
      "node_id" : "PRRC_kwDOABII585b99xJ",
      "original_commit_id" : "52e6a40d2aab620e71eed23da26b43e3e3457503",
      "original_line" : 446,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/primitives/transaction.h",
      "position" : 8,
      "pull_request_review_id" : 1966214627,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1542970441/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-28T13:22:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1542970441",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1543036439"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543036439"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I reread your statement and the code a few times and I think that the code is legit (or the attack the code is guarding against could happen). Let me elaborate:\r\n\r\n1. We connect for a private broadcast to `boopeer.onion` and send them `nonce=1234` in our `VERSION` message. For this an entry is added to `CConnman::m_nodes` that has `IsInboundConn() == false`.\r\n2. The `boo` guy delays their `VERACK` on the private connection and connects to random nodes on clearnet. Assuming we also listen on clearnet address, they are lucky enough and manage to connect to us. They send us `VERSION` with `nonce=1234`. For this connection `IsInboundConn() == true` on our side and this code is executed:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/c8e3978114716bb8fb10695b9d187652f3ab4926/src/net_processing.cpp#L3532-L3537\r\n\r\npassing `nonce=1234` to `CheckIncomingNonce()` which finds the entry in `m_nodes` from 1. and returns `false`. Then the clearnet connection from 2. is closed by us.\r\n\r\nMakes sense?",
      "commit_id" : "4828d462094d527dc95b8666627db0e1411f02a5",
      "created_at" : "2024-03-28T14:01:39Z",
      "diff_hunk" : "@@ -366,7 +366,16 @@ bool CConnman::CheckIncomingNonce(uint64_t nonce)\n {\n     LOCK(m_nodes_mutex);\n     for (const CNode* pnode : m_nodes) {\n-        if (!pnode->fSuccessfullyConnected && !pnode->IsInboundConn() && pnode->GetLocalNonce() == nonce)\n+        // Omit private broadcast connections from this check to prevent this privacy attack:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1543036439",
      "id" : 1543036439,
      "in_reply_to_id" : 1540139554,
      "line" : 369,
      "node_id" : "PRRC_kwDOABII585b-N4X",
      "original_commit_id" : "5ce95d9960a3935e633fba08ddd9efe3f5b20b0d",
      "original_line" : 369,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 5,
      "pull_request_review_id" : 1966317652,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543036439/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-28T14:01:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543036439",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1543171484"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543171484"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, after looking at that diff I'm not so sure . It's probably a layer violation include `node/` files from the wallet.\r\nOn the other hand, having this enum in `primitive/transaction.h` still doesn't feel right, given that this isn't really a primitive property of a transaction like `COutPoint`. Maybe put it into another (new) file in `kernel/`, and handle it similar to `enum class ChainstateRole` and `enum class MemPoolRemovalReason` could be the best way?",
      "commit_id" : "4828d462094d527dc95b8666627db0e1411f02a5",
      "created_at" : "2024-03-28T15:27:04Z",
      "diff_hunk" : "@@ -439,4 +439,18 @@ class GenTxid\n     friend bool operator<(const GenTxid& a, const GenTxid& b) { return std::tie(a.m_is_wtxid, a.m_hash) < std::tie(b.m_is_wtxid, b.m_hash); }\n };\n \n+/**\n+ * Methods to broadcast a local transaction.\n+ * Used to influence BroadcastTransaction() and its callers.\n+ */\n+enum TxBroadcastMethod : uint8_t {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1543171484",
      "id" : 1543171484,
      "in_reply_to_id" : 1540013020,
      "line" : 446,
      "node_id" : "PRRC_kwDOABII585b-u2c",
      "original_commit_id" : "52e6a40d2aab620e71eed23da26b43e3e3457503",
      "original_line" : 446,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/primitives/transaction.h",
      "position" : 8,
      "pull_request_review_id" : 1966540871,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543171484/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-28T15:27:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543171484",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1543176910"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543176910"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, now it makes sense, thanks! I'm not sure where I got confused, I probably misread the existing code.",
      "commit_id" : "4828d462094d527dc95b8666627db0e1411f02a5",
      "created_at" : "2024-03-28T15:30:30Z",
      "diff_hunk" : "@@ -366,7 +366,16 @@ bool CConnman::CheckIncomingNonce(uint64_t nonce)\n {\n     LOCK(m_nodes_mutex);\n     for (const CNode* pnode : m_nodes) {\n-        if (!pnode->fSuccessfullyConnected && !pnode->IsInboundConn() && pnode->GetLocalNonce() == nonce)\n+        // Omit private broadcast connections from this check to prevent this privacy attack:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1543176910",
      "id" : 1543176910,
      "in_reply_to_id" : 1540139554,
      "line" : 369,
      "node_id" : "PRRC_kwDOABII585b-wLO",
      "original_commit_id" : "5ce95d9960a3935e633fba08ddd9efe3f5b20b0d",
      "original_line" : 369,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 5,
      "pull_request_review_id" : 1966549210,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543176910/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-28T15:30:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543176910",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1543237929"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543237929"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed, will be in next push.",
      "commit_id" : "4828d462094d527dc95b8666627db0e1411f02a5",
      "created_at" : "2024-03-28T16:08:37Z",
      "diff_hunk" : "@@ -514,7 +514,10 @@ RPCConsole::RPCConsole(interfaces::Node& node, const PlatformStyle *_platformSty\n         tr(\"Outbound Feeler: short-lived, for testing addresses\"),\n         /*: Explanatory text for a short-lived outbound peer connection that is used\n             to request addresses from a peer. */\n-        tr(\"Outbound Address Fetch: short-lived, for soliciting addresses\")};\n+        tr(\"Outbound Address Fetch: short-lived, for soliciting addresses\"),\n+        /*: Explanatory text for a short-lived outbound peer connection that is used\n+            to broadcast privacy-sensitve data (like our transactions). */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1543237929",
      "id" : 1543237929,
      "in_reply_to_id" : 1539838051,
      "line" : 519,
      "node_id" : "PRRC_kwDOABII585b-_Ep",
      "original_commit_id" : "9eee0e9d71b4d80dd1fe7439882d07adbd23ee42",
      "original_line" : 519,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/qt/rpcconsole.cpp",
      "position" : 7,
      "pull_request_review_id" : 1966647339,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543237929/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-28T16:08:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543237929",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1543240449"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543240449"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done, will be in next push. Good observation!\r\n\r\nThis raised the unrelated-to-this-PR question https://www.erisian.com.au/bitcoin-core-dev/log-2024-03-28.html#l-59",
      "commit_id" : "4828d462094d527dc95b8666627db0e1411f02a5",
      "created_at" : "2024-03-28T16:10:34Z",
      "diff_hunk" : "@@ -1007,10 +1012,22 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n #endif\n     // Trim requested connection counts, to fit into system limitations\n     // <int> in std::min<int>(...) to work around FreeBSD compilation issue described in #2695\n-    nMaxConnections = std::max(std::min<int>(nMaxConnections, fd_max - nBind - MIN_CORE_FILEDESCRIPTORS - MAX_ADDNODE_CONNECTIONS - NUM_FDS_MESSAGE_CAPTURE), 0);\n+    nMaxConnections = std::max(std::min<int>(nMaxConnections,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1543240449",
      "id" : 1543240449,
      "in_reply_to_id" : 1539858047,
      "line" : 1015,
      "node_id" : "PRRC_kwDOABII585b-_sB",
      "original_commit_id" : "64742d7881d7646a382d97a934c05347c8bdd04d",
      "original_line" : 1015,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 46,
      "pull_request_review_id" : 1966651380,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543240449/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-28T16:10:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543240449",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1543265026"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543265026"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe it is ok to include `node/` from the wallet:\r\n\r\n```\r\n$ git grep node/ origin/master -- \"*wallet*\"\r\norigin/master:src/bench/wallet_balance.cpp:7:#include <node/chainstate.h>\r\norigin/master:src/bench/wallet_balance.cpp:8:#include <node/context.h>\r\norigin/master:src/bench/wallet_create.cpp:10:#include <node/context.h>\r\norigin/master:src/bench/wallet_create_tx.cpp:10:#include <node/context.h>\r\norigin/master:src/bench/wallet_ismine.cpp:12:#include <node/context.h>\r\norigin/master:src/bench/wallet_loading.cpp:11:#include <node/context.h>\r\norigin/master:src/qt/walletframe.cpp:7:#include <node/interface_ui.h>\r\norigin/master:src/qt/walletmodel.cpp:21:#include <node/interface_ui.h>\r\norigin/master:src/qt/walletview.cpp:22:#include <node/interface_ui.h>\r\norigin/master:src/wallet/init.cpp:16:#include <node/context.h>\r\norigin/master:src/wallet/init.cpp:17:#include <node/interface_ui.h>\r\norigin/master:src/wallet/test/coinselector_tests.cpp:6:#include <node/context.h>\r\norigin/master:src/wallet/test/init_test_fixture.h:10:#include <node/context.h>\r\norigin/master:src/wallet/test/ismine_tests.cpp:7:#include <node/context.h>\r\norigin/master:src/wallet/test/wallet_test_fixture.h:12:#include <node/context.h>\r\norigin/master:src/wallet/test/wallet_tests.cpp:15:#include <node/blockstorage.h>\r\norigin/master:test/functional/test_framework/wallet.py:141:            # Sort tx by ancestor count. See BlockAssembler::SortForBlock in src/node/miner.cpp\r\n```",
      "commit_id" : "4828d462094d527dc95b8666627db0e1411f02a5",
      "created_at" : "2024-03-28T16:24:37Z",
      "diff_hunk" : "@@ -439,4 +439,18 @@ class GenTxid\n     friend bool operator<(const GenTxid& a, const GenTxid& b) { return std::tie(a.m_is_wtxid, a.m_hash) < std::tie(b.m_is_wtxid, b.m_hash); }\n };\n \n+/**\n+ * Methods to broadcast a local transaction.\n+ * Used to influence BroadcastTransaction() and its callers.\n+ */\n+enum TxBroadcastMethod : uint8_t {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1543265026",
      "id" : 1543265026,
      "in_reply_to_id" : 1540013020,
      "line" : 446,
      "node_id" : "PRRC_kwDOABII585b_FsC",
      "original_commit_id" : "52e6a40d2aab620e71eed23da26b43e3e3457503",
      "original_line" : 446,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/primitives/transaction.h",
      "position" : 8,
      "pull_request_review_id" : 1966686141,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543265026/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-28T16:24:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543265026",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1543307618"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543307618"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@TheCharlatan you probably dealt a lot with these kind of questions for kernel, do you have an opinion where this enum should be?",
      "commit_id" : "4828d462094d527dc95b8666627db0e1411f02a5",
      "created_at" : "2024-03-28T16:53:30Z",
      "diff_hunk" : "@@ -439,4 +439,18 @@ class GenTxid\n     friend bool operator<(const GenTxid& a, const GenTxid& b) { return std::tie(a.m_is_wtxid, a.m_hash) < std::tie(b.m_is_wtxid, b.m_hash); }\n };\n \n+/**\n+ * Methods to broadcast a local transaction.\n+ * Used to influence BroadcastTransaction() and its callers.\n+ */\n+enum TxBroadcastMethod : uint8_t {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1543307618",
      "id" : 1543307618,
      "in_reply_to_id" : 1540013020,
      "line" : 446,
      "node_id" : "PRRC_kwDOABII585b_QFi",
      "original_commit_id" : "52e6a40d2aab620e71eed23da26b43e3e3457503",
      "original_line" : 446,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/primitives/transaction.h",
      "position" : 8,
      "pull_request_review_id" : 1966753698,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543307618/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-28T16:53:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543307618",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1543379055"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543379055"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1543307618\r\n\r\nI'd suggest moving `TxBroadcastMethod` enum to [`node/types.h`](https://github.com/ryanofsky/bitcoin/blob/pr/rmutil/src/node/types.h), which doesn't exist yet but is introduced in #29015, and could be added here as well.\r\n\r\n> It's probably a layer violation include node/ files from the wallet.\r\n\r\nWe don't want wallet code to call node functions or use internal node types, but node and wallet code do define a handful of \"public\" types (CNodeStats, CNodeStateStats, and SynchronizationState, AddressPurpose, isminetype, CRecipient, and CCoinControl) I mentioned recently in https://github.com/bitcoin/bitcoin/pull/29015#discussion_r1425731507 that are useful even without depending on node or wallet libraries, and I think it makes sense to put the lightweight types in [`node/types.h`](https://github.com/ryanofsky/bitcoin/blob/pr/rmutil/src/node/types.h), [`wallet/types.h`](https://github.com/ryanofsky/bitcoin/blob/pr/rmutil/src/wallet/types.h), [`common/types.h`](https://github.com/ryanofsky/bitcoin/blob/pr/rmutil/src/common/types.h) files so they can be explained and used without dragging in other things. Other options I mentioned in that comment:\r\n\r\n> We do have a choice where about where to put public types which are not really part of any library. We can put them in the interfaces directory, or in common, or in the node and wallet directories. Personally, I think it makes sense to put them in the wallet directory when they are related to wallet functionality and used by wallet code, put them in the node directory when they are related to node functionality and used by node code, put them in the common directory when they are related to common functionality (like PSBT) and used by common code. The comments at the top of {node,wallet,common}/types.h files are meant to explain the idea that these are public types.",
      "commit_id" : "4828d462094d527dc95b8666627db0e1411f02a5",
      "created_at" : "2024-03-28T17:39:28Z",
      "diff_hunk" : "@@ -439,4 +439,18 @@ class GenTxid\n     friend bool operator<(const GenTxid& a, const GenTxid& b) { return std::tie(a.m_is_wtxid, a.m_hash) < std::tie(b.m_is_wtxid, b.m_hash); }\n };\n \n+/**\n+ * Methods to broadcast a local transaction.\n+ * Used to influence BroadcastTransaction() and its callers.\n+ */\n+enum TxBroadcastMethod : uint8_t {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1543379055",
      "id" : 1543379055,
      "in_reply_to_id" : 1540013020,
      "line" : 446,
      "node_id" : "PRRC_kwDOABII585b_hhv",
      "original_commit_id" : "52e6a40d2aab620e71eed23da26b43e3e3457503",
      "original_line" : 446,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/primitives/transaction.h",
      "position" : 8,
      "pull_request_review_id" : 1966863599,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543379055/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-28T17:39:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1543379055",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Concept ACK\r\n\r\nThis is consistent with i2p guidelines on resource usage.\r\nGood work!",
      "created_at" : "2024-03-28T19:08:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2025920443",
      "id" : 2025920443,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5854wRe7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2025920443/reactions"
      },
      "updated_at" : "2024-03-28T19:08:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2025920443",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/62618568?v=4",
         "events_url" : "https://api.github.com/users/zzzi2p/events{/privacy}",
         "followers_url" : "https://api.github.com/users/zzzi2p/followers",
         "following_url" : "https://api.github.com/users/zzzi2p/following{/other_user}",
         "gists_url" : "https://api.github.com/users/zzzi2p/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/zzzi2p",
         "id" : 62618568,
         "login" : "zzzi2p",
         "node_id" : "MDQ6VXNlcjYyNjE4NTY4",
         "organizations_url" : "https://api.github.com/users/zzzi2p/orgs",
         "received_events_url" : "https://api.github.com/users/zzzi2p/received_events",
         "repos_url" : "https://api.github.com/users/zzzi2p/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/zzzi2p/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/zzzi2p/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/zzzi2p"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1544337066"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1544337066"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Moved to `node/types.h` (new file). Could put it elsewhere if there are better suggestions. Thanks for the suggestion!\r\n\r\nEdit: btw, the doxygen comment should have `\\file` on its own line. See https://www.doxygen.nl/manual/commands.html#cmdfile and run `doxygen doc/Doxyfile` and then inspect `doc/doxygen/html/node_2types_8h.html`.",
      "commit_id" : "09ad469cc10081594ac1e312043a0e47901ba547",
      "created_at" : "2024-03-29T10:27:49Z",
      "diff_hunk" : "@@ -439,4 +439,18 @@ class GenTxid\n     friend bool operator<(const GenTxid& a, const GenTxid& b) { return std::tie(a.m_is_wtxid, a.m_hash) < std::tie(b.m_is_wtxid, b.m_hash); }\n };\n \n+/**\n+ * Methods to broadcast a local transaction.\n+ * Used to influence BroadcastTransaction() and its callers.\n+ */\n+enum TxBroadcastMethod : uint8_t {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1544337066",
      "id" : 1544337066,
      "in_reply_to_id" : 1540013020,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585cDLaq",
      "original_commit_id" : "52e6a40d2aab620e71eed23da26b43e3e3457503",
      "original_line" : 446,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/primitives/transaction.h",
      "position" : null,
      "pull_request_review_id" : 1968266790,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1544337066/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-29T10:30:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1544337066",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`4828d46209...09ad469cc1`: rebase and address suggestions",
      "created_at" : "2024-03-29T10:48:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2027063667",
      "id" : 2027063667,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII58540olz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2027063667/reactions"
      },
      "updated_at" : "2024-03-29T10:48:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2027063667",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I mean the case where we have a parent unconfirmed tx in our mempool, and the peer we connected to does not. If we push a tx spending that unconfirmed parent, the peer will respond with a `GETDATA` for the parent tx...\r\n\r\nI will keep it simple stupid for now, meaning that in this case that particular peer will not relay the transaction further. Others should succeed. If \"nobody\" has the parent in their mempool, then somehow we are trying to broadcast an orphaned transaction with parent(s) not seen by the network. Can say that this is not supported at this point and will best be supported by a future `submitpackage` which does private broadcast.",
      "created_at" : "2024-03-29T11:02:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2027080005",
      "id" : 2027080005,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII58540slF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 3,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2027080005/reactions"
      },
      "updated_at" : "2024-03-29T11:02:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2027080005",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--85328a0da195eb286784d51f73fa0af9-->\n\nð§ At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/23235305634</sub>",
      "created_at" : "2024-03-29T11:41:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2027122878",
      "id" : 2027122878,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII585403C-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2027122878/reactions"
      },
      "updated_at" : "2024-03-29T11:41:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2027122878",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1544759045"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1544759045"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit:\r\n```suggestion\r\n        assert_equal(len(tx_originator.getrawmempool()), 0)\r\n```",
      "commit_id" : "c7e4d5cb2bf01d9719702e71c8d6264ee670e988",
      "created_at" : "2024-03-29T18:35:12Z",
      "diff_hunk" : "@@ -0,0 +1,311 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when private broadcast is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (tx_originator)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The private broadcast TX recipients\n+               |   |       (NUM_PRIVATE_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> Bitcoin Core (node1) (self.socks5_server.conf.destinations[i][\"node\"] is None)\n+               |   |                          ^\n+               |   |                          *----< P2PInterface (far_observer) (to check Bitcoin Core relays the tx)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< P2PDataStore (observer_inbound)\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+NUM_INITIAL_CONNECTIONS = MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS\n+NUM_PRIVATE_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for private broadcast.\n+addresses = [\n+    \"1.65.195.98\",\n+    \"2.59.236.56\",\n+    \"2.83.114.20\",\n+    \"2.248.194.16\",\n+    \"5.2.154.6\",\n+    \"5.101.140.30\",\n+    \"5.128.87.126\",\n+    \"5.144.21.49\",\n+    \"5.172.132.104\",\n+    \"5.188.62.18\",\n+    \"5.200.2.180\",\n+    \"8.129.184.255\",\n+    \"8.209.105.138\",\n+    \"12.34.98.148\",\n+    \"14.199.102.151\",\n+    \"18.27.79.17\",\n+    \"18.27.124.231\",\n+    \"18.216.249.151\",\n+    \"23.88.155.58\",\n+    \"23.93.101.158\",\n+    \"[2001:19f0:1000:1db3:5400:4ff:fe56:5a8d]\",\n+    \"[2001:19f0:5:24da:3eec:efff:feb9:f36e]\",\n+    \"[2001:19f0:5:24da::]\",\n+    \"[2001:19f0:5:4535:3eec:efff:feb9:87e4]\",\n+    \"[2001:19f0:5:4535::]\",\n+    \"[2001:1bc0:c1::2000]\",\n+    \"[2001:1c04:4008:6300:8a5f:2678:114b:a660]\",\n+    \"[2001:41d0:203:3739::]\",\n+    \"[2001:41d0:203:8f49::]\",\n+    \"[2001:41d0:203:bb0a::]\",\n+    \"[2001:41d0:2:bf8f::]\",\n+    \"[2001:41d0:303:de8b::]\",\n+    \"[2001:41d0:403:3d61::]\",\n+    \"[2001:41d0:405:9600::]\",\n+    \"[2001:41d0:8:ed7f::1]\",\n+    \"[2001:41d0:a:69a2::1]\",\n+    \"[2001:41f0::62:6974:636f:696e]\",\n+    \"[2001:470:1b62::]\",\n+    \"[2001:470:1f05:43b:2831:8530:7179:5864]\",\n+    \"[2001:470:1f09:b14::11]\",\n+    \"2bqghnldu6mcug4pikzprwhtjjnsyederctvci6klcwzepnjd46ikjyd.onion\",\n+    \"4lr3w2iyyl5u5l6tosizclykf5v3smqroqdn2i4h3kq6pfbbjb2xytad.onion\",\n+    \"5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion\",\n+    \"5sbmcl4m5api5tqafi4gcckrn3y52sz5mskxf3t6iw4bp7erwiptrgqd.onion\",\n+    \"776aegl7tfhg6oiqqy76jnwrwbvcytsx2qegcgh2mjqujll4376ohlid.onion\",\n+    \"77mdte42srl42shdh2mhtjr7nf7dmedqrw6bkcdekhdvmnld6ojyyiad.onion\",\n+    \"azbpsh4arqlm6442wfimy7qr65bmha2zhgjg7wbaji6vvaug53hur2qd.onion\",\n+    \"b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion\",\n+    \"bsqbtcparrfihlwolt4xgjbf4cgqckvrvsfyvy6vhiqrnh4w6ghixoid.onion\",\n+    \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\n+    \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\n+    \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\n+    \"devinbtctu7uctl7hly2juu3thbgeivfnvw3ckj3phy6nyvpnx66yeyd.onion\",\n+    \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\n+    \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\n+    \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\n+    \"emzybtc3ewh7zihpkdvuwlgxrhzcxy2p5fvjggp7ngjbxcytxvt4rjid.onion\",\n+    \"emzybtc454ewbviqnmgtgx3rgublsgkk23r4onbhidcv36wremue4kqd.onion\",\n+    \"emzybtc5bnpb2o6gh54oquiox54o4r7yn4a2wiiwzrjonlouaibm2zid.onion\",\n+    \"fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion\",\n+    \"255fhcp6ajvftnyo7bwz3an3t4a4brhopm3bamyh2iu5r3gnr2rq.b32.i2p\",\n+    \"27yrtht5b5bzom2w5ajb27najuqvuydtzb7bavlak25wkufec5mq.b32.i2p\",\n+    \"3gocb7wc4zvbmmebktet7gujccuux4ifk3kqilnxnj5wpdpqx2hq.b32.i2p\",\n+    \"4fcc23wt3hyjk3csfzcdyjz5pcwg5dzhdqgma6bch2qyiakcbboa.b32.i2p\",\n+    \"4osyqeknhx5qf3a73jeimexwclmt42cju6xdp7icja4ixxguu2hq.b32.i2p\",\n+    \"4umsi4nlmgyp4rckosg4vegd2ysljvid47zu7pqsollkaszcbpqq.b32.i2p\",\n+    \"6j2ezegd3e2e2x3o3pox335f5vxfthrrigkdrbgfbdjchm5h4awa.b32.i2p\",\n+    \"6n36ljyr55szci5ygidmxqer64qr24f4qmnymnbvgehz7qinxnla.b32.i2p\",\n+    \"72yjs6mvlby3ky6mgpvvlemmwq5pfcznrzd34jkhclgrishqdxva.b32.i2p\",\n+    \"a5qsnv3maw77mlmmzlcglu6twje6ttctd3fhpbfwcbpmewx6fczq.b32.i2p\",\n+    \"aovep2pco7v2k4rheofrgytbgk23eg22dczpsjqgqtxcqqvmxk6a.b32.i2p\",\n+    \"bitcoi656nll5hu6u7ddzrmzysdtwtnzcnrjd4rfdqbeey7dmn5a.b32.i2p\",\n+    \"brifkruhlkgrj65hffybrjrjqcgdgqs2r7siizb5b2232nruik3a.b32.i2p\",\n+    \"c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p\",\n+    \"day3hgxyrtwjslt54sikevbhxxs4qzo7d6vi72ipmscqtq3qmijq.b32.i2p\",\n+    \"du5kydummi23bjfp6bd7owsvrijgt7zhvxmz5h5f5spcioeoetwq.b32.i2p\",\n+    \"e55k6wu46rzp4pg5pk5npgbr3zz45bc3ihtzu2xcye5vwnzdy7pq.b32.i2p\",\n+    \"eciohu5nq7vsvwjjc52epskuk75d24iccgzmhbzrwonw6lx4gdva.b32.i2p\",\n+    \"ejlnngarmhqvune74ko7kk55xtgbz5i5ncs4vmnvjpy3l7y63xaa.b32.i2p\",\n+    \"fhzlp3xroabohnmjonu5iqazwhlbbwh5cpujvw2azcu3srqdceja.b32.i2p\",\n+    \"[fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa]\",\n+    \"[fcc7:be49:ccd1:dc91:3125:f0da:457d:8ce]\",\n+    \"[fcdc:73ae:b1a9:1bf8:d4c2:811:a4c7:c34e]\",\n+]\n+\n+class P2PPrivateBroadcast(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.disable_autoconnect = False\n+        self.num_nodes = 2\n+\n+    def setup_nodes(self):\n+        # Start a SOCKS5 proxy server.\n+        socks5_server_config = Socks5Configuration()\n+        # self.nodes[0] listens on p2p_port(0),\n+        # self.nodes[1] listens on p2p_port(1),\n+        # thus we tell the SOCKS5 server to listen on p2p_port(self.num_nodes (which is 2))\n+        socks5_server_config.addr = (\"127.0.0.1\", p2p_port(self.num_nodes))\n+        socks5_server_config.unauth = True\n+        socks5_server_config.auth = True\n+\n+        self.socks5_server = Socks5Server(socks5_server_config)\n+        self.socks5_server.start()\n+\n+        ports_base = p2p_port(MAX_NODES) + 15000\n+\n+        # Add 2 because one feeler and one extra block relay connections may\n+        # sneak in between the private broadcast connections.\n+        for i in range(NUM_INITIAL_CONNECTIONS + NUM_PRIVATE_BROADCAST_PER_TX + 2):\n+            if i == NUM_INITIAL_CONNECTIONS:\n+                # Instruct the SOCKS5 server to redirect the first private\n+                # broadcast connection from nodes[0] to nodes[1]\n+                self.socks5_server.conf.destinations.append({\n+                    \"to_addr\": \"127.0.0.1\", # nodes[1] listen address\n+                    \"to_port\": p2p_port(1), # nodes[1] listen port\n+                    \"node\": None,\n+                    \"requested_to_addr\": None,\n+                })\n+            else:\n+                # Create a Python P2P listening node and add it to self.socks5_server.conf.destinations[]\n+                listener = P2PInterface()\n+                listener.peer_connect_helper(dstaddr=\"0.0.0.0\", dstport=0, net=self.chain, timeout_factor=self.options.timeout_factor)\n+                listener.peer_connect_send_version(services=P2P_SERVICES)\n+                self.network_thread.listen(\n+                    p2p=listener,\n+                    # Instruct the SOCKS5 server to redirect a connection to this Python P2P listener.\n+                    callback=lambda addr, port: self.socks5_server.conf.destinations.append({\n+                        \"to_addr\": addr,\n+                        \"to_port\": port,\n+                        \"node\": None,\n+                        \"requested_to_addr\": None,\n+                    }),\n+                    addr=\"127.0.0.1\",\n+                    port=ports_base + i)\n+                # Wait until the callback has been called and it has done append().\n+                self.wait_until(lambda: len(self.socks5_server.conf.destinations) == i + 1)\n+\n+                self.socks5_server.conf.destinations[i][\"node\"] = listener\n+\n+        self.extra_args = [\n+            [\n+                \"-peerbloomfilters\", # needed to test replies to MEMPOOL\n+                \"-cjdnsreachable\", # needed to be able to add CJDNS addresses to addrman (otherwise they are unroutable).\n+                \"-privatebroadcast\",\n+                f\"-proxy={socks5_server_config.addr[0]}:{socks5_server_config.addr[1]}\",\n+            ],\n+            [\n+                \"-connect=0\",\n+                f\"-bind=127.0.0.1:{p2p_port(1)}=onion\", # consider all incoming as coming from Tor\n+            ],\n+        ]\n+        super().setup_nodes()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        tx_originator = self.nodes[0]\n+\n+        observer_inbound = tx_originator.add_p2p_connection(P2PDataStore())\n+\n+        # Fill tx_originator's addrman.\n+        for addr in addresses:\n+            res = tx_originator.addpeeraddress(address=addr, port=8333, tried=False)\n+            if res[\"success\"]:\n+                self.log.debug(f\"Added {addr} to tx_originator's addrman\")\n+            else:\n+                self.log.debug(f\"Could not add {addr} to tx_originator's addrman (collision?)\")\n+\n+        self.wait_until(lambda: self.socks5_server.conf.destinations_used == NUM_INITIAL_CONNECTIONS)\n+\n+        node1 = self.nodes[1]\n+        far_observer = node1.add_p2p_connection(P2PInterface())\n+\n+        # The next opened connections should be \"private broadcast\" for sending the transaction.\n+\n+        miniwallet = MiniWallet(tx_originator)\n+        tx = miniwallet.send_self_transfer(from_node=tx_originator)\n+        self.log.info(f\"Created transaction txid={tx['txid']}\")\n+\n+        self.log.debug(f\"Inspecting outbound connection i={NUM_INITIAL_CONNECTIONS}, must be the first private broadcast connection\")\n+        self.wait_until(lambda: len(node1.getrawmempool()) > 0)\n+        far_observer.wait_for_tx(tx[\"txid\"])\n+        self.log.debug(f\"Outbound connection i={NUM_INITIAL_CONNECTIONS}: the private broadcast target received and further relayed the transaction\")\n+\n+        num_private_broadcast_opened = 1 # already 1 connection to node1, confirmed by far_observer getting the tx\n+        for i in range(NUM_INITIAL_CONNECTIONS + 1, len(self.socks5_server.conf.destinations)):\n+            self.log.debug(f\"Inspecting outbound connection i={i}\")\n+            # At this point the connection may not yet have been established (A),\n+            # may be active (B), or may have already been closed (C).\n+            peer = self.socks5_server.conf.destinations[i][\"node\"]\n+            peer.wait_until(lambda: peer.message_count[\"version\"] == 1, check_connected=False)\n+            # Now it is either (B) or (C).\n+            requested_to_addr = self.socks5_server.conf.destinations[i][\"requested_to_addr\"]\n+            if peer.last_message[\"version\"].nServices != 0:\n+                self.log.debug(f\"Outbound connection i={i} to {requested_to_addr} not a private broadcast, ignoring it (maybe feeler or extra block only)\")\n+                continue\n+            self.log.debug(f\"Outbound connection i={i} to {requested_to_addr} must be a private broadcast, checking it\")\n+            assert requested_to_addr.endswith(\".onion\")\n+            peer.wait_for_disconnect()\n+            # Now it is (C).\n+            assert_equal(peer.message_count, {\n+                \"version\": 1,\n+                \"verack\": 1,\n+                \"tx\": 1,\n+                \"ping\": 1\n+            })\n+            dummy_address = CAddress()\n+            dummy_address.nServices = 0\n+            assert_equal(peer.last_message[\"version\"].nVersion, P2P_VERSION)\n+            assert_equal(peer.last_message[\"version\"].nServices, 0)\n+            assert_equal(peer.last_message[\"version\"].nTime, 0)\n+            assert_equal(peer.last_message[\"version\"].addrTo, dummy_address)\n+            assert_equal(peer.last_message[\"version\"].addrFrom, dummy_address)\n+            assert_equal(peer.last_message[\"version\"].strSubVer, \"/pynode:0.0.1/\")\n+            assert_equal(peer.last_message[\"version\"].nStartingHeight, 0)\n+            assert_equal(peer.last_message[\"version\"].relay, 0)\n+            assert_equal(peer.last_message[\"tx\"].tx.rehash(), tx[\"txid\"])\n+            self.log.debug(f\"Outbound connection i={i} is proper private broadcast, test ok\")\n+            num_private_broadcast_opened += 1\n+            if num_private_broadcast_opened == NUM_PRIVATE_BROADCAST_PER_TX:\n+                break\n+        assert_equal(num_private_broadcast_opened, NUM_PRIVATE_BROADCAST_PER_TX)\n+\n+        wtxid_int = int(tx[\"wtxid\"], 16)\n+        inv = CInv(MSG_WTX, wtxid_int)\n+\n+        self.log.info(\"Checking that the transaction is not in the originator node's mempool\")\n+        assert len(tx_originator.getrawmempool()) == 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1544759045",
      "id" : 1544759045,
      "line" : 296,
      "node_id" : "PRRC_kwDOABII585cEycF",
      "original_commit_id" : "c7e4d5cb2bf01d9719702e71c8d6264ee670e988",
      "original_line" : 296,
      "original_position" : 296,
      "original_start_line" : null,
      "path" : "test/functional/p2p_private_broadcast.py",
      "position" : 296,
      "pull_request_review_id" : 1969324333,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1544759045/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-29T18:35:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1544759045",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1544786157"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1544786157"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In f67eb5770db9f68745caf883e080ca9e164e592c: I think you could change it to `Wtxid`/`Txid` types instead of uint256.",
      "commit_id" : "c7e4d5cb2bf01d9719702e71c8d6264ee670e988",
      "created_at" : "2024-03-29T18:58:34Z",
      "diff_hunk" : "@@ -515,7 +515,7 @@ class PeerManagerImpl final : public PeerManager\n     bool GetNodeStateStats(NodeId nodeid, CNodeStateStats& stats) const override EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex);\n     bool IgnoresIncomingTxs() override { return m_opts.ignore_incoming_txs; }\n     void SendPings() override EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex);\n-    void RelayTransaction(const uint256& txid, const uint256& wtxid) override EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex);\n+    void ScheduleTxForBroadcastToAll(const uint256& txid, const uint256& wtxid) override EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1544786157",
      "id" : 1544786157,
      "line" : 521,
      "node_id" : "PRRC_kwDOABII585cE5Dt",
      "original_commit_id" : "f67eb5770db9f68745caf883e080ca9e164e592c",
      "original_line" : 518,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 15,
      "pull_request_review_id" : 1969394186,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1544786157/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-30T14:51:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1544786157",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1544863598"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1544863598"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In cf76f4f0fe1a3ef0730f70a035c10e01712b6d6b: Shouldn't we check here whether any private network is reachable? Because we can start a node with `-privatebroadcast` with `NET_ONION` becoming reachable later, no?",
      "commit_id" : "c7e4d5cb2bf01d9719702e71c8d6264ee670e988",
      "created_at" : "2024-03-29T20:55:52Z",
      "diff_hunk" : "@@ -91,11 +93,14 @@ static RPCHelpMan sendrawtransaction()\n             std::string err_string;\n             AssertLockNotHeld(cs_main);\n             NodeContext& node = EnsureAnyNodeContext(request.context);\n+            const auto method = gArgs.GetBoolArg(\"-privatebroadcast\", DEFAULT_PRIVATE_BROADCAST)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1544863598",
      "id" : 1544863598,
      "line" : 96,
      "node_id" : "PRRC_kwDOABII585cFL9u",
      "original_commit_id" : "cf76f4f0fe1a3ef0730f70a035c10e01712b6d6b",
      "original_line" : 96,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 18,
      "pull_request_review_id" : 1969597243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1544863598/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-29T20:55:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1544863598",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1545397035"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545397035"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n        \"           \\\"private\\\"    - private broadcast; short-lived connection for broadcasting our transactions\\n\"\r\n```",
      "commit_id" : "c7e4d5cb2bf01d9719702e71c8d6264ee670e988",
      "created_at" : "2024-03-30T14:20:06Z",
      "diff_hunk" : "@@ -655,11 +656,12 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         \"           \\\"in\\\"  - inbound connections are those initiated by the peer\\n\"\n         \"           \\\"out\\\" - outbound connections are those initiated by us\\n\"\n         \"  type     Type of peer connection\\n\"\n-        \"           \\\"full\\\"   - full relay, the default\\n\"\n-        \"           \\\"block\\\"  - block relay; like full relay but does not relay transactions or addresses\\n\"\n-        \"           \\\"manual\\\" - peer we manually added using RPC addnode or the -addnode/-connect config options\\n\"\n-        \"           \\\"feeler\\\" - short-lived connection for testing addresses\\n\"\n-        \"           \\\"addr\\\"   - address fetch; short-lived connection for requesting addresses\\n\"\n+        \"           \\\"full\\\"      - full relay, the default\\n\"\n+        \"           \\\"block\\\"     - block relay; like full relay but does not relay transactions or addresses\\n\"\n+        \"           \\\"manual\\\"    - peer we manually added using RPC addnode or the -addnode/-connect config options\\n\"\n+        \"           \\\"feeler\\\"    - short-lived connection for testing addresses\\n\"\n+        \"           \\\"addr\\\"      - address fetch; short-lived connection for requesting addresses\\n\"\n+        \"           \\\"privat\\\"    - private broadcast; short-lived connection for broadcasting our transactions\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1545397035",
      "id" : 1545397035,
      "line" : 664,
      "node_id" : "PRRC_kwDOABII585cHOMr",
      "original_commit_id" : "c7e4d5cb2bf01d9719702e71c8d6264ee670e988",
      "original_line" : 664,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 22,
      "pull_request_review_id" : 1969951271,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545397035/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-30T14:20:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545397035",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1546167724"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546167724"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Private connections are opened regardless of max connections limits, I think we could cover it in the functional test.",
      "commit_id" : "c7e4d5cb2bf01d9719702e71c8d6264ee670e988",
      "created_at" : "2024-04-01T09:47:18Z",
      "diff_hunk" : "@@ -2493,7 +2561,17 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             }\n         }\n \n-        CSemaphoreGrant grant(*semOutbound);\n+        MaybePickPrivateBroadcastNetwork(open_private_broadcast_to,\n+                                         m_private_broadcast_connections_to_open.load(),\n+                                         num_private_broadcast_opened);\n+\n+        // Don't wait for outbound connection slot to be available if we are going",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1546167724",
      "id" : 1546167724,
      "line" : 2577,
      "node_id" : "PRRC_kwDOABII585cKKWs",
      "original_commit_id" : "b1f65ba837a805dc8f855c02337c1593c77add6d",
      "original_line" : 2568,
      "original_position" : 115,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 170,
      "pull_request_review_id" : 1970997616,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546167724/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-01T09:47:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546167724",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1546262607"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546262607"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In b1f65ba837a805dc8f855c02337c1593c77add6d: non-blocker: I think it would be more elegant if `MaybePickPrivateBroadcastNetwork` returns `std::optional<Network> net`. ",
      "commit_id" : "c7e4d5cb2bf01d9719702e71c8d6264ee670e988",
      "created_at" : "2024-04-01T12:12:12Z",
      "diff_hunk" : "@@ -2396,6 +2399,63 @@ bool CConnman::MaybePickPreferredNetwork(std::optional<Network>& network)\n     return false;\n }\n \n+/**\n+ * Decide whether to open a private broadcast connection and if yes, to which network.\n+ * @param[in,out] net If the previous attempt to open a connection was an attempt to\n+ * open a private broadcast connection (successful or not), then this should have a\n+ * value. When the function ends if this has value then it will contain the network\n+ * to which to open the connection.\n+ * @param[in] num_needed Number of private broadcast connections that need to be opened.\n+ * @param[in] num_opened Number of private broadcast connections that are currently opened.\n+ */\n+static void MaybePickPrivateBroadcastNetwork(std::optional<Network>& net, size_t num_needed, size_t num_opened)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1546262607",
      "id" : 1546262607,
      "line" : 2420,
      "node_id" : "PRRC_kwDOABII585cKhhP",
      "original_commit_id" : "b1f65ba837a805dc8f855c02337c1593c77add6d",
      "original_line" : 2411,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 51,
      "pull_request_review_id" : 1971157352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546262607/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-01T12:12:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546262607",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1546535762"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546535762"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "413574e81ef4d608b9b0a2079f81a4e90ee2a341",
      "created_at" : "2024-04-01T16:21:13Z",
      "diff_hunk" : "@@ -0,0 +1,311 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when private broadcast is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (tx_originator)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The private broadcast TX recipients\n+               |   |       (NUM_PRIVATE_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> Bitcoin Core (node1) (self.socks5_server.conf.destinations[i][\"node\"] is None)\n+               |   |                          ^\n+               |   |                          *----< P2PInterface (far_observer) (to check Bitcoin Core relays the tx)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< P2PDataStore (observer_inbound)\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+NUM_INITIAL_CONNECTIONS = MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS\n+NUM_PRIVATE_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for private broadcast.\n+addresses = [\n+    \"1.65.195.98\",\n+    \"2.59.236.56\",\n+    \"2.83.114.20\",\n+    \"2.248.194.16\",\n+    \"5.2.154.6\",\n+    \"5.101.140.30\",\n+    \"5.128.87.126\",\n+    \"5.144.21.49\",\n+    \"5.172.132.104\",\n+    \"5.188.62.18\",\n+    \"5.200.2.180\",\n+    \"8.129.184.255\",\n+    \"8.209.105.138\",\n+    \"12.34.98.148\",\n+    \"14.199.102.151\",\n+    \"18.27.79.17\",\n+    \"18.27.124.231\",\n+    \"18.216.249.151\",\n+    \"23.88.155.58\",\n+    \"23.93.101.158\",\n+    \"[2001:19f0:1000:1db3:5400:4ff:fe56:5a8d]\",\n+    \"[2001:19f0:5:24da:3eec:efff:feb9:f36e]\",\n+    \"[2001:19f0:5:24da::]\",\n+    \"[2001:19f0:5:4535:3eec:efff:feb9:87e4]\",\n+    \"[2001:19f0:5:4535::]\",\n+    \"[2001:1bc0:c1::2000]\",\n+    \"[2001:1c04:4008:6300:8a5f:2678:114b:a660]\",\n+    \"[2001:41d0:203:3739::]\",\n+    \"[2001:41d0:203:8f49::]\",\n+    \"[2001:41d0:203:bb0a::]\",\n+    \"[2001:41d0:2:bf8f::]\",\n+    \"[2001:41d0:303:de8b::]\",\n+    \"[2001:41d0:403:3d61::]\",\n+    \"[2001:41d0:405:9600::]\",\n+    \"[2001:41d0:8:ed7f::1]\",\n+    \"[2001:41d0:a:69a2::1]\",\n+    \"[2001:41f0::62:6974:636f:696e]\",\n+    \"[2001:470:1b62::]\",\n+    \"[2001:470:1f05:43b:2831:8530:7179:5864]\",\n+    \"[2001:470:1f09:b14::11]\",\n+    \"2bqghnldu6mcug4pikzprwhtjjnsyederctvci6klcwzepnjd46ikjyd.onion\",\n+    \"4lr3w2iyyl5u5l6tosizclykf5v3smqroqdn2i4h3kq6pfbbjb2xytad.onion\",\n+    \"5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion\",\n+    \"5sbmcl4m5api5tqafi4gcckrn3y52sz5mskxf3t6iw4bp7erwiptrgqd.onion\",\n+    \"776aegl7tfhg6oiqqy76jnwrwbvcytsx2qegcgh2mjqujll4376ohlid.onion\",\n+    \"77mdte42srl42shdh2mhtjr7nf7dmedqrw6bkcdekhdvmnld6ojyyiad.onion\",\n+    \"azbpsh4arqlm6442wfimy7qr65bmha2zhgjg7wbaji6vvaug53hur2qd.onion\",\n+    \"b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion\",\n+    \"bsqbtcparrfihlwolt4xgjbf4cgqckvrvsfyvy6vhiqrnh4w6ghixoid.onion\",\n+    \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\n+    \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\n+    \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\n+    \"devinbtctu7uctl7hly2juu3thbgeivfnvw3ckj3phy6nyvpnx66yeyd.onion\",\n+    \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\n+    \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\n+    \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\n+    \"emzybtc3ewh7zihpkdvuwlgxrhzcxy2p5fvjggp7ngjbxcytxvt4rjid.onion\",\n+    \"emzybtc454ewbviqnmgtgx3rgublsgkk23r4onbhidcv36wremue4kqd.onion\",\n+    \"emzybtc5bnpb2o6gh54oquiox54o4r7yn4a2wiiwzrjonlouaibm2zid.onion\",\n+    \"fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion\",\n+    \"255fhcp6ajvftnyo7bwz3an3t4a4brhopm3bamyh2iu5r3gnr2rq.b32.i2p\",\n+    \"27yrtht5b5bzom2w5ajb27najuqvuydtzb7bavlak25wkufec5mq.b32.i2p\",\n+    \"3gocb7wc4zvbmmebktet7gujccuux4ifk3kqilnxnj5wpdpqx2hq.b32.i2p\",\n+    \"4fcc23wt3hyjk3csfzcdyjz5pcwg5dzhdqgma6bch2qyiakcbboa.b32.i2p\",\n+    \"4osyqeknhx5qf3a73jeimexwclmt42cju6xdp7icja4ixxguu2hq.b32.i2p\",\n+    \"4umsi4nlmgyp4rckosg4vegd2ysljvid47zu7pqsollkaszcbpqq.b32.i2p\",\n+    \"6j2ezegd3e2e2x3o3pox335f5vxfthrrigkdrbgfbdjchm5h4awa.b32.i2p\",\n+    \"6n36ljyr55szci5ygidmxqer64qr24f4qmnymnbvgehz7qinxnla.b32.i2p\",\n+    \"72yjs6mvlby3ky6mgpvvlemmwq5pfcznrzd34jkhclgrishqdxva.b32.i2p\",\n+    \"a5qsnv3maw77mlmmzlcglu6twje6ttctd3fhpbfwcbpmewx6fczq.b32.i2p\",\n+    \"aovep2pco7v2k4rheofrgytbgk23eg22dczpsjqgqtxcqqvmxk6a.b32.i2p\",\n+    \"bitcoi656nll5hu6u7ddzrmzysdtwtnzcnrjd4rfdqbeey7dmn5a.b32.i2p\",\n+    \"brifkruhlkgrj65hffybrjrjqcgdgqs2r7siizb5b2232nruik3a.b32.i2p\",\n+    \"c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p\",\n+    \"day3hgxyrtwjslt54sikevbhxxs4qzo7d6vi72ipmscqtq3qmijq.b32.i2p\",\n+    \"du5kydummi23bjfp6bd7owsvrijgt7zhvxmz5h5f5spcioeoetwq.b32.i2p\",\n+    \"e55k6wu46rzp4pg5pk5npgbr3zz45bc3ihtzu2xcye5vwnzdy7pq.b32.i2p\",\n+    \"eciohu5nq7vsvwjjc52epskuk75d24iccgzmhbzrwonw6lx4gdva.b32.i2p\",\n+    \"ejlnngarmhqvune74ko7kk55xtgbz5i5ncs4vmnvjpy3l7y63xaa.b32.i2p\",\n+    \"fhzlp3xroabohnmjonu5iqazwhlbbwh5cpujvw2azcu3srqdceja.b32.i2p\",\n+    \"[fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa]\",\n+    \"[fcc7:be49:ccd1:dc91:3125:f0da:457d:8ce]\",\n+    \"[fcdc:73ae:b1a9:1bf8:d4c2:811:a4c7:c34e]\",\n+]\n+\n+class P2PPrivateBroadcast(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.disable_autoconnect = False\n+        self.num_nodes = 2\n+\n+    def setup_nodes(self):\n+        # Start a SOCKS5 proxy server.\n+        socks5_server_config = Socks5Configuration()\n+        # self.nodes[0] listens on p2p_port(0),\n+        # self.nodes[1] listens on p2p_port(1),\n+        # thus we tell the SOCKS5 server to listen on p2p_port(self.num_nodes (which is 2))\n+        socks5_server_config.addr = (\"127.0.0.1\", p2p_port(self.num_nodes))\n+        socks5_server_config.unauth = True\n+        socks5_server_config.auth = True\n+\n+        self.socks5_server = Socks5Server(socks5_server_config)\n+        self.socks5_server.start()\n+\n+        ports_base = p2p_port(MAX_NODES) + 15000\n+\n+        # Add 2 because one feeler and one extra block relay connections may\n+        # sneak in between the private broadcast connections.\n+        for i in range(NUM_INITIAL_CONNECTIONS + NUM_PRIVATE_BROADCAST_PER_TX + 2):\n+            if i == NUM_INITIAL_CONNECTIONS:\n+                # Instruct the SOCKS5 server to redirect the first private\n+                # broadcast connection from nodes[0] to nodes[1]\n+                self.socks5_server.conf.destinations.append({\n+                    \"to_addr\": \"127.0.0.1\", # nodes[1] listen address\n+                    \"to_port\": p2p_port(1), # nodes[1] listen port\n+                    \"node\": None,\n+                    \"requested_to_addr\": None,\n+                })\n+            else:\n+                # Create a Python P2P listening node and add it to self.socks5_server.conf.destinations[]\n+                listener = P2PInterface()\n+                listener.peer_connect_helper(dstaddr=\"0.0.0.0\", dstport=0, net=self.chain, timeout_factor=self.options.timeout_factor)\n+                listener.peer_connect_send_version(services=P2P_SERVICES)\n+                self.network_thread.listen(\n+                    p2p=listener,\n+                    # Instruct the SOCKS5 server to redirect a connection to this Python P2P listener.\n+                    callback=lambda addr, port: self.socks5_server.conf.destinations.append({\n+                        \"to_addr\": addr,\n+                        \"to_port\": port,\n+                        \"node\": None,\n+                        \"requested_to_addr\": None,\n+                    }),\n+                    addr=\"127.0.0.1\",\n+                    port=ports_base + i)\n+                # Wait until the callback has been called and it has done append().\n+                self.wait_until(lambda: len(self.socks5_server.conf.destinations) == i + 1)\n+\n+                self.socks5_server.conf.destinations[i][\"node\"] = listener\n+\n+        self.extra_args = [\n+            [\n+                \"-peerbloomfilters\", # needed to test replies to MEMPOOL\n+                \"-cjdnsreachable\", # needed to be able to add CJDNS addresses to addrman (otherwise they are unroutable).\n+                \"-privatebroadcast\",\n+                f\"-proxy={socks5_server_config.addr[0]}:{socks5_server_config.addr[1]}\",\n+            ],\n+            [\n+                \"-connect=0\",\n+                f\"-bind=127.0.0.1:{p2p_port(1)}=onion\", # consider all incoming as coming from Tor\n+            ],\n+        ]\n+        super().setup_nodes()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        tx_originator = self.nodes[0]\n+\n+        observer_inbound = tx_originator.add_p2p_connection(P2PDataStore())\n+\n+        # Fill tx_originator's addrman.\n+        for addr in addresses:\n+            res = tx_originator.addpeeraddress(address=addr, port=8333, tried=False)\n+            if res[\"success\"]:\n+                self.log.debug(f\"Added {addr} to tx_originator's addrman\")\n+            else:\n+                self.log.debug(f\"Could not add {addr} to tx_originator's addrman (collision?)\")\n+\n+        self.wait_until(lambda: self.socks5_server.conf.destinations_used == NUM_INITIAL_CONNECTIONS)\n+\n+        node1 = self.nodes[1]\n+        far_observer = node1.add_p2p_connection(P2PInterface())\n+\n+        # The next opened connections should be \"private broadcast\" for sending the transaction.\n+\n+        miniwallet = MiniWallet(tx_originator)\n+        tx = miniwallet.send_self_transfer(from_node=tx_originator)\n+        self.log.info(f\"Created transaction txid={tx['txid']}\")\n+\n+        self.log.debug(f\"Inspecting outbound connection i={NUM_INITIAL_CONNECTIONS}, must be the first private broadcast connection\")\n+        self.wait_until(lambda: len(node1.getrawmempool()) > 0)\n+        far_observer.wait_for_tx(tx[\"txid\"])\n+        self.log.debug(f\"Outbound connection i={NUM_INITIAL_CONNECTIONS}: the private broadcast target received and further relayed the transaction\")\n+\n+        num_private_broadcast_opened = 1 # already 1 connection to node1, confirmed by far_observer getting the tx\n+        for i in range(NUM_INITIAL_CONNECTIONS + 1, len(self.socks5_server.conf.destinations)):\n+            self.log.debug(f\"Inspecting outbound connection i={i}\")\n+            # At this point the connection may not yet have been established (A),\n+            # may be active (B), or may have already been closed (C).\n+            peer = self.socks5_server.conf.destinations[i][\"node\"]\n+            peer.wait_until(lambda: peer.message_count[\"version\"] == 1, check_connected=False)\n+            # Now it is either (B) or (C).\n+            requested_to_addr = self.socks5_server.conf.destinations[i][\"requested_to_addr\"]\n+            if peer.last_message[\"version\"].nServices != 0:\n+                self.log.debug(f\"Outbound connection i={i} to {requested_to_addr} not a private broadcast, ignoring it (maybe feeler or extra block only)\")\n+                continue\n+            self.log.debug(f\"Outbound connection i={i} to {requested_to_addr} must be a private broadcast, checking it\")\n+            assert requested_to_addr.endswith(\".onion\")\n+            peer.wait_for_disconnect()\n+            # Now it is (C).\n+            assert_equal(peer.message_count, {\n+                \"version\": 1,\n+                \"verack\": 1,\n+                \"tx\": 1,\n+                \"ping\": 1\n+            })\n+            dummy_address = CAddress()\n+            dummy_address.nServices = 0\n+            assert_equal(peer.last_message[\"version\"].nVersion, P2P_VERSION)\n+            assert_equal(peer.last_message[\"version\"].nServices, 0)\n+            assert_equal(peer.last_message[\"version\"].nTime, 0)\n+            assert_equal(peer.last_message[\"version\"].addrTo, dummy_address)\n+            assert_equal(peer.last_message[\"version\"].addrFrom, dummy_address)\n+            assert_equal(peer.last_message[\"version\"].strSubVer, \"/pynode:0.0.1/\")\n+            assert_equal(peer.last_message[\"version\"].nStartingHeight, 0)\n+            assert_equal(peer.last_message[\"version\"].relay, 0)\n+            assert_equal(peer.last_message[\"tx\"].tx.rehash(), tx[\"txid\"])\n+            self.log.debug(f\"Outbound connection i={i} is proper private broadcast, test ok\")\n+            num_private_broadcast_opened += 1\n+            if num_private_broadcast_opened == NUM_PRIVATE_BROADCAST_PER_TX:\n+                break\n+        assert_equal(num_private_broadcast_opened, NUM_PRIVATE_BROADCAST_PER_TX)\n+\n+        wtxid_int = int(tx[\"wtxid\"], 16)\n+        inv = CInv(MSG_WTX, wtxid_int)\n+\n+        self.log.info(\"Checking that the transaction is not in the originator node's mempool\")\n+        assert len(tx_originator.getrawmempool()) == 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1546535762",
      "id" : 1546535762,
      "in_reply_to_id" : 1544759045,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585cLkNS",
      "original_commit_id" : "c7e4d5cb2bf01d9719702e71c8d6264ee670e988",
      "original_line" : 296,
      "original_position" : 296,
      "original_start_line" : null,
      "path" : "test/functional/p2p_private_broadcast.py",
      "position" : null,
      "pull_request_review_id" : 1971635317,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546535762/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-01T16:21:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546535762",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1546542191"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546542191"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "413574e81ef4d608b9b0a2079f81a4e90ee2a341",
      "created_at" : "2024-04-01T16:23:44Z",
      "diff_hunk" : "@@ -91,11 +93,14 @@ static RPCHelpMan sendrawtransaction()\n             std::string err_string;\n             AssertLockNotHeld(cs_main);\n             NodeContext& node = EnsureAnyNodeContext(request.context);\n+            const auto method = gArgs.GetBoolArg(\"-privatebroadcast\", DEFAULT_PRIVATE_BROADCAST)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1546542191",
      "id" : 1546542191,
      "in_reply_to_id" : 1544863598,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585cLlxv",
      "original_commit_id" : "cf76f4f0fe1a3ef0730f70a035c10e01712b6d6b",
      "original_line" : 96,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1971641791,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546542191/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-01T16:23:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546542191",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1546548842"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546548842"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The current functional test already opens the usual 10 connections and then fires a private broadcast one. Is this what you mean?",
      "commit_id" : "413574e81ef4d608b9b0a2079f81a4e90ee2a341",
      "created_at" : "2024-04-01T16:25:11Z",
      "diff_hunk" : "@@ -2493,7 +2561,17 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             }\n         }\n \n-        CSemaphoreGrant grant(*semOutbound);\n+        MaybePickPrivateBroadcastNetwork(open_private_broadcast_to,\n+                                         m_private_broadcast_connections_to_open.load(),\n+                                         num_private_broadcast_opened);\n+\n+        // Don't wait for outbound connection slot to be available if we are going",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1546548842",
      "id" : 1546548842,
      "in_reply_to_id" : 1546167724,
      "line" : 2578,
      "node_id" : "PRRC_kwDOABII585cLnZq",
      "original_commit_id" : "b1f65ba837a805dc8f855c02337c1593c77add6d",
      "original_line" : 2578,
      "original_position" : 115,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 171,
      "pull_request_review_id" : 1971648140,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546548842/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-01T16:25:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546548842",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1546549521"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546549521"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "413574e81ef4d608b9b0a2079f81a4e90ee2a341",
      "created_at" : "2024-04-01T16:25:20Z",
      "diff_hunk" : "@@ -2396,6 +2399,63 @@ bool CConnman::MaybePickPreferredNetwork(std::optional<Network>& network)\n     return false;\n }\n \n+/**\n+ * Decide whether to open a private broadcast connection and if yes, to which network.\n+ * @param[in,out] net If the previous attempt to open a connection was an attempt to\n+ * open a private broadcast connection (successful or not), then this should have a\n+ * value. When the function ends if this has value then it will contain the network\n+ * to which to open the connection.\n+ * @param[in] num_needed Number of private broadcast connections that need to be opened.\n+ * @param[in] num_opened Number of private broadcast connections that are currently opened.\n+ */\n+static void MaybePickPrivateBroadcastNetwork(std::optional<Network>& net, size_t num_needed, size_t num_opened)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1546549521",
      "id" : 1546549521,
      "in_reply_to_id" : 1546262607,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585cLnkR",
      "original_commit_id" : "b1f65ba837a805dc8f855c02337c1593c77add6d",
      "original_line" : 2411,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 1971648844,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546549521/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-01T16:25:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546549521",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`c7e4d5cb2b...413574e81e`: rebase and address suggestions",
      "created_at" : "2024-04-01T16:25:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2030100651",
      "id" : 2030100651,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5855AOCr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2030100651/reactions"
      },
      "updated_at" : "2024-04-01T16:25:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2030100651",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1546557097"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546557097"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, I missed that. Nevermind.",
      "commit_id" : "413574e81ef4d608b9b0a2079f81a4e90ee2a341",
      "created_at" : "2024-04-01T16:27:36Z",
      "diff_hunk" : "@@ -2493,7 +2561,17 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             }\n         }\n \n-        CSemaphoreGrant grant(*semOutbound);\n+        MaybePickPrivateBroadcastNetwork(open_private_broadcast_to,\n+                                         m_private_broadcast_connections_to_open.load(),\n+                                         num_private_broadcast_opened);\n+\n+        // Don't wait for outbound connection slot to be available if we are going",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1546557097",
      "id" : 1546557097,
      "in_reply_to_id" : 1546167724,
      "line" : 2578,
      "node_id" : "PRRC_kwDOABII585cLpap",
      "original_commit_id" : "b1f65ba837a805dc8f855c02337c1593c77add6d",
      "original_line" : 2578,
      "original_position" : 115,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 171,
      "pull_request_review_id" : 1971658452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546557097/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-01T16:27:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546557097",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1546558523"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546558523"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It was suggested that this be 6 chars or less: https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518063388. Feel free to suggest another name.",
      "commit_id" : "413574e81ef4d608b9b0a2079f81a4e90ee2a341",
      "created_at" : "2024-04-01T16:28:36Z",
      "diff_hunk" : "@@ -655,11 +656,12 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         \"           \\\"in\\\"  - inbound connections are those initiated by the peer\\n\"\n         \"           \\\"out\\\" - outbound connections are those initiated by us\\n\"\n         \"  type     Type of peer connection\\n\"\n-        \"           \\\"full\\\"   - full relay, the default\\n\"\n-        \"           \\\"block\\\"  - block relay; like full relay but does not relay transactions or addresses\\n\"\n-        \"           \\\"manual\\\" - peer we manually added using RPC addnode or the -addnode/-connect config options\\n\"\n-        \"           \\\"feeler\\\" - short-lived connection for testing addresses\\n\"\n-        \"           \\\"addr\\\"   - address fetch; short-lived connection for requesting addresses\\n\"\n+        \"           \\\"full\\\"      - full relay, the default\\n\"\n+        \"           \\\"block\\\"     - block relay; like full relay but does not relay transactions or addresses\\n\"\n+        \"           \\\"manual\\\"    - peer we manually added using RPC addnode or the -addnode/-connect config options\\n\"\n+        \"           \\\"feeler\\\"    - short-lived connection for testing addresses\\n\"\n+        \"           \\\"addr\\\"      - address fetch; short-lived connection for requesting addresses\\n\"\n+        \"           \\\"privat\\\"    - private broadcast; short-lived connection for broadcasting our transactions\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1546558523",
      "id" : 1546558523,
      "in_reply_to_id" : 1545397035,
      "line" : 664,
      "node_id" : "PRRC_kwDOABII585cLpw7",
      "original_commit_id" : "c7e4d5cb2bf01d9719702e71c8d6264ee670e988",
      "original_line" : 664,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 22,
      "pull_request_review_id" : 1971659859,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546558523/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-01T16:28:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546558523",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1546756330"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546756330"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 413574e81ef4d608b9b0a2079f81a4e90ee2a341: You can use `-test=addrman` to make addrman deterministic.  Running the test several times I realized that sometimes a collision happens, sometimes not.",
      "commit_id" : "413574e81ef4d608b9b0a2079f81a4e90ee2a341",
      "created_at" : "2024-04-01T19:29:12Z",
      "diff_hunk" : "@@ -0,0 +1,311 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when private broadcast is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (tx_originator)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The private broadcast TX recipients\n+               |   |       (NUM_PRIVATE_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> Bitcoin Core (node1) (self.socks5_server.conf.destinations[i][\"node\"] is None)\n+               |   |                          ^\n+               |   |                          *----< P2PInterface (far_observer) (to check Bitcoin Core relays the tx)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< P2PDataStore (observer_inbound)\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+NUM_INITIAL_CONNECTIONS = MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS\n+NUM_PRIVATE_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for private broadcast.\n+addresses = [\n+    \"1.65.195.98\",\n+    \"2.59.236.56\",\n+    \"2.83.114.20\",\n+    \"2.248.194.16\",\n+    \"5.2.154.6\",\n+    \"5.101.140.30\",\n+    \"5.128.87.126\",\n+    \"5.144.21.49\",\n+    \"5.172.132.104\",\n+    \"5.188.62.18\",\n+    \"5.200.2.180\",\n+    \"8.129.184.255\",\n+    \"8.209.105.138\",\n+    \"12.34.98.148\",\n+    \"14.199.102.151\",\n+    \"18.27.79.17\",\n+    \"18.27.124.231\",\n+    \"18.216.249.151\",\n+    \"23.88.155.58\",\n+    \"23.93.101.158\",\n+    \"[2001:19f0:1000:1db3:5400:4ff:fe56:5a8d]\",\n+    \"[2001:19f0:5:24da:3eec:efff:feb9:f36e]\",\n+    \"[2001:19f0:5:24da::]\",\n+    \"[2001:19f0:5:4535:3eec:efff:feb9:87e4]\",\n+    \"[2001:19f0:5:4535::]\",\n+    \"[2001:1bc0:c1::2000]\",\n+    \"[2001:1c04:4008:6300:8a5f:2678:114b:a660]\",\n+    \"[2001:41d0:203:3739::]\",\n+    \"[2001:41d0:203:8f49::]\",\n+    \"[2001:41d0:203:bb0a::]\",\n+    \"[2001:41d0:2:bf8f::]\",\n+    \"[2001:41d0:303:de8b::]\",\n+    \"[2001:41d0:403:3d61::]\",\n+    \"[2001:41d0:405:9600::]\",\n+    \"[2001:41d0:8:ed7f::1]\",\n+    \"[2001:41d0:a:69a2::1]\",\n+    \"[2001:41f0::62:6974:636f:696e]\",\n+    \"[2001:470:1b62::]\",\n+    \"[2001:470:1f05:43b:2831:8530:7179:5864]\",\n+    \"[2001:470:1f09:b14::11]\",\n+    \"2bqghnldu6mcug4pikzprwhtjjnsyederctvci6klcwzepnjd46ikjyd.onion\",\n+    \"4lr3w2iyyl5u5l6tosizclykf5v3smqroqdn2i4h3kq6pfbbjb2xytad.onion\",\n+    \"5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion\",\n+    \"5sbmcl4m5api5tqafi4gcckrn3y52sz5mskxf3t6iw4bp7erwiptrgqd.onion\",\n+    \"776aegl7tfhg6oiqqy76jnwrwbvcytsx2qegcgh2mjqujll4376ohlid.onion\",\n+    \"77mdte42srl42shdh2mhtjr7nf7dmedqrw6bkcdekhdvmnld6ojyyiad.onion\",\n+    \"azbpsh4arqlm6442wfimy7qr65bmha2zhgjg7wbaji6vvaug53hur2qd.onion\",\n+    \"b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion\",\n+    \"bsqbtcparrfihlwolt4xgjbf4cgqckvrvsfyvy6vhiqrnh4w6ghixoid.onion\",\n+    \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\n+    \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\n+    \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\n+    \"devinbtctu7uctl7hly2juu3thbgeivfnvw3ckj3phy6nyvpnx66yeyd.onion\",\n+    \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\n+    \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\n+    \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\n+    \"emzybtc3ewh7zihpkdvuwlgxrhzcxy2p5fvjggp7ngjbxcytxvt4rjid.onion\",\n+    \"emzybtc454ewbviqnmgtgx3rgublsgkk23r4onbhidcv36wremue4kqd.onion\",\n+    \"emzybtc5bnpb2o6gh54oquiox54o4r7yn4a2wiiwzrjonlouaibm2zid.onion\",\n+    \"fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion\",\n+    \"255fhcp6ajvftnyo7bwz3an3t4a4brhopm3bamyh2iu5r3gnr2rq.b32.i2p\",\n+    \"27yrtht5b5bzom2w5ajb27najuqvuydtzb7bavlak25wkufec5mq.b32.i2p\",\n+    \"3gocb7wc4zvbmmebktet7gujccuux4ifk3kqilnxnj5wpdpqx2hq.b32.i2p\",\n+    \"4fcc23wt3hyjk3csfzcdyjz5pcwg5dzhdqgma6bch2qyiakcbboa.b32.i2p\",\n+    \"4osyqeknhx5qf3a73jeimexwclmt42cju6xdp7icja4ixxguu2hq.b32.i2p\",\n+    \"4umsi4nlmgyp4rckosg4vegd2ysljvid47zu7pqsollkaszcbpqq.b32.i2p\",\n+    \"6j2ezegd3e2e2x3o3pox335f5vxfthrrigkdrbgfbdjchm5h4awa.b32.i2p\",\n+    \"6n36ljyr55szci5ygidmxqer64qr24f4qmnymnbvgehz7qinxnla.b32.i2p\",\n+    \"72yjs6mvlby3ky6mgpvvlemmwq5pfcznrzd34jkhclgrishqdxva.b32.i2p\",\n+    \"a5qsnv3maw77mlmmzlcglu6twje6ttctd3fhpbfwcbpmewx6fczq.b32.i2p\",\n+    \"aovep2pco7v2k4rheofrgytbgk23eg22dczpsjqgqtxcqqvmxk6a.b32.i2p\",\n+    \"bitcoi656nll5hu6u7ddzrmzysdtwtnzcnrjd4rfdqbeey7dmn5a.b32.i2p\",\n+    \"brifkruhlkgrj65hffybrjrjqcgdgqs2r7siizb5b2232nruik3a.b32.i2p\",\n+    \"c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p\",\n+    \"day3hgxyrtwjslt54sikevbhxxs4qzo7d6vi72ipmscqtq3qmijq.b32.i2p\",\n+    \"du5kydummi23bjfp6bd7owsvrijgt7zhvxmz5h5f5spcioeoetwq.b32.i2p\",\n+    \"e55k6wu46rzp4pg5pk5npgbr3zz45bc3ihtzu2xcye5vwnzdy7pq.b32.i2p\",\n+    \"eciohu5nq7vsvwjjc52epskuk75d24iccgzmhbzrwonw6lx4gdva.b32.i2p\",\n+    \"ejlnngarmhqvune74ko7kk55xtgbz5i5ncs4vmnvjpy3l7y63xaa.b32.i2p\",\n+    \"fhzlp3xroabohnmjonu5iqazwhlbbwh5cpujvw2azcu3srqdceja.b32.i2p\",\n+    \"[fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa]\",\n+    \"[fcc7:be49:ccd1:dc91:3125:f0da:457d:8ce]\",\n+    \"[fcdc:73ae:b1a9:1bf8:d4c2:811:a4c7:c34e]\",\n+]\n+\n+class P2PPrivateBroadcast(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.disable_autoconnect = False\n+        self.num_nodes = 2\n+\n+    def setup_nodes(self):\n+        # Start a SOCKS5 proxy server.\n+        socks5_server_config = Socks5Configuration()\n+        # self.nodes[0] listens on p2p_port(0),\n+        # self.nodes[1] listens on p2p_port(1),\n+        # thus we tell the SOCKS5 server to listen on p2p_port(self.num_nodes (which is 2))\n+        socks5_server_config.addr = (\"127.0.0.1\", p2p_port(self.num_nodes))\n+        socks5_server_config.unauth = True\n+        socks5_server_config.auth = True\n+\n+        self.socks5_server = Socks5Server(socks5_server_config)\n+        self.socks5_server.start()\n+\n+        ports_base = p2p_port(MAX_NODES) + 15000\n+\n+        # Add 2 because one feeler and one extra block relay connections may\n+        # sneak in between the private broadcast connections.\n+        for i in range(NUM_INITIAL_CONNECTIONS + NUM_PRIVATE_BROADCAST_PER_TX + 2):\n+            if i == NUM_INITIAL_CONNECTIONS:\n+                # Instruct the SOCKS5 server to redirect the first private\n+                # broadcast connection from nodes[0] to nodes[1]\n+                self.socks5_server.conf.destinations.append({\n+                    \"to_addr\": \"127.0.0.1\", # nodes[1] listen address\n+                    \"to_port\": p2p_port(1), # nodes[1] listen port\n+                    \"node\": None,\n+                    \"requested_to_addr\": None,\n+                })\n+            else:\n+                # Create a Python P2P listening node and add it to self.socks5_server.conf.destinations[]\n+                listener = P2PInterface()\n+                listener.peer_connect_helper(dstaddr=\"0.0.0.0\", dstport=0, net=self.chain, timeout_factor=self.options.timeout_factor)\n+                listener.peer_connect_send_version(services=P2P_SERVICES)\n+                self.network_thread.listen(\n+                    p2p=listener,\n+                    # Instruct the SOCKS5 server to redirect a connection to this Python P2P listener.\n+                    callback=lambda addr, port: self.socks5_server.conf.destinations.append({\n+                        \"to_addr\": addr,\n+                        \"to_port\": port,\n+                        \"node\": None,\n+                        \"requested_to_addr\": None,\n+                    }),\n+                    addr=\"127.0.0.1\",\n+                    port=ports_base + i)\n+                # Wait until the callback has been called and it has done append().\n+                self.wait_until(lambda: len(self.socks5_server.conf.destinations) == i + 1)\n+\n+                self.socks5_server.conf.destinations[i][\"node\"] = listener\n+\n+        self.extra_args = [\n+            [\n+                \"-peerbloomfilters\", # needed to test replies to MEMPOOL\n+                \"-cjdnsreachable\", # needed to be able to add CJDNS addresses to addrman (otherwise they are unroutable).\n+                \"-privatebroadcast\",\n+                f\"-proxy={socks5_server_config.addr[0]}:{socks5_server_config.addr[1]}\",\n+            ],\n+            [\n+                \"-connect=0\",\n+                f\"-bind=127.0.0.1:{p2p_port(1)}=onion\", # consider all incoming as coming from Tor\n+            ],\n+        ]\n+        super().setup_nodes()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        tx_originator = self.nodes[0]\n+\n+        observer_inbound = tx_originator.add_p2p_connection(P2PDataStore())\n+\n+        # Fill tx_originator's addrman.\n+        for addr in addresses:\n+            res = tx_originator.addpeeraddress(address=addr, port=8333, tried=False)\n+            if res[\"success\"]:\n+                self.log.debug(f\"Added {addr} to tx_originator's addrman\")\n+            else:\n+                self.log.debug(f\"Could not add {addr} to tx_originator's addrman (collision?)\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1546756330",
      "id" : 1546756330,
      "line" : 235,
      "node_id" : "PRRC_kwDOABII585cMaDq",
      "original_commit_id" : "413574e81ef4d608b9b0a2079f81a4e90ee2a341",
      "original_line" : 235,
      "original_position" : 235,
      "original_start_line" : null,
      "path" : "test/functional/p2p_private_broadcast.py",
      "position" : 235,
      "pull_request_review_id" : 1971975903,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546756330/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-01T19:29:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546756330",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-04-02T14:58:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2032289952",
      "id" : 2032289952,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5855Ikig",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2032289952/reactions"
      },
      "updated_at" : "2024-04-02T14:58:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2032289952",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1548220655"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1548220655"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "390e628a07ce62d32deae4bcfa1bdb31f5a0e125",
      "created_at" : "2024-04-02T16:39:46Z",
      "diff_hunk" : "@@ -0,0 +1,311 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when private broadcast is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (tx_originator)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The private broadcast TX recipients\n+               |   |       (NUM_PRIVATE_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> Bitcoin Core (node1) (self.socks5_server.conf.destinations[i][\"node\"] is None)\n+               |   |                          ^\n+               |   |                          *----< P2PInterface (far_observer) (to check Bitcoin Core relays the tx)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< P2PDataStore (observer_inbound)\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+NUM_INITIAL_CONNECTIONS = MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS\n+NUM_PRIVATE_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for private broadcast.\n+addresses = [\n+    \"1.65.195.98\",\n+    \"2.59.236.56\",\n+    \"2.83.114.20\",\n+    \"2.248.194.16\",\n+    \"5.2.154.6\",\n+    \"5.101.140.30\",\n+    \"5.128.87.126\",\n+    \"5.144.21.49\",\n+    \"5.172.132.104\",\n+    \"5.188.62.18\",\n+    \"5.200.2.180\",\n+    \"8.129.184.255\",\n+    \"8.209.105.138\",\n+    \"12.34.98.148\",\n+    \"14.199.102.151\",\n+    \"18.27.79.17\",\n+    \"18.27.124.231\",\n+    \"18.216.249.151\",\n+    \"23.88.155.58\",\n+    \"23.93.101.158\",\n+    \"[2001:19f0:1000:1db3:5400:4ff:fe56:5a8d]\",\n+    \"[2001:19f0:5:24da:3eec:efff:feb9:f36e]\",\n+    \"[2001:19f0:5:24da::]\",\n+    \"[2001:19f0:5:4535:3eec:efff:feb9:87e4]\",\n+    \"[2001:19f0:5:4535::]\",\n+    \"[2001:1bc0:c1::2000]\",\n+    \"[2001:1c04:4008:6300:8a5f:2678:114b:a660]\",\n+    \"[2001:41d0:203:3739::]\",\n+    \"[2001:41d0:203:8f49::]\",\n+    \"[2001:41d0:203:bb0a::]\",\n+    \"[2001:41d0:2:bf8f::]\",\n+    \"[2001:41d0:303:de8b::]\",\n+    \"[2001:41d0:403:3d61::]\",\n+    \"[2001:41d0:405:9600::]\",\n+    \"[2001:41d0:8:ed7f::1]\",\n+    \"[2001:41d0:a:69a2::1]\",\n+    \"[2001:41f0::62:6974:636f:696e]\",\n+    \"[2001:470:1b62::]\",\n+    \"[2001:470:1f05:43b:2831:8530:7179:5864]\",\n+    \"[2001:470:1f09:b14::11]\",\n+    \"2bqghnldu6mcug4pikzprwhtjjnsyederctvci6klcwzepnjd46ikjyd.onion\",\n+    \"4lr3w2iyyl5u5l6tosizclykf5v3smqroqdn2i4h3kq6pfbbjb2xytad.onion\",\n+    \"5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion\",\n+    \"5sbmcl4m5api5tqafi4gcckrn3y52sz5mskxf3t6iw4bp7erwiptrgqd.onion\",\n+    \"776aegl7tfhg6oiqqy76jnwrwbvcytsx2qegcgh2mjqujll4376ohlid.onion\",\n+    \"77mdte42srl42shdh2mhtjr7nf7dmedqrw6bkcdekhdvmnld6ojyyiad.onion\",\n+    \"azbpsh4arqlm6442wfimy7qr65bmha2zhgjg7wbaji6vvaug53hur2qd.onion\",\n+    \"b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion\",\n+    \"bsqbtcparrfihlwolt4xgjbf4cgqckvrvsfyvy6vhiqrnh4w6ghixoid.onion\",\n+    \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\n+    \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\n+    \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\n+    \"devinbtctu7uctl7hly2juu3thbgeivfnvw3ckj3phy6nyvpnx66yeyd.onion\",\n+    \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\n+    \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\n+    \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\n+    \"emzybtc3ewh7zihpkdvuwlgxrhzcxy2p5fvjggp7ngjbxcytxvt4rjid.onion\",\n+    \"emzybtc454ewbviqnmgtgx3rgublsgkk23r4onbhidcv36wremue4kqd.onion\",\n+    \"emzybtc5bnpb2o6gh54oquiox54o4r7yn4a2wiiwzrjonlouaibm2zid.onion\",\n+    \"fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion\",\n+    \"255fhcp6ajvftnyo7bwz3an3t4a4brhopm3bamyh2iu5r3gnr2rq.b32.i2p\",\n+    \"27yrtht5b5bzom2w5ajb27najuqvuydtzb7bavlak25wkufec5mq.b32.i2p\",\n+    \"3gocb7wc4zvbmmebktet7gujccuux4ifk3kqilnxnj5wpdpqx2hq.b32.i2p\",\n+    \"4fcc23wt3hyjk3csfzcdyjz5pcwg5dzhdqgma6bch2qyiakcbboa.b32.i2p\",\n+    \"4osyqeknhx5qf3a73jeimexwclmt42cju6xdp7icja4ixxguu2hq.b32.i2p\",\n+    \"4umsi4nlmgyp4rckosg4vegd2ysljvid47zu7pqsollkaszcbpqq.b32.i2p\",\n+    \"6j2ezegd3e2e2x3o3pox335f5vxfthrrigkdrbgfbdjchm5h4awa.b32.i2p\",\n+    \"6n36ljyr55szci5ygidmxqer64qr24f4qmnymnbvgehz7qinxnla.b32.i2p\",\n+    \"72yjs6mvlby3ky6mgpvvlemmwq5pfcznrzd34jkhclgrishqdxva.b32.i2p\",\n+    \"a5qsnv3maw77mlmmzlcglu6twje6ttctd3fhpbfwcbpmewx6fczq.b32.i2p\",\n+    \"aovep2pco7v2k4rheofrgytbgk23eg22dczpsjqgqtxcqqvmxk6a.b32.i2p\",\n+    \"bitcoi656nll5hu6u7ddzrmzysdtwtnzcnrjd4rfdqbeey7dmn5a.b32.i2p\",\n+    \"brifkruhlkgrj65hffybrjrjqcgdgqs2r7siizb5b2232nruik3a.b32.i2p\",\n+    \"c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p\",\n+    \"day3hgxyrtwjslt54sikevbhxxs4qzo7d6vi72ipmscqtq3qmijq.b32.i2p\",\n+    \"du5kydummi23bjfp6bd7owsvrijgt7zhvxmz5h5f5spcioeoetwq.b32.i2p\",\n+    \"e55k6wu46rzp4pg5pk5npgbr3zz45bc3ihtzu2xcye5vwnzdy7pq.b32.i2p\",\n+    \"eciohu5nq7vsvwjjc52epskuk75d24iccgzmhbzrwonw6lx4gdva.b32.i2p\",\n+    \"ejlnngarmhqvune74ko7kk55xtgbz5i5ncs4vmnvjpy3l7y63xaa.b32.i2p\",\n+    \"fhzlp3xroabohnmjonu5iqazwhlbbwh5cpujvw2azcu3srqdceja.b32.i2p\",\n+    \"[fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa]\",\n+    \"[fcc7:be49:ccd1:dc91:3125:f0da:457d:8ce]\",\n+    \"[fcdc:73ae:b1a9:1bf8:d4c2:811:a4c7:c34e]\",\n+]\n+\n+class P2PPrivateBroadcast(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.disable_autoconnect = False\n+        self.num_nodes = 2\n+\n+    def setup_nodes(self):\n+        # Start a SOCKS5 proxy server.\n+        socks5_server_config = Socks5Configuration()\n+        # self.nodes[0] listens on p2p_port(0),\n+        # self.nodes[1] listens on p2p_port(1),\n+        # thus we tell the SOCKS5 server to listen on p2p_port(self.num_nodes (which is 2))\n+        socks5_server_config.addr = (\"127.0.0.1\", p2p_port(self.num_nodes))\n+        socks5_server_config.unauth = True\n+        socks5_server_config.auth = True\n+\n+        self.socks5_server = Socks5Server(socks5_server_config)\n+        self.socks5_server.start()\n+\n+        ports_base = p2p_port(MAX_NODES) + 15000\n+\n+        # Add 2 because one feeler and one extra block relay connections may\n+        # sneak in between the private broadcast connections.\n+        for i in range(NUM_INITIAL_CONNECTIONS + NUM_PRIVATE_BROADCAST_PER_TX + 2):\n+            if i == NUM_INITIAL_CONNECTIONS:\n+                # Instruct the SOCKS5 server to redirect the first private\n+                # broadcast connection from nodes[0] to nodes[1]\n+                self.socks5_server.conf.destinations.append({\n+                    \"to_addr\": \"127.0.0.1\", # nodes[1] listen address\n+                    \"to_port\": p2p_port(1), # nodes[1] listen port\n+                    \"node\": None,\n+                    \"requested_to_addr\": None,\n+                })\n+            else:\n+                # Create a Python P2P listening node and add it to self.socks5_server.conf.destinations[]\n+                listener = P2PInterface()\n+                listener.peer_connect_helper(dstaddr=\"0.0.0.0\", dstport=0, net=self.chain, timeout_factor=self.options.timeout_factor)\n+                listener.peer_connect_send_version(services=P2P_SERVICES)\n+                self.network_thread.listen(\n+                    p2p=listener,\n+                    # Instruct the SOCKS5 server to redirect a connection to this Python P2P listener.\n+                    callback=lambda addr, port: self.socks5_server.conf.destinations.append({\n+                        \"to_addr\": addr,\n+                        \"to_port\": port,\n+                        \"node\": None,\n+                        \"requested_to_addr\": None,\n+                    }),\n+                    addr=\"127.0.0.1\",\n+                    port=ports_base + i)\n+                # Wait until the callback has been called and it has done append().\n+                self.wait_until(lambda: len(self.socks5_server.conf.destinations) == i + 1)\n+\n+                self.socks5_server.conf.destinations[i][\"node\"] = listener\n+\n+        self.extra_args = [\n+            [\n+                \"-peerbloomfilters\", # needed to test replies to MEMPOOL\n+                \"-cjdnsreachable\", # needed to be able to add CJDNS addresses to addrman (otherwise they are unroutable).\n+                \"-privatebroadcast\",\n+                f\"-proxy={socks5_server_config.addr[0]}:{socks5_server_config.addr[1]}\",\n+            ],\n+            [\n+                \"-connect=0\",\n+                f\"-bind=127.0.0.1:{p2p_port(1)}=onion\", # consider all incoming as coming from Tor\n+            ],\n+        ]\n+        super().setup_nodes()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        tx_originator = self.nodes[0]\n+\n+        observer_inbound = tx_originator.add_p2p_connection(P2PDataStore())\n+\n+        # Fill tx_originator's addrman.\n+        for addr in addresses:\n+            res = tx_originator.addpeeraddress(address=addr, port=8333, tried=False)\n+            if res[\"success\"]:\n+                self.log.debug(f\"Added {addr} to tx_originator's addrman\")\n+            else:\n+                self.log.debug(f\"Could not add {addr} to tx_originator's addrman (collision?)\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1548220655",
      "id" : 1548220655,
      "in_reply_to_id" : 1546756330,
      "line" : 236,
      "node_id" : "PRRC_kwDOABII585cR_jv",
      "original_commit_id" : "413574e81ef4d608b9b0a2079f81a4e90ee2a341",
      "original_line" : 236,
      "original_position" : 235,
      "original_start_line" : null,
      "path" : "test/functional/p2p_private_broadcast.py",
      "position" : 236,
      "pull_request_review_id" : 1974375838,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1548220655/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-02T16:39:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1548220655",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`413574e81e...390e628a07`: rebase due to conflicts and address suggestion",
      "created_at" : "2024-04-02T16:40:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2032545515",
      "id" : 2032545515,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5855Ji7r",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2032545515/reactions"
      },
      "updated_at" : "2024-04-02T16:40:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2032545515",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1548540109"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1548540109"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n     * - Get a transaction for broadcast, the one that has been broadcast fewer times and least recently\r\n```",
      "commit_id" : "390e628a07ce62d32deae4bcfa1bdb31f5a0e125",
      "created_at" : "2024-04-02T19:59:59Z",
      "diff_hunk" : "@@ -1097,6 +1101,58 @@ class PeerManagerImpl final : public PeerManager\n \n     void AddAddressKnown(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\n     void PushAddress(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\n+\n+    /**\n+     * Store a list of transactions to be broadcast privately. Supports the following operations:\n+     * - Add a new transaction\n+     * - Remove a transaction, after it has been seen by the network\n+     * - Mark a broadcast of a transaction (remember when and how many times)\n+     * - Get a transaction for broadcast, the one that has been broadcast less times and least recently",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1548540109",
      "id" : 1548540109,
      "line" : 1121,
      "node_id" : "PRRC_kwDOABII585cTNjN",
      "original_commit_id" : "08c017b640a8d928f2b0ac32f1040e4b8372ae5f",
      "original_line" : 1110,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 66,
      "pull_request_review_id" : 1974917244,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1548540109/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-02T21:56:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1548540109",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1548572949"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1548572949"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n         * Get the transaction that has been broadcast fewest times and least recently.\r\n```",
      "commit_id" : "390e628a07ce62d32deae4bcfa1bdb31f5a0e125",
      "created_at" : "2024-04-02T20:34:47Z",
      "diff_hunk" : "@@ -1122,6 +1130,72 @@ class PeerManagerImpl final : public PeerManager\n             }\n         }\n \n+        /**\n+         * Get the transaction that has been broadcast less times and least recently.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1548572949",
      "id" : 1548572949,
      "line" : 1155,
      "node_id" : "PRRC_kwDOABII585cTVkV",
      "original_commit_id" : "e03f1b1eb04df0c3deead36d70c014f758e3647f",
      "original_line" : 1134,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 100,
      "pull_request_review_id" : 1974917244,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1548572949/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-02T21:56:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1548572949",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1548580964"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1548580964"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: This could be `const` method?",
      "commit_id" : "390e628a07ce62d32deae4bcfa1bdb31f5a0e125",
      "created_at" : "2024-04-02T20:43:01Z",
      "diff_hunk" : "@@ -1143,15 +1217,41 @@ class PeerManagerImpl final : public PeerManager\n \n         using ByTxid = std::unordered_map<Txid, TxWithPriority, SaltedTxidHasher>;\n         using ByPriority = std::multimap<Priority, Txid>;\n+        using ByNodeId = std::unordered_map<NodeId, Txid>;\n \n         struct Iterators {\n             ByTxid::iterator by_txid;\n             ByPriority::iterator by_priority;\n         };\n \n+        /**\n+         * Get iterators in `m_by_txid` and `m_by_priority` for a given transaction.\n+         */\n+        std::optional<Iterators> Find(const Txid& txid) EXCLUSIVE_LOCKS_REQUIRED(m_mutex)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1548580964",
      "id" : 1548580964,
      "line" : 1264,
      "node_id" : "PRRC_kwDOABII585cTXhk",
      "original_commit_id" : "e03f1b1eb04df0c3deead36d70c014f758e3647f",
      "original_line" : 1230,
      "original_position" : 113,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 209,
      "pull_request_review_id" : 1974917244,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1548580964/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-02T21:56:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1548580964",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1548596412"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1548596412"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Since we're touching these lines, maybe update to `LogPrintLevel`?",
      "commit_id" : "390e628a07ce62d32deae4bcfa1bdb31f5a0e125",
      "created_at" : "2024-04-02T20:55:59Z",
      "diff_hunk" : "@@ -1593,26 +1693,53 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    MakeAndPushMessage(pnode, NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, CNetAddr::V1(addr_you), // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CNetAddr::V1(CService{}), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay);\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsPrivateBroadcastConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";\n+        my_height = 0;\n+        my_tx_relay = false;\n+    } else {\n+        CAddress addr{pnode.addr};\n+\n+        my_services = peer.m_our_services;\n+        my_time = count_seconds(GetTime<std::chrono::seconds>());\n+        your_services = addr.nServices;\n+        your_addr = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService{};\n+        my_user_agent = strSubVersion;\n+        my_height = m_best_height;\n+        my_tx_relay = !RejectIncomingTxs(pnode);\n+    }\n+\n+    MakeAndPushMessage(\n+        pnode,\n+        NetMsgType::VERSION,\n+        PROTOCOL_VERSION,\n+        my_services,\n+        my_time,\n+        // your_services + CNetAddr::V1(your_addr) is the pre-version-31402 serialization of your_addr (without nTime)\n+        your_services, CNetAddr::V1(your_addr),\n+        // same, for a dummy address\n+        my_services, CNetAddr::V1(CService{}),\n+        pnode.GetLocalNonce(),\n+        my_user_agent,\n+        my_height,\n+        my_tx_relay);\n+\n+    const NodeId nodeid{pnode.GetId()};\n     if (fLogIPs) {\n-        LogPrint(BCLog::NET, \"send version message: version %d, blocks=%d, them=%s, txrelay=%d, peer=%d\\n\", PROTOCOL_VERSION, nNodeStartingHeight, addr_you.ToStringAddrPort(), tx_relay, nodeid);\n+        LogPrint(BCLog::NET, \"send version message: version %d, blocks=%d, them=%s, txrelay=%d, peer=%d\\n\", PROTOCOL_VERSION, my_height, your_addr.ToStringAddrPort(), my_tx_relay, nodeid);\n     } else {\n-        LogPrint(BCLog::NET, \"send version message: version %d, blocks=%d, txrelay=%d, peer=%d\\n\", PROTOCOL_VERSION, nNodeStartingHeight, tx_relay, nodeid);\n+        LogPrint(BCLog::NET, \"send version message: version %d, blocks=%d, txrelay=%d, peer=%d\\n\", PROTOCOL_VERSION, my_height, my_tx_relay, nodeid);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1548596412",
      "id" : 1548596412,
      "line" : 1776,
      "node_id" : "PRRC_kwDOABII585cTbS8",
      "original_commit_id" : "e03f1b1eb04df0c3deead36d70c014f758e3647f",
      "original_line" : 1742,
      "original_position" : 209,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 306,
      "pull_request_review_id" : 1974917244,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1548596412/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-02T21:56:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1548596412",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1551588051"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1551588051"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Indeed the `Find()` method does not modify any of the members. I tried to make it `const`, but it has to return non-const iterators to the members... :(",
      "commit_id" : "9297437af2c2f45a7b9a12be78fa0e597c54ac79",
      "created_at" : "2024-04-04T12:30:10Z",
      "diff_hunk" : "@@ -1143,15 +1217,41 @@ class PeerManagerImpl final : public PeerManager\n \n         using ByTxid = std::unordered_map<Txid, TxWithPriority, SaltedTxidHasher>;\n         using ByPriority = std::multimap<Priority, Txid>;\n+        using ByNodeId = std::unordered_map<NodeId, Txid>;\n \n         struct Iterators {\n             ByTxid::iterator by_txid;\n             ByPriority::iterator by_priority;\n         };\n \n+        /**\n+         * Get iterators in `m_by_txid` and `m_by_priority` for a given transaction.\n+         */\n+        std::optional<Iterators> Find(const Txid& txid) EXCLUSIVE_LOCKS_REQUIRED(m_mutex)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1551588051",
      "id" : 1551588051,
      "in_reply_to_id" : 1548580964,
      "line" : 1264,
      "node_id" : "PRRC_kwDOABII585ce1rT",
      "original_commit_id" : "e03f1b1eb04df0c3deead36d70c014f758e3647f",
      "original_line" : 1264,
      "original_position" : 113,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 209,
      "pull_request_review_id" : 1979741566,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1551588051/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-04T12:30:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1551588051",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1551600727"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1551600727"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "9297437af2c2f45a7b9a12be78fa0e597c54ac79",
      "created_at" : "2024-04-04T12:38:01Z",
      "diff_hunk" : "@@ -1097,6 +1101,58 @@ class PeerManagerImpl final : public PeerManager\n \n     void AddAddressKnown(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\n     void PushAddress(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\n+\n+    /**\n+     * Store a list of transactions to be broadcast privately. Supports the following operations:\n+     * - Add a new transaction\n+     * - Remove a transaction, after it has been seen by the network\n+     * - Mark a broadcast of a transaction (remember when and how many times)\n+     * - Get a transaction for broadcast, the one that has been broadcast less times and least recently",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1551600727",
      "id" : 1551600727,
      "in_reply_to_id" : 1548540109,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ce4xX",
      "original_commit_id" : "08c017b640a8d928f2b0ac32f1040e4b8372ae5f",
      "original_line" : 1110,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1979762724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1551600727/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-04T12:38:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1551600727",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1551600883"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1551600883"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "9297437af2c2f45a7b9a12be78fa0e597c54ac79",
      "created_at" : "2024-04-04T12:38:08Z",
      "diff_hunk" : "@@ -1122,6 +1130,72 @@ class PeerManagerImpl final : public PeerManager\n             }\n         }\n \n+        /**\n+         * Get the transaction that has been broadcast less times and least recently.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1551600883",
      "id" : 1551600883,
      "in_reply_to_id" : 1548572949,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ce4zz",
      "original_commit_id" : "e03f1b1eb04df0c3deead36d70c014f758e3647f",
      "original_line" : 1134,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1979763009,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1551600883/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-04T12:38:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1551600883",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1551601200"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1551601200"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "9297437af2c2f45a7b9a12be78fa0e597c54ac79",
      "created_at" : "2024-04-04T12:38:20Z",
      "diff_hunk" : "@@ -1593,26 +1693,53 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    MakeAndPushMessage(pnode, NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, CNetAddr::V1(addr_you), // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CNetAddr::V1(CService{}), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay);\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsPrivateBroadcastConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";\n+        my_height = 0;\n+        my_tx_relay = false;\n+    } else {\n+        CAddress addr{pnode.addr};\n+\n+        my_services = peer.m_our_services;\n+        my_time = count_seconds(GetTime<std::chrono::seconds>());\n+        your_services = addr.nServices;\n+        your_addr = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService{};\n+        my_user_agent = strSubVersion;\n+        my_height = m_best_height;\n+        my_tx_relay = !RejectIncomingTxs(pnode);\n+    }\n+\n+    MakeAndPushMessage(\n+        pnode,\n+        NetMsgType::VERSION,\n+        PROTOCOL_VERSION,\n+        my_services,\n+        my_time,\n+        // your_services + CNetAddr::V1(your_addr) is the pre-version-31402 serialization of your_addr (without nTime)\n+        your_services, CNetAddr::V1(your_addr),\n+        // same, for a dummy address\n+        my_services, CNetAddr::V1(CService{}),\n+        pnode.GetLocalNonce(),\n+        my_user_agent,\n+        my_height,\n+        my_tx_relay);\n+\n+    const NodeId nodeid{pnode.GetId()};\n     if (fLogIPs) {\n-        LogPrint(BCLog::NET, \"send version message: version %d, blocks=%d, them=%s, txrelay=%d, peer=%d\\n\", PROTOCOL_VERSION, nNodeStartingHeight, addr_you.ToStringAddrPort(), tx_relay, nodeid);\n+        LogPrint(BCLog::NET, \"send version message: version %d, blocks=%d, them=%s, txrelay=%d, peer=%d\\n\", PROTOCOL_VERSION, my_height, your_addr.ToStringAddrPort(), my_tx_relay, nodeid);\n     } else {\n-        LogPrint(BCLog::NET, \"send version message: version %d, blocks=%d, txrelay=%d, peer=%d\\n\", PROTOCOL_VERSION, nNodeStartingHeight, tx_relay, nodeid);\n+        LogPrint(BCLog::NET, \"send version message: version %d, blocks=%d, txrelay=%d, peer=%d\\n\", PROTOCOL_VERSION, my_height, my_tx_relay, nodeid);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1551601200",
      "id" : 1551601200,
      "in_reply_to_id" : 1548596412,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ce44w",
      "original_commit_id" : "e03f1b1eb04df0c3deead36d70c014f758e3647f",
      "original_line" : 1742,
      "original_position" : 209,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1979763592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1551601200/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-04T12:38:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1551601200",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`390e628a07...9297437af2`: rebase and address suggestions\r\n\r\n> Do we need test coverage for retrying stale txs and having multiple concurrent txs queued for private broadcast?\r\n\r\nYes.",
      "created_at" : "2024-04-04T12:39:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2037088808",
      "id" : 2037088808,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5855a4Io",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2037088808/reactions"
      },
      "updated_at" : "2024-04-04T12:39:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2037088808",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1554905733"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1554905733"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "With regards to this comment and:\r\n\r\n> We pick a random Tor (or I2P) peer.\r\n\r\nTo increase success rate and reduce latency, clearnet peers could be also be selected when using Tor, without harming privacy of broadcast...\r\n\r\nClearnet connections only need one Tor circuit, whereas hidden service connections which require two circuits for the connecting peer and one from the accepting peer.\r\n\r\nFurthermore, if SOCKS proxy credentials are reused for the broadcast of a single transaction (but not all transactions in the private broadcast queue), multiple connections could share the same circuit/exit node. This specific optimization does introduce a censorship risk (even if BIP 324 is used [edit: *due*] to the MITM consideration) and there precedent for such malicious exit nodes.\r\n\r\nFrom a privacy standpoint both optimizations would be more or less equivalent to broadcasting through isolated connections to peers with hidden service addresses, since the origin is still protected and being able to link these connections does not aid in deanonymization since these connections all pertain to the same data.\r\n\r\nThe main rationale for these optimizations is that Tor daemon builds circuits sequentially, and does not keep many built circuits in reserve (IIRC 2 unless their construction is explicitly requested through the control socket), so when SOCKS connections are opened with distinct credentials the connection establishment and time to first byte will typically scale linearly in the order that the SOCKS connections are accepted by tor daemon itself, and since building a new circuit can take on the order of seconds.",
      "commit_id" : "fd603b8f5c23c171e1cff70a73f5d64d6d74c4f7",
      "created_at" : "2024-04-07T10:34:05Z",
      "diff_hunk" : "@@ -2440,6 +2500,11 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         LogPrintf(\"Fixed seeds are disabled\\n\");\n     }\n \n+    // Private broadcast connections are opened with priority over others, but only half\n+    // of the time to avoid depriving other connection types if private broadcast is\n+    // needed but opening such connections is unsuccessful for some reason.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1554905733",
      "id" : 1554905733,
      "line" : 2555,
      "node_id" : "PRRC_kwDOABII585crfqF",
      "original_commit_id" : "fe57027b3ef3164ce3eaeac877edce613782f3ed",
      "original_line" : 2555,
      "original_position" : 82,
      "original_start_line" : 2503,
      "path" : "src/net.cpp",
      "position" : 160,
      "pull_request_review_id" : 1984991157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1554905733/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 2553,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-04-08T16:36:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1554905733",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14242?v=4",
         "events_url" : "https://api.github.com/users/nothingmuch/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nothingmuch/followers",
         "following_url" : "https://api.github.com/users/nothingmuch/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nothingmuch/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nothingmuch",
         "id" : 14242,
         "login" : "nothingmuch",
         "node_id" : "MDQ6VXNlcjE0MjQy",
         "organizations_url" : "https://api.github.com/users/nothingmuch/orgs",
         "received_events_url" : "https://api.github.com/users/nothingmuch/received_events",
         "repos_url" : "https://api.github.com/users/nothingmuch/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nothingmuch/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nothingmuch/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nothingmuch"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1555541188"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1555541188"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 9297437af2c2f45a7b9a12be78fa0e597c54ac79: Since the addrman is deterministic now, you can remove addresses that are conflicting.\r\n\r\n```diff\r\n--- a/test/functional/p2p_private_broadcast.py\r\n+++ b/test/functional/p2p_private_broadcast.py\r\n@@ -118,7 +118,6 @@ addresses = [\r\n     \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\r\n     \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\r\n     \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\r\n-    \"devinbtctu7uctl7hly2juu3thbgeivfnvw3ckj3phy6nyvpnx66yeyd.onion\",\r\n     \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\r\n     \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\r\n     \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\r\n```",
      "commit_id" : "9297437af2c2f45a7b9a12be78fa0e597c54ac79",
      "created_at" : "2024-04-08T09:48:36Z",
      "diff_hunk" : "@@ -0,0 +1,312 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when private broadcast is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (tx_originator)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The private broadcast TX recipients\n+               |   |       (NUM_PRIVATE_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> Bitcoin Core (node1) (self.socks5_server.conf.destinations[i][\"node\"] is None)\n+               |   |                          ^\n+               |   |                          *----< P2PInterface (far_observer) (to check Bitcoin Core relays the tx)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< P2PDataStore (observer_inbound)\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+NUM_INITIAL_CONNECTIONS = MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS\n+NUM_PRIVATE_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for private broadcast.\n+addresses = [",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1555541188",
      "id" : 1555541188,
      "line" : 68,
      "node_id" : "PRRC_kwDOABII585ct6zE",
      "original_commit_id" : "9297437af2c2f45a7b9a12be78fa0e597c54ac79",
      "original_line" : 68,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "test/functional/p2p_private_broadcast.py",
      "position" : 68,
      "pull_request_review_id" : 1985948537,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1555541188/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-08T12:27:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1555541188",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1555757479"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1555757479"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Also, maybe we do not need this verification anymore?\r\n```py\r\nif res[\"success\"]:\r\n    self.log.info(f\"Added {addr} to tx_originator's addrman\")\r\nelse:\r\n    self.log.info(f\"Could not add {addr} to tx_originator's addrman (collision?)\")\r\n```",
      "commit_id" : "9297437af2c2f45a7b9a12be78fa0e597c54ac79",
      "created_at" : "2024-04-08T12:37:21Z",
      "diff_hunk" : "@@ -0,0 +1,312 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when private broadcast is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (tx_originator)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The private broadcast TX recipients\n+               |   |       (NUM_PRIVATE_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> Bitcoin Core (node1) (self.socks5_server.conf.destinations[i][\"node\"] is None)\n+               |   |                          ^\n+               |   |                          *----< P2PInterface (far_observer) (to check Bitcoin Core relays the tx)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< P2PDataStore (observer_inbound)\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+NUM_INITIAL_CONNECTIONS = MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS\n+NUM_PRIVATE_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for private broadcast.\n+addresses = [",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1555757479",
      "id" : 1555757479,
      "in_reply_to_id" : 1555541188,
      "line" : 68,
      "node_id" : "PRRC_kwDOABII585cuvmn",
      "original_commit_id" : "9297437af2c2f45a7b9a12be78fa0e597c54ac79",
      "original_line" : 68,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "test/functional/p2p_private_broadcast.py",
      "position" : 68,
      "pull_request_review_id" : 1986301219,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1555757479/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-08T12:37:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1555757479",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`9297437af2...cc760207b8`: rebase and address suggestions:\r\n\r\n* Give a startup warning if `-privatebroadcast=1`, `-proxyrandomize=0` and the Tor network is reachable (i.e. we will use Tor for private broadcast).\r\n* Enforce `-walletbroadcast=0` if `-privatebroadcast=1` because it would be confusing to have the wallet do the traditional broadcast while the `sendrawtransaction` RPC does a private broadcast. Furthermore if a wallet transaction is sent via `sendrawtransaction` and ends up in the mempool from outside and is not mined for some time, then the wallet will try to broadcast it using the traditional mechanism.\r\n* Private broadcast also to IPv4 and IPv6 peers (!) through the Tor proxy.\r\n* Remove conflicting Tor address from the functional test and don't log every address added to addrman.\r\n",
      "created_at" : "2024-04-23T17:21:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2072977453",
      "id" : 2072977453,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5857jyAt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2072977453/reactions"
      },
      "updated_at" : "2024-04-23T17:21:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2072977453",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1576618058"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1576618058"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Right, removed the conflicting address and reduced the logging to log only if adding to the addrman fails.",
      "commit_id" : "fd603b8f5c23c171e1cff70a73f5d64d6d74c4f7",
      "created_at" : "2024-04-23T17:22:15Z",
      "diff_hunk" : "@@ -0,0 +1,312 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when private broadcast is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (tx_originator)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The private broadcast TX recipients\n+               |   |       (NUM_PRIVATE_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> Bitcoin Core (node1) (self.socks5_server.conf.destinations[i][\"node\"] is None)\n+               |   |                          ^\n+               |   |                          *----< P2PInterface (far_observer) (to check Bitcoin Core relays the tx)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< P2PDataStore (observer_inbound)\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+NUM_INITIAL_CONNECTIONS = MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS\n+NUM_PRIVATE_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for private broadcast.\n+addresses = [",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1576618058",
      "id" : 1576618058,
      "in_reply_to_id" : 1555541188,
      "line" : 68,
      "node_id" : "PRRC_kwDOABII585d-UhK",
      "original_commit_id" : "9297437af2c2f45a7b9a12be78fa0e597c54ac79",
      "original_line" : 68,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "test/functional/p2p_private_broadcast.py",
      "position" : 68,
      "pull_request_review_id" : 2017849197,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1576618058/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-23T17:22:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1576618058",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1576619537"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1576619537"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I added broadcast to IPv4 and IPv6 peers through the Tor proxy. Thanks!",
      "commit_id" : "fd603b8f5c23c171e1cff70a73f5d64d6d74c4f7",
      "created_at" : "2024-04-23T17:23:17Z",
      "diff_hunk" : "@@ -2440,6 +2500,11 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         LogPrintf(\"Fixed seeds are disabled\\n\");\n     }\n \n+    // Private broadcast connections are opened with priority over others, but only half\n+    // of the time to avoid depriving other connection types if private broadcast is\n+    // needed but opening such connections is unsuccessful for some reason.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1576619537",
      "id" : 1576619537,
      "in_reply_to_id" : 1554905733,
      "line" : 2555,
      "node_id" : "PRRC_kwDOABII585d-U4R",
      "original_commit_id" : "fe57027b3ef3164ce3eaeac877edce613782f3ed",
      "original_line" : 2555,
      "original_position" : 82,
      "original_start_line" : 2503,
      "path" : "src/net.cpp",
      "position" : 160,
      "pull_request_review_id" : 2017851486,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1576619537/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 2553,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-04-23T17:23:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1576619537",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Avoiding already connected peers would work around this, but perhaps it's sufficient just to warn on startup if privatebroadcast=1 and proxyrandomize=0\r\n\r\nIn `master` we already avoid connecting to an already connected address, regardless of the connection type:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/256e1703197fdddd78bc6d659431cd0fc3b63cde/src/net.cpp#L2862\r\n\r\nI added a startup warning anyway.\r\n\r\n\r\n\r\n> > > I assume you are restricting the feature to sendraw so the wallet doesn't get involved and try something silly like rebroadcasting over clearnet or inserting in to our own mempool?\r\n\r\n> > The reason to omit the wallet is that it currently does not count non-mempool change.\r\n\r\n> If I understand correctly, the concern with rebroadcasting still applies, but in the case that private broadcast was successful?\r\n\r\nYes, I enforced `walletbroadcast=0` to avoid the wallet rebroadcasting.",
      "created_at" : "2024-04-23T17:27:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2072989163",
      "id" : 2072989163,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5857j03r",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2072989163/reactions"
      },
      "updated_at" : "2024-04-23T17:28:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2072989163",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`cc760207b8...ea1ca3715e`: adjust `feature_config_args.py` after forbidding `-walletbroadcast` when `-privatebroadcast` is enabled.",
      "created_at" : "2024-04-24T07:30:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2074267427",
      "id" : 2074267427,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5857os8j",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2074267427/reactions"
      },
      "updated_at" : "2024-04-24T07:30:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2074267427",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1578537557"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1578537557"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "have you considered using `SoftSetBoolArg` to set `-walletbroadcast` to 0 if `-privatebroadcast` was chosen?\r\nIt's not the most user-friendly thing to introduce a new command arg that would only work if another arg was also changed from its default.",
      "commit_id" : "fd603b8f5c23c171e1cff70a73f5d64d6d74c4f7",
      "created_at" : "2024-04-24T21:25:09Z",
      "diff_hunk" : "@@ -120,6 +120,12 @@ bool WalletInit::ParameterInteraction() const\n         LogPrintf(\"%s: parameter interaction: -blocksonly=1 -> setting -walletbroadcast=0\\n\", __func__);\n     }\n \n+    if (gArgs.GetBoolArg(\"-privatebroadcast\", DEFAULT_PRIVATE_BROADCAST) &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1578537557",
      "id" : 1578537557,
      "line" : 123,
      "node_id" : "PRRC_kwDOABII585eFpJV",
      "original_commit_id" : "1407b3fa264b096813281a767da3cd3ca80ed096",
      "original_line" : 123,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/init.cpp",
      "position" : 4,
      "pull_request_review_id" : 2020968807,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1578537557/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-25T22:34:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1578537557",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1579852847"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1579852847"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think this requires an update to `tor.md`, which currently says:\r\n`-onion=ip:port  Set the proxy server to use for Tor onion services. You do not need to set this if it's the same as -proxy.`\r\nAfter this PR, specifiying it explicitly is necessary if you want to do private broadcast to clearnet peers.",
      "commit_id" : "fd603b8f5c23c171e1cff70a73f5d64d6d74c4f7",
      "created_at" : "2024-04-25T17:12:46Z",
      "diff_hunk" : "@@ -386,6 +386,27 @@ static CAddress GetBindAddress(const Sock& sock)\n     return addr_bind;\n }\n \n+/**\n+ * Check if private broadcast can be done to clearnet peers and if yes via which proxy.\n+ * If private broadcast connections should not be opened to `net`, then this will return an empty optional.\n+ */\n+static std::optional<Proxy> ProxyForClearnetPrivateBroadcast(Network clearnet)\n+{\n+    if (clearnet != NET_IPV4 && clearnet != NET_IPV6) {\n+        return std::nullopt;\n+    }\n+    Proxy tor_proxy;\n+    const std::string onion_arg{gArgs.GetArg(\"-onion\", \"\")};\n+    if (onion_arg != \"\" && onion_arg == \"0\" && GetProxy(NET_ONION, tor_proxy)) {\n+        // Use the Tor proxy (if provided) for private broadcast connections to clearnet peers.\n+        // Note: we check whether -onion is explicitly used because GetProxy(NET_ONION) may",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1579852847",
      "id" : 1579852847,
      "line" : 411,
      "node_id" : "PRRC_kwDOABII585eKqQv",
      "original_commit_id" : "6b4693ee859d6bddf559a0b32749b1dafe015ef4",
      "original_line" : 402,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 35,
      "pull_request_review_id" : 2020968807,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1579852847/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-25T22:34:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1579852847",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1579854025"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1579854025"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You probably meant `onion_arg != \"0\"`",
      "commit_id" : "fd603b8f5c23c171e1cff70a73f5d64d6d74c4f7",
      "created_at" : "2024-04-25T17:13:04Z",
      "diff_hunk" : "@@ -386,6 +386,27 @@ static CAddress GetBindAddress(const Sock& sock)\n     return addr_bind;\n }\n \n+/**\n+ * Check if private broadcast can be done to clearnet peers and if yes via which proxy.\n+ * If private broadcast connections should not be opened to `net`, then this will return an empty optional.\n+ */\n+static std::optional<Proxy> ProxyForClearnetPrivateBroadcast(Network clearnet)\n+{\n+    if (clearnet != NET_IPV4 && clearnet != NET_IPV6) {\n+        return std::nullopt;\n+    }\n+    Proxy tor_proxy;\n+    const std::string onion_arg{gArgs.GetArg(\"-onion\", \"\")};\n+    if (onion_arg != \"\" && onion_arg == \"0\" && GetProxy(NET_ONION, tor_proxy)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1579854025",
      "id" : 1579854025,
      "line" : 409,
      "node_id" : "PRRC_kwDOABII585eKqjJ",
      "original_commit_id" : "6b4693ee859d6bddf559a0b32749b1dafe015ef4",
      "original_line" : 400,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 33,
      "pull_request_review_id" : 2020968807,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1579854025/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-25T22:34:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1579854025",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1580115581"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1580115581"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It looks like we make sure in `net_processing` to not send any of theses messages, and here we check again. I haven't thought about this long, but can this log be triggered, or could this be an `Assume(false)` instead?",
      "commit_id" : "fd603b8f5c23c171e1cff70a73f5d64d6d74c4f7",
      "created_at" : "2024-04-25T20:55:11Z",
      "diff_hunk" : "@@ -3898,6 +3907,23 @@ bool CConnman::NodeFullyConnected(const CNode* pnode)\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     AssertLockNotHeld(m_total_bytes_sent_mutex);\n+\n+    if (pnode->IsPrivateBroadcastConn() &&\n+        msg.m_type != NetMsgType::VERSION &&\n+        msg.m_type != NetMsgType::VERACK &&\n+        msg.m_type != NetMsgType::TX &&\n+        msg.m_type != NetMsgType::PING) {\n+        // Ensure private broadcast connections only send the above message types.\n+        // Others are not needed and may degrade privacy.\n+        LogPrintLevel(BCLog::PRIVATE_BROADCAST,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1580115581",
      "id" : 1580115581,
      "line" : 3920,
      "node_id" : "PRRC_kwDOABII585eLqZ9",
      "original_commit_id" : "ae6651d267895342c2794b62bf1f2e6d15867778",
      "original_line" : 3918,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 392,
      "pull_request_review_id" : 2020968807,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1580115581/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-25T22:34:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1580115581",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-04-25T21:14:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2078185727",
      "id" : 2078185727,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII58573pj_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2078185727/reactions"
      },
      "updated_at" : "2024-04-25T21:14:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2078185727",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1580149990"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1580149990"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This class is getting pretty large in the end, maybe put it into its own module (similar to `TxReconciliationTracker` or `TxRequestTracker`)",
      "commit_id" : "fd603b8f5c23c171e1cff70a73f5d64d6d74c4f7",
      "created_at" : "2024-04-25T21:20:19Z",
      "diff_hunk" : "@@ -1097,6 +1101,58 @@ class PeerManagerImpl final : public PeerManager\n \n     void AddAddressKnown(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\n     void PushAddress(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\n+\n+    /**\n+     * Store a list of transactions to be broadcast privately. Supports the following operations:\n+     * - Add a new transaction\n+     * - Remove a transaction, after it has been seen by the network\n+     * - Mark a broadcast of a transaction (remember when and how many times)\n+     * - Get a transaction for broadcast, the one that has been broadcast fewer times and least recently\n+     */\n+    class PrivateBroadcast\n+    {\n+    public:\n+        void Add(const CTransactionRef& tx) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+        {\n+            const Txid& txid = tx->GetHash();\n+            LOCK(m_mutex);\n+            auto [pos, inserted] = m_by_txid.emplace(txid, TxWithPriority{.tx = tx, .priority = Priority{}});\n+            if (inserted) {\n+                m_by_priority.emplace(Priority{}, txid);\n+            }\n+        }\n+\n+    private:\n+        struct Priority {\n+            size_t num_broadcasted{0};\n+            std::chrono::microseconds last_broadcasted{0};\n+\n+            bool operator<(const Priority& other) const\n+            {\n+                if (num_broadcasted < other.num_broadcasted) {\n+                    return true;\n+                }\n+                return last_broadcasted < other.last_broadcasted;\n+            }\n+        };\n+\n+        struct TxWithPriority {\n+            CTransactionRef tx;\n+            Priority priority;\n+        };\n+\n+        using ByTxid = std::unordered_map<Txid, TxWithPriority, SaltedTxidHasher>;\n+        using ByPriority = std::multimap<Priority, Txid>;\n+\n+        struct Iterators {\n+            ByTxid::iterator by_txid;\n+            ByPriority::iterator by_priority;\n+        };\n+\n+        mutable Mutex m_mutex;\n+        ByTxid m_by_txid GUARDED_BY(m_mutex);\n+        ByPriority m_by_priority GUARDED_BY(m_mutex);\n+    } m_tx_for_private_broadcast;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1580149990",
      "id" : 1580149990,
      "line" : 1289,
      "node_id" : "PRRC_kwDOABII585eLyzm",
      "original_commit_id" : "4a5433c3c8681198cfa342f8112e70828fa0ac04",
      "original_line" : 1155,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 234,
      "pull_request_review_id" : 2020968807,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1580149990/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-25T22:34:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1580149990",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1580200865"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1580200865"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think is needed, `MEMPOOL` is never tested.",
      "commit_id" : "fd603b8f5c23c171e1cff70a73f5d64d6d74c4f7",
      "created_at" : "2024-04-25T22:23:19Z",
      "diff_hunk" : "@@ -0,0 +1,309 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when private broadcast is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (tx_originator)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The private broadcast TX recipients\n+               |   |       (NUM_PRIVATE_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> Bitcoin Core (node1) (self.socks5_server.conf.destinations[i][\"node\"] is None)\n+               |   |                          ^\n+               |   |                          *----< P2PInterface (far_observer) (to check Bitcoin Core relays the tx)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< P2PDataStore (observer_inbound)\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+NUM_INITIAL_CONNECTIONS = MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS\n+NUM_PRIVATE_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for private broadcast.\n+addresses = [\n+    \"1.65.195.98\",\n+    \"2.59.236.56\",\n+    \"2.83.114.20\",\n+    \"2.248.194.16\",\n+    \"5.2.154.6\",\n+    \"5.101.140.30\",\n+    \"5.128.87.126\",\n+    \"5.144.21.49\",\n+    \"5.172.132.104\",\n+    \"5.188.62.18\",\n+    \"5.200.2.180\",\n+    \"8.129.184.255\",\n+    \"8.209.105.138\",\n+    \"12.34.98.148\",\n+    \"14.199.102.151\",\n+    \"18.27.79.17\",\n+    \"18.27.124.231\",\n+    \"18.216.249.151\",\n+    \"23.88.155.58\",\n+    \"23.93.101.158\",\n+    \"[2001:19f0:1000:1db3:5400:4ff:fe56:5a8d]\",\n+    \"[2001:19f0:5:24da:3eec:efff:feb9:f36e]\",\n+    \"[2001:19f0:5:24da::]\",\n+    \"[2001:19f0:5:4535:3eec:efff:feb9:87e4]\",\n+    \"[2001:19f0:5:4535::]\",\n+    \"[2001:1bc0:c1::2000]\",\n+    \"[2001:1c04:4008:6300:8a5f:2678:114b:a660]\",\n+    \"[2001:41d0:203:3739::]\",\n+    \"[2001:41d0:203:8f49::]\",\n+    \"[2001:41d0:203:bb0a::]\",\n+    \"[2001:41d0:2:bf8f::]\",\n+    \"[2001:41d0:303:de8b::]\",\n+    \"[2001:41d0:403:3d61::]\",\n+    \"[2001:41d0:405:9600::]\",\n+    \"[2001:41d0:8:ed7f::1]\",\n+    \"[2001:41d0:a:69a2::1]\",\n+    \"[2001:41f0::62:6974:636f:696e]\",\n+    \"[2001:470:1b62::]\",\n+    \"[2001:470:1f05:43b:2831:8530:7179:5864]\",\n+    \"[2001:470:1f09:b14::11]\",\n+    \"2bqghnldu6mcug4pikzprwhtjjnsyederctvci6klcwzepnjd46ikjyd.onion\",\n+    \"4lr3w2iyyl5u5l6tosizclykf5v3smqroqdn2i4h3kq6pfbbjb2xytad.onion\",\n+    \"5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion\",\n+    \"5sbmcl4m5api5tqafi4gcckrn3y52sz5mskxf3t6iw4bp7erwiptrgqd.onion\",\n+    \"776aegl7tfhg6oiqqy76jnwrwbvcytsx2qegcgh2mjqujll4376ohlid.onion\",\n+    \"77mdte42srl42shdh2mhtjr7nf7dmedqrw6bkcdekhdvmnld6ojyyiad.onion\",\n+    \"azbpsh4arqlm6442wfimy7qr65bmha2zhgjg7wbaji6vvaug53hur2qd.onion\",\n+    \"b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion\",\n+    \"bsqbtcparrfihlwolt4xgjbf4cgqckvrvsfyvy6vhiqrnh4w6ghixoid.onion\",\n+    \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\n+    \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\n+    \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\n+    \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\n+    \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\n+    \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\n+    \"emzybtc3ewh7zihpkdvuwlgxrhzcxy2p5fvjggp7ngjbxcytxvt4rjid.onion\",\n+    \"emzybtc454ewbviqnmgtgx3rgublsgkk23r4onbhidcv36wremue4kqd.onion\",\n+    \"emzybtc5bnpb2o6gh54oquiox54o4r7yn4a2wiiwzrjonlouaibm2zid.onion\",\n+    \"fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion\",\n+    \"255fhcp6ajvftnyo7bwz3an3t4a4brhopm3bamyh2iu5r3gnr2rq.b32.i2p\",\n+    \"27yrtht5b5bzom2w5ajb27najuqvuydtzb7bavlak25wkufec5mq.b32.i2p\",\n+    \"3gocb7wc4zvbmmebktet7gujccuux4ifk3kqilnxnj5wpdpqx2hq.b32.i2p\",\n+    \"4fcc23wt3hyjk3csfzcdyjz5pcwg5dzhdqgma6bch2qyiakcbboa.b32.i2p\",\n+    \"4osyqeknhx5qf3a73jeimexwclmt42cju6xdp7icja4ixxguu2hq.b32.i2p\",\n+    \"4umsi4nlmgyp4rckosg4vegd2ysljvid47zu7pqsollkaszcbpqq.b32.i2p\",\n+    \"6j2ezegd3e2e2x3o3pox335f5vxfthrrigkdrbgfbdjchm5h4awa.b32.i2p\",\n+    \"6n36ljyr55szci5ygidmxqer64qr24f4qmnymnbvgehz7qinxnla.b32.i2p\",\n+    \"72yjs6mvlby3ky6mgpvvlemmwq5pfcznrzd34jkhclgrishqdxva.b32.i2p\",\n+    \"a5qsnv3maw77mlmmzlcglu6twje6ttctd3fhpbfwcbpmewx6fczq.b32.i2p\",\n+    \"aovep2pco7v2k4rheofrgytbgk23eg22dczpsjqgqtxcqqvmxk6a.b32.i2p\",\n+    \"bitcoi656nll5hu6u7ddzrmzysdtwtnzcnrjd4rfdqbeey7dmn5a.b32.i2p\",\n+    \"brifkruhlkgrj65hffybrjrjqcgdgqs2r7siizb5b2232nruik3a.b32.i2p\",\n+    \"c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p\",\n+    \"day3hgxyrtwjslt54sikevbhxxs4qzo7d6vi72ipmscqtq3qmijq.b32.i2p\",\n+    \"du5kydummi23bjfp6bd7owsvrijgt7zhvxmz5h5f5spcioeoetwq.b32.i2p\",\n+    \"e55k6wu46rzp4pg5pk5npgbr3zz45bc3ihtzu2xcye5vwnzdy7pq.b32.i2p\",\n+    \"eciohu5nq7vsvwjjc52epskuk75d24iccgzmhbzrwonw6lx4gdva.b32.i2p\",\n+    \"ejlnngarmhqvune74ko7kk55xtgbz5i5ncs4vmnvjpy3l7y63xaa.b32.i2p\",\n+    \"fhzlp3xroabohnmjonu5iqazwhlbbwh5cpujvw2azcu3srqdceja.b32.i2p\",\n+    \"[fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa]\",\n+    \"[fcc7:be49:ccd1:dc91:3125:f0da:457d:8ce]\",\n+    \"[fcdc:73ae:b1a9:1bf8:d4c2:811:a4c7:c34e]\",\n+]\n+\n+class P2PPrivateBroadcast(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.disable_autoconnect = False\n+        self.num_nodes = 2\n+\n+    def setup_nodes(self):\n+        # Start a SOCKS5 proxy server.\n+        socks5_server_config = Socks5Configuration()\n+        # self.nodes[0] listens on p2p_port(0),\n+        # self.nodes[1] listens on p2p_port(1),\n+        # thus we tell the SOCKS5 server to listen on p2p_port(self.num_nodes (which is 2))\n+        socks5_server_config.addr = (\"127.0.0.1\", p2p_port(self.num_nodes))\n+        socks5_server_config.unauth = True\n+        socks5_server_config.auth = True\n+\n+        self.socks5_server = Socks5Server(socks5_server_config)\n+        self.socks5_server.start()\n+\n+        ports_base = p2p_port(MAX_NODES) + 15000\n+\n+        # Add 2 because one feeler and one extra block relay connections may\n+        # sneak in between the private broadcast connections.\n+        for i in range(NUM_INITIAL_CONNECTIONS + NUM_PRIVATE_BROADCAST_PER_TX + 2):\n+            if i == NUM_INITIAL_CONNECTIONS:\n+                # Instruct the SOCKS5 server to redirect the first private\n+                # broadcast connection from nodes[0] to nodes[1]\n+                self.socks5_server.conf.destinations.append({\n+                    \"to_addr\": \"127.0.0.1\", # nodes[1] listen address\n+                    \"to_port\": p2p_port(1), # nodes[1] listen port\n+                    \"node\": None,\n+                    \"requested_to_addr\": None,\n+                })\n+            else:\n+                # Create a Python P2P listening node and add it to self.socks5_server.conf.destinations[]\n+                listener = P2PInterface()\n+                listener.peer_connect_helper(dstaddr=\"0.0.0.0\", dstport=0, net=self.chain, timeout_factor=self.options.timeout_factor)\n+                listener.peer_connect_send_version(services=P2P_SERVICES)\n+                self.network_thread.listen(\n+                    p2p=listener,\n+                    # Instruct the SOCKS5 server to redirect a connection to this Python P2P listener.\n+                    callback=lambda addr, port: self.socks5_server.conf.destinations.append({\n+                        \"to_addr\": addr,\n+                        \"to_port\": port,\n+                        \"node\": None,\n+                        \"requested_to_addr\": None,\n+                    }),\n+                    addr=\"127.0.0.1\",\n+                    port=ports_base + i)\n+                # Wait until the callback has been called and it has done append().\n+                self.wait_until(lambda: len(self.socks5_server.conf.destinations) == i + 1)\n+\n+                self.socks5_server.conf.destinations[i][\"node\"] = listener\n+\n+        self.extra_args = [\n+            [\n+                \"-peerbloomfilters\", # needed to test replies to MEMPOOL",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1580200865",
      "id" : 1580200865,
      "line" : 208,
      "node_id" : "PRRC_kwDOABII585eL_Oh",
      "original_commit_id" : "fd603b8f5c23c171e1cff70a73f5d64d6d74c4f7",
      "original_line" : 208,
      "original_position" : 208,
      "original_start_line" : null,
      "path" : "test/functional/p2p_private_broadcast.py",
      "position" : 208,
      "pull_request_review_id" : 2020968807,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1580200865/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-25T22:34:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1580200865",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1580205599"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1580205599"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "sendrawtransaction doc should be updated (it already mentions privacy issues).",
      "commit_id" : "fd603b8f5c23c171e1cff70a73f5d64d6d74c4f7",
      "created_at" : "2024-04-25T22:30:44Z",
      "diff_hunk" : "@@ -91,11 +94,23 @@ static RPCHelpMan sendrawtransaction()\n             std::string err_string;\n             AssertLockNotHeld(cs_main);\n             NodeContext& node = EnsureAnyNodeContext(request.context);\n+            const bool private_broadcast_enabled{gArgs.GetBoolArg(\"-privatebroadcast\", DEFAULT_PRIVATE_BROADCAST)};\n+            if (private_broadcast_enabled &&\n+                !g_reachable_nets.Contains(NET_ONION) &&\n+                !g_reachable_nets.Contains(NET_I2P)) {\n+                throw JSONRPCError(RPC_MISC_ERROR,\n+                                   \"-privatebroadcast is enabled, but none of the Tor or I2P networks is \"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1580205599",
      "id" : 1580205599,
      "line" : 102,
      "node_id" : "PRRC_kwDOABII585eMAYf",
      "original_commit_id" : "180e51a723520f530bb675e937eeaabebcc0b0b5",
      "original_line" : 102,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 24,
      "pull_request_review_id" : 2020968807,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1580205599/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-25T22:34:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1580205599",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1584709863"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1584709863"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 6b4693ee859d6bddf559a0b32749b1dafe015ef4 \"net: implement opening PRIVATE_BROADCAST connections\": Just a question: why using `compare_exchange_weak` instead of `fetch_sub`? ",
      "commit_id" : "fd603b8f5c23c171e1cff70a73f5d64d6d74c4f7",
      "created_at" : "2024-04-30T12:22:03Z",
      "diff_hunk" : "@@ -2883,6 +3013,34 @@ void CConnman::OpenNetworkConnection(const CAddress& addrConnect, bool fCountFai\n     }\n }\n \n+void CConnman::PrivateBroadcastAdd(size_t n)\n+{\n+    const size_t before{m_private_broadcast_connections_to_open.fetch_add(n)};\n+\n+    LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                  BCLog::Level::Debug,\n+                  \"Request to increment the needed new connections by %d, changed from %d to %d\\n\",\n+                  n,\n+                  before,\n+                  before + n);\n+}\n+\n+void CConnman::PrivateBroadcastSub(size_t n)\n+{\n+    size_t before{m_private_broadcast_connections_to_open.load()};\n+    size_t desired;\n+    do {\n+        desired = before > n ? before - n : 0;\n+    } while (!m_private_broadcast_connections_to_open.compare_exchange_weak(before, desired));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1584709863",
      "id" : 1584709863,
      "line" : 3043,
      "node_id" : "PRRC_kwDOABII585edMDn",
      "original_commit_id" : "6b4693ee859d6bddf559a0b32749b1dafe015ef4",
      "original_line" : 3034,
      "original_position" : 261,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 365,
      "pull_request_review_id" : 2031166535,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1584709863/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-30T12:22:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1584709863",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`fd603b8f5c...42cb080600`: rebase and address suggestions",
      "created_at" : "2024-05-01T13:40:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2088480026",
      "id" : 2088480026,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII5858e60a",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2088480026/reactions"
      },
      "updated_at" : "2024-05-01T13:40:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2088480026",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1586316212"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586316212"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, but I did not like the behavior of the wallet \"unexpectedly\" stopping to broadcast its own transactions because `-privatebroadcast` is enabled.\r\n\r\n> It's not the most user-friendly thing to introduce a new command arg that would only work if another arg was also changed from its default.\r\n\r\nYes, I agree. I do not like that either but somewhat prefer it over automatically switching off wallet broadcast. I can imagine GUI users who enable `-privatebroadcast` and still try to send transactions from their wallets and have no clue why they are not being mined.\r\n\r\nLeaving this open to discussion and proposals.",
      "commit_id" : "7a0debb8fbd1a6f2b49ff4f33defe103e73dcb8a",
      "created_at" : "2024-05-01T13:46:03Z",
      "diff_hunk" : "@@ -120,6 +120,12 @@ bool WalletInit::ParameterInteraction() const\n         LogPrintf(\"%s: parameter interaction: -blocksonly=1 -> setting -walletbroadcast=0\\n\", __func__);\n     }\n \n+    if (gArgs.GetBoolArg(\"-privatebroadcast\", DEFAULT_PRIVATE_BROADCAST) &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1586316212",
      "id" : 1586316212,
      "in_reply_to_id" : 1578537557,
      "line" : 123,
      "node_id" : "PRRC_kwDOABII585ejUO0",
      "original_commit_id" : "1407b3fa264b096813281a767da3cd3ca80ed096",
      "original_line" : 123,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/init.cpp",
      "position" : 4,
      "pull_request_review_id" : 2033662158,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586316212/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-01T13:46:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586316212",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1586317728"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586317728"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated.",
      "commit_id" : "7a0debb8fbd1a6f2b49ff4f33defe103e73dcb8a",
      "created_at" : "2024-05-01T13:47:33Z",
      "diff_hunk" : "@@ -386,6 +386,27 @@ static CAddress GetBindAddress(const Sock& sock)\n     return addr_bind;\n }\n \n+/**\n+ * Check if private broadcast can be done to clearnet peers and if yes via which proxy.\n+ * If private broadcast connections should not be opened to `net`, then this will return an empty optional.\n+ */\n+static std::optional<Proxy> ProxyForClearnetPrivateBroadcast(Network clearnet)\n+{\n+    if (clearnet != NET_IPV4 && clearnet != NET_IPV6) {\n+        return std::nullopt;\n+    }\n+    Proxy tor_proxy;\n+    const std::string onion_arg{gArgs.GetArg(\"-onion\", \"\")};\n+    if (onion_arg != \"\" && onion_arg == \"0\" && GetProxy(NET_ONION, tor_proxy)) {\n+        // Use the Tor proxy (if provided) for private broadcast connections to clearnet peers.\n+        // Note: we check whether -onion is explicitly used because GetProxy(NET_ONION) may",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1586317728",
      "id" : 1586317728,
      "in_reply_to_id" : 1579852847,
      "line" : 411,
      "node_id" : "PRRC_kwDOABII585ejUmg",
      "original_commit_id" : "6b4693ee859d6bddf559a0b32749b1dafe015ef4",
      "original_line" : 411,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 35,
      "pull_request_review_id" : 2033664674,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586317728/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-01T13:47:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586317728",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1586317921"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586317921"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, fixed!",
      "commit_id" : "7a0debb8fbd1a6f2b49ff4f33defe103e73dcb8a",
      "created_at" : "2024-05-01T13:47:45Z",
      "diff_hunk" : "@@ -386,6 +386,27 @@ static CAddress GetBindAddress(const Sock& sock)\n     return addr_bind;\n }\n \n+/**\n+ * Check if private broadcast can be done to clearnet peers and if yes via which proxy.\n+ * If private broadcast connections should not be opened to `net`, then this will return an empty optional.\n+ */\n+static std::optional<Proxy> ProxyForClearnetPrivateBroadcast(Network clearnet)\n+{\n+    if (clearnet != NET_IPV4 && clearnet != NET_IPV6) {\n+        return std::nullopt;\n+    }\n+    Proxy tor_proxy;\n+    const std::string onion_arg{gArgs.GetArg(\"-onion\", \"\")};\n+    if (onion_arg != \"\" && onion_arg == \"0\" && GetProxy(NET_ONION, tor_proxy)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1586317921",
      "id" : 1586317921,
      "in_reply_to_id" : 1579854025,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ejUph",
      "original_commit_id" : "6b4693ee859d6bddf559a0b32749b1dafe015ef4",
      "original_line" : 400,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 2033664971,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586317921/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-01T13:47:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586317921",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1586318759"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586318759"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Added `Assume(false)` and a comment.",
      "commit_id" : "7a0debb8fbd1a6f2b49ff4f33defe103e73dcb8a",
      "created_at" : "2024-05-01T13:48:14Z",
      "diff_hunk" : "@@ -3898,6 +3907,23 @@ bool CConnman::NodeFullyConnected(const CNode* pnode)\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     AssertLockNotHeld(m_total_bytes_sent_mutex);\n+\n+    if (pnode->IsPrivateBroadcastConn() &&\n+        msg.m_type != NetMsgType::VERSION &&\n+        msg.m_type != NetMsgType::VERACK &&\n+        msg.m_type != NetMsgType::TX &&\n+        msg.m_type != NetMsgType::PING) {\n+        // Ensure private broadcast connections only send the above message types.\n+        // Others are not needed and may degrade privacy.\n+        LogPrintLevel(BCLog::PRIVATE_BROADCAST,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1586318759",
      "id" : 1586318759,
      "in_reply_to_id" : 1580115581,
      "line" : 3982,
      "node_id" : "PRRC_kwDOABII585ejU2n",
      "original_commit_id" : "ae6651d267895342c2794b62bf1f2e6d15867778",
      "original_line" : 3982,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 402,
      "pull_request_review_id" : 2033666558,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586318759/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-01T13:48:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586318759",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1586319178"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586319178"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, I was thinking the same. Moved away.",
      "commit_id" : "7a0debb8fbd1a6f2b49ff4f33defe103e73dcb8a",
      "created_at" : "2024-05-01T13:48:37Z",
      "diff_hunk" : "@@ -1097,6 +1101,58 @@ class PeerManagerImpl final : public PeerManager\n \n     void AddAddressKnown(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\n     void PushAddress(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\n+\n+    /**\n+     * Store a list of transactions to be broadcast privately. Supports the following operations:\n+     * - Add a new transaction\n+     * - Remove a transaction, after it has been seen by the network\n+     * - Mark a broadcast of a transaction (remember when and how many times)\n+     * - Get a transaction for broadcast, the one that has been broadcast fewer times and least recently\n+     */\n+    class PrivateBroadcast\n+    {\n+    public:\n+        void Add(const CTransactionRef& tx) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+        {\n+            const Txid& txid = tx->GetHash();\n+            LOCK(m_mutex);\n+            auto [pos, inserted] = m_by_txid.emplace(txid, TxWithPriority{.tx = tx, .priority = Priority{}});\n+            if (inserted) {\n+                m_by_priority.emplace(Priority{}, txid);\n+            }\n+        }\n+\n+    private:\n+        struct Priority {\n+            size_t num_broadcasted{0};\n+            std::chrono::microseconds last_broadcasted{0};\n+\n+            bool operator<(const Priority& other) const\n+            {\n+                if (num_broadcasted < other.num_broadcasted) {\n+                    return true;\n+                }\n+                return last_broadcasted < other.last_broadcasted;\n+            }\n+        };\n+\n+        struct TxWithPriority {\n+            CTransactionRef tx;\n+            Priority priority;\n+        };\n+\n+        using ByTxid = std::unordered_map<Txid, TxWithPriority, SaltedTxidHasher>;\n+        using ByPriority = std::multimap<Priority, Txid>;\n+\n+        struct Iterators {\n+            ByTxid::iterator by_txid;\n+            ByPriority::iterator by_priority;\n+        };\n+\n+        mutable Mutex m_mutex;\n+        ByTxid m_by_txid GUARDED_BY(m_mutex);\n+        ByPriority m_by_priority GUARDED_BY(m_mutex);\n+    } m_tx_for_private_broadcast;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1586319178",
      "id" : 1586319178,
      "in_reply_to_id" : 1580149990,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ejU9K",
      "original_commit_id" : "4a5433c3c8681198cfa342f8112e70828fa0ac04",
      "original_line" : 1155,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 2033667197,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586319178/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-01T13:48:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586319178",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1586319383"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586319383"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Removed.",
      "commit_id" : "7a0debb8fbd1a6f2b49ff4f33defe103e73dcb8a",
      "created_at" : "2024-05-01T13:48:50Z",
      "diff_hunk" : "@@ -0,0 +1,309 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when private broadcast is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (tx_originator)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The private broadcast TX recipients\n+               |   |       (NUM_PRIVATE_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> Bitcoin Core (node1) (self.socks5_server.conf.destinations[i][\"node\"] is None)\n+               |   |                          ^\n+               |   |                          *----< P2PInterface (far_observer) (to check Bitcoin Core relays the tx)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< P2PDataStore (observer_inbound)\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+NUM_INITIAL_CONNECTIONS = MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS\n+NUM_PRIVATE_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for private broadcast.\n+addresses = [\n+    \"1.65.195.98\",\n+    \"2.59.236.56\",\n+    \"2.83.114.20\",\n+    \"2.248.194.16\",\n+    \"5.2.154.6\",\n+    \"5.101.140.30\",\n+    \"5.128.87.126\",\n+    \"5.144.21.49\",\n+    \"5.172.132.104\",\n+    \"5.188.62.18\",\n+    \"5.200.2.180\",\n+    \"8.129.184.255\",\n+    \"8.209.105.138\",\n+    \"12.34.98.148\",\n+    \"14.199.102.151\",\n+    \"18.27.79.17\",\n+    \"18.27.124.231\",\n+    \"18.216.249.151\",\n+    \"23.88.155.58\",\n+    \"23.93.101.158\",\n+    \"[2001:19f0:1000:1db3:5400:4ff:fe56:5a8d]\",\n+    \"[2001:19f0:5:24da:3eec:efff:feb9:f36e]\",\n+    \"[2001:19f0:5:24da::]\",\n+    \"[2001:19f0:5:4535:3eec:efff:feb9:87e4]\",\n+    \"[2001:19f0:5:4535::]\",\n+    \"[2001:1bc0:c1::2000]\",\n+    \"[2001:1c04:4008:6300:8a5f:2678:114b:a660]\",\n+    \"[2001:41d0:203:3739::]\",\n+    \"[2001:41d0:203:8f49::]\",\n+    \"[2001:41d0:203:bb0a::]\",\n+    \"[2001:41d0:2:bf8f::]\",\n+    \"[2001:41d0:303:de8b::]\",\n+    \"[2001:41d0:403:3d61::]\",\n+    \"[2001:41d0:405:9600::]\",\n+    \"[2001:41d0:8:ed7f::1]\",\n+    \"[2001:41d0:a:69a2::1]\",\n+    \"[2001:41f0::62:6974:636f:696e]\",\n+    \"[2001:470:1b62::]\",\n+    \"[2001:470:1f05:43b:2831:8530:7179:5864]\",\n+    \"[2001:470:1f09:b14::11]\",\n+    \"2bqghnldu6mcug4pikzprwhtjjnsyederctvci6klcwzepnjd46ikjyd.onion\",\n+    \"4lr3w2iyyl5u5l6tosizclykf5v3smqroqdn2i4h3kq6pfbbjb2xytad.onion\",\n+    \"5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion\",\n+    \"5sbmcl4m5api5tqafi4gcckrn3y52sz5mskxf3t6iw4bp7erwiptrgqd.onion\",\n+    \"776aegl7tfhg6oiqqy76jnwrwbvcytsx2qegcgh2mjqujll4376ohlid.onion\",\n+    \"77mdte42srl42shdh2mhtjr7nf7dmedqrw6bkcdekhdvmnld6ojyyiad.onion\",\n+    \"azbpsh4arqlm6442wfimy7qr65bmha2zhgjg7wbaji6vvaug53hur2qd.onion\",\n+    \"b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion\",\n+    \"bsqbtcparrfihlwolt4xgjbf4cgqckvrvsfyvy6vhiqrnh4w6ghixoid.onion\",\n+    \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\n+    \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\n+    \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\n+    \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\n+    \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\n+    \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\n+    \"emzybtc3ewh7zihpkdvuwlgxrhzcxy2p5fvjggp7ngjbxcytxvt4rjid.onion\",\n+    \"emzybtc454ewbviqnmgtgx3rgublsgkk23r4onbhidcv36wremue4kqd.onion\",\n+    \"emzybtc5bnpb2o6gh54oquiox54o4r7yn4a2wiiwzrjonlouaibm2zid.onion\",\n+    \"fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion\",\n+    \"255fhcp6ajvftnyo7bwz3an3t4a4brhopm3bamyh2iu5r3gnr2rq.b32.i2p\",\n+    \"27yrtht5b5bzom2w5ajb27najuqvuydtzb7bavlak25wkufec5mq.b32.i2p\",\n+    \"3gocb7wc4zvbmmebktet7gujccuux4ifk3kqilnxnj5wpdpqx2hq.b32.i2p\",\n+    \"4fcc23wt3hyjk3csfzcdyjz5pcwg5dzhdqgma6bch2qyiakcbboa.b32.i2p\",\n+    \"4osyqeknhx5qf3a73jeimexwclmt42cju6xdp7icja4ixxguu2hq.b32.i2p\",\n+    \"4umsi4nlmgyp4rckosg4vegd2ysljvid47zu7pqsollkaszcbpqq.b32.i2p\",\n+    \"6j2ezegd3e2e2x3o3pox335f5vxfthrrigkdrbgfbdjchm5h4awa.b32.i2p\",\n+    \"6n36ljyr55szci5ygidmxqer64qr24f4qmnymnbvgehz7qinxnla.b32.i2p\",\n+    \"72yjs6mvlby3ky6mgpvvlemmwq5pfcznrzd34jkhclgrishqdxva.b32.i2p\",\n+    \"a5qsnv3maw77mlmmzlcglu6twje6ttctd3fhpbfwcbpmewx6fczq.b32.i2p\",\n+    \"aovep2pco7v2k4rheofrgytbgk23eg22dczpsjqgqtxcqqvmxk6a.b32.i2p\",\n+    \"bitcoi656nll5hu6u7ddzrmzysdtwtnzcnrjd4rfdqbeey7dmn5a.b32.i2p\",\n+    \"brifkruhlkgrj65hffybrjrjqcgdgqs2r7siizb5b2232nruik3a.b32.i2p\",\n+    \"c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p\",\n+    \"day3hgxyrtwjslt54sikevbhxxs4qzo7d6vi72ipmscqtq3qmijq.b32.i2p\",\n+    \"du5kydummi23bjfp6bd7owsvrijgt7zhvxmz5h5f5spcioeoetwq.b32.i2p\",\n+    \"e55k6wu46rzp4pg5pk5npgbr3zz45bc3ihtzu2xcye5vwnzdy7pq.b32.i2p\",\n+    \"eciohu5nq7vsvwjjc52epskuk75d24iccgzmhbzrwonw6lx4gdva.b32.i2p\",\n+    \"ejlnngarmhqvune74ko7kk55xtgbz5i5ncs4vmnvjpy3l7y63xaa.b32.i2p\",\n+    \"fhzlp3xroabohnmjonu5iqazwhlbbwh5cpujvw2azcu3srqdceja.b32.i2p\",\n+    \"[fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa]\",\n+    \"[fcc7:be49:ccd1:dc91:3125:f0da:457d:8ce]\",\n+    \"[fcdc:73ae:b1a9:1bf8:d4c2:811:a4c7:c34e]\",\n+]\n+\n+class P2PPrivateBroadcast(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.disable_autoconnect = False\n+        self.num_nodes = 2\n+\n+    def setup_nodes(self):\n+        # Start a SOCKS5 proxy server.\n+        socks5_server_config = Socks5Configuration()\n+        # self.nodes[0] listens on p2p_port(0),\n+        # self.nodes[1] listens on p2p_port(1),\n+        # thus we tell the SOCKS5 server to listen on p2p_port(self.num_nodes (which is 2))\n+        socks5_server_config.addr = (\"127.0.0.1\", p2p_port(self.num_nodes))\n+        socks5_server_config.unauth = True\n+        socks5_server_config.auth = True\n+\n+        self.socks5_server = Socks5Server(socks5_server_config)\n+        self.socks5_server.start()\n+\n+        ports_base = p2p_port(MAX_NODES) + 15000\n+\n+        # Add 2 because one feeler and one extra block relay connections may\n+        # sneak in between the private broadcast connections.\n+        for i in range(NUM_INITIAL_CONNECTIONS + NUM_PRIVATE_BROADCAST_PER_TX + 2):\n+            if i == NUM_INITIAL_CONNECTIONS:\n+                # Instruct the SOCKS5 server to redirect the first private\n+                # broadcast connection from nodes[0] to nodes[1]\n+                self.socks5_server.conf.destinations.append({\n+                    \"to_addr\": \"127.0.0.1\", # nodes[1] listen address\n+                    \"to_port\": p2p_port(1), # nodes[1] listen port\n+                    \"node\": None,\n+                    \"requested_to_addr\": None,\n+                })\n+            else:\n+                # Create a Python P2P listening node and add it to self.socks5_server.conf.destinations[]\n+                listener = P2PInterface()\n+                listener.peer_connect_helper(dstaddr=\"0.0.0.0\", dstport=0, net=self.chain, timeout_factor=self.options.timeout_factor)\n+                listener.peer_connect_send_version(services=P2P_SERVICES)\n+                self.network_thread.listen(\n+                    p2p=listener,\n+                    # Instruct the SOCKS5 server to redirect a connection to this Python P2P listener.\n+                    callback=lambda addr, port: self.socks5_server.conf.destinations.append({\n+                        \"to_addr\": addr,\n+                        \"to_port\": port,\n+                        \"node\": None,\n+                        \"requested_to_addr\": None,\n+                    }),\n+                    addr=\"127.0.0.1\",\n+                    port=ports_base + i)\n+                # Wait until the callback has been called and it has done append().\n+                self.wait_until(lambda: len(self.socks5_server.conf.destinations) == i + 1)\n+\n+                self.socks5_server.conf.destinations[i][\"node\"] = listener\n+\n+        self.extra_args = [\n+            [\n+                \"-peerbloomfilters\", # needed to test replies to MEMPOOL",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1586319383",
      "id" : 1586319383,
      "in_reply_to_id" : 1580200865,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ejVAX",
      "original_commit_id" : "fd603b8f5c23c171e1cff70a73f5d64d6d74c4f7",
      "original_line" : 208,
      "original_position" : 208,
      "original_start_line" : null,
      "path" : "test/functional/p2p_private_broadcast.py",
      "position" : null,
      "pull_request_review_id" : 2033667535,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586319383/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-01T13:48:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586319383",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1586319507"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586319507"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated.",
      "commit_id" : "7a0debb8fbd1a6f2b49ff4f33defe103e73dcb8a",
      "created_at" : "2024-05-01T13:48:58Z",
      "diff_hunk" : "@@ -91,11 +94,23 @@ static RPCHelpMan sendrawtransaction()\n             std::string err_string;\n             AssertLockNotHeld(cs_main);\n             NodeContext& node = EnsureAnyNodeContext(request.context);\n+            const bool private_broadcast_enabled{gArgs.GetBoolArg(\"-privatebroadcast\", DEFAULT_PRIVATE_BROADCAST)};\n+            if (private_broadcast_enabled &&\n+                !g_reachable_nets.Contains(NET_ONION) &&\n+                !g_reachable_nets.Contains(NET_I2P)) {\n+                throw JSONRPCError(RPC_MISC_ERROR,\n+                                   \"-privatebroadcast is enabled, but none of the Tor or I2P networks is \"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1586319507",
      "id" : 1586319507,
      "in_reply_to_id" : 1580205599,
      "line" : 111,
      "node_id" : "PRRC_kwDOABII585ejVCT",
      "original_commit_id" : "180e51a723520f530bb675e937eeaabebcc0b0b5",
      "original_line" : 111,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 49,
      "pull_request_review_id" : 2033667725,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586319507/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-01T13:48:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586319507",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1586320176"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586320176"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "To avoid negative values. I added a comment in the source code to explain.",
      "commit_id" : "7a0debb8fbd1a6f2b49ff4f33defe103e73dcb8a",
      "created_at" : "2024-05-01T13:49:51Z",
      "diff_hunk" : "@@ -2883,6 +3013,34 @@ void CConnman::OpenNetworkConnection(const CAddress& addrConnect, bool fCountFai\n     }\n }\n \n+void CConnman::PrivateBroadcastAdd(size_t n)\n+{\n+    const size_t before{m_private_broadcast_connections_to_open.fetch_add(n)};\n+\n+    LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                  BCLog::Level::Debug,\n+                  \"Request to increment the needed new connections by %d, changed from %d to %d\\n\",\n+                  n,\n+                  before,\n+                  before + n);\n+}\n+\n+void CConnman::PrivateBroadcastSub(size_t n)\n+{\n+    size_t before{m_private_broadcast_connections_to_open.load()};\n+    size_t desired;\n+    do {\n+        desired = before > n ? before - n : 0;\n+    } while (!m_private_broadcast_connections_to_open.compare_exchange_weak(before, desired));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1586320176",
      "id" : 1586320176,
      "in_reply_to_id" : 1584709863,
      "line" : 3105,
      "node_id" : "PRRC_kwDOABII585ejVMw",
      "original_commit_id" : "6b4693ee859d6bddf559a0b32749b1dafe015ef4",
      "original_line" : 3105,
      "original_position" : 261,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 375,
      "pull_request_review_id" : 2033668893,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586320176/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-01T13:49:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586320176",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1586454646"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586454646"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This was triggered in the fuzz tests. I could complicate the fuzz tests to avoid sending unwanted messages if the random node happens to be a private broadcast, but `CConnman::PushMessage()` is called from a lot of places including from the RPC and that may change in the future as well. It is somewhat hard to judge that nobody will call `PushMessage()` with an unwanted message. Thus I think it is better to assume that this is the real check here in `CConnman::PushMessage()` and that the one in `PeerManagerImpl::SendMessages()` is an optimization. Removed the `Assume(false)`.",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-01T15:59:47Z",
      "diff_hunk" : "@@ -3898,6 +3907,23 @@ bool CConnman::NodeFullyConnected(const CNode* pnode)\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     AssertLockNotHeld(m_total_bytes_sent_mutex);\n+\n+    if (pnode->IsPrivateBroadcastConn() &&\n+        msg.m_type != NetMsgType::VERSION &&\n+        msg.m_type != NetMsgType::VERACK &&\n+        msg.m_type != NetMsgType::TX &&\n+        msg.m_type != NetMsgType::PING) {\n+        // Ensure private broadcast connections only send the above message types.\n+        // Others are not needed and may degrade privacy.\n+        LogPrintLevel(BCLog::PRIVATE_BROADCAST,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1586454646",
      "id" : 1586454646,
      "in_reply_to_id" : 1580115581,
      "line" : 3982,
      "node_id" : "PRRC_kwDOABII585ej2B2",
      "original_commit_id" : "ae6651d267895342c2794b62bf1f2e6d15867778",
      "original_line" : 3982,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 402,
      "pull_request_review_id" : 2033880606,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586454646/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-01T15:59:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586454646",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1591511159"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1591511159"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I was pretty confused about this, maybe because I misunderstood the proposal. By just reading what the help for `-privatebroadcast` I wouldn't assume that transactions made using the wallet won't be broadcast. My understanding was that anything done via the wallet would work as usual, but that transactions sent via `sendrawtransaction` would use the private broadcast mechanism if set.\r\n\r\nI think this should be mentioned in the help of `-privatebroadcast`.",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-06T20:18:49Z",
      "diff_hunk" : "@@ -120,6 +120,12 @@ bool WalletInit::ParameterInteraction() const\n         LogPrintf(\"%s: parameter interaction: -blocksonly=1 -> setting -walletbroadcast=0\\n\", __func__);\n     }\n \n+    if (gArgs.GetBoolArg(\"-privatebroadcast\", DEFAULT_PRIVATE_BROADCAST) &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1591511159",
      "id" : 1591511159,
      "in_reply_to_id" : 1578537557,
      "line" : 123,
      "node_id" : "PRRC_kwDOABII585e3Ih3",
      "original_commit_id" : "1407b3fa264b096813281a767da3cd3ca80ed096",
      "original_line" : 123,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/init.cpp",
      "position" : 4,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1591511159/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1591511159",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1591513311"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1591513311"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd go with priv, but just my opinion",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-06T20:21:06Z",
      "diff_hunk" : "@@ -655,11 +656,12 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         \"           \\\"in\\\"  - inbound connections are those initiated by the peer\\n\"\n         \"           \\\"out\\\" - outbound connections are those initiated by us\\n\"\n         \"  type     Type of peer connection\\n\"\n-        \"           \\\"full\\\"   - full relay, the default\\n\"\n-        \"           \\\"block\\\"  - block relay; like full relay but does not relay transactions or addresses\\n\"\n-        \"           \\\"manual\\\" - peer we manually added using RPC addnode or the -addnode/-connect config options\\n\"\n-        \"           \\\"feeler\\\" - short-lived connection for testing addresses\\n\"\n-        \"           \\\"addr\\\"   - address fetch; short-lived connection for requesting addresses\\n\"\n+        \"           \\\"full\\\"      - full relay, the default\\n\"\n+        \"           \\\"block\\\"     - block relay; like full relay but does not relay transactions or addresses\\n\"\n+        \"           \\\"manual\\\"    - peer we manually added using RPC addnode or the -addnode/-connect config options\\n\"\n+        \"           \\\"feeler\\\"    - short-lived connection for testing addresses\\n\"\n+        \"           \\\"addr\\\"      - address fetch; short-lived connection for requesting addresses\\n\"\n+        \"           \\\"privat\\\"    - private broadcast; short-lived connection for broadcasting our transactions\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1591513311",
      "id" : 1591513311,
      "in_reply_to_id" : 1545397035,
      "line" : 662,
      "node_id" : "PRRC_kwDOABII585e3JDf",
      "original_commit_id" : "c7e4d5cb2bf01d9719702e71c8d6264ee670e988",
      "original_line" : 662,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 22,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1591513311/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1591513311",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1595556422"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595556422"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd\r\n\r\nWhat is the rationale for 64? That seems like a lot of connections.",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-09T14:48:50Z",
      "diff_hunk" : "@@ -71,6 +71,8 @@ static const int MAX_ADDNODE_CONNECTIONS = 8;\n static const int MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2;\n /** Maximum number of feeler connections */\n static const int MAX_FEELER_CONNECTIONS = 1;\n+/** Maximum number of private broadcast connections */\n+static constexpr size_t MAX_PRIVATE_BROADCAST_CONNECTIONS{64};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1595556422",
      "id" : 1595556422,
      "line" : 75,
      "node_id" : "PRRC_kwDOABII585fGkJG",
      "original_commit_id" : "0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd",
      "original_line" : 75,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 5,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595556422/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595556422",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1595743723"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595743723"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is there no better way of checking whether `-proxy` is an actual Tor proxy or just a regular SOCKS5 proxy? It feels like the amount of custom settings that this will require to run will make it hard to use",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-09T17:15:24Z",
      "diff_hunk" : "@@ -386,6 +386,27 @@ static CAddress GetBindAddress(const Sock& sock)\n     return addr_bind;\n }\n \n+/**\n+ * Check if private broadcast can be done to clearnet peers and if yes via which proxy.\n+ * If private broadcast connections should not be opened to `net`, then this will return an empty optional.\n+ */\n+static std::optional<Proxy> ProxyForClearnetPrivateBroadcast(Network clearnet)\n+{\n+    if (clearnet != NET_IPV4 && clearnet != NET_IPV6) {\n+        return std::nullopt;\n+    }\n+    Proxy tor_proxy;\n+    const std::string onion_arg{gArgs.GetArg(\"-onion\", \"\")};\n+    if (onion_arg != \"\" && onion_arg == \"0\" && GetProxy(NET_ONION, tor_proxy)) {\n+        // Use the Tor proxy (if provided) for private broadcast connections to clearnet peers.\n+        // Note: we check whether -onion is explicitly used because GetProxy(NET_ONION) may",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1595743723",
      "id" : 1595743723,
      "in_reply_to_id" : 1579852847,
      "line" : 411,
      "node_id" : "PRRC_kwDOABII585fHR3r",
      "original_commit_id" : "6b4693ee859d6bddf559a0b32749b1dafe015ef4",
      "original_line" : 411,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 35,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595743723/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595743723",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1595748248"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595748248"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd:\r\n\r\nnit: if yes -> if so",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-09T17:17:54Z",
      "diff_hunk" : "@@ -386,6 +386,27 @@ static CAddress GetBindAddress(const Sock& sock)\n     return addr_bind;\n }\n \n+/**\n+ * Check if private broadcast can be done to clearnet peers and if yes via which proxy.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1595748248",
      "id" : 1595748248,
      "line" : 399,
      "node_id" : "PRRC_kwDOABII585fHS-Y",
      "original_commit_id" : "0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd",
      "original_line" : 390,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 23,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595748248/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595748248",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1595750204"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595750204"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd:\r\n\r\nnit: sorry for bikeshedding `clearnet` doesn't seem the best name for this. Maybe `net` or `network`?\r\n\r\n",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-09T17:19:45Z",
      "diff_hunk" : "@@ -386,6 +386,27 @@ static CAddress GetBindAddress(const Sock& sock)\n     return addr_bind;\n }\n \n+/**\n+ * Check if private broadcast can be done to clearnet peers and if yes via which proxy.\n+ * If private broadcast connections should not be opened to `net`, then this will return an empty optional.\n+ */\n+static std::optional<Proxy> ProxyForClearnetPrivateBroadcast(Network clearnet)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1595750204",
      "id" : 1595750204,
      "line" : 402,
      "node_id" : "PRRC_kwDOABII585fHTc8",
      "original_commit_id" : "0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd",
      "original_line" : 393,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 26,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595750204/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595750204",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1595750802"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595750802"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Also, this is already referenced as `net` in the docs",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-09T17:20:08Z",
      "diff_hunk" : "@@ -386,6 +386,27 @@ static CAddress GetBindAddress(const Sock& sock)\n     return addr_bind;\n }\n \n+/**\n+ * Check if private broadcast can be done to clearnet peers and if yes via which proxy.\n+ * If private broadcast connections should not be opened to `net`, then this will return an empty optional.\n+ */\n+static std::optional<Proxy> ProxyForClearnetPrivateBroadcast(Network clearnet)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1595750802",
      "id" : 1595750802,
      "in_reply_to_id" : 1595750204,
      "line" : 402,
      "node_id" : "PRRC_kwDOABII585fHTmS",
      "original_commit_id" : "0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd",
      "original_line" : 393,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 26,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595750802/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595750802",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1595772136"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595772136"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd\r\n\r\nThe way you are defining `use_proxy` could lead to `proxy_opt` having no value, yet `use_proxy` being `true`\r\n\r\n```suggestion\r\n            bool use_proxy;\r\n            if (conn_type == ConnectionType::PRIVATE_BROADCAST) {\r\n                const auto proxy_opt{ProxyForClearnetPrivateBroadcast(addrConnect.GetNetwork())};\r\n                if (proxy_opt.has_value()) {\r\n                    use_proxy = true;\r\n                    proxy = proxy_opt.value();\r\n                }\r\n            } else {\r\n                use_proxy = GetProxy(addrConnect.GetNetwork(), proxy);\r\n            }\r\n```",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-09T17:37:54Z",
      "diff_hunk" : "@@ -456,14 +477,24 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n \n     for (auto& target_addr: connect_to) {\n         if (target_addr.IsValid()) {\n-            const bool use_proxy{GetProxy(target_addr.GetNetwork(), proxy)};\n+            bool use_proxy{GetProxy(addrConnect.GetNetwork(), proxy)};\n+            if (conn_type == ConnectionType::PRIVATE_BROADCAST) {\n+                const auto proxy_opt{ProxyForClearnetPrivateBroadcast(addrConnect.GetNetwork())};\n+                if (proxy_opt.has_value()) {\n+                    use_proxy = true;\n+                    proxy = proxy_opt.value();\n+                }\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1595772136",
      "id" : 1595772136,
      "line" : 496,
      "node_id" : "PRRC_kwDOABII585fHYzo",
      "original_commit_id" : "0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd",
      "original_line" : 487,
      "original_position" : 40,
      "original_start_line" : 480,
      "path" : "src/net.cpp",
      "position" : 58,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595772136/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 489,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595772136",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1595773620"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595773620"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`use_proxy` can even be defined right after `proxy` (a few lined above) for simplicity ",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-09T17:39:28Z",
      "diff_hunk" : "@@ -456,14 +477,24 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n \n     for (auto& target_addr: connect_to) {\n         if (target_addr.IsValid()) {\n-            const bool use_proxy{GetProxy(target_addr.GetNetwork(), proxy)};\n+            bool use_proxy{GetProxy(addrConnect.GetNetwork(), proxy)};\n+            if (conn_type == ConnectionType::PRIVATE_BROADCAST) {\n+                const auto proxy_opt{ProxyForClearnetPrivateBroadcast(addrConnect.GetNetwork())};\n+                if (proxy_opt.has_value()) {\n+                    use_proxy = true;\n+                    proxy = proxy_opt.value();\n+                }\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1595773620",
      "id" : 1595773620,
      "in_reply_to_id" : 1595772136,
      "line" : 496,
      "node_id" : "PRRC_kwDOABII585fHZK0",
      "original_commit_id" : "0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd",
      "original_line" : 487,
      "original_position" : 40,
      "original_start_line" : 480,
      "path" : "src/net.cpp",
      "position" : 58,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595773620/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 489,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595773620",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1595793107"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595793107"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd\r\n\r\nI'm confused here. We choose not to use our permanent `m_i2p_sam_session` to avoid linking this to our permanent I2P ID, however, we use a pool of transient I2P sessions (`m_unused_i2p_sessions`) instead. I understand these transient sessions can be reused (or at least that's what I get from the docs of `m_unused_i2p_sessions`). So if the same `(peer, session_id)` pair is picked, the node will know that we created both transactions, wouldn't it?",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-09T17:57:15Z",
      "diff_hunk" : "@@ -456,14 +477,24 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n \n     for (auto& target_addr: connect_to) {\n         if (target_addr.IsValid()) {\n-            const bool use_proxy{GetProxy(target_addr.GetNetwork(), proxy)};\n+            bool use_proxy{GetProxy(addrConnect.GetNetwork(), proxy)};\n+            if (conn_type == ConnectionType::PRIVATE_BROADCAST) {\n+                const auto proxy_opt{ProxyForClearnetPrivateBroadcast(addrConnect.GetNetwork())};\n+                if (proxy_opt.has_value()) {\n+                    use_proxy = true;\n+                    proxy = proxy_opt.value();\n+                }\n+            }\n             bool proxyConnectionFailed = false;\n \n             if (target_addr.IsI2P() && use_proxy) {\n                 i2p::Connection conn;\n                 bool connected{false};\n \n-                if (m_i2p_sam_session) {\n+                // If an I2P SAM session already exists, normally we would re-use it. But in the case of\n+                // private broadcast we force a new transient session. A Connect() using m_i2p_sam_session\n+                // would use our permanent I2P address as a source address.\n+                if (m_i2p_sam_session && conn_type != ConnectionType::PRIVATE_BROADCAST) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1595793107",
      "id" : 1595793107,
      "line" : 506,
      "node_id" : "PRRC_kwDOABII585fHd7T",
      "original_commit_id" : "0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd",
      "original_line" : 497,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 69,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595793107/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595793107",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1595819770"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595819770"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd\r\n\r\nI don't think we should be giving `PRIVATE_BROADCAST` priority over every other type of connection. At the very least, they should go after `BLOCK_RELAY`.\r\n\r\nHaving connections that keep us up to date should be more important than sending out our own stuff",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-09T18:21:16Z",
      "diff_hunk" : "@@ -2605,18 +2721,19 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         bool fFeeler = false;\n         std::optional<Network> preferred_net;\n \n-        // Determine what type of connection to open. Opening\n-        // BLOCK_RELAY connections to addresses from anchors.dat gets the highest\n-        // priority. Then we open OUTBOUND_FULL_RELAY priority until we\n-        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\n-        // until we hit our block-relay-only peer limit.\n-        // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n-        // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check to see if it's time to try an extra\n-        // block-relay-only peer (to confirm our tip is current, see below) or the next_feeler\n-        // timer to decide if we should open a FEELER.\n-\n-        if (!m_anchors.empty() && (nOutboundBlockRelay < m_max_outbound_block_relay)) {\n+        // Determine what type of connection to open, in order of priority:\n+        // * PRIVATE_BROADCAST if needed\n+        // * BLOCK_RELAY connections to addresses from anchors.dat until we reach m_max_outbound_block_relay\n+        // * OUTBOUND_FULL_RELAY until we reach m_max_outbound_full_relay\n+        // * BLOCK_RELAY until we reach m_max_outbound_block_relay\n+        // * OUTBOUND_FULL_RELAY if GetTryNewOutboundPeer() is true (a stale tip is detected)\n+        // * BLOCK_RELAY if it's time to try an extra block-relay-only peer (to confirm our tip is current)\n+        // * FEELER if it's time to try a feeler\n+        // * else retry the loop (sleep a bit and start from the top of this list)\n+\n+        if (open_private_broadcast_to.has_value()) {\n+            conn_type = ConnectionType::PRIVATE_BROADCAST;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1595819770",
      "id" : 1595819770,
      "line" : 2744,
      "node_id" : "PRRC_kwDOABII585fHkb6",
      "original_commit_id" : "0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd",
      "original_line" : 2735,
      "original_position" : 205,
      "original_start_line" : 2734,
      "path" : "src/net.cpp",
      "position" : 309,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595819770/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 2743,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595819770",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1595875212"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595875212"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd\r\n\r\nThis took me a while to grasp. `num_needed` is set to `m_private_broadcast_connections_to_open.load()`, which is only set to anything above 0 **if there are transactions pending to be broadcast**.\r\n\r\nI think it'd be good to clarify this here, to make it clear that we won't try to open a connection of this type if we have no transactions pending ",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-09T19:20:07Z",
      "diff_hunk" : "@@ -2452,6 +2483,72 @@ bool CConnman::MaybePickPreferredNetwork(std::optional<Network>& network)\n     return false;\n }\n \n+/**\n+ * Decide whether to open a private broadcast connection and if yes, to which network.\n+ * @param[in] prev_was_private_broadcast Whether the previous attempt to open a connection\n+ * was an attempt to open a private broadcast connection (successful or not).\n+ * @param[in] num_needed Number of private broadcast connections that need to be opened.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1595875212",
      "id" : 1595875212,
      "line" : 2499,
      "node_id" : "PRRC_kwDOABII585fHx-M",
      "original_commit_id" : "0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd",
      "original_line" : 2490,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 89,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595875212/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595875212",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596830944"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596830944"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 434a20371e441660147da6d0c6c1832cb0d0073b\r\n\r\nnit: remove line break",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-10T14:27:46Z",
      "diff_hunk" : "@@ -179,6 +180,9 @@ static constexpr size_t MAX_ADDR_PROCESSING_TOKEN_BUCKET{MAX_ADDR_TO_SEND};\n /** The compactblocks version we support. See BIP 152. */\n static constexpr uint64_t CMPCTBLOCKS_VERSION{2};\n ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596830944",
      "id" : 1596830944,
      "line" : 182,
      "node_id" : "PRRC_kwDOABII585fLbTg",
      "original_commit_id" : "434a20371e441660147da6d0c6c1832cb0d0073b",
      "original_line" : 182,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 11,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596830944/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596830944",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596831509"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596831509"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 434a20371e441660147da6d0c6c1832cb0d0073b\r\n\r\nnit: per one -> for each",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-10T14:28:15Z",
      "diff_hunk" : "@@ -179,6 +180,9 @@ static constexpr size_t MAX_ADDR_PROCESSING_TOKEN_BUCKET{MAX_ADDR_TO_SEND};\n /** The compactblocks version we support. See BIP 152. */\n static constexpr uint64_t CMPCTBLOCKS_VERSION{2};\n \n+/** For private broadcast, send a transaction to this many peers per one broadcast attempt. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596831509",
      "id" : 1596831509,
      "line" : 183,
      "node_id" : "PRRC_kwDOABII585fLbcV",
      "original_commit_id" : "434a20371e441660147da6d0c6c1832cb0d0073b",
      "original_line" : 183,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 12,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596831509/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596831509",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596833034"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596833034"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 434a20371e441660147da6d0c6c1832cb0d0073b\r\n\r\nThis is missing docs",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-10T14:29:29Z",
      "diff_hunk" : "@@ -1175,6 +1180,8 @@ class PeerManagerImpl final : public PeerManager\n \n     void AddAddressKnown(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\n     void PushAddress(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596833034",
      "id" : 1596833034,
      "line" : 1194,
      "node_id" : "PRRC_kwDOABII585fLb0K",
      "original_commit_id" : "434a20371e441660147da6d0c6c1832cb0d0073b",
      "original_line" : 1183,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 68,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596833034/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596833034",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596835091"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596835091"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 434a20371e441660147da6d0c6c1832cb0d0073b\r\n\r\nI don't follow this log. What is the \"due to ...\" trying to convey here?",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-10T14:31:13Z",
      "diff_hunk" : "@@ -2341,6 +2348,19 @@ void PeerManagerImpl::ScheduleTxForBroadcastToAll(const uint256& txid, const uin\n     };\n }\n \n+void PeerManagerImpl::ScheduleTxForPrivateBroadcast(const CTransactionRef& tx)\n+{\n+    m_tx_for_private_broadcast.Add(tx);\n+\n+    LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                  BCLog::Level::Debug,\n+                  \"Requesting %d new connections due to txid=%s, wtxid=%s\\n\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596835091",
      "id" : 1596835091,
      "line" : 2472,
      "node_id" : "PRRC_kwDOABII585fLcUT",
      "original_commit_id" : "434a20371e441660147da6d0c6c1832cb0d0073b",
      "original_line" : 2357,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 290,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596835091/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596835091",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596842874"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596842874"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 434a20371e441660147da6d0c6c1832cb0d0073b\r\n\r\nnit: I don't think these belong to this commit yet",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-10T14:37:44Z",
      "diff_hunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#ifndef BITCOIN_PRIVATE_BROADCAST_H\n+#define BITCOIN_PRIVATE_BROADCAST_H\n+\n+#include <primitives/transaction.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <util/hasher.h>\n+\n+#include <chrono>\n+#include <map>\n+#include <unordered_map>\n+\n+/**\n+ * Store a list of transactions to be broadcast privately. Supports the following operations:\n+ * - Add a new transaction\n+ * - Remove a transaction, after it has been seen by the network\n+ * - Mark a broadcast of a transaction (remember when and how many times)\n+ * - Get a transaction for broadcast, the one that has been broadcast fewer times and least recently",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596842874",
      "id" : 1596842874,
      "line" : 26,
      "node_id" : "PRRC_kwDOABII585fLeN6",
      "original_commit_id" : "434a20371e441660147da6d0c6c1832cb0d0073b",
      "original_line" : 22,
      "original_position" : 22,
      "original_start_line" : 20,
      "path" : "src/private_broadcast.h",
      "position" : 26,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596842874/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 24,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596842874",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596847026"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596847026"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 434a20371e441660147da6d0c6c1832cb0d0073b\r\n\r\nnit: 2024",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-10T14:41:18Z",
      "diff_hunk" : "@@ -0,0 +1,23 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596847026",
      "id" : 1596847026,
      "line" : 1,
      "node_id" : "PRRC_kwDOABII585fLfOy",
      "original_commit_id" : "434a20371e441660147da6d0c6c1832cb0d0073b",
      "original_line" : 1,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/private_broadcast.cpp",
      "position" : 1,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596847026/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596847026",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596847172"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596847172"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 434a20371e441660147da6d0c6c1832cb0d0073b\r\n\r\nnit: 2024",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-10T14:41:25Z",
      "diff_hunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596847172",
      "id" : 1596847172,
      "line" : 1,
      "node_id" : "PRRC_kwDOABII585fLfRE",
      "original_commit_id" : "434a20371e441660147da6d0c6c1832cb0d0073b",
      "original_line" : 1,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/private_broadcast.h",
      "position" : 1,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596847172/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596847172",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596937357"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596937357"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think `/pynode:0.0.1/` is as good as any other of the options commented on the linked thread, but having a comment there specifying why this was picked is worth. Any future traveller will be so confuse to see that user agent without context ",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-10T16:03:32Z",
      "diff_hunk" : "@@ -1566,26 +1665,53 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    MakeAndPushMessage(pnode, NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, CNetAddr::V1(addr_you), // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CNetAddr::V1(CService{}), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay);\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsPrivateBroadcastConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596937357",
      "id" : 1596937357,
      "in_reply_to_id" : 1518263617,
      "line" : 1648,
      "node_id" : "PRRC_kwDOABII585fL1SN",
      "original_commit_id" : "07dee91112189be02c6694385de261570725b56b",
      "original_line" : 1648,
      "original_position" : 172,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 105,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596937357/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596937357",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596947249"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596947249"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In fecab592de8d0994e6d61e454e118d652ffd7b93\r\n\r\nmicro-nit: There is no `your_` counterparty for this, so there's no need to call them `my_`. This is kind of assumed ",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-10T16:12:54Z",
      "diff_hunk" : "@@ -1622,26 +1630,66 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    MakeAndPushMessage(pnode, NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, CNetAddr::V1(addr_you), // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CNetAddr::V1(CService{}), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay);\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596947249",
      "id" : 1596947249,
      "line" : 1642,
      "node_id" : "PRRC_kwDOABII585fL3sx",
      "original_commit_id" : "fecab592de8d0994e6d61e454e118d652ffd7b93",
      "original_line" : 1639,
      "original_position" : 52,
      "original_start_line" : 1637,
      "path" : "src/net_processing.cpp",
      "position" : 99,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596947249/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1640,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596947249",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596957262"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596957262"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In fecab592de8d0994e6d61e454e118d652ffd7b93\r\n\r\nnit:\r\n\r\n```suggestion\r\n                                \"Got a PONG (the transaction will probably reach the network), \"\r\n```",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-10T16:22:25Z",
      "diff_hunk" : "@@ -5155,6 +5282,17 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     if (ping_time.count() >= 0) {\n                         // Let connman know about this successful ping-pong\n                         pfrom.PongReceived(ping_time);\n+                        if (pfrom.IsPrivateBroadcastConn()) {\n+                            m_tx_for_private_broadcast.BroadcastEnd(pfrom.GetId(), /*confirmed_by_node=*/true);\n+                            LogPrintLevel(\n+                                BCLog::PRIVATE_BROADCAST,\n+                                BCLog::Level::Info,\n+                                \"Got a PONG (probably the transaction will reach the network), \"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596957262",
      "id" : 1596957262,
      "line" : 5361,
      "node_id" : "PRRC_kwDOABII585fL6JO",
      "original_commit_id" : "fecab592de8d0994e6d61e454e118d652ffd7b93",
      "original_line" : 5290,
      "original_position" : 243,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 550,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596957262/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596957262",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596958082"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596958082"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In fecab592de8d0994e6d61e454e118d652ffd7b93\r\n\r\n```suggestion\r\n                      \"Never got a PONG (the transaction will probably not \"\r\n```",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-10T16:23:12Z",
      "diff_hunk" : "@@ -1790,6 +1838,17 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n         LOCK(m_headers_presync_mutex);\n         m_headers_presync_stats.erase(nodeid);\n     }\n+    // This is done when we get a PONG from the peer. Repeat here too in case we never receive a PONG.\n+    if (node.IsPrivateBroadcastConn() &&\n+        m_tx_for_private_broadcast.BroadcastEnd(nodeid, /*confirmed_by_node=*/false)) {\n+\n+        LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                      BCLog::Level::Info,\n+                      \"Never got a PONG (probably the transaction will not \"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596958082",
      "id" : 1596958082,
      "line" : 1903,
      "node_id" : "PRRC_kwDOABII585fL6WC",
      "original_commit_id" : "fecab592de8d0994e6d61e454e118d652ffd7b93",
      "original_line" : 1847,
      "original_position" : 121,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 250,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596958082/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596958082",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596988561"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596988561"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In fecab592de8d0994e6d61e454e118d652ffd7b93\r\n\r\n`FinishBroadcast` may sound better",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-10T16:49:58Z",
      "diff_hunk" : "@@ -26,6 +29,26 @@ class PrivateBroadcast\n public:\n     void Add(const CTransactionRef& tx) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n+    /**\n+     * Get the transaction that has been broadcast fewest times and least recently.\n+     */\n+    std::optional<CTransactionRef> GetTxForBroadcast() EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /**\n+     * Mark a transaction as pushed to a given node. This is an intermediate state before\n+     * we get a PONG from the node which would confirm that the transaction has been received.\n+     * At the time we get the PONG we need to know which transaction we sent to that node,\n+     * so that we can account how many times we broadcast each transaction.\n+     */\n+    void PushedToNode(const NodeId& nodeid, const Txid& txid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /**\n+     * Mark the end of a broadcast of a transaction. Either successful by receiving a PONG,\n+     * or unsuccessful by closing the connection to the node without getting PONG.\n+     * @return true if the reference by the given node id was removed\n+     */\n+    bool BroadcastEnd(const NodeId& nodeid, bool confirmed_by_node) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1596988561",
      "id" : 1596988561,
      "line" : 58,
      "node_id" : "PRRC_kwDOABII585fMByR",
      "original_commit_id" : "fecab592de8d0994e6d61e454e118d652ffd7b93",
      "original_line" : 50,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/private_broadcast.h",
      "position" : 58,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596988561/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596988561",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1597007136"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597007136"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In fecab592de8d0994e6d61e454e118d652ffd7b93\r\n\r\nIsn't `iters->by_txid->first` the same as `txid`? It would read way simpler by using the latter",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-10T17:08:47Z",
      "diff_hunk" : "@@ -14,10 +15,78 @@ void PrivateBroadcast::Add(const CTransactionRef& tx) EXCLUSIVE_LOCKS_REQUIRED(!\n     }\n }\n \n+std::optional<CTransactionRef> PrivateBroadcast::GetTxForBroadcast() EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+{\n+    LOCK(m_mutex);\n+    if (m_by_priority.empty()) {\n+        return std::nullopt;\n+    }\n+    const Txid& txid = m_by_priority.begin()->second;\n+    auto it = m_by_txid.find(txid);\n+    if (Assume(it != m_by_txid.end())) {\n+        return it->second.tx;\n+    }\n+    m_by_priority.erase(m_by_priority.begin());\n+    return std::nullopt;\n+}\n+\n+void PrivateBroadcast::PushedToNode(const NodeId& nodeid, const Txid& txid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+{\n+    LOCK(m_mutex);\n+    m_by_nodeid.emplace(nodeid, txid);\n+}\n+\n+bool PrivateBroadcast::BroadcastEnd(const NodeId& nodeid, bool confirmed_by_node) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+{\n+    LOCK(m_mutex);\n+    auto it = m_by_nodeid.find(nodeid);\n+    if (it == m_by_nodeid.end()) {\n+        return false;\n+    }\n+    const Txid txid{it->second};\n+    m_by_nodeid.erase(it);\n+\n+    if (!confirmed_by_node) {\n+        return true;\n+    }\n+\n+    // Update broadcast stats.\n+\n+    auto iters = Find(txid);\n+    if (!iters) {\n+        return true;\n+    }\n+    Priority& priority = iters->by_txid->second.priority;\n+\n+    ++priority.num_broadcasted;\n+    priority.last_broadcasted = GetTime<std::chrono::microseconds>();\n+\n+    m_by_priority.erase(iters->by_priority);\n+    m_by_priority.emplace(priority, iters->by_txid->first);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1597007136",
      "id" : 1597007136,
      "line" : 78,
      "node_id" : "PRRC_kwDOABII585fMGUg",
      "original_commit_id" : "fecab592de8d0994e6d61e454e118d652ffd7b93",
      "original_line" : 65,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/private_broadcast.cpp",
      "position" : 78,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597007136/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597007136",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1597010441"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597010441"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Also, excuse my lack of cpp proficiency but, is it necessary to delete and re-add the item? Why is not updating `priority` enough (as done in the above two lines)?",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-10T17:11:28Z",
      "diff_hunk" : "@@ -14,10 +15,78 @@ void PrivateBroadcast::Add(const CTransactionRef& tx) EXCLUSIVE_LOCKS_REQUIRED(!\n     }\n }\n \n+std::optional<CTransactionRef> PrivateBroadcast::GetTxForBroadcast() EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+{\n+    LOCK(m_mutex);\n+    if (m_by_priority.empty()) {\n+        return std::nullopt;\n+    }\n+    const Txid& txid = m_by_priority.begin()->second;\n+    auto it = m_by_txid.find(txid);\n+    if (Assume(it != m_by_txid.end())) {\n+        return it->second.tx;\n+    }\n+    m_by_priority.erase(m_by_priority.begin());\n+    return std::nullopt;\n+}\n+\n+void PrivateBroadcast::PushedToNode(const NodeId& nodeid, const Txid& txid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+{\n+    LOCK(m_mutex);\n+    m_by_nodeid.emplace(nodeid, txid);\n+}\n+\n+bool PrivateBroadcast::BroadcastEnd(const NodeId& nodeid, bool confirmed_by_node) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+{\n+    LOCK(m_mutex);\n+    auto it = m_by_nodeid.find(nodeid);\n+    if (it == m_by_nodeid.end()) {\n+        return false;\n+    }\n+    const Txid txid{it->second};\n+    m_by_nodeid.erase(it);\n+\n+    if (!confirmed_by_node) {\n+        return true;\n+    }\n+\n+    // Update broadcast stats.\n+\n+    auto iters = Find(txid);\n+    if (!iters) {\n+        return true;\n+    }\n+    Priority& priority = iters->by_txid->second.priority;\n+\n+    ++priority.num_broadcasted;\n+    priority.last_broadcasted = GetTime<std::chrono::microseconds>();\n+\n+    m_by_priority.erase(iters->by_priority);\n+    m_by_priority.emplace(priority, iters->by_txid->first);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1597010441",
      "id" : 1597010441,
      "in_reply_to_id" : 1597007136,
      "line" : 78,
      "node_id" : "PRRC_kwDOABII585fMHIJ",
      "original_commit_id" : "fecab592de8d0994e6d61e454e118d652ffd7b93",
      "original_line" : 65,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/private_broadcast.cpp",
      "position" : 78,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597010441/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597010441",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1597146275"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597146275"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In bb697ba5f51f5e31ec472f32682fbb6eb692fa37\r\n\r\nAFAICT this is the only use of `CConnman::PrivateBroadcastSub`, meaning we should be able to simplify the method by unconditionally setting `m_private_broadcast_connections_to_open` to 0",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-10T19:28:42Z",
      "diff_hunk" : "@@ -4658,6 +4658,21 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         const uint256& hash = peer->m_wtxid_relay ? wtxid : txid;\n         AddKnownTx(*peer, hash);\n \n+        if (auto num_broadcasted = m_tx_for_private_broadcast.Remove(ptx)) {\n+            LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                          BCLog::Level::Info,\n+                          \"Received our privately broadcast transaction (txid=%s) from the \"\n+                          \"network from peer=%d%s; stopping private broadcast attempts\\n\",\n+                          txid.ToString(),\n+                          pfrom.GetId(),\n+                          fLogIPs ? strprintf(\", peeraddr=%s\", pfrom.addr.ToStringAddrPort()) : \"\");\n+            if (NUM_PRIVATE_BROADCAST_PER_TX > num_broadcasted.value()) {\n+                // Not all of the initial NUM_PRIVATE_BROADCAST_PER_TX connections were needed.\n+                // Tell CConnman it does not need to start the remaining ones.\n+                m_connman.PrivateBroadcastSub(NUM_PRIVATE_BROADCAST_PER_TX - num_broadcasted.value());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1597146275",
      "id" : 1597146275,
      "line" : 4728,
      "node_id" : "PRRC_kwDOABII585fMoSj",
      "original_commit_id" : "bb697ba5f51f5e31ec472f32682fbb6eb692fa37",
      "original_line" : 4672,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 525,
      "pull_request_review_id" : 2041604763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597146275/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T14:57:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597146275",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1598646404"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1598646404"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd \"net: implement opening PRIVATE_BROADCAST connections\": `m_max_private_broadcast` is not used. ",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-13T15:12:30Z",
      "diff_hunk" : "@@ -1498,6 +1514,7 @@ class CConnman\n     int m_max_outbound_block_relay;\n \n     int m_max_addnode{MAX_ADDNODE_CONNECTIONS};\n+    int m_max_private_broadcast{MAX_PRIVATE_BROADCAST_CONNECTIONS};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1598646404",
      "id" : 1598646404,
      "line" : 1522,
      "node_id" : "PRRC_kwDOABII585fSWiE",
      "original_commit_id" : "0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd",
      "original_line" : 1517,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 83,
      "pull_request_review_id" : 2052999547,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1598646404/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-13T15:12:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1598646404",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1607031740"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1607031740"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It could be lower. I picked 64 because I imagine somebody submitting 100s or even 1000s of transactions at the same time. Processing those serially would take a lot of time. Would you suggest another number?",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-20T17:06:15Z",
      "diff_hunk" : "@@ -71,6 +71,8 @@ static const int MAX_ADDNODE_CONNECTIONS = 8;\n static const int MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2;\n /** Maximum number of feeler connections */\n static const int MAX_FEELER_CONNECTIONS = 1;\n+/** Maximum number of private broadcast connections */\n+static constexpr size_t MAX_PRIVATE_BROADCAST_CONNECTIONS{64};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1607031740",
      "id" : 1607031740,
      "in_reply_to_id" : 1595556422,
      "line" : 75,
      "node_id" : "PRRC_kwDOABII585fyVu8",
      "original_commit_id" : "0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd",
      "original_line" : 75,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 5,
      "pull_request_review_id" : 2066636300,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1607031740/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-20T17:06:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1607031740",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1607790271"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1607790271"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, maybe we can keep track of whether we have have successfully managed to connect to at least one `.onion` address via the `-proxy`, then we can assume that is a Tor proxy? How does that sound?",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-21T07:35:05Z",
      "diff_hunk" : "@@ -386,6 +386,27 @@ static CAddress GetBindAddress(const Sock& sock)\n     return addr_bind;\n }\n \n+/**\n+ * Check if private broadcast can be done to clearnet peers and if yes via which proxy.\n+ * If private broadcast connections should not be opened to `net`, then this will return an empty optional.\n+ */\n+static std::optional<Proxy> ProxyForClearnetPrivateBroadcast(Network clearnet)\n+{\n+    if (clearnet != NET_IPV4 && clearnet != NET_IPV6) {\n+        return std::nullopt;\n+    }\n+    Proxy tor_proxy;\n+    const std::string onion_arg{gArgs.GetArg(\"-onion\", \"\")};\n+    if (onion_arg != \"\" && onion_arg == \"0\" && GetProxy(NET_ONION, tor_proxy)) {\n+        // Use the Tor proxy (if provided) for private broadcast connections to clearnet peers.\n+        // Note: we check whether -onion is explicitly used because GetProxy(NET_ONION) may",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1607790271",
      "id" : 1607790271,
      "in_reply_to_id" : 1579852847,
      "line" : 411,
      "node_id" : "PRRC_kwDOABII585f1O6_",
      "original_commit_id" : "6b4693ee859d6bddf559a0b32749b1dafe015ef4",
      "original_line" : 411,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 35,
      "pull_request_review_id" : 2067774857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1607790271/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T07:35:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1607790271",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608069282"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608069282"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`proxy_opt` exists only inside the `if`. What matters after this `if` are the values of `use_proxy` and `proxy`. I think your suggestion is equivalent to the current code. I.e.\r\n\r\n```\r\nset use_proxy and proxy (normal)\r\nif (special case)\r\n    replace use_proxy and proxy with special values\r\n```\r\nvs\r\n```\r\nif (special case)\r\n    set use_proxy and proxy to special values\r\nelse\r\n    set use_proxy and proxy (normal)\r\n```\r\n\r\nRight?",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-21T10:36:27Z",
      "diff_hunk" : "@@ -456,14 +477,24 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n \n     for (auto& target_addr: connect_to) {\n         if (target_addr.IsValid()) {\n-            const bool use_proxy{GetProxy(target_addr.GetNetwork(), proxy)};\n+            bool use_proxy{GetProxy(addrConnect.GetNetwork(), proxy)};\n+            if (conn_type == ConnectionType::PRIVATE_BROADCAST) {\n+                const auto proxy_opt{ProxyForClearnetPrivateBroadcast(addrConnect.GetNetwork())};\n+                if (proxy_opt.has_value()) {\n+                    use_proxy = true;\n+                    proxy = proxy_opt.value();\n+                }\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608069282",
      "id" : 1608069282,
      "in_reply_to_id" : 1595772136,
      "line" : 496,
      "node_id" : "PRRC_kwDOABII585f2TCi",
      "original_commit_id" : "0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd",
      "original_line" : 487,
      "original_position" : 40,
      "original_start_line" : 480,
      "path" : "src/net.cpp",
      "position" : 58,
      "pull_request_review_id" : 2068227727,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608069282/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 489,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-21T10:36:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608069282",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608108288"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608108288"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The transient sessions are not reused. `m_unused_i2p_sessions` description reads:\r\n\r\n> If connecting to a host fails, then the created session is put to this pool for reuse.\r\n\r\nThe code is this:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/a786fd2041913d82ca90b561de309421bd24e41b/src/net.cpp#L472-L480\r\n\r\nI.e. pop/extract a session from `m_unused_i2p_sessions` and if we cannot connect, then we did not use the session and thus put it back to `m_unused_i2p_sessions`.\r\n\r\nDo you think that the description of `m_unused_i2p_sessions` can be improved? Would you suggest an exact wording?",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-21T10:47:32Z",
      "diff_hunk" : "@@ -456,14 +477,24 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n \n     for (auto& target_addr: connect_to) {\n         if (target_addr.IsValid()) {\n-            const bool use_proxy{GetProxy(target_addr.GetNetwork(), proxy)};\n+            bool use_proxy{GetProxy(addrConnect.GetNetwork(), proxy)};\n+            if (conn_type == ConnectionType::PRIVATE_BROADCAST) {\n+                const auto proxy_opt{ProxyForClearnetPrivateBroadcast(addrConnect.GetNetwork())};\n+                if (proxy_opt.has_value()) {\n+                    use_proxy = true;\n+                    proxy = proxy_opt.value();\n+                }\n+            }\n             bool proxyConnectionFailed = false;\n \n             if (target_addr.IsI2P() && use_proxy) {\n                 i2p::Connection conn;\n                 bool connected{false};\n \n-                if (m_i2p_sam_session) {\n+                // If an I2P SAM session already exists, normally we would re-use it. But in the case of\n+                // private broadcast we force a new transient session. A Connect() using m_i2p_sam_session\n+                // would use our permanent I2P address as a source address.\n+                if (m_i2p_sam_session && conn_type != ConnectionType::PRIVATE_BROADCAST) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608108288",
      "id" : 1608108288,
      "in_reply_to_id" : 1595793107,
      "line" : 506,
      "node_id" : "PRRC_kwDOABII585f2ckA",
      "original_commit_id" : "0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd",
      "original_line" : 497,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 69,
      "pull_request_review_id" : 2068279627,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608108288/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T10:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608108288",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608129277"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608129277"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "A few considerations:\r\n\r\n* Private broadcast connections are not blocked on the `semOutbound` grant. They come to this code right away.\r\n\r\n* Even if there is a high demand for private broadcast connections, we would try to open such ones only half of the time in `CConnman::ThreadOpenConnections()` to avoid such starvation of only opening private broadcast and not others for a long time (see how `MaybePickPrivateBroadcastNetwork()` yields to other connection types if we previously opened a private broadcast one).\r\n\r\n* Non-`BLOCK_RELAY` connections keep us up to date as well (with new blocks). I.e blocks could come via inbound, full-outbound, etc.\r\n\r\nGiven the above, I think the current code does not need to be changed.",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-21T11:02:10Z",
      "diff_hunk" : "@@ -2605,18 +2721,19 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         bool fFeeler = false;\n         std::optional<Network> preferred_net;\n \n-        // Determine what type of connection to open. Opening\n-        // BLOCK_RELAY connections to addresses from anchors.dat gets the highest\n-        // priority. Then we open OUTBOUND_FULL_RELAY priority until we\n-        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\n-        // until we hit our block-relay-only peer limit.\n-        // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n-        // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check to see if it's time to try an extra\n-        // block-relay-only peer (to confirm our tip is current, see below) or the next_feeler\n-        // timer to decide if we should open a FEELER.\n-\n-        if (!m_anchors.empty() && (nOutboundBlockRelay < m_max_outbound_block_relay)) {\n+        // Determine what type of connection to open, in order of priority:\n+        // * PRIVATE_BROADCAST if needed\n+        // * BLOCK_RELAY connections to addresses from anchors.dat until we reach m_max_outbound_block_relay\n+        // * OUTBOUND_FULL_RELAY until we reach m_max_outbound_full_relay\n+        // * BLOCK_RELAY until we reach m_max_outbound_block_relay\n+        // * OUTBOUND_FULL_RELAY if GetTryNewOutboundPeer() is true (a stale tip is detected)\n+        // * BLOCK_RELAY if it's time to try an extra block-relay-only peer (to confirm our tip is current)\n+        // * FEELER if it's time to try a feeler\n+        // * else retry the loop (sleep a bit and start from the top of this list)\n+\n+        if (open_private_broadcast_to.has_value()) {\n+            conn_type = ConnectionType::PRIVATE_BROADCAST;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608129277",
      "id" : 1608129277,
      "in_reply_to_id" : 1595819770,
      "line" : 2744,
      "node_id" : "PRRC_kwDOABII585f2hr9",
      "original_commit_id" : "0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd",
      "original_line" : 2735,
      "original_position" : 205,
      "original_start_line" : 2734,
      "path" : "src/net.cpp",
      "position" : 309,
      "pull_request_review_id" : 2068314643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608129277/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 2743,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-21T11:02:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608129277",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608172001"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608172001"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Added this sentence: \"We try to open a connection of this type only if there are transactions pending, but up to a limit.\"",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-21T11:38:42Z",
      "diff_hunk" : "@@ -2452,6 +2483,72 @@ bool CConnman::MaybePickPreferredNetwork(std::optional<Network>& network)\n     return false;\n }\n \n+/**\n+ * Decide whether to open a private broadcast connection and if yes, to which network.\n+ * @param[in] prev_was_private_broadcast Whether the previous attempt to open a connection\n+ * was an attempt to open a private broadcast connection (successful or not).\n+ * @param[in] num_needed Number of private broadcast connections that need to be opened.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608172001",
      "id" : 1608172001,
      "in_reply_to_id" : 1595875212,
      "line" : 2499,
      "node_id" : "PRRC_kwDOABII585f2sHh",
      "original_commit_id" : "0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd",
      "original_line" : 2490,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 89,
      "pull_request_review_id" : 2068383787,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608172001/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T11:38:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608172001",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608174270"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608174270"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Removed.",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-21T11:40:32Z",
      "diff_hunk" : "@@ -179,6 +180,9 @@ static constexpr size_t MAX_ADDR_PROCESSING_TOKEN_BUCKET{MAX_ADDR_TO_SEND};\n /** The compactblocks version we support. See BIP 152. */\n static constexpr uint64_t CMPCTBLOCKS_VERSION{2};\n ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608174270",
      "id" : 1608174270,
      "in_reply_to_id" : 1596830944,
      "line" : 182,
      "node_id" : "PRRC_kwDOABII585f2sq-",
      "original_commit_id" : "434a20371e441660147da6d0c6c1832cb0d0073b",
      "original_line" : 182,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 11,
      "pull_request_review_id" : 2068387303,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608174270/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T11:40:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608174270",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608176500"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608176500"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-21T11:42:27Z",
      "diff_hunk" : "@@ -179,6 +180,9 @@ static constexpr size_t MAX_ADDR_PROCESSING_TOKEN_BUCKET{MAX_ADDR_TO_SEND};\n /** The compactblocks version we support. See BIP 152. */\n static constexpr uint64_t CMPCTBLOCKS_VERSION{2};\n \n+/** For private broadcast, send a transaction to this many peers per one broadcast attempt. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608176500",
      "id" : 1608176500,
      "in_reply_to_id" : 1596831509,
      "line" : 183,
      "node_id" : "PRRC_kwDOABII585f2tN0",
      "original_commit_id" : "434a20371e441660147da6d0c6c1832cb0d0073b",
      "original_line" : 183,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 12,
      "pull_request_review_id" : 2068391038,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608176500/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T11:42:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608176500",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608179155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608179155"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Added \"A list of transactions to be broadcast privately.\"",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-21T11:44:38Z",
      "diff_hunk" : "@@ -1175,6 +1180,8 @@ class PeerManagerImpl final : public PeerManager\n \n     void AddAddressKnown(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\n     void PushAddress(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608179155",
      "id" : 1608179155,
      "in_reply_to_id" : 1596833034,
      "line" : 1194,
      "node_id" : "PRRC_kwDOABII585f2t3T",
      "original_commit_id" : "434a20371e441660147da6d0c6c1832cb0d0073b",
      "original_line" : 1183,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 68,
      "pull_request_review_id" : 2068395273,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608179155/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T11:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608179155",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608182222"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608182222"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "\"due to\" = \"because of\" = \"because there is a new transaction for broadcast - txid=...\". I am open to suggestions for better wording.",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-21T11:47:09Z",
      "diff_hunk" : "@@ -2341,6 +2348,19 @@ void PeerManagerImpl::ScheduleTxForBroadcastToAll(const uint256& txid, const uin\n     };\n }\n \n+void PeerManagerImpl::ScheduleTxForPrivateBroadcast(const CTransactionRef& tx)\n+{\n+    m_tx_for_private_broadcast.Add(tx);\n+\n+    LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                  BCLog::Level::Debug,\n+                  \"Requesting %d new connections due to txid=%s, wtxid=%s\\n\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608182222",
      "id" : 1608182222,
      "in_reply_to_id" : 1596835091,
      "line" : 2472,
      "node_id" : "PRRC_kwDOABII585f2unO",
      "original_commit_id" : "434a20371e441660147da6d0c6c1832cb0d0073b",
      "original_line" : 2357,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 290,
      "pull_request_review_id" : 2068400075,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608182222/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T11:47:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608182222",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608191485"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608191485"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Right! Moved to the corresponding commits.",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-21T11:54:33Z",
      "diff_hunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#ifndef BITCOIN_PRIVATE_BROADCAST_H\n+#define BITCOIN_PRIVATE_BROADCAST_H\n+\n+#include <primitives/transaction.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <util/hasher.h>\n+\n+#include <chrono>\n+#include <map>\n+#include <unordered_map>\n+\n+/**\n+ * Store a list of transactions to be broadcast privately. Supports the following operations:\n+ * - Add a new transaction\n+ * - Remove a transaction, after it has been seen by the network\n+ * - Mark a broadcast of a transaction (remember when and how many times)\n+ * - Get a transaction for broadcast, the one that has been broadcast fewer times and least recently",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608191485",
      "id" : 1608191485,
      "in_reply_to_id" : 1596842874,
      "line" : 26,
      "node_id" : "PRRC_kwDOABII585f2w39",
      "original_commit_id" : "434a20371e441660147da6d0c6c1832cb0d0073b",
      "original_line" : 22,
      "original_position" : 22,
      "original_start_line" : 20,
      "path" : "src/private_broadcast.h",
      "position" : 26,
      "pull_request_review_id" : 2068414399,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608191485/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 24,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-21T11:54:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608191485",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608192497"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608192497"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Some of the code was written in 2023",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-21T11:55:20Z",
      "diff_hunk" : "@@ -0,0 +1,23 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608192497",
      "id" : 1608192497,
      "in_reply_to_id" : 1596847026,
      "line" : 1,
      "node_id" : "PRRC_kwDOABII585f2xHx",
      "original_commit_id" : "434a20371e441660147da6d0c6c1832cb0d0073b",
      "original_line" : 1,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/private_broadcast.cpp",
      "position" : 1,
      "pull_request_review_id" : 2068415979,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608192497/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T11:55:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608192497",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608193117"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608193117"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Same, some of the code was written in 2023",
      "commit_id" : "65ba8d02034d8fd0eb4c680614197cab6f1892fc",
      "created_at" : "2024-05-21T11:55:49Z",
      "diff_hunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608193117",
      "id" : 1608193117,
      "in_reply_to_id" : 1596847172,
      "line" : 1,
      "node_id" : "PRRC_kwDOABII585f2xRd",
      "original_commit_id" : "434a20371e441660147da6d0c6c1832cb0d0073b",
      "original_line" : 1,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/private_broadcast.h",
      "position" : 1,
      "pull_request_review_id" : 2068416937,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608193117/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T11:55:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608193117",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608200672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608200672"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I prefixed everything with `my_` or `your_` because otherwise it is unclear whether it is mine or yours. Deducting that without my/yours prefix requires an extra effort.",
      "commit_id" : "e85cc59badd357219213a6bda985a9fd93910a5c",
      "created_at" : "2024-05-21T12:00:52Z",
      "diff_hunk" : "@@ -1622,26 +1630,66 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    MakeAndPushMessage(pnode, NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, CNetAddr::V1(addr_you), // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CNetAddr::V1(CService{}), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay);\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608200672",
      "id" : 1608200672,
      "in_reply_to_id" : 1596947249,
      "line" : 1640,
      "node_id" : "PRRC_kwDOABII585f2zHg",
      "original_commit_id" : "fecab592de8d0994e6d61e454e118d652ffd7b93",
      "original_line" : 1640,
      "original_position" : 52,
      "original_start_line" : 1637,
      "path" : "src/net_processing.cpp",
      "position" : 99,
      "pull_request_review_id" : 2068429816,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608200672/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1638,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-21T12:00:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608200672",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608216424"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608216424"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "e85cc59badd357219213a6bda985a9fd93910a5c",
      "created_at" : "2024-05-21T12:09:01Z",
      "diff_hunk" : "@@ -5155,6 +5282,17 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     if (ping_time.count() >= 0) {\n                         // Let connman know about this successful ping-pong\n                         pfrom.PongReceived(ping_time);\n+                        if (pfrom.IsPrivateBroadcastConn()) {\n+                            m_tx_for_private_broadcast.BroadcastEnd(pfrom.GetId(), /*confirmed_by_node=*/true);\n+                            LogPrintLevel(\n+                                BCLog::PRIVATE_BROADCAST,\n+                                BCLog::Level::Info,\n+                                \"Got a PONG (probably the transaction will reach the network), \"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608216424",
      "id" : 1608216424,
      "in_reply_to_id" : 1596957262,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585f229o",
      "original_commit_id" : "fecab592de8d0994e6d61e454e118d652ffd7b93",
      "original_line" : 5290,
      "original_position" : 243,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 2068456409,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608216424/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T12:09:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608216424",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608216576"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608216576"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "e85cc59badd357219213a6bda985a9fd93910a5c",
      "created_at" : "2024-05-21T12:09:08Z",
      "diff_hunk" : "@@ -1790,6 +1838,17 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n         LOCK(m_headers_presync_mutex);\n         m_headers_presync_stats.erase(nodeid);\n     }\n+    // This is done when we get a PONG from the peer. Repeat here too in case we never receive a PONG.\n+    if (node.IsPrivateBroadcastConn() &&\n+        m_tx_for_private_broadcast.BroadcastEnd(nodeid, /*confirmed_by_node=*/false)) {\n+\n+        LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                      BCLog::Level::Info,\n+                      \"Never got a PONG (probably the transaction will not \"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608216576",
      "id" : 1608216576,
      "in_reply_to_id" : 1596958082,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585f23AA",
      "original_commit_id" : "fecab592de8d0994e6d61e454e118d652ffd7b93",
      "original_line" : 1847,
      "original_position" : 121,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 2068456627,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608216576/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T12:09:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608216576",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608218540"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608218540"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Renamed to `FinishBroadcast()`.",
      "commit_id" : "e85cc59badd357219213a6bda985a9fd93910a5c",
      "created_at" : "2024-05-21T12:10:39Z",
      "diff_hunk" : "@@ -26,6 +29,26 @@ class PrivateBroadcast\n public:\n     void Add(const CTransactionRef& tx) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n+    /**\n+     * Get the transaction that has been broadcast fewest times and least recently.\n+     */\n+    std::optional<CTransactionRef> GetTxForBroadcast() EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /**\n+     * Mark a transaction as pushed to a given node. This is an intermediate state before\n+     * we get a PONG from the node which would confirm that the transaction has been received.\n+     * At the time we get the PONG we need to know which transaction we sent to that node,\n+     * so that we can account how many times we broadcast each transaction.\n+     */\n+    void PushedToNode(const NodeId& nodeid, const Txid& txid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /**\n+     * Mark the end of a broadcast of a transaction. Either successful by receiving a PONG,\n+     * or unsuccessful by closing the connection to the node without getting PONG.\n+     * @return true if the reference by the given node id was removed\n+     */\n+    bool BroadcastEnd(const NodeId& nodeid, bool confirmed_by_node) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608218540",
      "id" : 1608218540,
      "in_reply_to_id" : 1596988561,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585f23es",
      "original_commit_id" : "fecab592de8d0994e6d61e454e118d652ffd7b93",
      "original_line" : 50,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/private_broadcast.h",
      "position" : null,
      "pull_request_review_id" : 2068459695,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608218540/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T12:10:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608218540",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608255803"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608255803"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, `iters->by_txid->first` is the same as `txid`, changed it to use `txid` which is shorter.\r\n\r\nIt is necessary to remove and re-add because we have changed the key and C++ maps do not support modifying of the keys. That is, changing the key means that the entry will have to be in another place in the map, so it has to be removed from the old place and added to the new one.",
      "commit_id" : "e85cc59badd357219213a6bda985a9fd93910a5c",
      "created_at" : "2024-05-21T12:38:43Z",
      "diff_hunk" : "@@ -14,10 +15,78 @@ void PrivateBroadcast::Add(const CTransactionRef& tx) EXCLUSIVE_LOCKS_REQUIRED(!\n     }\n }\n \n+std::optional<CTransactionRef> PrivateBroadcast::GetTxForBroadcast() EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+{\n+    LOCK(m_mutex);\n+    if (m_by_priority.empty()) {\n+        return std::nullopt;\n+    }\n+    const Txid& txid = m_by_priority.begin()->second;\n+    auto it = m_by_txid.find(txid);\n+    if (Assume(it != m_by_txid.end())) {\n+        return it->second.tx;\n+    }\n+    m_by_priority.erase(m_by_priority.begin());\n+    return std::nullopt;\n+}\n+\n+void PrivateBroadcast::PushedToNode(const NodeId& nodeid, const Txid& txid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+{\n+    LOCK(m_mutex);\n+    m_by_nodeid.emplace(nodeid, txid);\n+}\n+\n+bool PrivateBroadcast::BroadcastEnd(const NodeId& nodeid, bool confirmed_by_node) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+{\n+    LOCK(m_mutex);\n+    auto it = m_by_nodeid.find(nodeid);\n+    if (it == m_by_nodeid.end()) {\n+        return false;\n+    }\n+    const Txid txid{it->second};\n+    m_by_nodeid.erase(it);\n+\n+    if (!confirmed_by_node) {\n+        return true;\n+    }\n+\n+    // Update broadcast stats.\n+\n+    auto iters = Find(txid);\n+    if (!iters) {\n+        return true;\n+    }\n+    Priority& priority = iters->by_txid->second.priority;\n+\n+    ++priority.num_broadcasted;\n+    priority.last_broadcasted = GetTime<std::chrono::microseconds>();\n+\n+    m_by_priority.erase(iters->by_priority);\n+    m_by_priority.emplace(priority, iters->by_txid->first);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608255803",
      "id" : 1608255803,
      "in_reply_to_id" : 1597007136,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585f3Ak7",
      "original_commit_id" : "fecab592de8d0994e6d61e454e118d652ffd7b93",
      "original_line" : 65,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/private_broadcast.cpp",
      "position" : null,
      "pull_request_review_id" : 2068518702,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608255803/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T12:38:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608255803",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608284734"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608284734"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, if there is only one transaction submitted for broadcast. But if there is more than one, then `m_private_broadcast_connections_to_open` should not be set to `0`.\r\n\r\nFor example:\r\n* 3 transactions are submitted at approximately the same time: tx1, tx2, tx3.\r\n* NUM_PRIVATE_BROADCAST_PER_TX=5 for each one, so `m_private_broadcast_connections_to_open` is set to 15.\r\n* tx1 is broadcast 2 times, tx2 once and tx3 once, `m_private_broadcast_connections_to_open` is now 15-2-1-1=11.\r\n* tx1 is received back from the network. We come to this code and see that tx1 has been broadcast two times and deduce that the other 5-2=3 we created are not needed and call `PrivateBroadcastSub(3)`. `m_private_broadcast_connections_to_open` should be set to 11-3=8 (4 for tx2 and 4 for tx3), not 0.",
      "commit_id" : "e85cc59badd357219213a6bda985a9fd93910a5c",
      "created_at" : "2024-05-21T12:58:14Z",
      "diff_hunk" : "@@ -4658,6 +4658,21 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         const uint256& hash = peer->m_wtxid_relay ? wtxid : txid;\n         AddKnownTx(*peer, hash);\n \n+        if (auto num_broadcasted = m_tx_for_private_broadcast.Remove(ptx)) {\n+            LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                          BCLog::Level::Info,\n+                          \"Received our privately broadcast transaction (txid=%s) from the \"\n+                          \"network from peer=%d%s; stopping private broadcast attempts\\n\",\n+                          txid.ToString(),\n+                          pfrom.GetId(),\n+                          fLogIPs ? strprintf(\", peeraddr=%s\", pfrom.addr.ToStringAddrPort()) : \"\");\n+            if (NUM_PRIVATE_BROADCAST_PER_TX > num_broadcasted.value()) {\n+                // Not all of the initial NUM_PRIVATE_BROADCAST_PER_TX connections were needed.\n+                // Tell CConnman it does not need to start the remaining ones.\n+                m_connman.PrivateBroadcastSub(NUM_PRIVATE_BROADCAST_PER_TX - num_broadcasted.value());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608284734",
      "id" : 1608284734,
      "in_reply_to_id" : 1597146275,
      "line" : 4768,
      "node_id" : "PRRC_kwDOABII585f3Ho-",
      "original_commit_id" : "bb697ba5f51f5e31ec472f32682fbb6eb692fa37",
      "original_line" : 4768,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 525,
      "pull_request_review_id" : 2068564986,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608284734/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T12:58:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608284734",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608293544"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608293544"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Right! Removed.",
      "commit_id" : "e85cc59badd357219213a6bda985a9fd93910a5c",
      "created_at" : "2024-05-21T13:04:18Z",
      "diff_hunk" : "@@ -1498,6 +1514,7 @@ class CConnman\n     int m_max_outbound_block_relay;\n \n     int m_max_addnode{MAX_ADDNODE_CONNECTIONS};\n+    int m_max_private_broadcast{MAX_PRIVATE_BROADCAST_CONNECTIONS};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608293544",
      "id" : 1608293544,
      "in_reply_to_id" : 1598646404,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585f3Jyo",
      "original_commit_id" : "0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd",
      "original_line" : 1517,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 2068579532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608293544/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T13:04:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608293544",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608306032"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608306032"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed to `\"priv\"`.",
      "commit_id" : "e85cc59badd357219213a6bda985a9fd93910a5c",
      "created_at" : "2024-05-21T13:08:28Z",
      "diff_hunk" : "@@ -655,11 +656,12 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         \"           \\\"in\\\"  - inbound connections are those initiated by the peer\\n\"\n         \"           \\\"out\\\" - outbound connections are those initiated by us\\n\"\n         \"  type     Type of peer connection\\n\"\n-        \"           \\\"full\\\"   - full relay, the default\\n\"\n-        \"           \\\"block\\\"  - block relay; like full relay but does not relay transactions or addresses\\n\"\n-        \"           \\\"manual\\\" - peer we manually added using RPC addnode or the -addnode/-connect config options\\n\"\n-        \"           \\\"feeler\\\" - short-lived connection for testing addresses\\n\"\n-        \"           \\\"addr\\\"   - address fetch; short-lived connection for requesting addresses\\n\"\n+        \"           \\\"full\\\"      - full relay, the default\\n\"\n+        \"           \\\"block\\\"     - block relay; like full relay but does not relay transactions or addresses\\n\"\n+        \"           \\\"manual\\\"    - peer we manually added using RPC addnode or the -addnode/-connect config options\\n\"\n+        \"           \\\"feeler\\\"    - short-lived connection for testing addresses\\n\"\n+        \"           \\\"addr\\\"      - address fetch; short-lived connection for requesting addresses\\n\"\n+        \"           \\\"privat\\\"    - private broadcast; short-lived connection for broadcasting our transactions\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608306032",
      "id" : 1608306032,
      "in_reply_to_id" : 1545397035,
      "line" : 660,
      "node_id" : "PRRC_kwDOABII585f3M1w",
      "original_commit_id" : "c7e4d5cb2bf01d9719702e71c8d6264ee670e988",
      "original_line" : 660,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 22,
      "pull_request_review_id" : 2068601743,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608306032/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T13:08:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608306032",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608308448"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608308448"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "e85cc59badd357219213a6bda985a9fd93910a5c",
      "created_at" : "2024-05-21T13:09:50Z",
      "diff_hunk" : "@@ -386,6 +386,27 @@ static CAddress GetBindAddress(const Sock& sock)\n     return addr_bind;\n }\n \n+/**\n+ * Check if private broadcast can be done to clearnet peers and if yes via which proxy.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608308448",
      "id" : 1608308448,
      "in_reply_to_id" : 1595748248,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585f3Nbg",
      "original_commit_id" : "0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd",
      "original_line" : 390,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 2068605490,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608308448/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T13:09:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608308448",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608310055"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608310055"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I removed the argument to this function and renamed it to `ProxyForIPv4or6PrivateBroadcast()`. It is a bit more simpler now.",
      "commit_id" : "e85cc59badd357219213a6bda985a9fd93910a5c",
      "created_at" : "2024-05-21T13:10:56Z",
      "diff_hunk" : "@@ -386,6 +386,27 @@ static CAddress GetBindAddress(const Sock& sock)\n     return addr_bind;\n }\n \n+/**\n+ * Check if private broadcast can be done to clearnet peers and if yes via which proxy.\n+ * If private broadcast connections should not be opened to `net`, then this will return an empty optional.\n+ */\n+static std::optional<Proxy> ProxyForClearnetPrivateBroadcast(Network clearnet)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608310055",
      "id" : 1608310055,
      "in_reply_to_id" : 1595750204,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585f3N0n",
      "original_commit_id" : "0ba30dec085f860c89f4fd8c8a398aa8a13b5ebd",
      "original_line" : 393,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 2068608035,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608310055/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T13:10:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608310055",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`65ba8d0203...e85cc59bad`: rebase, address suggestions and remove the argument of `ProxyForClearnetPrivateBroadcast()` because it is always IPv4 or IPv6 and we treat both in the same way.\r\n\r\n> The main thing I'm wondering currently is why are we tacking m_private_broadcast_connections_to_open loosely? It feels harder to reason about, but I don't see what the benefit of it is.\r\n\r\nContinued at https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608327017 to avoid overwhelming the main discussion thread of the PR and to make replies close to each other (rather than scattered in the main thread).",
      "created_at" : "2024-05-21T13:18:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-2122621311",
      "id" : 2122621311,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
      "node_id" : "IC_kwDOABII585-hKF_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2122621311/reactions"
      },
      "updated_at" : "2024-05-21T13:24:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2122621311",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608327017"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608327017"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "_from the main thread at https://github.com/bitcoin/bitcoin/pull/29415#pullrequestreview-2041604763_\r\n\r\n> The main thing I'm wondering currently is why are we tacking `m_private_broadcast_connections_to_open` loosely? It feels harder to reason about, but I don't see what the benefit of it is.\r\n\r\nThe reason for this is that it is simpler to implement that way (I think, somebody has a simpler proposal?). This is because the connman thread is creating the connections, they are consumed/used by the peerman thread and the requests for new connections can come from yet another (3rd) thread. For example, while connman is creating a new connection which is needed to broadcast a given transaction, that transaction may be successfully broadcast by peerman and received back from the network, rendering the just created new connection by connman unnecessary. This is harmless and I accept it because avoiding it would make things too complicated or slow.\r\n",
      "commit_id" : "e85cc59badd357219213a6bda985a9fd93910a5c",
      "created_at" : "2024-05-21T13:21:58Z",
      "diff_hunk" : "@@ -1547,6 +1577,12 @@ class CConnman\n      */\n     std::atomic_bool m_start_extra_block_relay_peers{false};\n \n+    /**\n+     * Number of `ConnectionType::PRIVATE_BROADCAST` connections to open.\n+     * Whenever such a connection is opened this is decremented with 1.\n+     */\n+    std::atomic_size_t m_private_broadcast_connections_to_open{0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1608327017",
      "id" : 1608327017,
      "line" : 1584,
      "node_id" : "PRRC_kwDOABII585f3R9p",
      "original_commit_id" : "e85cc59badd357219213a6bda985a9fd93910a5c",
      "original_line" : 1584,
      "original_position" : 87,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 87,
      "pull_request_review_id" : 2068635557,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608327017/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T13:21:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608327017",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   }
]
