[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29419).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [davidgumberg](https://github.com/bitcoin/bitcoin/pull/29419#issuecomment-1986720001), [pinheadmz](https://github.com/bitcoin/bitcoin/pull/29419#pullrequestreview-1931267101), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/29419#pullrequestreview-1973912295) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29432](https://github.com/bitcoin/bitcoin/pull/29432) (Stratum v2 Template Provider (take 3) by Sjors)\n* [#29415](https://github.com/bitcoin/bitcoin/pull/29415) (Broadcast own transactions only via short-lived Tor or I2P connections by vasild)\n* [#29346](https://github.com/bitcoin/bitcoin/pull/29346) (Stratum v2 Noise Protocol by Sjors)\n* [#26697](https://github.com/bitcoin/bitcoin/pull/26697) (logging: use bitset for categories by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2024-02-11T14:28:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29419#issuecomment-1937770258",
      "id" : 1937770258,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29419",
      "node_id" : "IC_kwDOABII585zgAcS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937770258/reactions"
      },
      "updated_at" : "2024-04-02T14:46:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937770258",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "crACK https://github.com/bitcoin/bitcoin/pull/29419/commits/b0344c219a641b759fb0cc4f53afebe675b8ca27",
      "created_at" : "2024-03-09T04:05:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29419#issuecomment-1986720001",
      "id" : 1986720001,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29419",
      "node_id" : "IC_kwDOABII5852avEB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986720001/reactions"
      },
      "updated_at" : "2024-03-09T04:05:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986720001",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2257631?v=4",
         "events_url" : "https://api.github.com/users/davidgumberg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/davidgumberg/followers",
         "following_url" : "https://api.github.com/users/davidgumberg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/davidgumberg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/davidgumberg",
         "id" : 2257631,
         "login" : "davidgumberg",
         "node_id" : "MDQ6VXNlcjIyNTc2MzE=",
         "organizations_url" : "https://api.github.com/users/davidgumberg/orgs",
         "received_events_url" : "https://api.github.com/users/davidgumberg/received_events",
         "repos_url" : "https://api.github.com/users/davidgumberg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/davidgumberg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/davidgumberg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/davidgumberg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29419#discussion_r1547943302"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1547943302"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"logging: remove unused BCLog::UTIL\" (b0344c219a641b759fb0cc4f53afebe675b8ca27)\r\n\r\nWould be good to assert that emplace succeeded, and the map is consistent.",
      "commit_id" : "b0344c219a641b759fb0cc4f53afebe675b8ca27",
      "created_at" : "2024-04-02T13:55:55Z",
      "diff_hunk" : "@@ -142,49 +141,58 @@ bool BCLog::Logger::DefaultShrinkDebugFile() const\n     return m_categories == BCLog::NONE;\n }\n \n-struct CLogCategoryDesc {\n-    BCLog::LogFlags flag;\n-    std::string category;\n-};\n-\n-const CLogCategoryDesc LogCategories[] =\n-{\n-    {BCLog::NONE, \"0\"},\n-    {BCLog::NONE, \"\"},\n-    {BCLog::NET, \"net\"},\n-    {BCLog::TOR, \"tor\"},\n-    {BCLog::MEMPOOL, \"mempool\"},\n-    {BCLog::HTTP, \"http\"},\n-    {BCLog::BENCH, \"bench\"},\n-    {BCLog::ZMQ, \"zmq\"},\n-    {BCLog::WALLETDB, \"walletdb\"},\n-    {BCLog::RPC, \"rpc\"},\n-    {BCLog::ESTIMATEFEE, \"estimatefee\"},\n-    {BCLog::ADDRMAN, \"addrman\"},\n-    {BCLog::SELECTCOINS, \"selectcoins\"},\n-    {BCLog::REINDEX, \"reindex\"},\n-    {BCLog::CMPCTBLOCK, \"cmpctblock\"},\n-    {BCLog::RAND, \"rand\"},\n-    {BCLog::PRUNE, \"prune\"},\n-    {BCLog::PROXY, \"proxy\"},\n-    {BCLog::MEMPOOLREJ, \"mempoolrej\"},\n-    {BCLog::LIBEVENT, \"libevent\"},\n-    {BCLog::COINDB, \"coindb\"},\n-    {BCLog::QT, \"qt\"},\n-    {BCLog::LEVELDB, \"leveldb\"},\n-    {BCLog::VALIDATION, \"validation\"},\n-    {BCLog::I2P, \"i2p\"},\n-    {BCLog::IPC, \"ipc\"},\n+static const std::map<std::string, BCLog::LogFlags> LOG_CATEGORIES_BY_STR{\n+    {\"0\", BCLog::NONE},\n+    {\"\", BCLog::NONE},\n+    {\"net\", BCLog::NET},\n+    {\"tor\", BCLog::TOR},\n+    {\"mempool\", BCLog::MEMPOOL},\n+    {\"http\", BCLog::HTTP},\n+    {\"bench\", BCLog::BENCH},\n+    {\"zmq\", BCLog::ZMQ},\n+    {\"walletdb\", BCLog::WALLETDB},\n+    {\"rpc\", BCLog::RPC},\n+    {\"estimatefee\", BCLog::ESTIMATEFEE},\n+    {\"addrman\", BCLog::ADDRMAN},\n+    {\"selectcoins\", BCLog::SELECTCOINS},\n+    {\"reindex\", BCLog::REINDEX},\n+    {\"cmpctblock\", BCLog::CMPCTBLOCK},\n+    {\"rand\", BCLog::RAND},\n+    {\"prune\", BCLog::PRUNE},\n+    {\"proxy\", BCLog::PROXY},\n+    {\"mempoolrej\", BCLog::MEMPOOLREJ},\n+    {\"libevent\", BCLog::LIBEVENT},\n+    {\"coindb\", BCLog::COINDB},\n+    {\"qt\", BCLog::QT},\n+    {\"leveldb\", BCLog::LEVELDB},\n+    {\"validation\", BCLog::VALIDATION},\n+    {\"i2p\", BCLog::I2P},\n+    {\"ipc\", BCLog::IPC},\n #ifdef DEBUG_LOCKCONTENTION\n-    {BCLog::LOCK, \"lock\"},\n+    {\"lock\", BCLog::LOCK},\n #endif\n-    {BCLog::UTIL, \"util\"},\n-    {BCLog::BLOCKSTORAGE, \"blockstorage\"},\n-    {BCLog::TXRECONCILIATION, \"txreconciliation\"},\n-    {BCLog::SCAN, \"scan\"},\n-    {BCLog::TXPACKAGES, \"txpackages\"},\n-    {BCLog::ALL, \"1\"},\n-    {BCLog::ALL, \"all\"},\n+    {\"util\", BCLog::UTIL},\n+    {\"blockstorage\", BCLog::BLOCKSTORAGE},\n+    {\"txreconciliation\", BCLog::TXRECONCILIATION},\n+    {\"scan\", BCLog::SCAN},\n+    {\"txpackages\", BCLog::TXPACKAGES},\n+    {\"1\", BCLog::ALL},\n+    {\"all\", BCLog::ALL},\n+};\n+\n+static const std::unordered_map<BCLog::LogFlags, std::string> LOG_CATEGORIES_BY_FLAG{\n+    // Swap keys and values from LOG_CATEGORIES_BY_STR.\n+    [](const std::map<std::string, BCLog::LogFlags>& in) {\n+        std::unordered_map<BCLog::LogFlags, std::string> out;\n+        for (const auto& [k, v] : in) {\n+            switch (v) {\n+            case BCLog::NONE: out.emplace(BCLog::NONE, \"\"); break;\n+            case BCLog::ALL: out.emplace(BCLog::ALL, \"all\"); break;\n+            default: out.emplace(v, k);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29419#discussion_r1547943302",
      "id" : 1547943302,
      "line" : 190,
      "node_id" : "PRRC_kwDOABII585cQ72G",
      "original_commit_id" : "d3b3af90343b7671231afd7dff87e87ff86d31d7",
      "original_line" : 191,
      "original_position" : 103,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 102,
      "pull_request_review_id" : 1973912295,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29419",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1547943302/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-02T14:46:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1547943302",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29419#discussion_r1547990373"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1547990373"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"logging: remove unused BCLog::UTIL\" (b0344c219a641b759fb0cc4f53afebe675b8ca27)\r\n\r\nI think it would make code more straightforward if we could drop these special cases here and avoid having discrepancies between LOG_CATEGORIES_BY_FLAG and LOG_CATEGORIES_BY_STR maps.\r\n\r\nThere are already special cases in existing `GetLogCategory` and `LogCategoriesList` functions so I think it would make more sense to put new special cases there and not introduce them in a third place. Would suggest:\r\n\r\n```diff\r\n--- a/src/logging.cpp\r\n+++ b/src/logging.cpp\r\n@@ -142,7 +142,6 @@ bool BCLog::Logger::DefaultShrinkDebugFile() const\r\n }\r\n \r\n static const std::map<std::string, BCLog::LogFlags> LOG_CATEGORIES_BY_STR{\r\n-    {\"0\", BCLog::NONE},\r\n     {\"\", BCLog::NONE},\r\n     {\"net\", BCLog::NET},\r\n     {\"tor\", BCLog::TOR},\r\n@@ -175,7 +174,6 @@ static const std::map<std::string, BCLog::LogFlags> LOG_CATEGORIES_BY_STR{\r\n     {\"txreconciliation\", BCLog::TXRECONCILIATION},\r\n     {\"scan\", BCLog::SCAN},\r\n     {\"txpackages\", BCLog::TXPACKAGES},\r\n-    {\"1\", BCLog::ALL},\r\n     {\"all\", BCLog::ALL},\r\n };\r\n \r\n@@ -184,11 +182,8 @@ static const std::unordered_map<BCLog::LogFlags, std::string> LOG_CATEGORIES_BY_\r\n     [](const std::map<std::string, BCLog::LogFlags>& in) {\r\n         std::unordered_map<BCLog::LogFlags, std::string> out;\r\n         for (const auto& [k, v] : in) {\r\n-            switch (v) {\r\n-            case BCLog::NONE: out.emplace(BCLog::NONE, \"\"); break;\r\n-            case BCLog::ALL: out.emplace(BCLog::ALL, \"all\"); break;\r\n-            default: out.emplace(v, k);\r\n-            }\r\n+            bool inserted{out.emplace(v, k).second};\r\n+            assert(inserted);\r\n         }\r\n         return out;\r\n     }(LOG_CATEGORIES_BY_STR)\r\n@@ -196,9 +191,12 @@ static const std::unordered_map<BCLog::LogFlags, std::string> LOG_CATEGORIES_BY_\r\n \r\n bool GetLogCategory(BCLog::LogFlags& flag, const std::string& str)\r\n {\r\n-    if (str.empty()) {\r\n+    if (str.empty() || str == \"1\") {\r\n         flag = BCLog::ALL;\r\n         return true;\r\n+    } else if (str == \"0\") {\r\n+        flag = BCLog::NONE;\r\n+        return true;\r\n     }\r\n     auto it = LOG_CATEGORIES_BY_STR.find(str);\r\n     if (it != LOG_CATEGORIES_BY_STR.end()) {\r\n\r\n```",
      "commit_id" : "b0344c219a641b759fb0cc4f53afebe675b8ca27",
      "created_at" : "2024-04-02T14:20:39Z",
      "diff_hunk" : "@@ -142,49 +141,58 @@ bool BCLog::Logger::DefaultShrinkDebugFile() const\n     return m_categories == BCLog::NONE;\n }\n \n-struct CLogCategoryDesc {\n-    BCLog::LogFlags flag;\n-    std::string category;\n-};\n-\n-const CLogCategoryDesc LogCategories[] =\n-{\n-    {BCLog::NONE, \"0\"},\n-    {BCLog::NONE, \"\"},\n-    {BCLog::NET, \"net\"},\n-    {BCLog::TOR, \"tor\"},\n-    {BCLog::MEMPOOL, \"mempool\"},\n-    {BCLog::HTTP, \"http\"},\n-    {BCLog::BENCH, \"bench\"},\n-    {BCLog::ZMQ, \"zmq\"},\n-    {BCLog::WALLETDB, \"walletdb\"},\n-    {BCLog::RPC, \"rpc\"},\n-    {BCLog::ESTIMATEFEE, \"estimatefee\"},\n-    {BCLog::ADDRMAN, \"addrman\"},\n-    {BCLog::SELECTCOINS, \"selectcoins\"},\n-    {BCLog::REINDEX, \"reindex\"},\n-    {BCLog::CMPCTBLOCK, \"cmpctblock\"},\n-    {BCLog::RAND, \"rand\"},\n-    {BCLog::PRUNE, \"prune\"},\n-    {BCLog::PROXY, \"proxy\"},\n-    {BCLog::MEMPOOLREJ, \"mempoolrej\"},\n-    {BCLog::LIBEVENT, \"libevent\"},\n-    {BCLog::COINDB, \"coindb\"},\n-    {BCLog::QT, \"qt\"},\n-    {BCLog::LEVELDB, \"leveldb\"},\n-    {BCLog::VALIDATION, \"validation\"},\n-    {BCLog::I2P, \"i2p\"},\n-    {BCLog::IPC, \"ipc\"},\n+static const std::map<std::string, BCLog::LogFlags> LOG_CATEGORIES_BY_STR{\n+    {\"0\", BCLog::NONE},\n+    {\"\", BCLog::NONE},\n+    {\"net\", BCLog::NET},\n+    {\"tor\", BCLog::TOR},\n+    {\"mempool\", BCLog::MEMPOOL},\n+    {\"http\", BCLog::HTTP},\n+    {\"bench\", BCLog::BENCH},\n+    {\"zmq\", BCLog::ZMQ},\n+    {\"walletdb\", BCLog::WALLETDB},\n+    {\"rpc\", BCLog::RPC},\n+    {\"estimatefee\", BCLog::ESTIMATEFEE},\n+    {\"addrman\", BCLog::ADDRMAN},\n+    {\"selectcoins\", BCLog::SELECTCOINS},\n+    {\"reindex\", BCLog::REINDEX},\n+    {\"cmpctblock\", BCLog::CMPCTBLOCK},\n+    {\"rand\", BCLog::RAND},\n+    {\"prune\", BCLog::PRUNE},\n+    {\"proxy\", BCLog::PROXY},\n+    {\"mempoolrej\", BCLog::MEMPOOLREJ},\n+    {\"libevent\", BCLog::LIBEVENT},\n+    {\"coindb\", BCLog::COINDB},\n+    {\"qt\", BCLog::QT},\n+    {\"leveldb\", BCLog::LEVELDB},\n+    {\"validation\", BCLog::VALIDATION},\n+    {\"i2p\", BCLog::I2P},\n+    {\"ipc\", BCLog::IPC},\n #ifdef DEBUG_LOCKCONTENTION\n-    {BCLog::LOCK, \"lock\"},\n+    {\"lock\", BCLog::LOCK},\n #endif\n-    {BCLog::UTIL, \"util\"},\n-    {BCLog::BLOCKSTORAGE, \"blockstorage\"},\n-    {BCLog::TXRECONCILIATION, \"txreconciliation\"},\n-    {BCLog::SCAN, \"scan\"},\n-    {BCLog::TXPACKAGES, \"txpackages\"},\n-    {BCLog::ALL, \"1\"},\n-    {BCLog::ALL, \"all\"},\n+    {\"util\", BCLog::UTIL},\n+    {\"blockstorage\", BCLog::BLOCKSTORAGE},\n+    {\"txreconciliation\", BCLog::TXRECONCILIATION},\n+    {\"scan\", BCLog::SCAN},\n+    {\"txpackages\", BCLog::TXPACKAGES},\n+    {\"1\", BCLog::ALL},\n+    {\"all\", BCLog::ALL},\n+};\n+\n+static const std::unordered_map<BCLog::LogFlags, std::string> LOG_CATEGORIES_BY_FLAG{\n+    // Swap keys and values from LOG_CATEGORIES_BY_STR.\n+    [](const std::map<std::string, BCLog::LogFlags>& in) {\n+        std::unordered_map<BCLog::LogFlags, std::string> out;\n+        for (const auto& [k, v] : in) {\n+            switch (v) {\n+            case BCLog::NONE: out.emplace(BCLog::NONE, \"\"); break;\n+            case BCLog::ALL: out.emplace(BCLog::ALL, \"all\"); break;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29419#discussion_r1547990373",
      "id" : 1547990373,
      "line" : 189,
      "node_id" : "PRRC_kwDOABII585cRHVl",
      "original_commit_id" : "d3b3af90343b7671231afd7dff87e87ff86d31d7",
      "original_line" : 190,
      "original_position" : 102,
      "original_start_line" : 189,
      "path" : "src/logging.cpp",
      "position" : 101,
      "pull_request_review_id" : 1973912295,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29419",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1547990373/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 188,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-04-02T14:46:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1547990373",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29419#discussion_r1548018694"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1548018694"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"log: deduplicate category names and improve logging.cpp\" (d3b3af90343b7671231afd7dff87e87ff86d31d7)\r\n\r\nI think it's good to keep the \"\" to NONE map entry in this commit, just to make it obvious this commit is not changing behavior. But in a followup, I think it would be good to drop this entry because it doesn't actually do anything useful, and it is confusing to have a map from \"\" to NONE in one place and ALL in another.",
      "commit_id" : "b0344c219a641b759fb0cc4f53afebe675b8ca27",
      "created_at" : "2024-04-02T14:35:48Z",
      "diff_hunk" : "@@ -142,49 +141,58 @@ bool BCLog::Logger::DefaultShrinkDebugFile() const\n     return m_categories == BCLog::NONE;\n }\n \n-struct CLogCategoryDesc {\n-    BCLog::LogFlags flag;\n-    std::string category;\n-};\n-\n-const CLogCategoryDesc LogCategories[] =\n-{\n-    {BCLog::NONE, \"0\"},\n-    {BCLog::NONE, \"\"},\n-    {BCLog::NET, \"net\"},\n-    {BCLog::TOR, \"tor\"},\n-    {BCLog::MEMPOOL, \"mempool\"},\n-    {BCLog::HTTP, \"http\"},\n-    {BCLog::BENCH, \"bench\"},\n-    {BCLog::ZMQ, \"zmq\"},\n-    {BCLog::WALLETDB, \"walletdb\"},\n-    {BCLog::RPC, \"rpc\"},\n-    {BCLog::ESTIMATEFEE, \"estimatefee\"},\n-    {BCLog::ADDRMAN, \"addrman\"},\n-    {BCLog::SELECTCOINS, \"selectcoins\"},\n-    {BCLog::REINDEX, \"reindex\"},\n-    {BCLog::CMPCTBLOCK, \"cmpctblock\"},\n-    {BCLog::RAND, \"rand\"},\n-    {BCLog::PRUNE, \"prune\"},\n-    {BCLog::PROXY, \"proxy\"},\n-    {BCLog::MEMPOOLREJ, \"mempoolrej\"},\n-    {BCLog::LIBEVENT, \"libevent\"},\n-    {BCLog::COINDB, \"coindb\"},\n-    {BCLog::QT, \"qt\"},\n-    {BCLog::LEVELDB, \"leveldb\"},\n-    {BCLog::VALIDATION, \"validation\"},\n-    {BCLog::I2P, \"i2p\"},\n-    {BCLog::IPC, \"ipc\"},\n+static const std::map<std::string, BCLog::LogFlags> LOG_CATEGORIES_BY_STR{\n+    {\"0\", BCLog::NONE},\n+    {\"\", BCLog::NONE},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29419#discussion_r1548018694",
      "id" : 1548018694,
      "line" : 146,
      "node_id" : "PRRC_kwDOABII585cROQG",
      "original_commit_id" : "d3b3af90343b7671231afd7dff87e87ff86d31d7",
      "original_line" : 146,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 50,
      "pull_request_review_id" : 1973912295,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29419",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1548018694/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-04-02T14:46:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1548018694",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky, thanks for the review! Addressed your pending suggestions in https://github.com/bitcoin/bitcoin/pull/29798.",
      "created_at" : "2024-04-03T11:54:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29419#issuecomment-2034378458",
      "id" : 2034378458,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29419",
      "node_id" : "IC_kwDOABII5855Qiba",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2034378458/reactions"
      },
      "updated_at" : "2024-04-03T11:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2034378458",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   }
]
