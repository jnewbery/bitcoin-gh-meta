[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/28051#pullrequestreview-1520702348), [fanquake](https://github.com/bitcoin/bitcoin/pull/28051#issuecomment-1667535093) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28311](https://github.com/bitcoin/bitcoin/pull/28311) ([WIP] BIP300 (Drivechains) consensus-level logic by luke-jr)\n* [#28228](https://github.com/bitcoin/bitcoin/pull/28228) (kernel: Run sanity checks on context construction by TheCharlatan)\n* [#28195](https://github.com/bitcoin/bitcoin/pull/28195) (blockstorage: Drop legacy -txindex check by MarcoFalke)\n* [#28052](https://github.com/bitcoin/bitcoin/pull/28052) (blockstorage: XOR blocksdir *.dat files by MarcoFalke)\n* [#27253](https://github.com/bitcoin/bitcoin/pull/27253) (httpserver, rest: improving URI validation by pablomartin4btc)\n* [#26966](https://github.com/bitcoin/bitcoin/pull/26966) (index: blockfilter initial sync speedup, parallelize process by furszy)\n* [#26564](https://github.com/bitcoin/bitcoin/pull/26564) (test: allow BITCOIN_TEST_PATH to specify working dir by LarryRuane)\n* [#25722](https://github.com/bitcoin/bitcoin/pull/25722) (refactor: Use util::Result class for wallet loading by ryanofsky)\n* [#25665](https://github.com/bitcoin/bitcoin/pull/25665) (refactor: Add util::Result failure values, multiple error and warning messages by ryanofsky)\n* [#24230](https://github.com/bitcoin/bitcoin/pull/24230) (indexes: Stop using node internal types and locking cs_main, improve sync logic by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-07-07T22:26:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28051#issuecomment-1626306397",
      "id" : 1626306397,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28051",
      "node_id" : "IC_kwDOABII585g73dd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1626306397/reactions"
      },
      "updated_at" : "2023-08-22T14:14:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1626306397",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I have the same question here: https://github.com/bitcoin/bitcoin/pull/27861#discussion_r1255496707",
      "created_at" : "2023-07-08T10:44:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28051#issuecomment-1627094953",
      "id" : 1627094953,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28051",
      "node_id" : "IC_kwDOABII585g-3-p",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1627094953/reactions"
      },
      "updated_at" : "2023-07-08T10:44:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1627094953",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28051#discussion_r1257259643"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28051"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257259643"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why not use `EnsureAnyNodeContext` here as done in many other places?",
      "commit_id" : "c7bbca13da3c569358632fa7cc2d2040aa86a06b",
      "created_at" : "2023-07-08T12:45:06Z",
      "diff_hunk" : "@@ -179,7 +181,8 @@ static RPCHelpMan stop()\n {\n     // Event loop will exit after current HTTP requests have been handled, so\n     // this reply will get back to the client.\n-    StartShutdown();\n+    auto node_context = CHECK_NONFATAL(util::AnyPtr<node::NodeContext>(jsonRequest.context));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28051#discussion_r1257259643",
      "id" : 1257259643,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585K8EJ7",
      "original_commit_id" : "d9453bddd6ce5446552e844f4d5b65368d831656",
      "original_line" : 184,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/rpc/server.cpp",
      "position" : null,
      "pull_request_review_id" : 1520702348,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28051",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257259643/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-08T19:53:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257259643",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28051#discussion_r1257286292"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28051"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257286292"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think we might have introduced a bug here before. This may be possible to trigger when running the GUI before the kernel context is initialized with `app.baseInitialize()`. We could just move it to after `baseInitialize` (see my [patch here](https://github.com/TheCharlatan/bitcoin/commit/2df7a669a07be01ef2cce0d22891617bc19060d7)), but I am not sure if that would be correct either. Maybe `app.baseInitialize()` can be moved up a bit instead?",
      "commit_id" : "c7bbca13da3c569358632fa7cc2d2040aa86a06b",
      "created_at" : "2023-07-08T14:47:15Z",
      "diff_hunk" : "@@ -25,7 +27,7 @@ bool WinShutdownMonitor::nativeEventFilter(const QByteArray &eventType, void *pM\n            {\n                // Initiate a client shutdown after receiving a WM_QUERYENDSESSION and block\n                // Windows session end until we have finished client shutdown.\n-               StartShutdown();\n+               Assert(kernel::g_context)->interrupt();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28051#discussion_r1257286292",
      "id" : 1257286292,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585K8KqU",
      "original_commit_id" : "d9453bddd6ce5446552e844f4d5b65368d831656",
      "original_line" : 30,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/qt/winshutdownmonitor.cpp",
      "position" : null,
      "pull_request_review_id" : 1520702348,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28051",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257286292/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-08T19:53:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257286292",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28051#discussion_r1257291194"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28051"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257291194"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I was looking at the initialization order here and noticed that I might have introduced more unsafe behavior here in e2d680a32d757de0ef8eb836047a0daa1d82e3c4. These handlers are registered in `AppInitBasicSetup`. But if you look in bitcoind.cpp, the kernel context is created after `AppInitBasicSetup` is called.",
      "commit_id" : "c7bbca13da3c569358632fa7cc2d2040aa86a06b",
      "created_at" : "2023-07-08T15:03:00Z",
      "diff_hunk" : "@@ -376,7 +374,7 @@ static void HandleSIGHUP(int)\n #else\n static BOOL WINAPI consoleCtrlHandler(DWORD dwCtrlType)\n {\n-    StartShutdown();\n+    Assert(kernel::g_context)->interrupt();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28051#discussion_r1257291194",
      "id" : 1257291194,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585K8L26",
      "original_commit_id" : "d9453bddd6ce5446552e844f4d5b65368d831656",
      "original_line" : 376,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 1520702348,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28051",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257291194/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-10T08:20:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257291194",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28051#discussion_r1257346188"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28051"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257346188"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/28051#discussion_r1257259643\r\n\r\n> Why not use `EnsureAnyNodeContext` here as done in many other places?\r\n\r\nThanks switched to that. I was trying to find the function and couldn't find it. I just assumed it had been lost in some refactoring.",
      "commit_id" : "c7bbca13da3c569358632fa7cc2d2040aa86a06b",
      "created_at" : "2023-07-08T20:07:07Z",
      "diff_hunk" : "@@ -179,7 +181,8 @@ static RPCHelpMan stop()\n {\n     // Event loop will exit after current HTTP requests have been handled, so\n     // this reply will get back to the client.\n-    StartShutdown();\n+    auto node_context = CHECK_NONFATAL(util::AnyPtr<node::NodeContext>(jsonRequest.context));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28051#discussion_r1257346188",
      "id" : 1257346188,
      "in_reply_to_id" : 1257259643,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585K8ZSM",
      "original_commit_id" : "d9453bddd6ce5446552e844f4d5b65368d831656",
      "original_line" : 184,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/rpc/server.cpp",
      "position" : null,
      "pull_request_review_id" : 1520779536,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28051",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257346188/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-10T23:57:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257346188",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-07-10T17:30:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28051#issuecomment-1629406540",
      "id" : 1629406540,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28051",
      "node_id" : "IC_kwDOABII585hHsVM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1629406540/reactions"
      },
      "updated_at" : "2023-07-10T17:30:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1629406540",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-07-14T18:45:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28051#issuecomment-1636260467",
      "id" : 1636260467,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28051",
      "node_id" : "IC_kwDOABII585hh1pz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1636260467/reactions"
      },
      "updated_at" : "2023-07-14T18:45:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1636260467",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2023-08-07T09:41:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28051#issuecomment-1667535093",
      "id" : 1667535093,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28051",
      "node_id" : "IC_kwDOABII585jZJD1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1667535093/reactions"
      },
      "updated_at" : "2023-08-07T09:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1667535093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Making this into a draft because I want to do more work to avoid the uncaught exceptions that Marco mentioned [#27861 (comment)](https://github.com/bitcoin/bitcoin/pull/27861#discussion_r1255496707), and address initialization order issues TheCharlatan mentioned [#28051 (comment)](https://github.com/bitcoin/bitcoin/pull/28051#discussion_r1257286292) and [#28051 (comment)](https://github.com/bitcoin/bitcoin/pull/28051#discussion_r1257291194)\r\n\r\nRemoved draft state and rebased 0dce0042687d2f7151ff9596295ed0b7f84aadd5 -> eccea15a88d0b1ea29847ff6a1f7683459516139 ([`pr/noshut.4`](https://github.com/ryanofsky/bitcoin/commits/pr/noshut.4) -> [`pr/noshut.5`](https://github.com/ryanofsky/bitcoin/commits/pr/noshut.5), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/noshut.4-rebase..pr/noshut.5)) removing all the SignalInterrupt exceptions, fixing initialization order issues that were mentioned, getting rid of the `kernel::g_context` variable, and rebasing to fix conflicts with #28048 and #28244",
      "created_at" : "2023-08-21T20:29:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28051#issuecomment-1686998476",
      "id" : 1686998476,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28051",
      "node_id" : "IC_kwDOABII585kjY3M",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1686998476/reactions"
      },
      "updated_at" : "2023-08-21T20:29:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1686998476",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Windows builds are currently unhappy:\r\n```bash\r\n  CXX      kernel/libbitcoin_node_a-mempool_persist.o\r\ninit.cpp: In function âBOOL consoleCtrlHandler(DWORD)â:\r\ninit.cpp:386:15: error: ignoring return value of âbool util::SignalInterrupt::operator()()â, declared with attribute ânodiscardâ [-Werror=unused-result]\r\n  386 |     g_shutdown();\r\n      |     ~~~~~~~~~~^~\r\nIn file included from ./kernel/context.h:8,\r\n                 from ./node/context.h:8,\r\n                 from init.cpp:48:\r\n./util/signalinterrupt.h:32:24: note: declared here\r\n   32 |     [[nodiscard]] bool operator()();\r\n      |                        ^~~~~~~~\r\ncc1plus: all warnings being treated as errors\r\nmake[2]: *** [Makefile:10167: libbitcoin_node_a-init.o] Error 1\r\n```",
      "created_at" : "2023-08-22T09:17:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28051#issuecomment-1687800034",
      "id" : 1687800034,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28051",
      "node_id" : "IC_kwDOABII585kmcji",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1687800034/reactions"
      },
      "updated_at" : "2023-08-22T09:17:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1687800034",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Does tsan pass locally, if you run the fun tests with it?",
      "created_at" : "2023-08-23T09:47:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28051#issuecomment-1689644209",
      "id" : 1689644209,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28051",
      "node_id" : "IC_kwDOABII585kteyx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1689644209/reactions"
      },
      "updated_at" : "2023-08-23T09:47:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1689644209",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Does tsan pass locally, if you run the fun tests with it?\r\n\r\nTsan seems to output warnings so the test runner fails. I was able to reproduce the CI error from https://cirrus-ci.com/task/5608405029617664 locally by running\r\n\r\n ```bash\r\ncd /ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu\r\ntest/functional/test_runner.py\r\n```\r\n\r\nI am a little confused though because even though testrunner fails on the create_cache step, running it manually with \r\n\r\n```bash\r\ntest/functional/create_cache.py --cachedir=test/cache --tmpdir=/tmp/cache\r\n```\r\n\r\nseems to succeed.\r\n\r\nI also found that if I ran `src/bitcoind -regtest` and `src/bitcoin-cli -regtest stop`, shutdown would work, but with the tsan warnings, which I'll try to debug:\r\n\r\n```c++\r\nWARNING: ThreadSanitizer: data race (pid=102057)\r\n  Read of size 4 at 0x558be9794bd8 by thread T10:\r\n    #0 TokenPipeEnd::IsOpen() src/./util/tokenpipe.h:53:28 (bitcoind+0xab59e2) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #1 util::SignalInterrupt::open() src/util/signalinterrupt.cpp:21:19 (bitcoind+0xab59e2)\r\n    #2 util::SignalInterrupt::operator()() src/util/signalinterrupt.cpp:47:10 (bitcoind+0xab5cfb) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #3 stop()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const src/rpc/server.cpp:184:10 (bitcoind+0x4ddc70) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #4 decltype(std::declval<stop()::$_0&>()(std::declval<RPCHelpMan const&>(), std::declval<JSONRPCRequest const&>())) std::__1::__invoke[abi:v160000]<stop()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(stop()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/invoke.h:394:23 (bitcoind+0x4ddc70)\r\n    #5 UniValue std::__1::__invoke_void_return_wrapper<UniValue, false>::__call<stop()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(stop()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/invoke.h:478:16 (bitcoind+0x4ddc70)\r\n    #6 std::__1::__function::__alloc_func<stop()::$_0, std::__1::allocator<stop()::$_0>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()[abi:v160000](RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:185:16 (bitcoind+0x4ddc70)\r\n    #7 std::__1::__function::__func<stop()::$_0, std::__1::allocator<stop()::$_0>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:356:12 (bitcoind+0x4ddc70)\r\n    #8 std::__1::__function::__value_func<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()[abi:v160000](RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:510:16 (bitcoind+0x9ce48f) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #9 std::__1::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:1156:12 (bitcoind+0x9ce48f)\r\n    #10 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const src/rpc/util.cpp:612:20 (bitcoind+0x9ce48f)\r\n    #11 CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/./rpc/server.h:109:91 (bitcoind+0x3aad0d) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #12 decltype(std::declval<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:v160000]<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/invoke.h:394:23 (bitcoind+0x3aabbb) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #13 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/invoke.h:478:16 (bitcoind+0x3aabbb)\r\n    #14 std::__1::__function::__alloc_func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160000](JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:185:16 (bitcoind+0x3aabbb)\r\n    #15 std::__1::__function::__func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:356:12 (bitcoind+0x3aabbb)\r\n    #16 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160000](JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:510:16 (bitcoind+0x4d91e1) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #17 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:1156:12 (bitcoind+0x4d91e1)\r\n    #18 ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) src/rpc/server.cpp:541:20 (bitcoind+0x4d91e1)\r\n    #19 ExecuteCommands(std::__1::vector<CRPCCommand const*, std::__1::allocator<CRPCCommand const*>> const&, JSONRPCRequest const&, UniValue&) src/rpc/server.cpp:506:13 (bitcoind+0x4d91e1)\r\n    #20 CRPCTable::execute(JSONRPCRequest const&) const src/rpc/server.cpp:526:13 (bitcoind+0x4d8dd2) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #21 HTTPReq_JSONRPC(std::__1::any const&, HTTPRequest*) src/httprpc.cpp:202:40 (bitcoind+0x6210f4) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #22 StartHTTPRPC(std::__1::any const&)::$_0::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const src/httprpc.cpp:301:80 (bitcoind+0x6210f4)\r\n    #23 decltype(std::declval<StartHTTPRPC(std::__1::any const&)::$_0&>()(std::declval<HTTPRequest*>(), std::declval<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>())) std::__1::__invoke[abi:v160000]<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/invoke.h:394:23 (bitcoind+0x6210f4)\r\n    #24 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/invoke.h:478:16 (bitcoind+0x6210f4)\r\n    #25 std::__1::__function::__alloc_func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()[abi:v160000](HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:185:16 (bitcoind+0x6210f4)\r\n    #26 std::__1::__function::__func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:356:12 (bitcoind+0x6210f4)\r\n    #27 std::__1::__function::__value_func<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()[abi:v160000](HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:510:16 (bitcoind+0x632d80) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #28 std::__1::function<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:1156:12 (bitcoind+0x632d80)\r\n    #29 HTTPWorkItem::operator()() src/httpserver.cpp:59:9 (bitcoind+0x632d80)\r\n    #30 WorkQueue<HTTPClosure>::Run() src/httpserver.cpp:114:13 (bitcoind+0x634b37) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #31 HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) src/httpserver.cpp:353:12 (bitcoind+0x62b7ea) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #32 decltype(std::declval<void (*)(WorkQueue<HTTPClosure>*, int)>()(std::declval<WorkQueue<HTTPClosure>*>(), std::declval<int>())) std::__1::__invoke[abi:v160000]<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/invoke.h:394:23 (bitcoind+0x6354f7) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #33 void std::__1::__thread_execute[abi:v160000]<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-16/bin/../include/c++/v1/thread:282:5 (bitcoind+0x6354f7)\r\n    #34 void* std::__1::__thread_proxy[abi:v160000]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>(void*) /usr/lib/llvm-16/bin/../include/c++/v1/thread:293:5 (bitcoind+0x6354f7)\r\n\r\n  Previous write of size 4 at 0x558be9794bd8 by main thread:\r\n    #0 TokenPipeEnd::Close() src/util/tokenpipe.cpp:81:10 (bitcoind+0xad379f) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #1 TokenPipeEnd::operator=(TokenPipeEnd&&) src/./util/tokenpipe.h:63:9 (bitcoind+0xab5a28) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #2 util::SignalInterrupt::open() src/util/signalinterrupt.cpp:24:18 (bitcoind+0xab5a28)\r\n    #3 util::SignalInterrupt::wait() src/util/signalinterrupt.cpp:69:10 (bitcoind+0xab5c6b) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #4 main src/bitcoind.cpp:274:51 (bitcoind+0x16b99d) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n\r\n  Location is global 'g_shutdown' of size 12 at 0x558be9794bd4 (bitcoind+0x25b1bd8)\r\n\r\n  Thread T10 'b-httpworker.0' (tid=102068, running) created by main thread at:\r\n    #0 pthread_create <null> (bitcoind+0xe1beb) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #1 std::__1::__libcpp_thread_create[abi:v160000](unsigned long*, void* (*)(void*), void*) /usr/lib/llvm-16/bin/../include/c++/v1/__threading_support:378:10 (bitcoind+0x6353ab) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #2 std::__1::thread::thread<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&, void>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-16/bin/../include/c++/v1/thread:309:16 (bitcoind+0x6353ab)\r\n    #3 void std::__1::allocator<std::__1::thread>::construct[abi:v160000]<std::__1::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&>(std::__1::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-16/bin/../include/c++/v1/__memory/allocator.h:168:28 (bitcoind+0x635126) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #4 void std::__1::allocator_traits<std::__1::allocator<std::__1::thread>>::construct[abi:v160000]<std::__1::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&, void>(std::__1::allocator<std::__1::thread>&, std::__1::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-16/bin/../include/c++/v1/__memory/allocator_traits.h:296:13 (bitcoind+0x635126)\r\n    #5 void std::__1::vector<std::__1::thread, std::__1::allocator<std::__1::thread>>::__emplace_back_slow_path<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-16/bin/../include/c++/v1/vector:1582:5 (bitcoind+0x635126)\r\n    #6 std::__1::thread& std::__1::vector<std::__1::thread, std::__1::allocator<std::__1::thread>>::emplace_back<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-16/bin/../include/c++/v1/vector:1603:9 (bitcoind+0x62b2f4) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #7 StartHTTPServer() src/httpserver.cpp:443:31 (bitcoind+0x62b2f4)\r\n    #8 AppInitServers(node::NodeContext&) src/init.cpp:693:5 (bitcoind+0x19138b) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #9 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) src/init.cpp:1173:14 (bitcoind+0x18697a) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #10 AppInit(node::NodeContext&) src/bitcoind.cpp:228:43 (bitcoind+0x16b0ce) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #11 main src/bitcoind.cpp:274:10 (bitcoind+0x16b0ce)\r\n\r\nSUMMARY: ThreadSanitizer: data race src/./util/tokenpipe.h:53:28 in TokenPipeEnd::IsOpen()\r\n==================\r\n==================\r\nWARNING: ThreadSanitizer: data race (pid=102057)\r\n  Read of size 8 at 0x7bb000000320 by thread T10:\r\n    #0 write <null> (bitcoind+0xef7cf) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #1 TokenPipeEnd::TokenWrite(unsigned char) src/util/tokenpipe.cpp:43:26 (bitcoind+0xad3846) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #2 util::SignalInterrupt::operator()() src/util/signalinterrupt.cpp:58:28 (bitcoind+0xab5d26) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #3 stop()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const src/rpc/server.cpp:184:10 (bitcoind+0x4ddc70) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #4 decltype(std::declval<stop()::$_0&>()(std::declval<RPCHelpMan const&>(), std::declval<JSONRPCRequest const&>())) std::__1::__invoke[abi:v160000]<stop()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(stop()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/invoke.h:394:23 (bitcoind+0x4ddc70)\r\n    #5 UniValue std::__1::__invoke_void_return_wrapper<UniValue, false>::__call<stop()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(stop()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/invoke.h:478:16 (bitcoind+0x4ddc70)\r\n    #6 std::__1::__function::__alloc_func<stop()::$_0, std::__1::allocator<stop()::$_0>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()[abi:v160000](RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:185:16 (bitcoind+0x4ddc70)\r\n    #7 std::__1::__function::__func<stop()::$_0, std::__1::allocator<stop()::$_0>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:356:12 (bitcoind+0x4ddc70)\r\n    #8 std::__1::__function::__value_func<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()[abi:v160000](RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:510:16 (bitcoind+0x9ce48f) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #9 std::__1::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:1156:12 (bitcoind+0x9ce48f)\r\n    #10 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const src/rpc/util.cpp:612:20 (bitcoind+0x9ce48f)\r\n    #11 CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/./rpc/server.h:109:91 (bitcoind+0x3aad0d) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #12 decltype(std::declval<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:v160000]<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/invoke.h:394:23 (bitcoind+0x3aabbb) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #13 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/invoke.h:478:16 (bitcoind+0x3aabbb)\r\n    #14 std::__1::__function::__alloc_func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160000](JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:185:16 (bitcoind+0x3aabbb)\r\n    #15 std::__1::__function::__func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:356:12 (bitcoind+0x3aabbb)\r\n    #16 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:v160000](JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:510:16 (bitcoind+0x4d91e1) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #17 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:1156:12 (bitcoind+0x4d91e1)\r\n    #18 ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) src/rpc/server.cpp:541:20 (bitcoind+0x4d91e1)\r\n    #19 ExecuteCommands(std::__1::vector<CRPCCommand const*, std::__1::allocator<CRPCCommand const*>> const&, JSONRPCRequest const&, UniValue&) src/rpc/server.cpp:506:13 (bitcoind+0x4d91e1)\r\n    #20 CRPCTable::execute(JSONRPCRequest const&) const src/rpc/server.cpp:526:13 (bitcoind+0x4d8dd2) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #21 HTTPReq_JSONRPC(std::__1::any const&, HTTPRequest*) src/httprpc.cpp:202:40 (bitcoind+0x6210f4) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #22 StartHTTPRPC(std::__1::any const&)::$_0::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const src/httprpc.cpp:301:80 (bitcoind+0x6210f4)\r\n    #23 decltype(std::declval<StartHTTPRPC(std::__1::any const&)::$_0&>()(std::declval<HTTPRequest*>(), std::declval<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>())) std::__1::__invoke[abi:v160000]<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/invoke.h:394:23 (bitcoind+0x6210f4)\r\n    #24 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/invoke.h:478:16 (bitcoind+0x6210f4)\r\n    #25 std::__1::__function::__alloc_func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()[abi:v160000](HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:185:16 (bitcoind+0x6210f4)\r\n    #26 std::__1::__function::__func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:356:12 (bitcoind+0x6210f4)\r\n    #27 std::__1::__function::__value_func<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()[abi:v160000](HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:510:16 (bitcoind+0x632d80) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #28 std::__1::function<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:1156:12 (bitcoind+0x632d80)\r\n    #29 HTTPWorkItem::operator()() src/httpserver.cpp:59:9 (bitcoind+0x632d80)\r\n    #30 WorkQueue<HTTPClosure>::Run() src/httpserver.cpp:114:13 (bitcoind+0x634b37) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #31 HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) src/httpserver.cpp:353:12 (bitcoind+0x62b7ea) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #32 decltype(std::declval<void (*)(WorkQueue<HTTPClosure>*, int)>()(std::declval<WorkQueue<HTTPClosure>*>(), std::declval<int>())) std::__1::__invoke[abi:v160000]<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/invoke.h:394:23 (bitcoind+0x6354f7) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #33 void std::__1::__thread_execute[abi:v160000]<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-16/bin/../include/c++/v1/thread:282:5 (bitcoind+0x6354f7)\r\n    #34 void* std::__1::__thread_proxy[abi:v160000]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>(void*) /usr/lib/llvm-16/bin/../include/c++/v1/thread:293:5 (bitcoind+0x6354f7)\r\n\r\n  Previous write of size 8 at 0x7bb000000320 by main thread:\r\n    #0 pipe2 <null> (bitcoind+0xe7fcd) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #1 TokenPipe::Make() src/util/tokenpipe.cpp:88:9 (bitcoind+0xad39d6) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #2 util::SignalInterrupt::open() src/util/signalinterrupt.cpp:22:41 (bitcoind+0xab5a08) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #3 util::SignalInterrupt::wait() src/util/signalinterrupt.cpp:69:10 (bitcoind+0xab5c6b) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #4 main src/bitcoind.cpp:274:51 (bitcoind+0x16b99d) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n\r\n  Location is file descriptor 25 created by main thread at:\r\n    #0 pipe2 <null> (bitcoind+0xe7fcd) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #1 TokenPipe::Make() src/util/tokenpipe.cpp:88:9 (bitcoind+0xad39d6) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #2 util::SignalInterrupt::open() src/util/signalinterrupt.cpp:22:41 (bitcoind+0xab5a08) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #3 util::SignalInterrupt::wait() src/util/signalinterrupt.cpp:69:10 (bitcoind+0xab5c6b) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #4 main src/bitcoind.cpp:274:51 (bitcoind+0x16b99d) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n\r\n  Thread T10 'b-httpworker.0' (tid=102068, running) created by main thread at:\r\n    #0 pthread_create <null> (bitcoind+0xe1beb) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #1 std::__1::__libcpp_thread_create[abi:v160000](unsigned long*, void* (*)(void*), void*) /usr/lib/llvm-16/bin/../include/c++/v1/__threading_support:378:10 (bitcoind+0x6353ab) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #2 std::__1::thread::thread<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&, void>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-16/bin/../include/c++/v1/thread:309:16 (bitcoind+0x6353ab)\r\n    #3 void std::__1::allocator<std::__1::thread>::construct[abi:v160000]<std::__1::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&>(std::__1::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-16/bin/../include/c++/v1/__memory/allocator.h:168:28 (bitcoind+0x635126) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #4 void std::__1::allocator_traits<std::__1::allocator<std::__1::thread>>::construct[abi:v160000]<std::__1::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&, void>(std::__1::allocator<std::__1::thread>&, std::__1::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-16/bin/../include/c++/v1/__memory/allocator_traits.h:296:13 (bitcoind+0x635126)\r\n    #5 void std::__1::vector<std::__1::thread, std::__1::allocator<std::__1::thread>>::__emplace_back_slow_path<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-16/bin/../include/c++/v1/vector:1582:5 (bitcoind+0x635126)\r\n    #6 std::__1::thread& std::__1::vector<std::__1::thread, std::__1::allocator<std::__1::thread>>::emplace_back<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-16/bin/../include/c++/v1/vector:1603:9 (bitcoind+0x62b2f4) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #7 StartHTTPServer() src/httpserver.cpp:443:31 (bitcoind+0x62b2f4)\r\n    #8 AppInitServers(node::NodeContext&) src/init.cpp:693:5 (bitcoind+0x19138b) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #9 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) src/init.cpp:1173:14 (bitcoind+0x18697a) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #10 AppInit(node::NodeContext&) src/bitcoind.cpp:228:43 (bitcoind+0x16b0ce) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa)\r\n    #11 main src/bitcoind.cpp:274:10 (bitcoind+0x16b0ce)\r\n\r\nSUMMARY: ThreadSanitizer: data race (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/bitcoind+0xef7cf) (BuildId: 33b1022354bfa28e1e3d045e0355f280a1c0eeaa) in write\r\n==================\r\n2023-08-23T16:08:28Z tor: Thread interrupt\r\n2023-08-23T16:08:28Z torcontrol thread exit\r\n2023-08-23T16:08:28Z addcon thread exit\r\n2023-08-23T16:08:28Z opencon thread exit\r\n2023-08-23T16:08:28Z Shutdown: In progress...\r\n2023-08-23T16:08:28Z net thread exit\r\n2023-08-23T16:08:28Z msghand thread exit\r\n2023-08-23T16:08:28Z DumpAnchors: Flush 0 outbound block-relay-only peer addresses to anchors.dat started\r\n2023-08-23T16:08:28Z DumpAnchors: Flush 0 outbound block-relay-only peer addresses to anchors.dat completed (0.00s)\r\n2023-08-23T16:08:28Z scheduler thread exit\r\n2023-08-23T16:08:28Z Writing 0 unbroadcast transactions to disk.\r\n2023-08-23T16:08:28Z Dumped mempool: 3.8938e-05s to copy, 0.00434593s to dump\r\n2023-08-23T16:08:28Z Flushed fee estimates to fee_estimates.dat.\r\n2023-08-23T16:08:28Z Shutdown: done\r\nThreadSanitizer: reported 2 warnings\r\nroot@7b5296fd879e:/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu# src/bitcoind -regtest\r\n```\r\n",
      "created_at" : "2023-08-23T16:20:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28051#issuecomment-1690257829",
      "id" : 1690257829,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28051",
      "node_id" : "IC_kwDOABII585kv0ml",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1690257829/reactions"
      },
      "updated_at" : "2023-08-23T16:20:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1690257829",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated c1ff72ae3c72bba1ed0e5c70364b7832ae6059ef -> 7bfe4a42de7822695da2fb0838a31d0d0d1ffa6d ([`pr/noshut.6`](https://github.com/ryanofsky/bitcoin/commits/pr/noshut.6) -> [`pr/noshut.7`](https://github.com/ryanofsky/bitcoin/commits/pr/noshut.7), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/noshut.6..pr/noshut.7)) to fix tsan warnings",
      "created_at" : "2023-08-23T17:09:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28051#issuecomment-1690330644",
      "id" : 1690330644,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28051",
      "node_id" : "IC_kwDOABII585kwGYU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1690330644/reactions"
      },
      "updated_at" : "2023-08-23T17:09:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1690330644",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28051#discussion_r1304008075"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28051"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304008075"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm still not sure if this is safe. The passed in node's shutdown is still a nullptr at this point, because `app.baseInitialize()` has not been called yet, which would in turn call the required initialization functions. I'll have to requisition a windows machine to test this out though.",
      "commit_id" : "c7bbca13da3c569358632fa7cc2d2040aa86a06b",
      "created_at" : "2023-08-24T08:45:51Z",
      "diff_hunk" : "@@ -630,7 +630,7 @@ int GuiMain(int argc, char* argv[])\n     app.installEventFilter(new GUIUtil::LabelOutOfFocusEventFilter(&app));\n #if defined(Q_OS_WIN)\n     // Install global event filter for processing Windows session related Windows messages (WM_QUERYENDSESSION and WM_ENDSESSION)\n-    qApp->installNativeEventFilter(new WinShutdownMonitor());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28051#discussion_r1304008075",
      "id" : 1304008075,
      "line" : 633,
      "node_id" : "PRRC_kwDOABII585NuZWL",
      "original_commit_id" : "c7bbca13da3c569358632fa7cc2d2040aa86a06b",
      "original_line" : 633,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/qt/bitcoin.cpp",
      "position" : 4,
      "pull_request_review_id" : 1593092999,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28051",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304008075/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-24T08:45:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304008075",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   }
]
