[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28685).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [jamesob](https://github.com/bitcoin/bitcoin/pull/28685#issuecomment-1771124067) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28659](https://github.com/bitcoin/bitcoin/pull/28659) (assumeutxo, rpc: Add 'start' parameter to loadtxoutset by hernanmarino)\n* [#26045](https://github.com/bitcoin/bitcoin/pull/26045) (rpc: Optimize serialization disk space of dumptxoutset by aureleoules)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-10-19T10:02:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28685#issuecomment-1770482404",
      "id" : 1770482404,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28685",
      "node_id" : "IC_kwDOABII585ph2rk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1770482404/reactions"
      },
      "updated_at" : "2023-10-19T18:43:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1770482404",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've written a fuzz test that catches the original bug mentioned in https://github.com/bitcoin/bitcoin/issues/28675#issuecomment-1770389468: https://github.com/dergoegge/bitcoin/blob/2023-10-fuzz-coinstats-hash/src/test/fuzz/coinstats_hash.cpp.\r\n\r\nI think it also caught a second issue regarding the values of UTXOs, certain negative values seem to result in the same hash as their positive counter part. I have not investigated further but I assume it is realted to `VarIntMode::NONNEGATIVE_SIGNED`.\r\n\r\n```bash\r\n$ echo \"CMoC9Q==\" | base64 --decode > coinstats_hash.crash\r\n$ FUZZ_PRINTF=1 FUZZ=coinstats_hash ./src/test/fuzz/fuzz coinstats_hash.crash\r\nINFO: Running with entropic power schedule (0xFF, 100).\r\nINFO: Seed: 3663010564\r\nINFO: Loaded 1 modules   (379542 inline 8-bit counters): 379542 [0x560080cb5d88, 0x560080d1281e),\r\nINFO: Loaded 1 PC tables (379542 PCs): 379542 [0x560080d12820,0x5600812dd180),\r\n./src/test/fuzz/fuzz: Running 1 inputs 1 time(s) each.\r\nRunning: coinstats_hash_crashes/crash-d59c557ae7f9e837716b272a05d1397a94f589d7\r\n2023-10-19T11:34:50Z Opened LevelDB successfully\r\n2023-10-19T11:34:50Z Using obfuscation key for : 0000000000000000\r\n2023-10-19T11:34:50Z mutating a coin\r\n2023-10-19T11:34:50Z coinbase=1 height=1386179375 value=-5934962493229608344 scriptPubKey=[97951910994b0a6104092fbc9b385639]\r\n2023-10-19T11:34:50Z coinbase=1 height=1386179375 value=6856422276773357632 scriptPubKey=[97951910994b0a6104092fbc9b385639]\r\nfuzz: test/fuzz/coinstats_hash.cpp:135: void coinstats_muhash_fuzz_target(FuzzBufferType): Assertion `mutated_result->hashSerialized != result->hashSerialized' failed.\r\n```\r\n\r\nUsing the varints in the serialization for the hashes seems like unnecessary complexity in the first place. Since we are changing the hash format already, maybe we just get rid of the varints entirely?\r\n\r\n(I've not polished the fuzz test, sorry if you run into bugs in the test itself)",
      "created_at" : "2023-10-19T11:41:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28685#issuecomment-1770720541",
      "id" : 1770720541,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28685",
      "node_id" : "IC_kwDOABII585piw0d",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 3,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 3,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1770720541/reactions"
      },
      "updated_at" : "2023-10-19T17:35:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1770720541",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@dergoegge Awesome to have a fuzz test already :)\r\n\r\nI think the issue with negative amounts is good to know but not as critical. Since negative output values are not consensus valid it seems ok for the serialization to assume that they are not negative. That's at least how I understand the issue right now. So I think in practice this should at least not lead to a different hash.\r\n\r\nI am unsure about removing VARINT from this code entirely. I agree that for the hashing it is not needed but we also use it when we dump the utxo set and there we probably don't want to get rid of it since it's saving space. So we still have to reason about it anyway and I think VARINT isn't really a problem in general. It's widely used in our code and I think also pretty well understood. But I won't fight it if people agree that this is a valuable change.\r\n\r\nLet's discuss this in the IRC meeting today!",
      "created_at" : "2023-10-19T12:18:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28685#issuecomment-1770844266",
      "id" : 1770844266,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28685",
      "node_id" : "IC_kwDOABII585pjPBq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1770844266/reactions"
      },
      "updated_at" : "2023-10-19T12:18:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1770844266",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think this should also change `hash_serialized_2` -> `hash_serialized_3`, and add a release note. Given that this was broken, and likely had very few users, I don't see a problem with a breaking change, and making it clear to anyone that may have been using it, that things were broken (better than silently starting to return different results).\r\n\r\nI don't see any value in keeping around a broken `hash_serialized_2` either, as that will just lead to future confusion, in relation to AssumeUTXO.",
      "created_at" : "2023-10-19T12:22:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28685#issuecomment-1770855073",
      "id" : 1770855073,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28685",
      "node_id" : "IC_kwDOABII585pjRqh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1770855073/reactions"
      },
      "updated_at" : "2023-10-19T12:22:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1770855073",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Using the varints in the serialization for the hashes seems like unnecessary complexity in the first place. Since we are changing the hash format already, maybe we just get rid of the varints entirely?\r\n\r\nThat's something worth considering IMHO, had similar thoughts. I assume the primary (probably only?) reason for using VARINTs in the hashing routine is that it's supposedly faster, as it leads to less total data that has to be processed by the underlying hash function (e.g. the vast majority of UTXO amounts can probably be encoded in 2-4 bytes if encoded as VARINTs, rather than needing the full 8 bytes). Would be interesting to benchmark how much difference in performance it really is, to judge if it's worth it to keep the VARINTs in the hashing code.",
      "created_at" : "2023-10-19T12:49:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28685#issuecomment-1770923549",
      "id" : 1770923549,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28685",
      "node_id" : "IC_kwDOABII585pjiYd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1770923549/reactions"
      },
      "updated_at" : "2023-10-19T12:49:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1770923549",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think this should also change `hash_serialized_2` -> `hash_serialized_3`\r\n\r\nMakes sense, added\r\n",
      "created_at" : "2023-10-19T13:03:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28685#issuecomment-1770947039",
      "id" : 1770947039,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28685",
      "node_id" : "IC_kwDOABII585pjoHf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1770947039/reactions"
      },
      "updated_at" : "2023-10-19T13:03:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1770947039",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Since negative output values are not consensus valid it seems ok for the serialization to assume that they are not negative.\r\n\r\nCouldn't an attacker distribute utxo sets with the negative values instead of the correct positive ones without it being detected at startup? This would then later lead to a consensus split when these outputs are spent.",
      "created_at" : "2023-10-19T13:13:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28685#issuecomment-1770964418",
      "id" : 1770964418,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28685",
      "node_id" : "IC_kwDOABII585pjsXC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1770964418/reactions"
      },
      "updated_at" : "2023-10-19T13:13:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1770964418",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Couldn't an attacker distribute utxo sets with the negative values instead of the correct positive ones without it being detected at startup? This would then later lead to a consensus split when these outputs are spent.\r\n\r\nOn that note, may not be a bad idea to add a negative-amount sanity check to `ActivateSnapshot()` as a belt-and-suspenders, since we're already checking the height for overflow anyway: https://github.com/jamesob/bitcoin/blob/447f50e4aed9a8b1d80e1891cda85801aeb80b4e/src/validation.cpp#L4926-L4928. ",
      "created_at" : "2023-10-19T13:36:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28685#issuecomment-1771005575",
      "id" : 1771005575,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28685",
      "node_id" : "IC_kwDOABII585pj2aH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1771005575/reactions"
      },
      "updated_at" : "2023-10-19T13:36:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1771005575",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > Couldn't an attacker distribute utxo sets with the negative values instead of the correct positive ones without it being detected at startup? This would then later lead to a consensus split when these outputs are spent.\r\n> \r\n> On that note, may not be a bad idea to add a negative-amount sanity check to `ActivateSnapshot()` as a belt-and-suspenders, since we're already checking the height for overflow anyway: https://github.com/jamesob/bitcoin/blob/447f50e4aed9a8b1d80e1891cda85801aeb80b4e/src/validation.cpp#L4926-L4928.\r\n\r\nYeah, I thought somehow that this was enforced by `TxOut` itself but it seems that is not the case.",
      "created_at" : "2023-10-19T13:38:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28685#issuecomment-1771011295",
      "id" : 1771011295,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28685",
      "node_id" : "IC_kwDOABII585pj3zf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1771011295/reactions"
      },
      "updated_at" : "2023-10-19T13:38:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1771011295",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28685#discussion_r1365592047"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365592047"
         }
      },
      "author_association" : "MEMBER",
      "body" : "While we're at it, might as well check that we're bounded by MAX_MONEY too (as in tx_check: https://github.com/bitcoin/bitcoin/blob/master/src/consensus/tx_check.cpp#L26-L29)",
      "commit_id" : "9454f66e341198db4b5666ddb550cf3c08b2b3ce",
      "created_at" : "2023-10-19T13:56:47Z",
      "diff_hunk" : "@@ -5399,6 +5399,11 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n                       coins_count - coins_left);\n             return false;\n         }\n+        if (coin.out.nValue < 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28685#discussion_r1365592047",
      "id" : 1365592047,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585RZUfv",
      "original_commit_id" : "6d0ce0b5c1fc4f9016abf0c63d5273ae0f7e0b6f",
      "original_line" : 5402,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1687821640,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28685",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365592047/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-19T13:56:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365592047",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28685#discussion_r1365598854"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365598854"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Right, I should have just used `MoneyRange` right away...",
      "commit_id" : "9454f66e341198db4b5666ddb550cf3c08b2b3ce",
      "created_at" : "2023-10-19T14:01:02Z",
      "diff_hunk" : "@@ -5399,6 +5399,11 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n                       coins_count - coins_left);\n             return false;\n         }\n+        if (coin.out.nValue < 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28685#discussion_r1365598854",
      "id" : 1365598854,
      "in_reply_to_id" : 1365592047,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585RZWKG",
      "original_commit_id" : "6d0ce0b5c1fc4f9016abf0c63d5273ae0f7e0b6f",
      "original_line" : 5402,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1687832118,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28685",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365598854/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-19T14:01:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365598854",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28685#discussion_r1365599044"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365599044"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done",
      "commit_id" : "9454f66e341198db4b5666ddb550cf3c08b2b3ce",
      "created_at" : "2023-10-19T14:01:09Z",
      "diff_hunk" : "@@ -5399,6 +5399,11 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n                       coins_count - coins_left);\n             return false;\n         }\n+        if (coin.out.nValue < 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28685#discussion_r1365599044",
      "id" : 1365599044,
      "in_reply_to_id" : 1365592047,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585RZWNE",
      "original_commit_id" : "6d0ce0b5c1fc4f9016abf0c63d5273ae0f7e0b6f",
      "original_line" : 5402,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1687832396,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28685",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365599044/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-19T14:01:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365599044",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK and approach ACK\r\n\r\nMy only reservation here would be completely displacing `hash_serialized_2`. It's bad manners to create a breaking change to the RPC API without deprecation warnings, but I suppose if there is an existing vulnerability, the break may be preferable. \r\n\r\nNot to create more work, but I wonder if it's worth polling the mailinglist to see if there are existing consumers of `gettxoutset.hash_serialized_2` that would be disrupted by its disappearance. Until then, it's possible to parameterize `ApplyHash` to make the old, bad behavior optional, and include both keys in non-assumeutxo RPC output.",
      "created_at" : "2023-10-19T14:36:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28685#issuecomment-1771124067",
      "id" : 1771124067,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28685",
      "node_id" : "IC_kwDOABII585pkTVj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1771124067/reactions"
      },
      "updated_at" : "2023-10-19T14:36:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1771124067",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28685#discussion_r1365847802"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365847802"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We need to commit to the height and coinbase status of all coins created by the same transaction, not just the values from the first coin.",
      "commit_id" : "9454f66e341198db4b5666ddb550cf3c08b2b3ce",
      "created_at" : "2023-10-19T16:47:40Z",
      "diff_hunk" : "@@ -74,7 +74,7 @@ static void ApplyHash(HashWriter& ss, const uint256& hash, const std::map<uint32\n     for (auto it = outputs.begin(); it != outputs.end(); ++it) {\n         if (it == outputs.begin()) {\n             ss << hash;\n-            ss << VARINT(it->second.nHeight * 2 + it->second.fCoinBase ? 1u : 0u);\n+            ss << VARINT(it->second.nHeight * 2 + (it->second.fCoinBase ? 1u : 0u));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28685#discussion_r1365847802",
      "id" : 1365847802,
      "line" : 77,
      "node_id" : "PRRC_kwDOABII585RaS76",
      "original_commit_id" : "9454f66e341198db4b5666ddb550cf3c08b2b3ce",
      "original_line" : 77,
      "original_position" : 5,
      "original_start_line" : 75,
      "path" : "src/kernel/coinstats.cpp",
      "position" : 5,
      "pull_request_review_id" : 1688224112,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28685",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365847802/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 75,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-19T16:55:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365847802",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28685#discussion_r1365866486"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365866486"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "~~I had the same suspicion earlier, but: all coins handled in this loop belong to the same tx (same outpoint hash), so they consequently should also have the same height and coinbase values, no?~~\r\n\r\n// EDIT: nevermind, I wasn't thinking this to the end.",
      "commit_id" : "9454f66e341198db4b5666ddb550cf3c08b2b3ce",
      "created_at" : "2023-10-19T17:03:39Z",
      "diff_hunk" : "@@ -74,7 +74,7 @@ static void ApplyHash(HashWriter& ss, const uint256& hash, const std::map<uint32\n     for (auto it = outputs.begin(); it != outputs.end(); ++it) {\n         if (it == outputs.begin()) {\n             ss << hash;\n-            ss << VARINT(it->second.nHeight * 2 + it->second.fCoinBase ? 1u : 0u);\n+            ss << VARINT(it->second.nHeight * 2 + (it->second.fCoinBase ? 1u : 0u));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28685#discussion_r1365866486",
      "id" : 1365866486,
      "in_reply_to_id" : 1365847802,
      "line" : 77,
      "node_id" : "PRRC_kwDOABII585RaXf2",
      "original_commit_id" : "9454f66e341198db4b5666ddb550cf3c08b2b3ce",
      "original_line" : 77,
      "original_position" : 5,
      "original_start_line" : 75,
      "path" : "src/kernel/coinstats.cpp",
      "position" : 5,
      "pull_request_review_id" : 1688258455,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28685",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365866486/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 75,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-19T17:21:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365866486",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Here are some benchmark results of different branches that has been proposed so far.\r\nI've ran `$ time ./src/bitcoin-cli gettxoutsetinfo` on mainnet, around block height 812940 three times each:\r\n\r\n| master (buggy) | this PR (with VARINTs, simple fix, [still buggy](https://github.com/bitcoin/bitcoin/pull/28685#pullrequestreview-1688224112)) | [dergoegge's branch](https://github.com/dergoegge/bitcoin/tree/2023-10-fuzz-coinstats-hash) (without VARINTs, bugfixed) | [my branch](https://github.com/theStack/bitcoin/tree/fix_hash_serialized2_with_muhash_serialization) (using `TxOutSer` serialization, as used in MuHash) |\r\n|----------------|-------------------------------------|------------------------------------------------|---------------------------------------------------------------|\r\n| 1m8,664s       | 1m9,024s                            | 1m9,861s                                       | 1m25,875s                                                     |\r\n| 1m6,803s       | 1m8,815s                            | 1m12,192s                                      | 1m28,743s                                                     |\r\n| 1m8,808s       | 1m9,466s                            | 1m12,227s                                      | 1m28,711s                                                     |\r\n\r\nThe `TxOutSer` approach is the simplest one (`ApplyHash` follows the exact same logic as for MuHash, only that the data is fed into `HashWriter` rather than `MuHash3072` instance), but looking at the numbers, it seems that going with @dergoegge's solution makes the most sense?",
      "created_at" : "2023-10-19T18:12:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28685#issuecomment-1771484416",
      "id" : 1771484416,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28685",
      "node_id" : "IC_kwDOABII585plrUA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1771484416/reactions"
      },
      "updated_at" : "2023-10-19T18:26:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1771484416",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I have similar results as @theStack . Involvement of `VARINT` doesn't seem to have much impact on performance, but MuHash style serialization does. Though that would allow for nice simplifications in coinstats (see that commit).\r\n\r\n| master | `VARINT` removed (https://github.com/fjahr/bitcoin/commit/0431c115904b8df344efc864e1b2cc151cafa0ee) | MuHash style (https://github.com/fjahr/bitcoin/commit/6b3628f2c8402695af970a6f2e54da53a30d3c65) |\r\n| --- | --- | --- |\r\n| 1m23.825s | 1m15.944s | 1m37.636s |\r\n| 1m15.484s | 1m16.271s | 1m39.447s |\r\n| 1m16.042s | 1m16.467s | 1m36.454s |",
      "created_at" : "2023-10-19T19:07:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28685#issuecomment-1771558574",
      "id" : 1771558574,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28685",
      "node_id" : "IC_kwDOABII585pl9au",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1771558574/reactions"
      },
      "updated_at" : "2023-10-19T19:20:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1771558574",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@theStack @fjahr  Couldn't the difference in performance be due to the fact that the muhash style version constructs a temporary `DataStream` object first, while the other feeds it to a hasher directly? It's possible to use muhash-style serialization without the intermediary object I think.",
      "created_at" : "2023-10-19T19:35:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28685#issuecomment-1771593352",
      "id" : 1771593352,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28685",
      "node_id" : "IC_kwDOABII585pmF6I",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 1,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1771593352/reactions"
      },
      "updated_at" : "2023-10-19T19:46:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1771593352",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @theStack @fjahr Couldn't the difference in performance be due to the fact that the muhash style version constructs a temporary `DataStream` object first, while the other feeds it to a hasher directly? It's possible to use muhash-style serialization without the intermediary object I think.\r\n\r\nSeems that you are right, I have tested this with the [code here](https://github.com/bitcoin/bitcoin/commit/55884a01e2ed08c37879d359c092a555e5038dbf) and I get similar performance as with master (m17.516s, 1m20.996s, 1m22.714s).",
      "created_at" : "2023-10-19T19:50:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28685#issuecomment-1771611177",
      "id" : 1771611177,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28685",
      "node_id" : "IC_kwDOABII585pmKQp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1771611177/reactions"
      },
      "updated_at" : "2023-10-19T19:50:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1771611177",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   }
]
