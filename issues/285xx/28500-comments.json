[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [john-moffett](https://github.com/bitcoin/bitcoin/pull/28500#pullrequestreview-1648884602), [ajtowns](https://github.com/bitcoin/bitcoin/pull/28500#issuecomment-1739430998) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n",
      "created_at" : "2023-09-18T16:42:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28500#issuecomment-1723925082",
      "id" : 1723925082,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28500",
      "node_id" : "IC_kwDOABII585mwQJa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1723925082/reactions"
      },
      "updated_at" : "2023-09-28T14:50:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1723925082",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1333025536"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1333025536"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Seems slightly odd to use a `vector` when we want something that's always 32 bytes. Could perhaps have `secure_unique_ptr<std::array<unsigned char, KEY_SIZE>> keydata` instead, essentially replacing `.resize(32)` with a `make_secure_unique()` call and replacing `ClearShrink` with `keydata = nullptr`.\r\n\r\n```c++\r\ntemplate<typename T>\r\nstruct SecureUniqueDeleter {\r\n    void operator()(T* t) noexcept {\r\n        secure_allocator<T>().deallocate(t, 1);\r\n    }\r\n};\r\n\r\ntemplate<typename T>\r\nusing secure_unique_ptr = std::unique_ptr<T,SecureUniqueDeleter<T>>;\r\n\r\ntemplate<typename T, typename... Args>\r\nsecure_unique_ptr<T> make_secure_unique(Args&&... as)\r\n{\r\n    T* p = secure_allocator<T>().allocate(1);\r\n\r\n    // initialize in place, and return as secure_unique_ptr\r\n    return secure_unique_ptr<T>(new (p) T(std::forward(as)...));\r\n}\r\n\r\n...\r\nusing KeyType = std::array<unsigned char, 32>;\r\nsecure_unique_ptr<KeyType> keydata{nullptr};\r\n```\r\n\r\nDoing this instead of a vector requires replacing `keydata.data()` with `keydata->data()` (etc), and writing an explicit copy constructor for `CKey`. This would save 16 bytes per `CKey` (vector presumably stores a 64 bit size/capacity), but it's not in the secure allocator pool, so we probably don't care.",
      "commit_id" : "f2156d613e6e8cc6a6c3d860b74d912515dc782a",
      "created_at" : "2023-09-21T13:09:03Z",
      "diff_hunk" : "@@ -37,6 +38,7 @@ class CKey\n      */\n     static const unsigned int SIZE            = 279;\n     static const unsigned int COMPRESSED_SIZE = 214;\n+    static constexpr unsigned int KEY_SIZE = 32;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1333025536",
      "id" : 1333025536,
      "line" : 41,
      "node_id" : "PRRC_kwDOABII585PdFsA",
      "original_commit_id" : "f2156d613e6e8cc6a6c3d860b74d912515dc782a",
      "original_line" : 41,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/key.h",
      "position" : 12,
      "pull_request_review_id" : 1637780993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1333025536/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-21T13:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1333025536",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1333036202"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1333036202"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think you could replace `fValid` with `keydata.size() != 0` ",
      "commit_id" : "f2156d613e6e8cc6a6c3d860b74d912515dc782a",
      "created_at" : "2023-09-21T13:15:37Z",
      "diff_hunk" : "@@ -78,14 +73,17 @@ class CKey\n     template <typename T>\n     void Set(const T pbegin, const T pend, bool fCompressedIn)\n     {\n-        if (size_t(pend - pbegin) != keydata.size()) {\n+        if (size_t(pend - pbegin) != KEY_SIZE) {\n             fValid = false;\n+            ClearShrink(keydata);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1333036202",
      "id" : 1333036202,
      "line" : 78,
      "node_id" : "PRRC_kwDOABII585PdISq",
      "original_commit_id" : "f2156d613e6e8cc6a6c3d860b74d912515dc782a",
      "original_line" : 78,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/key.h",
      "position" : 37,
      "pull_request_review_id" : 1637780993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1333036202/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-21T13:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1333036202",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1333057205"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1333057205"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Not `if (!ret) ClearShrink(keyChild.keydata); keyChild.fValid = ret;` ? I guess the `[[nodiscard]]` is good enough though.",
      "commit_id" : "f2156d613e6e8cc6a6c3d860b74d912515dc782a",
      "created_at" : "2023-09-21T13:27:22Z",
      "diff_hunk" : "@@ -321,14 +325,12 @@ bool CKey::Derive(CKey& keyChild, ChainCode &ccChild, unsigned int nChild, const\n         assert(pubkey.size() == CPubKey::COMPRESSED_SIZE);\n         BIP32Hash(cc, nChild, *pubkey.begin(), pubkey.begin()+1, vout.data());\n     } else {\n-        assert(size() == 32);\n+        assert(size() == KEY_SIZE);\n         BIP32Hash(cc, nChild, 0, begin(), vout.data());\n     }\n-    memcpy(ccChild.begin(), vout.data()+32, 32);\n-    memcpy((unsigned char*)keyChild.begin(), begin(), 32);\n+    memcpy(ccChild.begin(), vout.data() + KEY_SIZE, 32);\n+    keyChild.Set(begin(), begin() + KEY_SIZE, true);\n     bool ret = secp256k1_ec_seckey_tweak_add(secp256k1_context_sign, (unsigned char*)keyChild.begin(), vout.data());\n-    keyChild.fCompressed = true;\n-    keyChild.fValid = ret;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1333057205",
      "id" : 1333057205,
      "line" : 331,
      "node_id" : "PRRC_kwDOABII585PdNa1",
      "original_commit_id" : "f2156d613e6e8cc6a6c3d860b74d912515dc782a",
      "original_line" : 331,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/key.cpp",
      "position" : 35,
      "pull_request_review_id" : 1637780993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1333057205/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-21T13:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1333057205",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1333059157"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1333059157"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`fValid = false;` ?",
      "commit_id" : "f2156d613e6e8cc6a6c3d860b74d912515dc782a",
      "created_at" : "2023-09-21T13:28:51Z",
      "diff_hunk" : "@@ -301,8 +302,11 @@ bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint2\n }\n \n bool CKey::Load(const CPrivKey &seckey, const CPubKey &vchPubKey, bool fSkipCheck=false) {\n-    if (!ec_seckey_import_der(secp256k1_context_sign, (unsigned char*)begin(), seckey.data(), seckey.size()))\n+    keydata.resize(KEY_SIZE);\n+    if (!ec_seckey_import_der(secp256k1_context_sign, (unsigned char*)begin(), seckey.data(), seckey.size())) {\n+        ClearShrink(keydata);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1333059157",
      "id" : 1333059157,
      "line" : 307,
      "node_id" : "PRRC_kwDOABII585PdN5V",
      "original_commit_id" : "f2156d613e6e8cc6a6c3d860b74d912515dc782a",
      "original_line" : 307,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/key.cpp",
      "position" : 15,
      "pull_request_review_id" : 1637780993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1333059157/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-21T13:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1333059157",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1334870403"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1334870403"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done. I've added a commit adding `secure_unique_ptr`, and then switched over to using that as storage type for `CKey`.",
      "commit_id" : "94d58fe942fd86fc8d3b11e3f75e4a4f82c86e38",
      "created_at" : "2023-09-22T22:55:06Z",
      "diff_hunk" : "@@ -37,6 +38,7 @@ class CKey\n      */\n     static const unsigned int SIZE            = 279;\n     static const unsigned int COMPRESSED_SIZE = 214;\n+    static constexpr unsigned int KEY_SIZE = 32;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1334870403",
      "id" : 1334870403,
      "in_reply_to_id" : 1333025536,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585PkIGD",
      "original_commit_id" : "f2156d613e6e8cc6a6c3d860b74d912515dc782a",
      "original_line" : 41,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/key.h",
      "position" : null,
      "pull_request_review_id" : 1640722256,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1334870403/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-22T22:55:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1334870403",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1334870483"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1334870483"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "94d58fe942fd86fc8d3b11e3f75e4a4f82c86e38",
      "created_at" : "2023-09-22T22:55:22Z",
      "diff_hunk" : "@@ -78,14 +73,17 @@ class CKey\n     template <typename T>\n     void Set(const T pbegin, const T pend, bool fCompressedIn)\n     {\n-        if (size_t(pend - pbegin) != keydata.size()) {\n+        if (size_t(pend - pbegin) != KEY_SIZE) {\n             fValid = false;\n+            ClearShrink(keydata);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1334870483",
      "id" : 1334870483,
      "in_reply_to_id" : 1333036202,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585PkIHT",
      "original_commit_id" : "f2156d613e6e8cc6a6c3d860b74d912515dc782a",
      "original_line" : 78,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/key.h",
      "position" : null,
      "pull_request_review_id" : 1640722378,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1334870483/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-22T22:55:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1334870483",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1334871616"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1334871616"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done (not with `ClearShrink`, but by resetting the `unique_ptr`).",
      "commit_id" : "94d58fe942fd86fc8d3b11e3f75e4a4f82c86e38",
      "created_at" : "2023-09-22T22:59:01Z",
      "diff_hunk" : "@@ -321,14 +325,12 @@ bool CKey::Derive(CKey& keyChild, ChainCode &ccChild, unsigned int nChild, const\n         assert(pubkey.size() == CPubKey::COMPRESSED_SIZE);\n         BIP32Hash(cc, nChild, *pubkey.begin(), pubkey.begin()+1, vout.data());\n     } else {\n-        assert(size() == 32);\n+        assert(size() == KEY_SIZE);\n         BIP32Hash(cc, nChild, 0, begin(), vout.data());\n     }\n-    memcpy(ccChild.begin(), vout.data()+32, 32);\n-    memcpy((unsigned char*)keyChild.begin(), begin(), 32);\n+    memcpy(ccChild.begin(), vout.data() + KEY_SIZE, 32);\n+    keyChild.Set(begin(), begin() + KEY_SIZE, true);\n     bool ret = secp256k1_ec_seckey_tweak_add(secp256k1_context_sign, (unsigned char*)keyChild.begin(), vout.data());\n-    keyChild.fCompressed = true;\n-    keyChild.fValid = ret;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1334871616",
      "id" : 1334871616,
      "in_reply_to_id" : 1333057205,
      "line" : 331,
      "node_id" : "PRRC_kwDOABII585PkIZA",
      "original_commit_id" : "f2156d613e6e8cc6a6c3d860b74d912515dc782a",
      "original_line" : 331,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/key.cpp",
      "position" : 78,
      "pull_request_review_id" : 1640724062,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1334871616/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-22T22:59:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1334871616",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1334871898"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1334871898"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No longer needed, because `fValid` is now implicit as you suggested.",
      "commit_id" : "94d58fe942fd86fc8d3b11e3f75e4a4f82c86e38",
      "created_at" : "2023-09-22T22:59:53Z",
      "diff_hunk" : "@@ -301,8 +302,11 @@ bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint2\n }\n \n bool CKey::Load(const CPrivKey &seckey, const CPubKey &vchPubKey, bool fSkipCheck=false) {\n-    if (!ec_seckey_import_der(secp256k1_context_sign, (unsigned char*)begin(), seckey.data(), seckey.size()))\n+    keydata.resize(KEY_SIZE);\n+    if (!ec_seckey_import_der(secp256k1_context_sign, (unsigned char*)begin(), seckey.data(), seckey.size())) {\n+        ClearShrink(keydata);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1334871898",
      "id" : 1334871898,
      "in_reply_to_id" : 1333059157,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585PkIda",
      "original_commit_id" : "f2156d613e6e8cc6a6c3d860b74d912515dc782a",
      "original_line" : 307,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/key.cpp",
      "position" : null,
      "pull_request_review_id" : 1640724480,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1334871898/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-22T22:59:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1334871898",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1334939555"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1334939555"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think this is the only case where you don't know `empty` at compile time; could rewrite it as:\r\n\r\n```c++\r\nvoid MakeKeyData() { if (!keydata) keydata = make_secure_unique<KeyType>(); }\r\nvoid ClearKeyData() { keydata.reset(); }\r\n...\r\nif (other.keydata) {\r\n    MakeKeyData();\r\n    *keydata = *other.keydata;\r\n} else {\r\n    ClearKeyData();\r\n}\r\n```",
      "commit_id" : "94d58fe942fd86fc8d3b11e3f75e4a4f82c86e38",
      "created_at" : "2023-09-23T07:54:45Z",
      "diff_hunk" : "@@ -46,57 +46,72 @@ class CKey\n         \"COMPRESSED_SIZE is larger than SIZE\");\n \n private:\n-    //! Whether this private key is valid. We check for correctness when modifying the key\n-    //! data, so fValid should always correspond to the actual state.\n-    bool fValid{false};\n+    /** Internal data container for private key material. */\n+    using KeyType = std::array<unsigned char, 32>;\n \n     //! Whether the public key corresponding to this private key is (to be) compressed.\n     bool fCompressed{false};\n \n-    //! The actual byte data\n-    std::vector<unsigned char, secure_allocator<unsigned char> > keydata;\n+    //! The actual byte data. nullptr for invalid keys.\n+    secure_unique_ptr<KeyType> keydata;\n \n     //! Check whether the 32-byte array pointed to by vch is valid keydata.\n     bool static Check(const unsigned char* vch);\n \n+    void MakeKeyData(bool empty = false)\n+    {\n+        if (!empty) {\n+            if (!keydata) keydata = make_secure_unique<KeyType>();\n+        } else {\n+            keydata.reset();\n+        }\n+    }\n+\n public:\n-    //! Construct an invalid private key.\n-    CKey()\n+    CKey() noexcept = default;\n+    CKey(CKey&&) noexcept = default;\n+    CKey& operator=(CKey&&) noexcept = default;\n+\n+    CKey& operator=(const CKey& other)\n     {\n-        // Important: vch must be 32 bytes in length to not break serialization\n-        keydata.resize(32);\n+        MakeKeyData(/*empty=*/!other.keydata);\n+        std::copy(other.keydata->begin(), other.keydata->end(), keydata->begin());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1334939555",
      "id" : 1334939555,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585PkY-j",
      "original_commit_id" : "cd234018e63e221d580c0fd6d7c9a0457c816a38",
      "original_line" : 78,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/key.h",
      "position" : null,
      "pull_request_review_id" : 1640800115,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1334939555/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-24T10:38:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1334939555",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1334941649"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1334941649"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`return keydata ? reinterpret_cast<..>(..) : nullptr;` -- otherwise `CKey() == CKey()` will dereference nullptr?",
      "commit_id" : "94d58fe942fd86fc8d3b11e3f75e4a4f82c86e38",
      "created_at" : "2023-09-23T08:13:58Z",
      "diff_hunk" : "@@ -46,57 +46,72 @@ class CKey\n         \"COMPRESSED_SIZE is larger than SIZE\");\n \n private:\n-    //! Whether this private key is valid. We check for correctness when modifying the key\n-    //! data, so fValid should always correspond to the actual state.\n-    bool fValid{false};\n+    /** Internal data container for private key material. */\n+    using KeyType = std::array<unsigned char, 32>;\n \n     //! Whether the public key corresponding to this private key is (to be) compressed.\n     bool fCompressed{false};\n \n-    //! The actual byte data\n-    std::vector<unsigned char, secure_allocator<unsigned char> > keydata;\n+    //! The actual byte data. nullptr for invalid keys.\n+    secure_unique_ptr<KeyType> keydata;\n \n     //! Check whether the 32-byte array pointed to by vch is valid keydata.\n     bool static Check(const unsigned char* vch);\n \n+    void MakeKeyData(bool empty = false)\n+    {\n+        if (!empty) {\n+            if (!keydata) keydata = make_secure_unique<KeyType>();\n+        } else {\n+            keydata.reset();\n+        }\n+    }\n+\n public:\n-    //! Construct an invalid private key.\n-    CKey()\n+    CKey() noexcept = default;\n+    CKey(CKey&&) noexcept = default;\n+    CKey& operator=(CKey&&) noexcept = default;\n+\n+    CKey& operator=(const CKey& other)\n     {\n-        // Important: vch must be 32 bytes in length to not break serialization\n-        keydata.resize(32);\n+        MakeKeyData(/*empty=*/!other.keydata);\n+        std::copy(other.keydata->begin(), other.keydata->end(), keydata->begin());\n+        fCompressed = other.fCompressed;\n+        return *this;\n     }\n \n+    CKey(const CKey& other) { *this = other; }\n+\n     friend bool operator==(const CKey& a, const CKey& b)\n     {\n         return a.fCompressed == b.fCompressed &&\n             a.size() == b.size() &&\n-            memcmp(a.keydata.data(), b.keydata.data(), a.size()) == 0;\n+            memcmp(a.data(), b.data(), a.size()) == 0;\n     }\n \n     //! Initialize using begin and end iterators to byte data.\n     template <typename T>\n     void Set(const T pbegin, const T pend, bool fCompressedIn)\n     {\n-        if (size_t(pend - pbegin) != keydata.size()) {\n-            fValid = false;\n+        if (size_t(pend - pbegin) != std::tuple_size_v<KeyType>) {\n+            MakeKeyData(/*empty=*/true);\n         } else if (Check(&pbegin[0])) {\n-            memcpy(keydata.data(), (unsigned char*)&pbegin[0], keydata.size());\n-            fValid = true;\n+            MakeKeyData();\n+            memcpy(keydata->data(), (unsigned char*)&pbegin[0], keydata->size());\n             fCompressed = fCompressedIn;\n         } else {\n-            fValid = false;\n+            MakeKeyData(/*empty=*/true);\n         }\n     }\n \n     //! Simple read-only vector-like interface.\n-    unsigned int size() const { return (fValid ? keydata.size() : 0); }\n-    const std::byte* data() const { return reinterpret_cast<const std::byte*>(keydata.data()); }\n-    const unsigned char* begin() const { return keydata.data(); }\n-    const unsigned char* end() const { return keydata.data() + size(); }\n+    unsigned int size() const { return keydata ? keydata->size() : 0; }\n+    const std::byte* data() const { return reinterpret_cast<const std::byte*>(keydata->data()); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1334941649",
      "id" : 1334941649,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585PkZfR",
      "original_commit_id" : "cd234018e63e221d580c0fd6d7c9a0457c816a38",
      "original_line" : 109,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/key.h",
      "position" : null,
      "pull_request_review_id" : 1640800115,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1334941649/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-24T10:38:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1334941649",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1335161931"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1335161931"
         }
      },
      "author_association" : "MEMBER",
      "body" : "For reference, this shouldn't be an issue with clang/gcc and should fix itself, given enough time, see https://reviews.llvm.org/D86993#4585590",
      "commit_id" : "94d58fe942fd86fc8d3b11e3f75e4a4f82c86e38",
      "created_at" : "2023-09-24T10:57:54Z",
      "diff_hunk" : "@@ -46,57 +46,72 @@ class CKey\n         \"COMPRESSED_SIZE is larger than SIZE\");\n \n private:\n-    //! Whether this private key is valid. We check for correctness when modifying the key\n-    //! data, so fValid should always correspond to the actual state.\n-    bool fValid{false};\n+    /** Internal data container for private key material. */\n+    using KeyType = std::array<unsigned char, 32>;\n \n     //! Whether the public key corresponding to this private key is (to be) compressed.\n     bool fCompressed{false};\n \n-    //! The actual byte data\n-    std::vector<unsigned char, secure_allocator<unsigned char> > keydata;\n+    //! The actual byte data. nullptr for invalid keys.\n+    secure_unique_ptr<KeyType> keydata;\n \n     //! Check whether the 32-byte array pointed to by vch is valid keydata.\n     bool static Check(const unsigned char* vch);\n \n+    void MakeKeyData(bool empty = false)\n+    {\n+        if (!empty) {\n+            if (!keydata) keydata = make_secure_unique<KeyType>();\n+        } else {\n+            keydata.reset();\n+        }\n+    }\n+\n public:\n-    //! Construct an invalid private key.\n-    CKey()\n+    CKey() noexcept = default;\n+    CKey(CKey&&) noexcept = default;\n+    CKey& operator=(CKey&&) noexcept = default;\n+\n+    CKey& operator=(const CKey& other)\n     {\n-        // Important: vch must be 32 bytes in length to not break serialization\n-        keydata.resize(32);\n+        MakeKeyData(/*empty=*/!other.keydata);\n+        std::copy(other.keydata->begin(), other.keydata->end(), keydata->begin());\n+        fCompressed = other.fCompressed;\n+        return *this;\n     }\n \n+    CKey(const CKey& other) { *this = other; }\n+\n     friend bool operator==(const CKey& a, const CKey& b)\n     {\n         return a.fCompressed == b.fCompressed &&\n             a.size() == b.size() &&\n-            memcmp(a.keydata.data(), b.keydata.data(), a.size()) == 0;\n+            memcmp(a.data(), b.data(), a.size()) == 0;\n     }\n \n     //! Initialize using begin and end iterators to byte data.\n     template <typename T>\n     void Set(const T pbegin, const T pend, bool fCompressedIn)\n     {\n-        if (size_t(pend - pbegin) != keydata.size()) {\n-            fValid = false;\n+        if (size_t(pend - pbegin) != std::tuple_size_v<KeyType>) {\n+            MakeKeyData(/*empty=*/true);\n         } else if (Check(&pbegin[0])) {\n-            memcpy(keydata.data(), (unsigned char*)&pbegin[0], keydata.size());\n-            fValid = true;\n+            MakeKeyData();\n+            memcpy(keydata->data(), (unsigned char*)&pbegin[0], keydata->size());\n             fCompressed = fCompressedIn;\n         } else {\n-            fValid = false;\n+            MakeKeyData(/*empty=*/true);\n         }\n     }\n \n     //! Simple read-only vector-like interface.\n-    unsigned int size() const { return (fValid ? keydata.size() : 0); }\n-    const std::byte* data() const { return reinterpret_cast<const std::byte*>(keydata.data()); }\n-    const unsigned char* begin() const { return keydata.data(); }\n-    const unsigned char* end() const { return keydata.data() + size(); }\n+    unsigned int size() const { return keydata ? keydata->size() : 0; }\n+    const std::byte* data() const { return reinterpret_cast<const std::byte*>(keydata->data()); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1335161931",
      "id" : 1335161931,
      "in_reply_to_id" : 1334941649,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585PlPRL",
      "original_commit_id" : "cd234018e63e221d580c0fd6d7c9a0457c816a38",
      "original_line" : 109,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/key.h",
      "position" : null,
      "pull_request_review_id" : 1641036783,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1335161931/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-24T10:57:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1335161931",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1335163677"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1335163677"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I suppose `array::data(/*this=*/keydata)` is just returning `keydata`, so no dereferencing is really taking place, but still...",
      "commit_id" : "94d58fe942fd86fc8d3b11e3f75e4a4f82c86e38",
      "created_at" : "2023-09-24T11:14:47Z",
      "diff_hunk" : "@@ -46,57 +46,72 @@ class CKey\n         \"COMPRESSED_SIZE is larger than SIZE\");\n \n private:\n-    //! Whether this private key is valid. We check for correctness when modifying the key\n-    //! data, so fValid should always correspond to the actual state.\n-    bool fValid{false};\n+    /** Internal data container for private key material. */\n+    using KeyType = std::array<unsigned char, 32>;\n \n     //! Whether the public key corresponding to this private key is (to be) compressed.\n     bool fCompressed{false};\n \n-    //! The actual byte data\n-    std::vector<unsigned char, secure_allocator<unsigned char> > keydata;\n+    //! The actual byte data. nullptr for invalid keys.\n+    secure_unique_ptr<KeyType> keydata;\n \n     //! Check whether the 32-byte array pointed to by vch is valid keydata.\n     bool static Check(const unsigned char* vch);\n \n+    void MakeKeyData(bool empty = false)\n+    {\n+        if (!empty) {\n+            if (!keydata) keydata = make_secure_unique<KeyType>();\n+        } else {\n+            keydata.reset();\n+        }\n+    }\n+\n public:\n-    //! Construct an invalid private key.\n-    CKey()\n+    CKey() noexcept = default;\n+    CKey(CKey&&) noexcept = default;\n+    CKey& operator=(CKey&&) noexcept = default;\n+\n+    CKey& operator=(const CKey& other)\n     {\n-        // Important: vch must be 32 bytes in length to not break serialization\n-        keydata.resize(32);\n+        MakeKeyData(/*empty=*/!other.keydata);\n+        std::copy(other.keydata->begin(), other.keydata->end(), keydata->begin());\n+        fCompressed = other.fCompressed;\n+        return *this;\n     }\n \n+    CKey(const CKey& other) { *this = other; }\n+\n     friend bool operator==(const CKey& a, const CKey& b)\n     {\n         return a.fCompressed == b.fCompressed &&\n             a.size() == b.size() &&\n-            memcmp(a.keydata.data(), b.keydata.data(), a.size()) == 0;\n+            memcmp(a.data(), b.data(), a.size()) == 0;\n     }\n \n     //! Initialize using begin and end iterators to byte data.\n     template <typename T>\n     void Set(const T pbegin, const T pend, bool fCompressedIn)\n     {\n-        if (size_t(pend - pbegin) != keydata.size()) {\n-            fValid = false;\n+        if (size_t(pend - pbegin) != std::tuple_size_v<KeyType>) {\n+            MakeKeyData(/*empty=*/true);\n         } else if (Check(&pbegin[0])) {\n-            memcpy(keydata.data(), (unsigned char*)&pbegin[0], keydata.size());\n-            fValid = true;\n+            MakeKeyData();\n+            memcpy(keydata->data(), (unsigned char*)&pbegin[0], keydata->size());\n             fCompressed = fCompressedIn;\n         } else {\n-            fValid = false;\n+            MakeKeyData(/*empty=*/true);\n         }\n     }\n \n     //! Simple read-only vector-like interface.\n-    unsigned int size() const { return (fValid ? keydata.size() : 0); }\n-    const std::byte* data() const { return reinterpret_cast<const std::byte*>(keydata.data()); }\n-    const unsigned char* begin() const { return keydata.data(); }\n-    const unsigned char* end() const { return keydata.data() + size(); }\n+    unsigned int size() const { return keydata ? keydata->size() : 0; }\n+    const std::byte* data() const { return reinterpret_cast<const std::byte*>(keydata->data()); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1335163677",
      "id" : 1335163677,
      "in_reply_to_id" : 1334941649,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585PlPsd",
      "original_commit_id" : "cd234018e63e221d580c0fd6d7c9a0457c816a38",
      "original_line" : 109,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/key.h",
      "position" : null,
      "pull_request_review_id" : 1641038420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1335163677/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-24T11:14:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1335163677",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1335164585"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1335164585"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "94d58fe942fd86fc8d3b11e3f75e4a4f82c86e38",
      "created_at" : "2023-09-24T11:23:31Z",
      "diff_hunk" : "@@ -46,57 +46,72 @@ class CKey\n         \"COMPRESSED_SIZE is larger than SIZE\");\n \n private:\n-    //! Whether this private key is valid. We check for correctness when modifying the key\n-    //! data, so fValid should always correspond to the actual state.\n-    bool fValid{false};\n+    /** Internal data container for private key material. */\n+    using KeyType = std::array<unsigned char, 32>;\n \n     //! Whether the public key corresponding to this private key is (to be) compressed.\n     bool fCompressed{false};\n \n-    //! The actual byte data\n-    std::vector<unsigned char, secure_allocator<unsigned char> > keydata;\n+    //! The actual byte data. nullptr for invalid keys.\n+    secure_unique_ptr<KeyType> keydata;\n \n     //! Check whether the 32-byte array pointed to by vch is valid keydata.\n     bool static Check(const unsigned char* vch);\n \n+    void MakeKeyData(bool empty = false)\n+    {\n+        if (!empty) {\n+            if (!keydata) keydata = make_secure_unique<KeyType>();\n+        } else {\n+            keydata.reset();\n+        }\n+    }\n+\n public:\n-    //! Construct an invalid private key.\n-    CKey()\n+    CKey() noexcept = default;\n+    CKey(CKey&&) noexcept = default;\n+    CKey& operator=(CKey&&) noexcept = default;\n+\n+    CKey& operator=(const CKey& other)\n     {\n-        // Important: vch must be 32 bytes in length to not break serialization\n-        keydata.resize(32);\n+        MakeKeyData(/*empty=*/!other.keydata);\n+        std::copy(other.keydata->begin(), other.keydata->end(), keydata->begin());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1335164585",
      "id" : 1335164585,
      "in_reply_to_id" : 1334939555,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585PlP6p",
      "original_commit_id" : "cd234018e63e221d580c0fd6d7c9a0457c816a38",
      "original_line" : 78,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/key.h",
      "position" : null,
      "pull_request_review_id" : 1641039205,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1335164585/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-24T11:23:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1335164585",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1335164601"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1335164601"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "94d58fe942fd86fc8d3b11e3f75e4a4f82c86e38",
      "created_at" : "2023-09-24T11:23:40Z",
      "diff_hunk" : "@@ -46,57 +46,72 @@ class CKey\n         \"COMPRESSED_SIZE is larger than SIZE\");\n \n private:\n-    //! Whether this private key is valid. We check for correctness when modifying the key\n-    //! data, so fValid should always correspond to the actual state.\n-    bool fValid{false};\n+    /** Internal data container for private key material. */\n+    using KeyType = std::array<unsigned char, 32>;\n \n     //! Whether the public key corresponding to this private key is (to be) compressed.\n     bool fCompressed{false};\n \n-    //! The actual byte data\n-    std::vector<unsigned char, secure_allocator<unsigned char> > keydata;\n+    //! The actual byte data. nullptr for invalid keys.\n+    secure_unique_ptr<KeyType> keydata;\n \n     //! Check whether the 32-byte array pointed to by vch is valid keydata.\n     bool static Check(const unsigned char* vch);\n \n+    void MakeKeyData(bool empty = false)\n+    {\n+        if (!empty) {\n+            if (!keydata) keydata = make_secure_unique<KeyType>();\n+        } else {\n+            keydata.reset();\n+        }\n+    }\n+\n public:\n-    //! Construct an invalid private key.\n-    CKey()\n+    CKey() noexcept = default;\n+    CKey(CKey&&) noexcept = default;\n+    CKey& operator=(CKey&&) noexcept = default;\n+\n+    CKey& operator=(const CKey& other)\n     {\n-        // Important: vch must be 32 bytes in length to not break serialization\n-        keydata.resize(32);\n+        MakeKeyData(/*empty=*/!other.keydata);\n+        std::copy(other.keydata->begin(), other.keydata->end(), keydata->begin());\n+        fCompressed = other.fCompressed;\n+        return *this;\n     }\n \n+    CKey(const CKey& other) { *this = other; }\n+\n     friend bool operator==(const CKey& a, const CKey& b)\n     {\n         return a.fCompressed == b.fCompressed &&\n             a.size() == b.size() &&\n-            memcmp(a.keydata.data(), b.keydata.data(), a.size()) == 0;\n+            memcmp(a.data(), b.data(), a.size()) == 0;\n     }\n \n     //! Initialize using begin and end iterators to byte data.\n     template <typename T>\n     void Set(const T pbegin, const T pend, bool fCompressedIn)\n     {\n-        if (size_t(pend - pbegin) != keydata.size()) {\n-            fValid = false;\n+        if (size_t(pend - pbegin) != std::tuple_size_v<KeyType>) {\n+            MakeKeyData(/*empty=*/true);\n         } else if (Check(&pbegin[0])) {\n-            memcpy(keydata.data(), (unsigned char*)&pbegin[0], keydata.size());\n-            fValid = true;\n+            MakeKeyData();\n+            memcpy(keydata->data(), (unsigned char*)&pbegin[0], keydata->size());\n             fCompressed = fCompressedIn;\n         } else {\n-            fValid = false;\n+            MakeKeyData(/*empty=*/true);\n         }\n     }\n \n     //! Simple read-only vector-like interface.\n-    unsigned int size() const { return (fValid ? keydata.size() : 0); }\n-    const std::byte* data() const { return reinterpret_cast<const std::byte*>(keydata.data()); }\n-    const unsigned char* begin() const { return keydata.data(); }\n-    const unsigned char* end() const { return keydata.data() + size(); }\n+    unsigned int size() const { return keydata ? keydata->size() : 0; }\n+    const std::byte* data() const { return reinterpret_cast<const std::byte*>(keydata->data()); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28500#discussion_r1335164601",
      "id" : 1335164601,
      "in_reply_to_id" : 1334941649,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585PlP65",
      "original_commit_id" : "cd234018e63e221d580c0fd6d7c9a0457c816a38",
      "original_line" : 109,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/key.h",
      "position" : null,
      "pull_request_review_id" : 1641039224,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28500",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1335164601/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-24T11:23:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1335164601",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 94d58fe942fd86fc8d3b11e3f75e4a4f82c86e38 lgtm",
      "created_at" : "2023-09-25T16:31:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28500#issuecomment-1734094819",
      "id" : 1734094819,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28500",
      "node_id" : "IC_kwDOABII585nXC_j",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1734094819/reactions"
      },
      "updated_at" : "2023-09-25T16:31:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1734094819",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 6ef405ddb195bbf1b28a906d8c8bb877f0c17d7b",
      "created_at" : "2023-09-28T14:50:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28500#issuecomment-1739430998",
      "id" : 1739430998,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28500",
      "node_id" : "IC_kwDOABII585nrZxW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1739430998/reactions"
      },
      "updated_at" : "2023-09-28T14:50:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1739430998",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   }
]
