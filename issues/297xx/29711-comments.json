[
   {
      "author_association" : "MEMBER",
      "body" : "It's hitting the 500 tx cluster limit in MiniMiner, which I think we should keep. The error message just needs to be better. The error is happening when the result of `CalculateIndividualBumpFees` is an empty map, but we try to get things from it, so the fix would be to return a proper error when that map is empty.",
      "created_at" : "2024-03-23T18:19:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29711#issuecomment-2016567004",
      "id" : 2016567004,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29711",
      "node_id" : "IC_kwDOABII5854Ml7c",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2016567004/reactions"
      },
      "updated_at" : "2024-03-23T18:19:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2016567004",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> It's hitting the 500 tx cluster limit in MiniMiner, which I think we should keep. The error message just needs to be better. The error is happening when the result of `CalculateIndividualBumpFees` is an empty map, but we try to get things from it, so the fix would be to return a proper error when that map is empty.\r\n\r\nI'm unsure whether a wallet containing a group of 500 independent unconfirmed transactions should block transaction creation until those transactions are confirmed. Would be good to obtain some usage metrics. Because this shouldn't present a DoS vector, and we could expand the limit to accept more standalone transactions while maintaining the current limit for clusters with more than one element. Thoughts?",
      "created_at" : "2024-03-25T20:31:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29711#issuecomment-2018862521",
      "id" : 2018862521,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29711",
      "node_id" : "IC_kwDOABII5854VWW5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2018862521/reactions"
      },
      "updated_at" : "2024-03-25T20:32:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2018862521",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I was able to reproduce same error on master with the steps from @tdb3  53f4607cc8c67366662f49cb312d2e4ff8b6523a\r\n\r\n```terminal\r\n......\r\n\r\nabubakarismail@Abubakars-MacBook-Pro bitcoin %  ./src/bitcoin-cli -regtest -named send  outputs=\"{\\\"$ADDRESS\\\": 1}\" fee_rate=10\r\n\r\nerror code: -1\r\nerror message:\r\nmap::at:  key not found                                                                                          \r\n```\r\n\r\nA naive approach of simply preventing accessing returned value of `calculateIndividualBumpFees` when its empty solves the issue.\r\n\r\n<details>\r\n<summary>diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/wallet/spend.cpp b/src/wallet/spend.cpp\r\nindex 5d23ebd35a..12d320861f 100644\r\n--- a/src/wallet/spend.cpp\r\n+++ b/src/wallet/spend.cpp\r\n@@ -296,7 +296,9 @@ util::Result<PreSelectedInputs> FetchSelectedInputs(const CWallet& wallet, const\r\n \r\n         /* Set some defaults for depth, spendable, solvable, safe, time, and from_me as these don't matter for preset inputs since no selection is being done. */\r\n         COutput output(outpoint, txout, /*depth=*/ 0, input_bytes, /*spendable=*/ true, /*solvable=*/ true, /*safe=*/ true, /*time=*/ 0, /*from_me=*/ false, coin_selection_params.m_effective_feerate);\r\n-        output.ApplyBumpFee(map_of_bump_fees.at(output.outpoint));\r\n+        if (!map_of_bump_fees.empty()) {\r\n+            output.ApplyBumpFee(map_of_bump_fees.at(output.outpoint));\r\n+        }\r\n         result.Insert(output, coin_selection_params.m_subtract_fee_outputs);\r\n     }\r\n     return result;\r\n@@ -455,10 +457,11 @@ CoinsResult AvailableCoins(const CWallet& wallet,\r\n \r\n     if (feerate.has_value()) {\r\n         std::map<COutPoint, CAmount> map_of_bump_fees = wallet.chain().calculateIndividualBumpF\r\nees(outpoints, feerate.value());\r\n-\r\n-        for (auto& [_, outputs] : result.coins) {\r\n-            for (auto& output : outputs) {\r\n-                output.ApplyBumpFee(map_of_bump_fees.at(output.outpoint));\r\n+        if (!map_of_bump_fees.empty()) {\r\n+            for (auto& [_, outputs] : result.coins) {\r\n+                for (auto& output : outputs) {\r\n+                    output.ApplyBumpFee(map_of_bump_fees.at(output.outpoint));\r\n+                }\r\n             }\r\n         }\r\n     }\r\n```\r\n</details>\r\n\r\nI can create more transactions\r\n```terminal\r\nabubakarismail@Abubakars-MacBook-Pro bitcoin % for i in $(seq 1 4); do ./src/bitcoin-cli -regtest -named send  outputs=\"{\\\"$ADDRESS\\\": 1}\" fee_rate=10; done \r\n{\r\n  \"txid\": \"87c5c6564bf5c810be070c2fd5ee7b9e75cd93a6b0f3d0ea85163c5da088e857\",\r\n  \"complete\": true\r\n}\r\n{\r\n  \"txid\": \"fdc207674a7fa25ae16651ec69f5b7eb8f96b09c3b8c050648e6eb32db7e2532\",\r\n  \"complete\": true\r\n}\r\n{\r\n  \"txid\": \"375ad1485ad7f02221e9c79a81ca17ecbcaaf781165807ad23ef8198585e6fc9\",\r\n  \"complete\": true\r\n}\r\n{\r\n  \"txid\": \"30284d52762e9c2b4255a31fa851b8b745abd371bfa086e2c2f9edb00a707054\",\r\n  \"complete\": true\r\n}\r\n```\r\n\r\n\r\n---\r\n> The error message just needs to be better. The error is happening when the result of `CalculateIndividualBumpFees` is an empty map\r\n\r\nThe empty map could also be because bump fees have already been calculated, mini miner error message should also be more verbose for each case?",
      "created_at" : "2024-03-25T21:22:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29711#issuecomment-2018941759",
      "id" : 2018941759,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29711",
      "node_id" : "IC_kwDOABII5854Vps_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2018941759/reactions"
      },
      "updated_at" : "2024-03-25T21:47:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2018941759",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48946461?v=4",
         "events_url" : "https://api.github.com/users/ismaelsadeeq/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ismaelsadeeq/followers",
         "following_url" : "https://api.github.com/users/ismaelsadeeq/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ismaelsadeeq/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ismaelsadeeq",
         "id" : 48946461,
         "login" : "ismaelsadeeq",
         "node_id" : "MDQ6VXNlcjQ4OTQ2NDYx",
         "organizations_url" : "https://api.github.com/users/ismaelsadeeq/orgs",
         "received_events_url" : "https://api.github.com/users/ismaelsadeeq/received_events",
         "repos_url" : "https://api.github.com/users/ismaelsadeeq/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ismaelsadeeq/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ismaelsadeeq/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ismaelsadeeq"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> A naive approach of simply preventing accessing returned value of calculateIndividualBumpFees when its empty solves the issue.\r\n\r\nThat would fallback to the pre ancestors aware funding status. Which isn't desirable.",
      "created_at" : "2024-03-25T21:25:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29711#issuecomment-2018945624",
      "id" : 2018945624,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29711",
      "node_id" : "IC_kwDOABII5854VqpY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2018945624/reactions"
      },
      "updated_at" : "2024-03-25T21:25:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2018945624",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Oh, thanks @furszy! I can update the return type of `AvailableCoins` to `util::Result<CoinsResult>` with a more descriptive error message for when the cluster limit is hit.\r\n\r\n<details>\r\n<summary>diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/wallet/spend.cpp b/src/wallet/spend.cpp\r\nindex 5d23ebd35a..646d93bcd7 100644\r\n--- a/src/wallet/spend.cpp\r\n+++ b/src/wallet/spend.cpp\r\n@@ -296,13 +296,16 @@ util::Result<PreSelectedInputs> FetchSelectedInputs(const CWallet& wallet, const\r\n \r\n         /* Set some defaults for depth, spendable, solvable, safe, time, and from_me as these don't matter for preset inputs since no selection is being done. */\r\n         COutput output(outpoint, txout, /*depth=*/ 0, input_bytes, /*spendable=*/ true, /*solvable=*/ true, /*safe=*/ true, /*time=*/ 0, /*from_me=*/ false, coin_selection_params.m_effective_feerate);\r\n+        if (map_of_bump_fees.empty()) {\r\n+            return util::Error{strprintf(_(\"Too many connected unconfirmed transactions, maximum cluster limit exceeded\"))};\r\n+        }\r\n         output.ApplyBumpFee(map_of_bump_fees.at(output.outpoint));\r\n         result.Insert(output, coin_selection_params.m_subtract_fee_outputs);\r\n     }\r\n     return result;\r\n }\r\n \r\n-CoinsResult AvailableCoins(const CWallet& wallet,\r\n+util::Result<CoinsResult> AvailableCoins(const CWallet& wallet,\r\n                            const CCoinControl* coinControl,\r\n                            std::optional<CFeeRate> feerate,\r\n                            const CoinFilterParams& params)\r\n@@ -456,9 +459,15 @@ CoinsResult AvailableCoins(const CWallet& wallet,\r\n     if (feerate.has_value()) {\r\n         std::map<COutPoint, CAmount> map_of_bump_fees = wallet.chain().calculateIndividualBumpF\r\nees(outpoints, feerate.value());\r\n \r\n-        for (auto& [_, outputs] : result.coins) {\r\n-            for (auto& output : outputs) {\r\n-                output.ApplyBumpFee(map_of_bump_fees.at(output.outpoint));\r\n+        if (map_of_bump_fees.empty()) {\r\n+            if  (!outpoints.empty()) {\r\n+                return util::Error{strprintf(_(\"Too many connected unconfirmed transactions, maximum cluster limit exceeded\"))};\r\n+            }\r\n+        } else {\r\n+            for (auto& [_, outputs] : result.coins) {\r\n+                for (auto& output : outputs) {\r\n+                    output.ApplyBumpFee(map_of_bump_fees.at(output.outpoint));\r\n+                }\r\n             }\r\n         }\r\n     }\r\ndiff --git a/src/wallet/spend.h b/src/wallet/spend.h\r\nindex 62a7b4e4c8..c387cb69bb 100644\r\n--- a/src/wallet/spend.h\r\n+++ b/src/wallet/spend.h\r\n@@ -83,7 +83,7 @@ struct CoinFilterParams {\r\n /**\r\n  * Populate the CoinsResult struct with vectors of available COutputs, organized by OutputType.\r\n  */\r\n-CoinsResult AvailableCoins(const CWallet& wallet,\r\n+util::Result<CoinsResult> AvailableCoins(const CWallet& wallet,\r\n                            const CCoinControl* coinControl = nullptr,\r\n                            std::optional<CFeeRate> feerate = std::nullopt,\r\n                            const CoinFilterParams& params = {}) EXCLUSIVE_LOCKS_REQUIRED(wallet\r\n.cs_wallet);\r\n(END)\r\n```\r\n</details>\r\n\r\n\r\nWould it be better to instead modify Mini Miner to return the error message?\r\n",
      "created_at" : "2024-03-25T21:42:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29711#issuecomment-2018969940",
      "id" : 2018969940,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29711",
      "node_id" : "IC_kwDOABII5854VwlU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2018969940/reactions"
      },
      "updated_at" : "2024-03-25T21:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2018969940",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48946461?v=4",
         "events_url" : "https://api.github.com/users/ismaelsadeeq/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ismaelsadeeq/followers",
         "following_url" : "https://api.github.com/users/ismaelsadeeq/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ismaelsadeeq/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ismaelsadeeq",
         "id" : 48946461,
         "login" : "ismaelsadeeq",
         "node_id" : "MDQ6VXNlcjQ4OTQ2NDYx",
         "organizations_url" : "https://api.github.com/users/ismaelsadeeq/orgs",
         "received_events_url" : "https://api.github.com/users/ismaelsadeeq/received_events",
         "repos_url" : "https://api.github.com/users/ismaelsadeeq/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ismaelsadeeq/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ismaelsadeeq/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ismaelsadeeq"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Would it be better to instead modify Mini Miner to return the error message?\r\n\r\nYes. It will be better to bubble up the error message from MiniMiner. But, before getting into the implementation details, let's first try to finish discussing the issue. I left a comment above (https://github.com/bitcoin/bitcoin/issues/29711#issuecomment-2018862521) that would be nice to follow it up.",
      "created_at" : "2024-03-25T21:55:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29711#issuecomment-2018986896",
      "id" : 2018986896,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29711",
      "node_id" : "IC_kwDOABII5854V0uQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2018986896/reactions"
      },
      "updated_at" : "2024-03-25T21:55:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2018986896",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I'm unsure whether a wallet containing a group of 500 independent unconfirmed transactions should block transaction creation until those transactions are confirmed. Would be good to obtain some usage metrics. Because this shouldn't present a DoS vector, and we could expand the limit to accept more standalone transactions while maintaining the current limit for clusters with more than one element. Thoughts?\r\n\r\nThis seems reasonable to me, but I'm unaware of the history of the 500 limit and the rationale for its implementation (or tradeoffs).  The existing \"steps to reproduce\" relies on the wallet's coin selection (so these transactions might not be independent depending on the selection algorithm).  I ran another test that explicitly spends only the mature coinbase outputs independently.  The error wasn't received.  All transactions were allowed, so it appears that in the existing implementation, independent unconfirmed transactions are not affected by the limit?\r\n\r\n```bash\r\nbcli createwallet test\r\nexport ADDRESS=$(bcli -rpcwallet=test getnewaddress)\r\nbcli -rpcwallet=test -generate 701\r\nbcli -rpcwallet=test listunspent | grep txid | awk '{print $2}' | sed 's/\"//g' | sed 's/,//g' | while read -r line; do bcli -rpcwallet=test -named send outputs=\"{\\\"$ADDRESS\\\": 1}\" fee_rate=10 inputs=[{\\\"txid\\\":\\ \\\"$line\\\"\\,\\ \\\"vout\\\":\\ 0\\,\\\"sequence\\\":\\ \\\"4294967295\\\"}]; done\r\nbcli -rpcwallet=test getmempoolinfo\r\n{\r\n  \"loaded\": true,\r\n  \"size\": 601,\r\n  \"bytes\": 84738,\r\n  \"usage\": 714096,\r\n  \"total_fee\": 0.00847410,\r\n  \"maxmempool\": 300000000,\r\n  \"mempoolminfee\": 0.00001000,\r\n  \"minrelaytxfee\": 0.00001000,\r\n  \"incrementalrelayfee\": 0.00001000,\r\n  \"unbroadcastcount\": 601,\r\n  \"fullrbf\": false\r\n}\r\n\r\n```",
      "created_at" : "2024-03-26T00:24:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29711#issuecomment-2019157978",
      "id" : 2019157978,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29711",
      "node_id" : "IC_kwDOABII5854Wefa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2019157978/reactions"
      },
      "updated_at" : "2024-03-26T00:25:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2019157978",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/106488469?v=4",
         "events_url" : "https://api.github.com/users/tdb3/events{/privacy}",
         "followers_url" : "https://api.github.com/users/tdb3/followers",
         "following_url" : "https://api.github.com/users/tdb3/following{/other_user}",
         "gists_url" : "https://api.github.com/users/tdb3/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/tdb3",
         "id" : 106488469,
         "login" : "tdb3",
         "node_id" : "U_kgDOBljilQ",
         "organizations_url" : "https://api.github.com/users/tdb3/orgs",
         "received_events_url" : "https://api.github.com/users/tdb3/received_events",
         "repos_url" : "https://api.github.com/users/tdb3/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/tdb3/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/tdb3/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/tdb3"
      }
   }
]
