[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29796).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [hebasto](https://github.com/bitcoin/bitcoin/pull/29796#issuecomment-2034313126), [emc99](https://github.com/bitcoin/bitcoin/pull/29796#issuecomment-2034942067), [theuni](https://github.com/bitcoin/bitcoin/pull/29796#issuecomment-2035139205) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n",
      "created_at" : "2024-04-03T11:12:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29796#issuecomment-2034285739",
      "id" : 2034285739,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29796",
      "node_id" : "IC_kwDOABII5855QLyr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2034285739/reactions"
      },
      "updated_at" : "2024-04-03T17:09:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2034285739",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> * A depends build with `DEBUG=1` and using `./configure --enable-debug` do not align, which is inconsistent/confusing.\r\n\r\nConcept ACK on fixing that.",
      "created_at" : "2024-04-03T11:24:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29796#issuecomment-2034313126",
      "id" : 2034313126,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29796",
      "node_id" : "IC_kwDOABII5855QSem",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2034313126/reactions"
      },
      "updated_at" : "2024-04-03T11:24:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2034313126",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Concept ACK",
      "created_at" : "2024-04-03T15:34:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29796#issuecomment-2034942067",
      "id" : 2034942067,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29796",
      "node_id" : "IC_kwDOABII5855SsBz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2034942067/reactions"
      },
      "updated_at" : "2024-04-03T15:34:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2034942067",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/20481828?v=4",
         "events_url" : "https://api.github.com/users/emc99/events{/privacy}",
         "followers_url" : "https://api.github.com/users/emc99/followers",
         "following_url" : "https://api.github.com/users/emc99/following{/other_user}",
         "gists_url" : "https://api.github.com/users/emc99/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/emc99",
         "id" : 20481828,
         "login" : "emc99",
         "node_id" : "MDQ6VXNlcjIwNDgxODI4",
         "organizations_url" : "https://api.github.com/users/emc99/orgs",
         "received_events_url" : "https://api.github.com/users/emc99/received_events",
         "repos_url" : "https://api.github.com/users/emc99/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/emc99/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/emc99/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/emc99"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\nI think msan is a good proxy for what we want enabled. [From its docs](https://releases.llvm.org/18.1.1/tools/clang/docs/MemorySanitizer.html):\r\n\r\n> To get a reasonable performance add -O1 or higher. To get meaningful stack traces in error messages add -fno-omit-frame-pointer. To get perfect stack traces you may need to disable inlining (just use -O1) and tail call elimination (-fno-optimize-sibling-calls).\r\n\r\n\r\nFrom [gcc's docs](https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html) on `-Og`\r\n\r\n>  -Og should be the optimization level of choice for the standard edit-compile-debug cycle, offering a reasonable level of optimization while maintaining fast compilation and a good debugging experience. It is a better choice than -O0 for producing debuggable code because some compiler passes that collect debug information are disabled at -O0. Like -O0, -Og completely disables a number of optimization passes so that individual options controlling them have no effect. Otherwise -Og enables all -O1 optimization flags except for those that may interfere with debugging\r\n\r\nFrom what I can tell, `-O1` (and thus `-Og`) will disable the frame pointer. So we may also want to add `-fno-omit-frame-pointer` as recommended by llvm, but IMO we can wait and see if it turns out to be necessary for anyone first.",
      "created_at" : "2024-04-03T17:09:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29796#issuecomment-2035139205",
      "id" : 2035139205,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29796",
      "node_id" : "IC_kwDOABII5855TcKF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2035139205/reactions"
      },
      "updated_at" : "2024-04-03T17:09:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2035139205",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "While this does resolve the compile issue I was having, it does seem to change how gdb is able to debug things, possibly in a meaningful way? This is just an example of a difference that I noticed while stepping through `CWallet::Create` with and without this PR:\r\n\r\nOn master:\r\n\r\n```\r\nThread 4 \"b-httpworker.0\" hit Breakpoint 1, wallet::CWallet::Create (context=..., name=\"funds\", database=std::unique_ptr<wallet::WalletDatabase> = {...}, \r\n    wallet_creation_flags=0, error=..., warnings=std::vector of length 0, capacity 0) at wallet/wallet.cpp:2948\r\n2948\t{\r\n(gdb) n\r\n2949\t   interfaces::Chain* chain = context.chain;\r\n(gdb) \r\n2950\t   ArgsManager& args = *Assert(context.args);\r\n(gdb) \r\n2024-04-03T18:24:24.238066Z [addcon] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_nodes_mutex, net.cpp:2768 started\r\n2024-04-03T18:24:24.238169Z [addcon] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_nodes_mutex, net.cpp:2768 completed (1Î¼s)\r\n2024-04-03T18:24:24.238246Z [net] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_nodes_mutex, net.cpp:1860 started\r\n2024-04-03T18:24:24.238343Z [net] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_nodes_mutex, net.cpp:1860 completed (3Î¼s)\r\n2951\t   const std::string& walletFile = database->Filename();\r\n(gdb) \r\n2953\t   const auto start{SteadyClock::now()};\r\n(gdb) \r\n2024-04-03T18:24:25.288339Z [net] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_nodes_mutex, net.cpp:1860 started\r\n2024-04-03T18:24:25.288437Z [net] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_nodes_mutex, net.cpp:1860 completed (3Î¼s)\r\n2956\t   std::shared_ptr<CWallet> walletInstance(new CWallet(chain, name, std::move(database)), ReleaseWallet);\r\n(gdb) \r\n2024-04-03T18:24:25.789076Z [net] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_nodes_mutex, net.cpp:1932 started\r\n2024-04-03T18:24:25.789145Z [net] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_nodes_mutex, net.cpp:1932 completed (2Î¼s)\r\n2957\t   walletInstance->m_keypool_size = std::max(args.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), int64_t{1});\r\n(gdb) \r\n2958\t   walletInstance->m_notify_tx_changed_script = args.GetArg(\"-walletnotify\", \"\");\r\n(gdb) \r\n2961\t   bool rescan_required = false;\r\n(gdb) \r\n2962\t   DBErrors nLoadWalletRet = walletInstance->LoadWallet();\r\n(gdb) \r\n2024-04-03T18:24:27.971293Z [net] [logging/timer.h:58] [Log] [lock] Enter: lock contention connman.m_nodes_mutex, ./net.h:1622 started\r\n2024-04-03T18:24:27.971368Z [net] [logging/timer.h:58] [Log] [lock] Enter: lock contention connman.m_nodes_mutex, ./net.h:1622 completed (2Î¼s)\r\n2024-04-03T18:24:27.972260Z [httpworker.0] [wallet/wallet.h:933] [WalletLogPrintf] [funds] Wallet file version = 10500, last client version = 279900\r\n2024-04-03T18:24:28.845346Z [httpworker.0] [wallet/wallet.h:933] [WalletLogPrintf] [funds] Descriptors: 8, Descriptor Keys: 1 plaintext, 0 encrypted, 1 total.\r\n2024-04-03T18:24:29.556576Z [httpworker.0] [wallet/wallet.h:933] [WalletLogPrintf] [funds] Setting spkMan to active: id = 7bb07d3df110f36af92db5568fb8d4cc1381dd0a6d24b17182ed87cad6ab1d33, type = legacy, internal = false\r\n2024-04-03T18:24:29.556711Z [httpworker.0] [wallet/wallet.h:933] [WalletLogPrintf] [funds] Setting spkMan to active: id = 5cb8f1604559d7b3612008ed3307ca1e21328301d1117b3acdd8b22d5b277219, type = p2sh-segwit, internal = false\r\n2024-04-03T18:24:29.556751Z [httpworker.0] [wallet/wallet.h:933] [WalletLogPrintf] [funds] Setting spkMan to active: id = 68a4834fa805e997434b5c4f2f31625be6f3c5aebae0757293c4215675614a1b, type = bech32, internal = false\r\n2024-04-03T18:24:29.556788Z [httpworker.0] [wallet/wallet.h:933] [WalletLogPrintf] [funds] Setting spkMan to active: id = 19d3e9f0d167b24e3c5330462a0c6cbc3d6e4e06e469967a395835102c0aea4a, type = bech32m, internal = false\r\n2024-04-03T18:24:29.556851Z [httpworker.0] [wallet/wallet.h:933] [WalletLogPrintf] [funds] Setting spkMan to active: id = 09212e585c214fb06d197863920ed50181b984dc6bace73a865ff06a84ec3e61, type = legacy, internal = true\r\n2024-04-03T18:24:29.556892Z [httpworker.0] [wallet/wallet.h:933] [WalletLogPrintf] [funds] Setting spkMan to active: id = 05db3056830116eafc425f192ee58033d44772bbf3bdd62ab50e8d014ecab772, type = p2sh-segwit, internal = true\r\n2024-04-03T18:24:29.556927Z [httpworker.0] [wallet/wallet.h:933] [WalletLogPrintf] [funds] Setting spkMan to active: id = 2fe605d1acd8e46f55fbb47c8162545449df0ab59839219a7541b770a948fa3c, type = bech32, internal = true\r\n2024-04-03T18:24:29.556961Z [httpworker.0] [wallet/wallet.h:933] [WalletLogPrintf] [funds] Setting spkMan to active: id = 115308b94096b7f96245e3ed280290ac5c627c5d666abf5249e4a16bcd5ac79e, type = bech32m, internal = true\r\n2963\t   if (nLoadWalletRet != DBErrors::LOAD_OK) {\r\n(gdb) \r\n3006\t   const bool fFirstRun = walletInstance->m_spk_managers.empty() &&\r\n(gdb) \r\n2024-04-03T18:24:31.018609Z [msghand] [logging/timer.h:58] [Log] [lock] Enter: lock contention connman.m_nodes_mutex, ./net.h:1622 started\r\n2024-04-03T18:24:31.018740Z [msghand] [logging/timer.h:58] [Log] [lock] Enter: lock contention connman.m_nodes_mutex, ./net.h:1622 completed (5Î¼s)\r\n3007\t                    !walletInstance->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\r\n```\r\n\r\nThis PR:\r\n```\r\nThread 4 \"b-httpworker.0\" hit Breakpoint 1, wallet::CWallet::Create (context=..., name=\"funds\", database=std::unique_ptr<wallet::WalletDatabase> = {...}, \r\n    wallet_creation_flags=0, error=..., warnings=std::vector of length 0, capacity 0) at wallet/wallet.cpp:2948\r\n2948\t{\r\n(gdb) n\r\n2949\t   interfaces::Chain* chain = context.chain;\r\n(gdb) \r\n2024-04-03T18:21:31.566625Z [net] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_nodes_mutex, net.cpp:1860 started\r\n2024-04-03T18:21:31.566715Z [net] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_nodes_mutex, net.cpp:1860 completed (1Î¼s)\r\n2950\t   ArgsManager& args = *Assert(context.args);\r\n(gdb) \r\n2024-04-03T18:21:33.071865Z [msghand] [logging/timer.h:58] [Log] [lock] Enter: lock contention connman.m_nodes_mutex, ./net.h:1622 started\r\n2024-04-03T18:21:33.071947Z [msghand] [logging/timer.h:58] [Log] [lock] Enter: lock contention connman.m_nodes_mutex, ./net.h:1622 completed (1Î¼s)\r\n2024-04-03T18:21:33.071995Z [net] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_nodes_mutex, net.cpp:1932 started\r\n2024-04-03T18:21:33.072075Z [net] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_nodes_mutex, net.cpp:1932 completed (1Î¼s)\r\n2951\t   const std::string& walletFile = database->Filename();\r\n(gdb) n\r\n2024-04-03T18:21:47.648919Z [net] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_nodes_mutex, net.cpp:1932 started\r\n2024-04-03T18:21:47.649023Z [net] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_nodes_mutex, net.cpp:1932 completed (1Î¼s)\r\n2953\t   const auto start{SteadyClock::now()};\r\n(gdb) \r\n2956\t   std::shared_ptr<CWallet> walletInstance(new CWallet(chain, name, std::move(database)), ReleaseWallet);\r\n(gdb) \r\n2024-04-03T18:21:49.734108Z [msghand] [logging/timer.h:58] [Log] [lock] Enter: lock contention connman.m_nodes_mutex, ./net.h:1622 started\r\n2024-04-03T18:21:49.734220Z [msghand] [logging/timer.h:58] [Log] [lock] Enter: lock contention connman.m_nodes_mutex, ./net.h:1622 completed (3Î¼s)\r\n1765\t\t_M_enable_shared_from_this_with(_Yp*) noexcept\r\n(gdb) \r\n2957\t   walletInstance->m_keypool_size = std::max(args.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), int64_t{1});\r\n(gdb) \r\n88\t     __new_allocator() _GLIBCXX_USE_NOEXCEPT { }\r\n(gdb) \r\n2024-04-03T18:21:55.765728Z [addcon] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_reconnections_mutex, net.cpp:3814 started\r\n2024-04-03T18:21:55.765826Z [addcon] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_reconnections_mutex, net.cpp:3814 completed (1Î¼s)\r\n2957\t   walletInstance->m_keypool_size = std::max(args.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), int64_t{1});\r\n(gdb) \r\n88\t     __new_allocator() _GLIBCXX_USE_NOEXCEPT { }\r\n(gdb) \r\n1665\t     get() const noexcept\r\n(gdb) \r\n2024-04-03T18:21:59.177777Z [net] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_reconnections_mutex, net.cpp:1923 started\r\n2024-04-03T18:21:59.177864Z [net] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_reconnections_mutex, net.cpp:1923 completed (1Î¼s)\r\n2958\t   walletInstance->m_notify_tx_changed_script = args.GetArg(\"-walletnotify\", \"\");\r\n(gdb) \r\n2024-04-03T18:22:01.358006Z [net] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_nodes_mutex, net.cpp:1860 started\r\n2024-04-03T18:22:01.358112Z [net] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_nodes_mutex, net.cpp:1860 completed (1Î¼s)\r\n1665\t     get() const noexcept\r\n(gdb) \r\n2024-04-03T18:22:02.173997Z [net] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_reconnections_mutex, net.cpp:1923 started\r\n2024-04-03T18:22:02.174068Z [net] [logging/timer.h:58] [Log] [lock] Enter: lock contention m_reconnections_mutex, net.cpp:1923 completed (3Î¼s)\r\n2024-04-03T18:22:02.174550Z [httpworker.0] [wallet/wallet.h:933] [WalletLogPrintf] [funds] Wallet file version = 10500, last client version = 279900\r\n2024-04-03T18:22:02.743008Z [httpworker.0] [wallet/wallet.h:933] [WalletLogPrintf] [funds] Descriptors: 8, Descriptor Keys: 1 plaintext, 0 encrypted, 1 total.\r\n2024-04-03T18:22:02.920795Z [httpworker.0] [wallet/wallet.h:933] [WalletLogPrintf] [funds] Setting spkMan to active: id = 7bb07d3df110f36af92db5568fb8d4cc1381dd0a6d24b17182ed87cad6ab1d33, type = legacy, internal = false\r\n2024-04-03T18:22:02.920836Z [httpworker.0] [wallet/wallet.h:933] [WalletLogPrintf] [funds] Setting spkMan to active: id = 5cb8f1604559d7b3612008ed3307ca1e21328301d1117b3acdd8b22d5b277219, type = p2sh-segwit, internal = false\r\n2024-04-03T18:22:02.920851Z [httpworker.0] [wallet/wallet.h:933] [WalletLogPrintf] [funds] Setting spkMan to active: id = 68a4834fa805e997434b5c4f2f31625be6f3c5aebae0757293c4215675614a1b, type = bech32, internal = false\r\n2024-04-03T18:22:02.920864Z [httpworker.0] [wallet/wallet.h:933] [WalletLogPrintf] [funds] Setting spkMan to active: id = 19d3e9f0d167b24e3c5330462a0c6cbc3d6e4e06e469967a395835102c0aea4a, type = bech32m, internal = false\r\n2024-04-03T18:22:02.920891Z [httpworker.0] [wallet/wallet.h:933] [WalletLogPrintf] [funds] Setting spkMan to active: id = 09212e585c214fb06d197863920ed50181b984dc6bace73a865ff06a84ec3e61, type = legacy, internal = true\r\n2024-04-03T18:22:02.920907Z [httpworker.0] [wallet/wallet.h:933] [WalletLogPrintf] [funds] Setting spkMan to active: id = 05db3056830116eafc425f192ee58033d44772bbf3bdd62ab50e8d014ecab772, type = p2sh-segwit, internal = true\r\n2024-04-03T18:22:02.920919Z [httpworker.0] [wallet/wallet.h:933] [WalletLogPrintf] [funds] Setting spkMan to active: id = 2fe605d1acd8e46f55fbb47c8162545449df0ab59839219a7541b770a948fa3c, type = bech32, internal = true\r\n2024-04-03T18:22:02.920932Z [httpworker.0] [wallet/wallet.h:933] [WalletLogPrintf] [funds] Setting spkMan to active: id = 115308b94096b7f96245e3ed280290ac5c627c5d666abf5249e4a16bcd5ac79e, type = bech32m, internal = true\r\n2963\t   if (nLoadWalletRet != DBErrors::LOAD_OK) {\r\n```\r\n\r\nOne thing that jumps out to me as possibly being problematic, depending on what's being debugged, is that  the line `bool rescan_required = false;` is optimized away and no longer appears when going step by step. This is not necessarily a problem as it's still fairly easy to follow what's going on and the variable's value can be checked even though the debugger doesn't indicate that it was initialized.\r\n\r\nAnother thing that is kind of annoying is the appearance of the `__new_allocator()` and `get()` calls. We don't see these in the actual code and their appearance means stepping through some more lines that are probably irrelevant to debugging.",
      "created_at" : "2024-04-03T18:33:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29796#issuecomment-2035320170",
      "id" : 2035320170,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29796",
      "node_id" : "IC_kwDOABII5855UIVq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2035320170/reactions"
      },
      "updated_at" : "2024-04-03T18:33:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2035320170",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@achow101 Yeah, I see the same. Sadly that's the trade-off. Basically `-O0` is a poor approximation of what real optimized code will look like. But anything above is bound to optimize some things out.\r\n\r\nSo we have to make a choice: pure debug-ability (including things like inlines which don't actually exist), or more realistic binaries while sacrificing some source code in the debugger. Personally I prefer the latter, but you probably live in gdb more than me :)",
      "created_at" : "2024-04-03T19:39:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29796#issuecomment-2035434442",
      "id" : 2035434442,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29796",
      "node_id" : "IC_kwDOABII5855UkPK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2035434442/reactions"
      },
      "updated_at" : "2024-04-03T19:39:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2035434442",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Note that for local hacking (with clang), you can use:\r\n```diff\r\ndiff --git a/src/wallet/wallet.cpp b/src/wallet/wallet.cpp\r\nindex 96c4397504..6bc408e843 100644\r\n--- a/src/wallet/wallet.cpp\r\n+++ b/src/wallet/wallet.cpp\r\n@@ -2944,7 +2944,7 @@ std::unique_ptr<WalletDatabase> MakeWalletDatabase(const std::string& name, cons\r\n     return MakeDatabase(wallet_path, options, status, error_string);\r\n }\r\n\r\n-std::shared_ptr<CWallet> CWallet::Create(WalletContext& context, const std::string& name, std::unique_ptr<WalletDatabase> database, uint64_t wallet_creation_flags, bilingual_str& error, std::vector<bilingual_str>& warnings)\r\n+std::shared_ptr<CWallet> CWallet::Create(WalletContext& context, const std::string& name, std::unique_ptr<WalletDatabase> database, uint64_t wallet_creation_flags, bilingual_str& error, std::vector<bilingual_str>& warnings) __attribute__ ((optnone))\r\n {\r\n     interfaces::Chain* chain = context.chain;\r\n     ArgsManager& args = *Assert(context.args);\r\n```\r\nTo get the best of both worlds:\r\n```c++\r\nThread 1 \"b-test\" hit Breakpoint 1, wallet::CWallet::Create (context=..., name=\"/tmp/test_common_Bitcoin Core/231b391a2079bb9568d880b8e884ab0b1c6a21c39361735a83653cf8256a247e/test_wallet_2950041828\", database=std::unique_ptr<wallet::WalletDatabase> = {...}, wallet_creation_flags=25769803776, error=..., warnings=std::vector of length 0, capacity 0) at ./src/wallet/wallet.cpp:2949\r\n2949\t    interfaces::Chain* chain = context.chain;\r\n(gdb) n\r\n2950\t    ArgsManager& args = *Assert(context.args);\r\n(gdb)\r\n2951\t    const std::string& walletFile = database->Filename();\r\n(gdb)\r\n2953\t    const auto start{SteadyClock::now()};\r\n(gdb)\r\n2956\t    std::shared_ptr<CWallet> walletInstance(new CWallet(chain, name, std::move(database)), ReleaseWallet);\r\n(gdb)\r\n2957\t    walletInstance->m_keypool_size = std::max(args.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), int64_t{1});\r\n(gdb)\r\n2958\t    walletInstance->m_notify_tx_changed_script = args.GetArg(\"-walletnotify\", \"\");\r\n(gdb)\r\n2961\t    bool rescan_required = false;\r\n```",
      "created_at" : "2024-04-03T19:46:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29796#issuecomment-2035445375",
      "id" : 2035445375,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29796",
      "node_id" : "IC_kwDOABII5855Um5_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2035445375/reactions"
      },
      "updated_at" : "2024-04-03T19:46:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2035445375",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   }
]
