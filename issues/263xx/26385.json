{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "The error returned by the RPC is:\r\n`Unable to sign input, invalid stack size (possibly missing key)`\r\n\r\nIt seems that this rpc alters the scriptSig of all of the inputs that were already signed.\r\n\r\nThe problem is very similar to https://github.com/bitcoin/bitcoin/issues/21151, which is already solved. \r\n\r\nHere's an example of the broken signatures after signing:\r\n```diff\r\n--- 0_before.txt\t2022-10-24 17:46:31.105518559 -0300\r\n+++ 1_after.txt\t2022-10-24 17:46:31.146517797 -0300\r\n@@ -1,18 +1,18 @@\r\n {\r\n-  \"txid\": \"7107a82fd2d783d32e2926bf91b5dea5908203a3d81f8bb67b267f9aeab3c16d\",\r\n-  \"hash\": \"7107a82fd2d783d32e2926bf91b5dea5908203a3d81f8bb67b267f9aeab3c16d\",\r\n+  \"txid\": \"b4b09eebed1f427f7ae80004ca1e55688567bc8e01af7608311c7d0a31ffcf83\",\r\n+  \"hash\": \"685100e81d34140941b3c15af9598e0d2ffdbee92b3706c82561ff2232c94cbc\",\r\n   \"version\": 1,\r\n-  \"size\": 406,\r\n-  \"vsize\": 406,\r\n-  \"weight\": 1624,\r\n+  \"size\": 373,\r\n+  \"vsize\": 291,\r\n+  \"weight\": 1162,\r\n   \"locktime\": 0,\r\n   \"vin\": [\r\n     {\r\n       \"txid\": \"c2afc743b00acb7a9a9cccc9e9b2751f0ae17206a9492dc0537ec72f44c7f6e0\",\r\n       \"vout\": 1,\r\n       \"scriptSig\": {\r\n-        \"asm\": \"0 30440220201b3d70770c2b325c8cac16593a4606cdcb29c094f67ec700d6aaadfdcc3bdf022057b70804b24d66664f1a82f7936773fbc3bcb15740a0e7b772ddf7bfe486b6fe[SINGLE|ANYONECANPAY] 3044022034eaf58c896885fc1597a848d268ad618e621b33be77bed67bcfa6180611ac31022073f947c7d2ebd81c1d52236030dd1a5d6b178c9361786ff9d6d3ef9740be1c76[SINGLE|ANYONECANPAY] 522103d28e83bfc9d2ab30f26f7b62ac4b64a932272ba124c6c4d29e901eaf8724aab7210366dc61fb53bce09777fe7c4766a55af9649cc26deb21b204ae6bf4e93413a46c2102439d6a6bc199460e4e0a6e5fdcb87162cafa5cae6ee4845d23d9dc5e840ffdb153ae\",\r\n-        \"hex\": \"004730440220201b3d70770c2b325c8cac16593a4606cdcb29c094f67ec700d6aaadfdcc3bdf022057b70804b24d66664f1a82f7936773fbc3bcb15740a0e7b772ddf7bfe486b6fe83473044022034eaf58c896885fc1597a848d268ad618e621b33be77bed67bcfa6180611ac31022073f947c7d2ebd81c1d52236030dd1a5d6b178c9361786ff9d6d3ef9740be1c76834c69522103d28e83bfc9d2ab30f26f7b62ac4b64a932272ba124c6c4d29e901eaf8724aab7210366dc61fb53bce09777fe7c4766a55af9649cc26deb21b204ae6bf4e93413a46c2102439d6a6bc199460e4e0a6e5fdcb87162cafa5cae6ee4845d23d9dc5e840ffdb153ae\"\r\n+        \"asm\": \"0 0 522103d28e83bfc9d2ab30f26f7b62ac4b64a932272ba124c6c4d29e901eaf8724aab7210366dc61fb53bce09777fe7c4766a55af9649cc26deb21b204ae6bf4e93413a46c2102439d6a6bc199460e4e0a6e5fdcb87162cafa5cae6ee4845d23d9dc5e840ffdb153ae\",\r\n+        \"hex\": \"00004c69522103d28e83bfc9d2ab30f26f7b62ac4b64a932272ba124c6c4d29e901eaf8724aab7210366dc61fb53bce09777fe7c4766a55af9649cc26deb21b204ae6bf4e93413a46c2102439d6a6bc199460e4e0a6e5fdcb87162cafa5cae6ee4845d23d9dc5e840ffdb153ae\"\r\n       },\r\n       \"sequence\": 0\r\n     },\r\n@@ -23,6 +23,10 @@\r\n         \"asm\": \"\",\r\n         \"hex\": \"\"\r\n       },\r\n+      \"txinwitness\": [\r\n+        \"304402202dc3e510dc053dcdd29be701441337c93f6923686cc5ba4a915dbc17073dd26c02207aa8b76a447bde52b4cb1146781745826692d4484327f2a78a73818183e5f37f01\",\r\n+        \"0379d702db49e91dd63127278c06ed99ef05b43d15f2583bb28b4f0e9b49b9f50c\"\r\n+      ],\r\n       \"sequence\": 0\r\n     }\r\n   ],\r\n```\r\n\r\nI've prepared a bash script that reproduces it (I used hal to merge the transactions):\r\n```bash\r\n#!/bin/bash\r\n\r\n#set -x\r\nset -e\r\n\r\nshopt -s expand_aliases\r\nalias b-dae=\"~/opt/bitcoin/bin/bitcoind -datadir=$PWD -daemon=1\"\r\nalias b-cli=\"~/opt/bitcoin/bin/bitcoin-cli -datadir=$PWD\"\r\n\r\ndeclare -a privkeys\r\ndeclare -a pubkeys\r\ndeclare -a multisigs\r\ndeclare -a addresses\r\ndeclare -a redeemScripts\r\ndeclare -a txs\r\ndeclare -a scriptPubKeys\r\ndeclare -a vouts\r\ndeclare -a mergetxs\r\n\r\n#parameters for the multisig addreesses\r\naddresstype=legacy\r\nmultisig_n=2\r\nmultisig_m=3\r\nmultisig_count=1\r\n#create the keypairs\r\nfor i in $(seq 0 $((multisig_count * multisig_m - 1)));do\r\n    KEYPAIR=$(hal key generate --regtest 2>/dev/null)\r\n    privkeys[$i]=$(echo $KEYPAIR | jq -r .wif_private_key)\r\n    pubkeys[$i]=$(echo $KEYPAIR | jq -r .public_key)\r\ndone\r\n\r\nb-cli stop && sleep 5 || true\r\nrm -rf regtest\r\nb-dae\r\nb-cli -rpcwait createwallet \"\"\r\necho\r\n\r\n#create the multisig addresses\r\nfor i in $(seq 0 $((multisig_count - 1)));do\r\n    mspubkeys='['\r\n    sep=\r\n    for j in $(seq $((i * multisig_m)) $((i * multisig_m + multisig_m -1)));do\r\n        mspubkeys+=\"$sep\\\"${pubkeys[$j]}\\\"\"\r\n        sep=','\r\n    done\r\n    mspubkeys+=']'\r\n    echo b-cli createmultisig ${multisig_n} \"${mspubkeys}\" $addresstype\r\n    multisigs[$i]=$(b-cli -rpcwait createmultisig ${multisig_n} \"${mspubkeys}\" $addresstype)\r\n    addresses[$i]=$(echo \"${multisigs[$i]}\" | jq -r '.address')\r\n    redeemScripts[$i]=$(echo \"${multisigs[$i]}\" | jq -r '.redeemScript')\r\ndone\r\n\r\necho \"pubkeys: ${pubkeys[@]}\"\r\necho \"privkeys: ${privkeys[@]}\"\r\n#generate enough blocks to unlock the reward\r\nDEST=$(b-cli getnewaddress)\r\nb-cli generatetoaddress 101 $DEST >/dev/null 2>&1\r\n#send 1 btc to each multisig address\r\nfor i in $(seq 0 $((multisig_count - 1)));do\r\n    txs[$i]=$(b-cli sendtoaddress \"${addresses[$i]}\" 1)\r\n    scriptPubKeys[$i]=$(b-cli decoderawtransaction $(b-cli getrawtransaction ${txs[$i]})| jq -r \".vout[] .scriptPubKey | select(.address == \\\"${addresses[$i]}\\\") .hex\")\r\n    vouts[$i]=$(b-cli decoderawtransaction $(b-cli getrawtransaction ${txs[$i]})| jq -r \".vout[] | select(.scriptPubKey.address == \\\"${addresses[$i]}\\\") .n\")\r\n    #echo ${txs[$i]} ${scriptPubKeys[$i]}\r\n    b-cli generatetoaddress 1 $DEST >/dev/null 2>&1\r\ndone\r\necho\r\n\r\n#each multisig sends its coins to a new wallet (destwallet) and signs the transaction using signrawtransactionwithkey\r\necho createwallet destwallet\r\nb-cli createwallet destwallet\r\ndestaddress=$(b-cli -rpcwallet=destwallet getnewaddress)\r\necho unloadwallet destwallet\r\nb-cli unloadwallet destwallet\r\nfor i in $(seq 0 $((multisig_count - 1)));do\r\n    echo \"Sending utxo ${txs[$i]} to final address $destaddress\"\r\n    tx=$(b-cli createrawtransaction \"[{\\\"txid\\\":\\\"${txs[$i]}\\\",\\\"vout\\\":${vouts[$i]}}]\" \"[{\\\"$destaddress\\\":1}]\")\r\n\r\n    prevtxs=\"[{\\\"txid\\\":\\\"${txs[$i]}\\\",\\\"vout\\\":${vouts[$i]},\\\"scriptPubKey\\\":\\\"${scriptPubKeys[$i]}\\\",\\\"redeemScript\\\":\\\"${redeemScripts[$i]}\\\",\\\"amount\\\":1}]\"\r\n    #sign with keys one by one\r\n    for j in $(seq $((i * multisig_m)) $((i * multisig_m + multisig_n - 1)));do\r\n        tx=$(b-cli signrawtransactionwithkey $tx \"[\\\"${privkeys[$j]}\\\"]\" \"$prevtxs\" \"SINGLE|ANYONECANPAY\")\r\n        tx=$(echo $tx|jq -r '.hex')\r\n    done\r\n    mergetxs[$i]=$tx\r\ndone\r\necho\r\n\r\nfinalinputs=\"\"\r\nfinaloutputs=\"\"\r\n\r\n#create the transaction to provide the funds to pay for the previous transactions\r\nfee_input=$(b-cli listunspent|jq -r '.[0]')\r\nfee_input_amount=$(echo $fee_input|jq -r '.amount')\r\nfee=0.0001\r\nchange_amount=$(bc -l <<< \"$fee_input_amount - $fee\")\r\nchangeaddress=$(b-cli getnewaddress)\r\nchange_tx=$(b-cli createrawtransaction \"[$fee_input]\" \"[{\\\"$changeaddress\\\":$change_amount}]\")\r\nmergetxs[$multisig_count]=$change_tx\r\n\r\nsepin=\"\"\r\nsepout=\"\"\r\n\r\n#prepare a Json with the inputs, and another one with the outputs\r\nfor i in $(seq 0 $((multisig_count)));do\r\n    decodedtx=$(hal tx decode ${mergetxs[$i]})\r\n    inputno=$(echo $decodedtx| jq -r \".inputs | length -1\")\r\n    for k in $(seq 0 $inputno);do\r\n        input=$(echo $decodedtx| jq -r \".inputs[$k] | del(.sequence)\")\r\n        finalinputs+=\"$sepin$input\"\r\n        sepin=\",\"\r\n    done\r\n    outputno=$(echo $decodedtx| jq -r \".outputs | length -1\")\r\n    for k in $(seq 0 $outputno);do\r\n        output=$(echo $decodedtx| jq -r \".outputs[$k] | del(.n)\")\r\n        finaloutputs+=\"$sepout$output\"\r\n        sepout=\",\"\r\n    done\r\ndone\r\n\r\nfulltx=\"\r\n{\r\n  \\\"version\\\": 1,\r\n  \\\"locktime\\\": 0,\r\n  \\\"inputs\\\": [ $finalinputs ],\r\n  \\\"outputs\\\": [ $finaloutputs ]\r\n}\r\n\"\r\necho $fulltx|jq >fulltx.txt\r\n\r\n#create the transaction with all the inputs and outpts, and sign it using signrawtransactionwithwallet (fails...)\r\nfinaltx=$(echo $fulltx|jq|hal tx create 2>/dev/null)\r\nb-cli decoderawtransaction $finaltx >0_before.txt\r\necho \"tx BEFORE signrawtransactionwithwallet: $finaltx\"\r\nsignedfinaltx=$(b-cli signrawtransactionwithwallet $finaltx)\r\necho \"tx AFTER signrawtransactionwithwallet: $(echo $signedfinaltx|jq -r '.hex')\"\r\nb-cli decoderawtransaction $(echo $signedfinaltx|jq -r '.hex') >1_after.txt\r\ndiff -Naurwp 0_before.txt 1_after.txt >0.diff || true\r\nsignerror=$(echo $signedfinaltx|jq -r '.errors[0].error//empty')\r\nif [ -n \"$signerror\" ];then\r\n    echo \"Error signing with wallet ($signerror)\"\r\n    exit -1\r\nfi\r\n\r\nsenttx=$(b-cli sendrawtransaction $(echo $signedfinaltx|jq -r '.hex'))\r\nb-cli gettransaction $senttx\r\nb-cli generatetoaddress 1 $DEST >/dev/null 2>&1\r\nb-cli gettransaction $senttx\r\n```\r\nI've tested with Bitcoin Core 23.0.\r\nPlease let me know if there's anything else I can test.",
   "closed_at" : "2023-09-21T15:40:03Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
      "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
      "followers_url" : "https://api.github.com/users/willcl-ark/followers",
      "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
      "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/willcl-ark",
      "id" : 6606587,
      "login" : "willcl-ark",
      "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
      "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
      "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
      "repos_url" : "https://api.github.com/users/willcl-ark/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/willcl-ark"
   },
   "comments" : 6,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26385/comments",
   "created_at" : "2022-10-25T01:29:38Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26385/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/26385",
   "id" : 1421700419,
   "labels" : [
      {
         "color" : "FBBAAB",
         "default" : false,
         "description" : null,
         "id" : 64585,
         "name" : "Bug",
         "node_id" : "MDU6TGFiZWw2NDU4NQ==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26385/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "I_kwDOABII585UvW1D",
   "number" : 26385,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26385/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "state_reason" : "completed",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26385/timeline",
   "title" : "signrawtransactionwithwallet fails with signed non-wallet inputs and breaks the existing signatures",
   "updated_at" : "2023-09-21T15:40:03Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26385",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/94554885?v=4",
      "events_url" : "https://api.github.com/users/andreabonel/events{/privacy}",
      "followers_url" : "https://api.github.com/users/andreabonel/followers",
      "following_url" : "https://api.github.com/users/andreabonel/following{/other_user}",
      "gists_url" : "https://api.github.com/users/andreabonel/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/andreabonel",
      "id" : 94554885,
      "login" : "andreabonel",
      "node_id" : "U_kgDOBaLLBQ",
      "organizations_url" : "https://api.github.com/users/andreabonel/orgs",
      "received_events_url" : "https://api.github.com/users/andreabonel/received_events",
      "repos_url" : "https://api.github.com/users/andreabonel/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/andreabonel/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/andreabonel/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/andreabonel"
   }
}
