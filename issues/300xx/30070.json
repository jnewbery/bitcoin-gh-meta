{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current behaviour\r\n\r\n\"Load PSBT from ...\" from menu, error shows:\r\n`Unable to decode PSBT \r\nUnsigned tx does not have empty scriptSigs and scriptWitnesses.: unspecified iostream_category error`\r\n\r\ndecodepsbt and analyzepsbt show the same error too:\r\n`TX decode failed Unsigned tx does not have empty scriptSigs and scriptWitnesses.: unspecified iostream_category error (code -22)`\r\n\r\n### Expected behaviour\r\n\r\nI expect Load PSBT success.\r\n\r\nAnd same procedure works fine in another wallet of test net. Both wallets are not watch-only\r\n\r\n### Steps to reproduce\r\n\r\nI test PSBT in my wallet today, create a transaction in Bitcoin Core, click \"send\" and \"create unsigned\", then \"Load PSBT from ...\" from menu\r\n\r\nI'm using prune mode for block chain. This address I made tx was obtained by importprivkey, and then covert to Descriptor Wallets by migratewallet.\r\n\r\nI found the [source code](https://github.com/bitcoin/bitcoin/blob/master/src/psbt.h):\r\n\r\n>                  case PSBT_GLOBAL_UNSIGNED_TX:\r\n>                 {\r\n>                     if (!key_lookup.emplace(key).second) {\r\n>                         throw std::ios_base::failure(\"Duplicate Key, unsigned tx already provided\");\r\n>                     } else if (key.size() != 1) {\r\n>                         throw std::ios_base::failure(\"Global unsigned tx key is more than one byte type\");\r\n>                     }\r\n>                     CMutableTransaction mtx;\r\n>                     // Set the stream to serialize with non-witness since this should always be non-witness\r\n>                     UnserializeFromVector(s, TX_NO_WITNESS(mtx));\r\n>                     tx = std::move(mtx);\r\n>                     // Make sure that all scriptSigs and scriptWitnesses are empty\r\n>                     for (const CTxIn& txin : tx->vin) {\r\n>                         if (!txin.scriptSig.empty() || !txin.scriptWitness.IsNull()) {\r\n>      ---->                  throw std::ios_base::failure(\"Unsigned tx does not have empty scriptSigs and scriptWitnesses.\");\r\n>                         }\r\n>                     }\r\n>                     break;\r\n>                 }\r\n\r\n### Relevant log output\r\n\r\nno relevant log.\r\n\r\n### How did you obtain Bitcoin Core\r\n\r\nPre-built binaries\r\n\r\n### What version of Bitcoin Core are you using?\r\n\r\nBitcoin Core version v27.0.0\r\n\r\n### Operating system and version\r\n\r\nMacOS 14.4.1\r\n\r\n### Machine specifications\r\n\r\n_No response_",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30070/comments",
   "created_at" : "2024-05-09T05:34:12Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30070/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/30070",
   "id" : 2286927464,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30070/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "I_kwDOABII586IT75o",
   "number" : 30070,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30070/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30070/timeline",
   "title" : "Load PSBT error: Unable to decode PSBT",
   "updated_at" : "2024-05-09T05:45:32Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30070",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/827316?v=4",
      "events_url" : "https://api.github.com/users/foolbear/events{/privacy}",
      "followers_url" : "https://api.github.com/users/foolbear/followers",
      "following_url" : "https://api.github.com/users/foolbear/following{/other_user}",
      "gists_url" : "https://api.github.com/users/foolbear/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/foolbear",
      "id" : 827316,
      "login" : "foolbear",
      "node_id" : "MDQ6VXNlcjgyNzMxNg==",
      "organizations_url" : "https://api.github.com/users/foolbear/orgs",
      "received_events_url" : "https://api.github.com/users/foolbear/received_events",
      "repos_url" : "https://api.github.com/users/foolbear/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/foolbear/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/foolbear/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/foolbear"
   }
}
