[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30034#discussion_r1589940997"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30034"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1589940997"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure. I think it would be good to instead run it in the existing lint task. Otherwise it can not be run locally. (See e.g. shellcheck)\r\n\r\nAlso, duplicating the exclude list in yet another place isn't ideal.",
      "commit_id" : "80d166b1984f264d9d7122663ac505ba310c1577",
      "created_at" : "2024-05-04T09:24:30Z",
      "diff_hunk" : "@@ -308,3 +308,13 @@ jobs:\n           BITCOINFUZZ: \"${{ github.workspace}}\\\\src\\\\fuzz.exe\"\n         shell: cmd\n         run: py -3 test\\fuzz\\test_runner.py --par %NUMBER_OF_PROCESSORS% --loglevel DEBUG %RUNNER_TEMP%\\qa-assets\\fuzz_seed_corpus\n+  check-md-links:\n+    name: \"Check markdown links\"\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v4\n+      - name: Markup Link Checker (mlc)\n+        uses: becheran/mlc@v0.16.3\n+        with:\n+          args: --offline --ignore-path \"./doc/release-notes\",\"./doc/README_doxygen.md\",\"./.github\",\"./src/crc32c\",\"./src/crypto\",\"./src/leveldb\",\"./src/minisketch\",\"./src/secp256k1\" --root-dir ./ ./",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30034#discussion_r1589940997",
      "id" : 1589940997,
      "line" : 320,
      "node_id" : "PRRC_kwDOABII585exJMF",
      "original_commit_id" : "80d166b1984f264d9d7122663ac505ba310c1577",
      "original_line" : 320,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 13,
      "pull_request_review_id" : 2039305651,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30034",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1589940997/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-04T09:24:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1589940997",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30034#discussion_r1592662009"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30034"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1592662009"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for the feedback @maflcko, I agree with it all, mostly.\r\n\r\nThat said it was quite painful to integrate it into `lint/test_runner`, mainly because the `mlc` tool will only accept a _single_ file/dir argument as the target but will permit multiple `--exclude-path` options. Therefore the only way I could concieve of not linting random directories in the root src dir was to deduplicate the output of `git ls-tree -rtd --format='%(path)' HEAD ./` with all top-level directories found by `fs::read_dir()`, which feels like a nasty hack.\r\n\r\nPerhaps there is a nicer way to do create such an exclude list...\r\n\r\nProposed diff here: https://github.com/bitcoin/bitcoin/compare/master...willcl-ark:bitcoin:link-check-test-runner\r\n\r\nThe exclude list deduplication clunk could be removed, if we don't care about user directories causing the process to fail (e.g. for me it fails on random markdown files in `./.venv`). when run locally, i.e. it will pass in CI without all these helper functions:\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```diff\r\ndiff --git a/test/lint/test_runner/src/main.rs b/test/lint/test_runner/src/main.rs\r\nindex 3c00ddc798..20e03f5055 100644\r\n--- a/test/lint/test_runner/src/main.rs\r\n+++ b/test/lint/test_runner/src/main.rs\r\n@@ -2,7 +2,6 @@\r\n // Distributed under the MIT software license, see the accompanying\r\n // file COPYING or https://opensource.org/license/mit/.\r\n \r\n-use std::collections::HashSet;\r\n use std::env;\r\n use std::fs;\r\n use std::io::ErrorKind;\r\n@@ -285,72 +284,13 @@ fn lint_doc() -> LintResult {\r\n     }\r\n }\r\n \r\n-fn list_top_level_dirs(dir: PathBuf) -> std::io::Result<Vec<String>> {\r\n-    let entries = fs::read_dir(&dir)?;\r\n-\r\n-    let directories = entries\r\n-        .filter_map(|entry| match entry {\r\n-            Ok(entry) => {\r\n-                let path = entry.path();\r\n-                if path.is_dir() {\r\n-                    // Make path relative\r\n-                    path.strip_prefix(&dir)\r\n-                        .ok()\r\n-                        .and_then(|p| p.to_str().map(String::from))\r\n-                } else {\r\n-                    None\r\n-                }\r\n-            }\r\n-            Err(_) => None,\r\n-        })\r\n-        .collect();\r\n-\r\n-    Ok(directories)\r\n-}\r\n-\r\n-fn list_top_level_tracked_dirs() -> std::io::Result<Vec<String>> {\r\n-    let output = Command::new(\"git\")\r\n-        .args([\"ls-tree\", \"-rtd\", \"--name-only\", \"HEAD\", \"./\"])\r\n-        .output()?;\r\n-\r\n-    if !output.status.success() {\r\n-        return Err(std::io::Error::new(\r\n-            std::io::ErrorKind::Other,\r\n-            \"Git command failed\",\r\n-        ));\r\n-    }\r\n-\r\n-    Ok(std::str::from_utf8(&output.stdout)\r\n-        .unwrap()\r\n-        .lines()\r\n-        .map(|s| s.to_string())\r\n-        .collect())\r\n-}\r\n-\r\n-// Return top-level directories not tracked by git\r\n-fn filter_untracked_directories(all_dirs: Vec<String>, tracked_dirs: Vec<String>) -> Vec<String> {\r\n-    let tracked_set: HashSet<String> = tracked_dirs.into_iter().collect();\r\n-    all_dirs\r\n-        .into_iter()\r\n-        .filter(|dir| !tracked_set.contains(dir))\r\n-        .collect()\r\n-}\r\n-\r\n fn lint_markdown() -> LintResult {\r\n     let mut md_ignore_paths = get_subtrees()\r\n         .into_iter()\r\n         .map(|path| path.to_string())\r\n         .collect::<Vec<_>>();\r\n-\r\n     // Malformed markdown\r\n     md_ignore_paths.push(\"./doc/README_doxygen.md\".to_string());\r\n-\r\n-    // Exclude any top-level directories not tracked by git\r\n-    let top_level_dirs = list_top_level_dirs(get_git_root()).expect(\"Failed to list directories\");\r\n-    let tracked_dirs = list_top_level_tracked_dirs().expect(\"Failed to list tracked directories\");\r\n-    let extra_exclude_dirs = filter_untracked_directories(top_level_dirs, tracked_dirs);\r\n-    md_ignore_paths.extend(extra_exclude_dirs);\r\n-\r\n     let md_ignore_path_str = md_ignore_paths.join(\",\");\r\n \r\n     let mut cmd = Command::new(\"mlc\");\r\n```\r\n\r\n</details>\r\n\r\n\r\n... but may or may not fail locally without them, depending on the condition of the working directory.\r\n\r\nAlternatively, keep this as a CI-only check, or drop the idea altogether :)",
      "commit_id" : "80d166b1984f264d9d7122663ac505ba310c1577",
      "created_at" : "2024-05-07T15:12:14Z",
      "diff_hunk" : "@@ -308,3 +308,13 @@ jobs:\n           BITCOINFUZZ: \"${{ github.workspace}}\\\\src\\\\fuzz.exe\"\n         shell: cmd\n         run: py -3 test\\fuzz\\test_runner.py --par %NUMBER_OF_PROCESSORS% --loglevel DEBUG %RUNNER_TEMP%\\qa-assets\\fuzz_seed_corpus\n+  check-md-links:\n+    name: \"Check markdown links\"\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v4\n+      - name: Markup Link Checker (mlc)\n+        uses: becheran/mlc@v0.16.3\n+        with:\n+          args: --offline --ignore-path \"./doc/release-notes\",\"./doc/README_doxygen.md\",\"./.github\",\"./src/crc32c\",\"./src/crypto\",\"./src/leveldb\",\"./src/minisketch\",\"./src/secp256k1\" --root-dir ./ ./",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30034#discussion_r1592662009",
      "id" : 1592662009,
      "in_reply_to_id" : 1589940997,
      "line" : 320,
      "node_id" : "PRRC_kwDOABII585e7hf5",
      "original_commit_id" : "80d166b1984f264d9d7122663ac505ba310c1577",
      "original_line" : 320,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 13,
      "pull_request_review_id" : 2043491907,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30034",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1592662009/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-07T15:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1592662009",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30034#discussion_r1592685484"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30034"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1592685484"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Therefore the only way I could concieve of not linting random directories in the root src dir\r\n\r\nIf this is too difficult, it does not need to be implemented for now. The risk should be minimal, as `mlc` should only have read-only access? And if it were to fail for someone that put random other folders into the root, they can always skip the check?\r\n\r\n(Finally, as you've written the code, it should be easy to cherry-pick, in case someone really wants it)",
      "commit_id" : "80d166b1984f264d9d7122663ac505ba310c1577",
      "created_at" : "2024-05-07T15:28:41Z",
      "diff_hunk" : "@@ -308,3 +308,13 @@ jobs:\n           BITCOINFUZZ: \"${{ github.workspace}}\\\\src\\\\fuzz.exe\"\n         shell: cmd\n         run: py -3 test\\fuzz\\test_runner.py --par %NUMBER_OF_PROCESSORS% --loglevel DEBUG %RUNNER_TEMP%\\qa-assets\\fuzz_seed_corpus\n+  check-md-links:\n+    name: \"Check markdown links\"\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v4\n+      - name: Markup Link Checker (mlc)\n+        uses: becheran/mlc@v0.16.3\n+        with:\n+          args: --offline --ignore-path \"./doc/release-notes\",\"./doc/README_doxygen.md\",\"./.github\",\"./src/crc32c\",\"./src/crypto\",\"./src/leveldb\",\"./src/minisketch\",\"./src/secp256k1\" --root-dir ./ ./",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30034#discussion_r1592685484",
      "id" : 1592685484,
      "in_reply_to_id" : 1589940997,
      "line" : 320,
      "node_id" : "PRRC_kwDOABII585e7nOs",
      "original_commit_id" : "80d166b1984f264d9d7122663ac505ba310c1577",
      "original_line" : 320,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 13,
      "pull_request_review_id" : 2043531030,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30034",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1592685484/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-07T15:29:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1592685484",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30034#discussion_r1592709785"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30034"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1592709785"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, I think this is probably the best approach too. I'll make those changes and push here soon (tm)",
      "commit_id" : "80d166b1984f264d9d7122663ac505ba310c1577",
      "created_at" : "2024-05-07T15:46:41Z",
      "diff_hunk" : "@@ -308,3 +308,13 @@ jobs:\n           BITCOINFUZZ: \"${{ github.workspace}}\\\\src\\\\fuzz.exe\"\n         shell: cmd\n         run: py -3 test\\fuzz\\test_runner.py --par %NUMBER_OF_PROCESSORS% --loglevel DEBUG %RUNNER_TEMP%\\qa-assets\\fuzz_seed_corpus\n+  check-md-links:\n+    name: \"Check markdown links\"\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v4\n+      - name: Markup Link Checker (mlc)\n+        uses: becheran/mlc@v0.16.3\n+        with:\n+          args: --offline --ignore-path \"./doc/release-notes\",\"./doc/README_doxygen.md\",\"./.github\",\"./src/crc32c\",\"./src/crypto\",\"./src/leveldb\",\"./src/minisketch\",\"./src/secp256k1\" --root-dir ./ ./",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30034#discussion_r1592709785",
      "id" : 1592709785,
      "in_reply_to_id" : 1589940997,
      "line" : 320,
      "node_id" : "PRRC_kwDOABII585e7tKZ",
      "original_commit_id" : "80d166b1984f264d9d7122663ac505ba310c1577",
      "original_line" : 320,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 13,
      "pull_request_review_id" : 2043571420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30034",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1592709785/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-07T15:46:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1592709785",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   }
]
