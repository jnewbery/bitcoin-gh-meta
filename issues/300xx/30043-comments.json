[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30043).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [Sjors](https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2095761769), [theuni](https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2096485412), [vasild](https://github.com/bitcoin/bitcoin/pull/30043#pullrequestreview-2061123015) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30060](https://github.com/bitcoin/bitcoin/pull/30060) (ci: Roll clang in test-each-commit task by maflcko)\n* [#29852](https://github.com/bitcoin/bitcoin/pull/29852) ([WIP] build: remove need to test for endianness by fanquake)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2024-05-05T18:35:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2094906184",
      "id" : 2094906184,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII58583btI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2094906184/reactions"
      },
      "updated_at" : "2024-05-16T15:48:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2094906184",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--85328a0da195eb286784d51f73fa0af9-->\n\nð§ At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/24606743714</sub>",
      "created_at" : "2024-05-05T18:49:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2094910598",
      "id" : 2094910598,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII58583cyG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2094910598/reactions"
      },
      "updated_at" : "2024-05-05T18:49:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2094910598",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2024-05-06T11:08:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2095761769",
      "id" : 2095761769,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII58586slp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2095761769/reactions"
      },
      "updated_at" : "2024-05-06T11:08:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2095761769",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1590975165"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1590975165"
         }
      },
      "author_association" : "MEMBER",
      "body" : "a2d67c320f8a28da98e6c8352bd67648a9b831a8: I think you need to keep this (and above) until `-natpmp` is removed.",
      "commit_id" : "b06edec229d5cfc8d0d1a19bd723852e6bcfd9d9",
      "created_at" : "2024-05-06T12:53:51Z",
      "diff_hunk" : "@@ -760,8 +757,8 @@ void InitParameterInteraction(ArgsManager& args)\n         // do not map ports or try to retrieve public IP when not listening (pointless)\n         if (args.SoftSetBoolArg(\"-upnp\", false))\n             LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -upnp=0\\n\", __func__);\n-        if (args.SoftSetBoolArg(\"-natpmp\", false)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1590975165",
      "id" : 1590975165,
      "line" : 763,
      "node_id" : "PRRC_kwDOABII585e1Fq9",
      "original_commit_id" : "a2d67c320f8a28da98e6c8352bd67648a9b831a8",
      "original_line" : 763,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 29,
      "pull_request_review_id" : 2040718091,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1590975165/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-06T16:51:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1590975165",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Whoa :)\r\n\r\n(Concept ACK)",
      "created_at" : "2024-05-06T16:49:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2096485412",
      "id" : 2096485412,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII58589dQk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2096485412/reactions"
      },
      "updated_at" : "2024-05-06T17:25:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2096485412",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Regarding the custom lib/self-impl discussion in #30005: \r\nTaking a quick look at the implementation here, I think it's simple enough for us to maintain ourselves. If a nice canonical lib ever emerges we could always jump to it, as there are only a few basic functions and presumably we could probably switch them out close to 1:1.\r\n\r\nThat said, it is a little rough to review as\r\n- It needs to be compared to the letter of the spec, with the assumption that @laanwj is evil or has mis-implemented (I doubt that :)\r\n- It needs to be very defensive, though the attack surface seems quite minimal\r\n- It needs to be aware of real-world violators/benders/extenders of the spec (if any? I have no idea.)\r\n\r\nBut it seems worth the effort to me.",
      "created_at" : "2024-05-06T18:37:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2096670310",
      "id" : 2096670310,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII5858-KZm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2096670310/reactions"
      },
      "updated_at" : "2024-05-06T18:37:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2096670310",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-05-07T04:16:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2097414181",
      "id" : 2097414181,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII5859BAAl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2097414181/reactions"
      },
      "updated_at" : "2024-05-07T04:16:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2097414181",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased for #29984",
      "created_at" : "2024-05-07T08:59:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2097797401",
      "id" : 2097797401,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII5859CdkZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2097797401/reactions"
      },
      "updated_at" : "2024-05-07T08:59:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2097797401",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1592075348"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1592075348"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, good point.",
      "commit_id" : "b06edec229d5cfc8d0d1a19bd723852e6bcfd9d9",
      "created_at" : "2024-05-07T08:59:41Z",
      "diff_hunk" : "@@ -760,8 +757,8 @@ void InitParameterInteraction(ArgsManager& args)\n         // do not map ports or try to retrieve public IP when not listening (pointless)\n         if (args.SoftSetBoolArg(\"-upnp\", false))\n             LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -upnp=0\\n\", __func__);\n-        if (args.SoftSetBoolArg(\"-natpmp\", false)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1592075348",
      "id" : 1592075348,
      "in_reply_to_id" : 1590975165,
      "line" : 763,
      "node_id" : "PRRC_kwDOABII585e5SRU",
      "original_commit_id" : "a2d67c320f8a28da98e6c8352bd67648a9b831a8",
      "original_line" : 763,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 29,
      "pull_request_review_id" : 2042519681,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1592075348/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-07T08:59:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1592075348",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> That said, it is a little rough to review as\r\n>  It needs to be compared to the letter of the spec, with the assumption that @laanwj is evil or has mis-implemented (I doubt that :)\r\n\r\nIf you're more comfortable comparing it against another implementation there's:\r\n- A kinda haphazard windows implementation here: https://github.com/moonlight-stream/GS-IPv6-Forwarder/blob/master/GSv6Fwd/pcp.cpp\r\n- Miniupnpd's pcp server implementation https://github.com/miniupnp/miniupnp/blob/master/miniupnpd/pcpserver.c\r\n\r\n> It needs to be aware of real-world violators/benders/extenders of the spec (if any? I have no idea.)\r\n\r\nMiniupnpd's is, likely, the most common server implementation in the wild. It's been tested against that. i'm hoping people will test this on various routers and conditions, there will be inevitable edge cases to iron out.\r\n\r\n> If a nice canonical lib ever emerges we could always jump to it\r\n\r\nMaybe, but at some point there's not much difference between implementing a simple request/reply protocol and using a library. At least the RFC is unambigiously documented, which can't be said of many FOSS ABI's. Also, @fanquake (and @gmaxwell in the past) has been hoping for a solution that doesn't introduce a library dependency.",
      "created_at" : "2024-05-07T10:18:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2097968387",
      "id" : 2097968387,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII5859DHUD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2097968387/reactions"
      },
      "updated_at" : "2024-05-07T10:28:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2097968387",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1592765102"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1592765102"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit:\r\n```suggestion\r\n    LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"pcp: Requesting port mapping for addr %s port %d from gateway %s\\n\", bind.ToStringAddr(), port, gateway.ToStringAddr());\r\n```",
      "commit_id" : "b06edec229d5cfc8d0d1a19bd723852e6bcfd9d9",
      "created_at" : "2024-05-07T16:25:32Z",
      "diff_hunk" : "@@ -0,0 +1,236 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/pcp.h>\n+\n+#include <crypto/common.h>\n+#include <logging.h>\n+#include <netaddress.h>\n+#include <random.h>\n+#include <util/netif.h>\n+#include <util/readwritefile.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+// RFC 6887 Port Control Protocol (PCP) implementation.\n+// PCP uses network byte order (big-endian).\n+// References to sections and figures in the code below refer to https://datatracker.ietf.org/doc/html/rfc6887.\n+\n+//! Mapping of PCP result code to string (7.4).\n+static const std::map<uint8_t, std::string> PCP_RESULT_STR{\n+    {0,  \"SUCCESS\"},\n+    {1,  \"UNSUPP_VERSION\"},\n+    {2,  \"NOT_AUTHORIZED\"},\n+    {3,  \"MALFORMED_REQUEST\"},\n+    {4,  \"UNSUPP_OPCODE\"},\n+    {5,  \"UNSUPP_OPTION\"},\n+    {6,  \"MALFORMED_OPTION\"},\n+    {7,  \"NETWORK_FAILURE\"},\n+    {8,  \"NO_RESOURCES\"},\n+    {9,  \"UNSUPP_PROTOCOL\"},\n+    {10, \"USER_EX_QUOTA\"},\n+    {11, \"CANNOT_PROVIDE_EXTERNAL\"},\n+    {12, \"ADDRESS_MISMATCH\"},\n+    {13, \"EXCESSIVE_REMOTE_PEER\"},\n+};\n+\n+std::string PCPResultString(uint8_t result_code)\n+{\n+    auto result_i = PCP_RESULT_STR.find(result_code);\n+    return strprintf(\"%s (code %d)\", result_i == PCP_RESULT_STR.end() ? \"(unknown)\" : result_i->second,  result_code);\n+}\n+\n+//! Wrap address in IPv6 according to RFC. wrapped_addr needs to be able to store 16 bytes.\n+[[nodiscard]] static bool PCPWrapAddress(uint8_t *wrapped_addr, const CNetAddr &addr)\n+{\n+    if (addr.IsIPv4()) {\n+        struct in_addr addr4;\n+        if (!addr.GetInAddr(&addr4)) return false;\n+        // Section 5: \"When the address field holds an IPv4 address, an IPv4-mapped IPv6 address [RFC4291] is used (::ffff:0:0/96).\"\n+        memcpy(wrapped_addr, IPV4_IN_IPV6_PREFIX.data(), IPV4_IN_IPV6_PREFIX.size());\n+        memcpy(wrapped_addr + IPV4_IN_IPV6_PREFIX.size(), &addr4, ADDR_IPV4_SIZE);\n+        return true;\n+    } else if (addr.IsIPv6()) {\n+        struct in6_addr addr6;\n+        if (!addr.GetIn6Addr(&addr6)) return false;\n+        memcpy(wrapped_addr, &addr6, ADDR_IPV6_SIZE);\n+        return true;\n+    } else {\n+        return false;\n+    }\n+}\n+\n+//! Unwrap PCP-encoded address.\n+static CNetAddr PCPUnwrapAddress(const uint8_t *wrapped_addr)\n+{\n+    if (memcmp(wrapped_addr, IPV4_IN_IPV6_PREFIX.data(), IPV4_IN_IPV6_PREFIX.size()) == 0) {\n+        struct in_addr addr4;\n+        memcpy(&addr4, wrapped_addr + IPV4_IN_IPV6_PREFIX.size(), ADDR_IPV4_SIZE);\n+        return CNetAddr(addr4);\n+    } else {\n+        struct in6_addr addr6;\n+        memcpy(&addr6, wrapped_addr, ADDR_IPV6_SIZE);\n+        return CNetAddr(addr6);\n+    }\n+}\n+\n+std::optional<MappingResult> PCPRequestPortMap(const PCPMappingNonce &nonce, const CNetAddr &gateway, const CNetAddr &bind, uint16_t port, uint32_t lifetime, int num_tries, bool option_prefer_failure)\n+{\n+    struct sockaddr_storage dest_addr, bind_addr;\n+    socklen_t dest_addrlen = sizeof(struct sockaddr_storage), bind_addrlen = sizeof(struct sockaddr_storage);\n+\n+    LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"pcp: Requesting port mapping for addr %s port %d from gateway %s\\n\", bind.ToStringAddr(), port, gateway.ToStringAddr());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1592765102",
      "id" : 1592765102,
      "line" : 83,
      "node_id" : "PRRC_kwDOABII585e76qu",
      "original_commit_id" : "fe53862fd4dca2ce7d3208847ed9e917c30ccb27",
      "original_line" : 83,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/util/pcp.cpp",
      "position" : 83,
      "pull_request_review_id" : 2043665469,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1592765102/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-07T16:25:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1592765102",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2257631?v=4",
         "events_url" : "https://api.github.com/users/davidgumberg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/davidgumberg/followers",
         "following_url" : "https://api.github.com/users/davidgumberg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/davidgumberg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/davidgumberg",
         "id" : 2257631,
         "login" : "davidgumberg",
         "node_id" : "MDQ6VXNlcjIyNTc2MzE=",
         "organizations_url" : "https://api.github.com/users/davidgumberg/orgs",
         "received_events_url" : "https://api.github.com/users/davidgumberg/received_events",
         "repos_url" : "https://api.github.com/users/davidgumberg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/davidgumberg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/davidgumberg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/davidgumberg"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Would prefer this in two steps (add PCP, then remove NAT-PMP)",
      "created_at" : "2024-05-08T15:26:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2100841942",
      "id" : 2100841942,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII5859OE3W",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2100841942/reactions"
      },
      "updated_at" : "2024-05-08T15:26:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2100841942",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Would prefer this in two steps (add PCP, then remove NAT-PMP)\r\n\r\ni'm not planning to do this, the build system commits are already set up this way, but doing it throughout would involve adding another setting in Qt just to remove it later. Same for adding a third mechanism in `portmap.cpp`. Agree with @sjors that having a forest of different port mapping settings is confusing to the user.",
      "created_at" : "2024-05-09T07:25:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2102107669",
      "id" : 2102107669,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII5859S54V",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2102107669/reactions"
      },
      "updated_at" : "2024-05-09T07:25:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2102107669",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1595141704"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595141704"
         }
      },
      "author_association" : "MEMBER",
      "body" : "73037f27fc21765414c298b171dfdeee130c549b: needs to be `true`, but you can actually drop this line.",
      "commit_id" : "b06edec229d5cfc8d0d1a19bd723852e6bcfd9d9",
      "created_at" : "2024-05-09T08:29:52Z",
      "diff_hunk" : "@@ -108,9 +108,7 @@ OptionsDialog::OptionsDialog(QWidget* parent, bool enableWallet)\n #ifndef USE_UPNP\n     ui->mapPortUpnp->setEnabled(false);\n #endif\n-#ifndef USE_NATPMP\n-    ui->mapPortNatpmp->setEnabled(false);\n-#endif\n+    ui->mapPortPCP->setEnabled(false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1595141704",
      "id" : 1595141704,
      "line" : 111,
      "node_id" : "PRRC_kwDOABII585fE-5I",
      "original_commit_id" : "73037f27fc21765414c298b171dfdeee130c549b",
      "original_line" : 111,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/qt/optionsdialog.cpp",
      "position" : 7,
      "pull_request_review_id" : 2047432934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595141704/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-09T09:56:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595141704",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1595145827"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595145827"
         }
      },
      "author_association" : "MEMBER",
      "body" : "73037f27fc21765414c298b171dfdeee130c549b: maybe add: \"PCP is the successor to NAT-PMP.\", in case someone who didn't read the release notes is confused why that option disappeared.",
      "commit_id" : "b06edec229d5cfc8d0d1a19bd723852e6bcfd9d9",
      "created_at" : "2024-05-09T08:34:02Z",
      "diff_hunk" : "@@ -326,12 +326,12 @@\n         </widget>\n        </item>\n        <item>\n-        <widget class=\"QCheckBox\" name=\"mapPortNatpmp\">\n+        <widget class=\"QCheckBox\" name=\"mapPortPCP\">\n          <property name=\"toolTip\">\n-          <string>Automatically open the Bitcoin client port on the router. This only works when your router supports NAT-PMP and it is enabled. The external port could be random.</string>\n+          <string>Automatically open the Bitcoin client port on the router. This only works when your router supports PCP and it is enabled. The external port could be random.</string>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1595145827",
      "id" : 1595145827,
      "line" : 331,
      "node_id" : "PRRC_kwDOABII585fE_5j",
      "original_commit_id" : "73037f27fc21765414c298b171dfdeee130c549b",
      "original_line" : 331,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/qt/forms/optionsdialog.ui",
      "position" : 8,
      "pull_request_review_id" : 2047432934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595145827/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-09T09:56:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595145827",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "In terms of which IPv6 address to use, my understanding is this:\r\n\r\n1. In the olden days the IPv6 address contained part of the MAC address. This ensured uniqueness, but was bad for mobile device privacy; no matter where you went, part of your IP address was constant. Such addresses always (?) contain `0xfffe`. See https://datatracker.ietf.org/doc/html/rfc7707\r\n2. A new standard was introduced that uses a hash of both the MAC address and the prefix, ensuring it's stable if you stay on the same network, but changes when you move. See https://datatracker.ietf.org/doc/html/rfc7217#page-19\r\n3. There's also temporary addresses, which are rotated every couple of hours. See https://datatracker.ietf.org/doc/html/rfc8981\r\n\r\nIf we were able to tell which one one is which, then I think we should pick only one, in order of preference: (2), (3), (1). This reflects our desire to actually get inbound connections, even after a shutdown, while at the same time not doxxing ourselves when on the move (mainly for laptops, perhaps mobile in the future).\r\n\r\nWe can easily detect type (1) by looking for `0xfffe` at the right position (and then least prefer it).\r\n\r\nI believe you can detect (2) by looking for `IFA_F_STABLE_PRIVACY` in `flags` of the `inet6_ifaddr` struct. It seems `getifaddrs` doesn't have access to that. Neither does `/proc/net/if_inet6` since https://patchwork.ozlabs.org/project/netdev/patch/1386680189-7852-1-git-send-email-jiri@resnulli.us/\r\n\r\nAfaik there's also no guarantee about the order of results.\r\n\r\nSo maybe we should just pick one at random rather than announce all three. This also seems orthogonal to PCP.",
      "created_at" : "2024-05-09T13:53:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2102707649",
      "id" : 2102707649,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII5859VMXB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2102707649/reactions"
      },
      "updated_at" : "2024-05-09T13:53:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2102707649",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1595583401"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595583401"
         }
      },
      "author_association" : "MEMBER",
      "body" : "6cf4809c6b93e1720dfdfe4e3320cfd8939686b6: This is `::Warning` worthy.",
      "commit_id" : "b06edec229d5cfc8d0d1a19bd723852e6bcfd9d9",
      "created_at" : "2024-05-09T15:10:12Z",
      "diff_hunk" : "@@ -47,105 +44,73 @@ static std::atomic<MapPortProtoFlag> g_mapport_current_proto{MapPortProtoFlag::N\n using namespace std::chrono_literals;\n static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD{20min};\n static constexpr auto PORT_MAPPING_RETRY_PERIOD{5min};\n+static constexpr auto PORT_MAPPING_REANNOUNCE_MARGIN{60s};\n \n-#ifdef USE_NATPMP\n-static uint16_t g_mapport_external_port = 0;\n-static bool NatpmpInit(natpmp_t* natpmp)\n+static bool ProcessPCP()\n {\n-    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n-    if (r_init == 0) return true;\n-    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n-    return false;\n-}\n+    // The same nonce is used for all mappings, this is allowed by the spec, and simplifies keeping track of them.\n+    PCPMappingNonce pcp_nonce;\n+    GetRandBytes(pcp_nonce);\n \n-static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n-{\n-    const int r_send = sendpublicaddressrequest(natpmp);\n-    if (r_send == 2 /* OK */) {\n-        int r_read;\n-        natpmpresp_t response;\n-        do {\n-            r_read = readnatpmpresponseorretry(natpmp, &response);\n-        } while (r_read == NATPMP_TRYAGAIN);\n-\n-        if (r_read == 0) {\n-            external_ipv4_addr = response.pnu.publicaddress.addr;\n-            return true;\n-        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n-            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+    bool ret = false;\n+    const uint16_t private_port = GetListenPort();\n+    // Request reannounce period plus safety margin.\n+    const uint32_t requested_lifetime = std::chrono::seconds(PORT_MAPPING_REANNOUNCE_PERIOD + PORT_MAPPING_REANNOUNCE_MARGIN).count();\n+    std::chrono::seconds sleep_time;\n+\n+    do {\n+        uint32_t actual_lifetime = requested_lifetime;\n+        ret = false; // Set to true if any mapping succeeds.\n+\n+        // IPv4\n+        std::optional<CNetAddr> gateway4 = QueryDefaultGateway(NET_IPV4);\n+        if (!gateway4) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"pcp: Could not determine IPv4 default gateway\\n\");\n         } else {\n-            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"pcp: gateway [IPv4]: %s\\n\", gateway4->ToStringAddr());\n+\n+            // Open a port mapping on whatever local address we have toward the gateway.\n+            struct in_addr inaddr_any;\n+            inaddr_any.s_addr = htonl(INADDR_ANY);\n+            std::optional<MappingResult> res = PCPRequestPortMap(pcp_nonce, *gateway4, CNetAddr(inaddr_any), private_port, requested_lifetime);\n+            if (res) {\n+                LogPrintLevel(BCLog::NET, BCLog::Level::Info, \"pcp: ExternalIPv4Address:port = %s\\n\", res->external.ToStringAddrPort());\n+                AddLocal(res->external, LOCAL_MAPPED);\n+                ret = true;\n+                actual_lifetime = std::min(actual_lifetime, res->lifetime);\n+            }\n         }\n-    } else {\n-        LogPrintf(\"natpmp: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n-    }\n \n-    return false;\n-}\n-\n-static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n-{\n-    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n-    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n-    if (r_send == 12 /* OK */) {\n-        int r_read;\n-        natpmpresp_t response;\n-        do {\n-            r_read = readnatpmpresponseorretry(natpmp, &response);\n-        } while (r_read == NATPMP_TRYAGAIN);\n-\n-        if (r_read == 0) {\n-            auto pm = response.pnu.newportmapping;\n-            if (private_port == pm.privateport && pm.lifetime > 0) {\n-                g_mapport_external_port = pm.mappedpublicport;\n-                const CService external{external_ipv4_addr, pm.mappedpublicport};\n-                if (!external_ip_discovered && fDiscover) {\n-                    AddLocal(external, LOCAL_MAPPED);\n-                    external_ip_discovered = true;\n+        // IPv6\n+        std::optional<CNetAddr> gateway6 = QueryDefaultGateway(NET_IPV6);\n+        if (!gateway6) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"pcp: Could not determine IPv6 default gateway\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1595583401",
      "id" : 1595583401,
      "line" : 87,
      "node_id" : "PRRC_kwDOABII585fGqup",
      "original_commit_id" : "6cf4809c6b93e1720dfdfe4e3320cfd8939686b6",
      "original_line" : 87,
      "original_position" : 119,
      "original_start_line" : null,
      "path" : "src/mapport.cpp",
      "position" : 119,
      "pull_request_review_id" : 2048184349,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595583401/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-09T15:45:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595583401",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-05-15T10:05:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2112095584",
      "id" : 2112095584,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII58595AVg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2112095584/reactions"
      },
      "updated_at" : "2024-05-15T10:05:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2112095584",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks!\r\n\r\nOn Windows (Vista and higher, which is all we care about) getting the default gateway is straightforward, there's `GetBestRoute2` that does all the work. It's part of netioapi which we already need for interface enumeration. MacOS's sysctl is a bit uglier.\r\n\r\n> If PCP servers announced themselves via DNS-Based Service Discovery [rfc6763](https://www.rfc-editor.org/rfc/rfc6763.html) that would also make things easier.\r\n\r\ni don't think it really would, we'd need some special library for DNS access, getting TXT records isn't built into libc.\r\n\r\n> One creative cross-platform way to find the default gateway is, like traceroute, to send an ICMP(v6) message towards a random IPv4/6 address (via TCP), with Hop Limit set to 1, wait for the Destination Unreachable Message response and get the origin IP. \r\n\r\nIt's a clever idea, but sending/receiving ICMP needs raw socket privileges on many operating systems.",
      "created_at" : "2024-05-15T12:00:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2112341321",
      "id" : 2112341321,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII585958VJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2112341321/reactions"
      },
      "updated_at" : "2024-05-15T12:02:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2112341321",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Maybe you can split src/util/netif.h off into a separate PR, along with https://github.com/bitcoin/bitcoin/commit/b06edec229d5cfc8d0d1a19bd723852e6bcfd9d9.\r\n\r\nSure, could do that.\r\n\r\n> So maybe we should just pick one at random rather than announce all three. This also seems orthogonal to PCP.\r\n\r\nThanks, that's interesting.\r\n\r\nOne problem is that routers might fail to pinhole some of the addresses. For example, Fritz!Box refuses to open ports on temporary privacy ones, which aren't a distinguishable range or type (on purpose). Might end up having no open port at all, or only for a temporary address lifetime. So for this PR, i prefer to keep the \"announce all publicly routable\" that is the current `Discover()` behavior for now.\r\n\r\nFine with discussing changes to IPv6 address choosing behavior later, as you say, it's orthogonal to adding PCP. ",
      "created_at" : "2024-05-16T06:56:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2114203144",
      "id" : 2114203144,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII585-BC4I",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2114203144/reactions"
      },
      "updated_at" : "2024-05-16T06:56:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2114203144",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1602742155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1602742155"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's hidden as debug because at the moment this is shown when the user doesn't have IPv6. Could boost this to warning if we do the address check first, then don't bother looking for a default gateway if there's none. Will do that.",
      "commit_id" : "9e329fccca3ccaa21432a97e0d7eb9d119fcee06",
      "created_at" : "2024-05-16T07:13:39Z",
      "diff_hunk" : "@@ -47,105 +44,73 @@ static std::atomic<MapPortProtoFlag> g_mapport_current_proto{MapPortProtoFlag::N\n using namespace std::chrono_literals;\n static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD{20min};\n static constexpr auto PORT_MAPPING_RETRY_PERIOD{5min};\n+static constexpr auto PORT_MAPPING_REANNOUNCE_MARGIN{60s};\n \n-#ifdef USE_NATPMP\n-static uint16_t g_mapport_external_port = 0;\n-static bool NatpmpInit(natpmp_t* natpmp)\n+static bool ProcessPCP()\n {\n-    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n-    if (r_init == 0) return true;\n-    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n-    return false;\n-}\n+    // The same nonce is used for all mappings, this is allowed by the spec, and simplifies keeping track of them.\n+    PCPMappingNonce pcp_nonce;\n+    GetRandBytes(pcp_nonce);\n \n-static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n-{\n-    const int r_send = sendpublicaddressrequest(natpmp);\n-    if (r_send == 2 /* OK */) {\n-        int r_read;\n-        natpmpresp_t response;\n-        do {\n-            r_read = readnatpmpresponseorretry(natpmp, &response);\n-        } while (r_read == NATPMP_TRYAGAIN);\n-\n-        if (r_read == 0) {\n-            external_ipv4_addr = response.pnu.publicaddress.addr;\n-            return true;\n-        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n-            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+    bool ret = false;\n+    const uint16_t private_port = GetListenPort();\n+    // Request reannounce period plus safety margin.\n+    const uint32_t requested_lifetime = std::chrono::seconds(PORT_MAPPING_REANNOUNCE_PERIOD + PORT_MAPPING_REANNOUNCE_MARGIN).count();\n+    std::chrono::seconds sleep_time;\n+\n+    do {\n+        uint32_t actual_lifetime = requested_lifetime;\n+        ret = false; // Set to true if any mapping succeeds.\n+\n+        // IPv4\n+        std::optional<CNetAddr> gateway4 = QueryDefaultGateway(NET_IPV4);\n+        if (!gateway4) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"pcp: Could not determine IPv4 default gateway\\n\");\n         } else {\n-            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"pcp: gateway [IPv4]: %s\\n\", gateway4->ToStringAddr());\n+\n+            // Open a port mapping on whatever local address we have toward the gateway.\n+            struct in_addr inaddr_any;\n+            inaddr_any.s_addr = htonl(INADDR_ANY);\n+            std::optional<MappingResult> res = PCPRequestPortMap(pcp_nonce, *gateway4, CNetAddr(inaddr_any), private_port, requested_lifetime);\n+            if (res) {\n+                LogPrintLevel(BCLog::NET, BCLog::Level::Info, \"pcp: ExternalIPv4Address:port = %s\\n\", res->external.ToStringAddrPort());\n+                AddLocal(res->external, LOCAL_MAPPED);\n+                ret = true;\n+                actual_lifetime = std::min(actual_lifetime, res->lifetime);\n+            }\n         }\n-    } else {\n-        LogPrintf(\"natpmp: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n-    }\n \n-    return false;\n-}\n-\n-static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n-{\n-    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n-    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n-    if (r_send == 12 /* OK */) {\n-        int r_read;\n-        natpmpresp_t response;\n-        do {\n-            r_read = readnatpmpresponseorretry(natpmp, &response);\n-        } while (r_read == NATPMP_TRYAGAIN);\n-\n-        if (r_read == 0) {\n-            auto pm = response.pnu.newportmapping;\n-            if (private_port == pm.privateport && pm.lifetime > 0) {\n-                g_mapport_external_port = pm.mappedpublicport;\n-                const CService external{external_ipv4_addr, pm.mappedpublicport};\n-                if (!external_ip_discovered && fDiscover) {\n-                    AddLocal(external, LOCAL_MAPPED);\n-                    external_ip_discovered = true;\n+        // IPv6\n+        std::optional<CNetAddr> gateway6 = QueryDefaultGateway(NET_IPV6);\n+        if (!gateway6) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"pcp: Could not determine IPv6 default gateway\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1602742155",
      "id" : 1602742155,
      "in_reply_to_id" : 1595583401,
      "line" : 85,
      "node_id" : "PRRC_kwDOABII585fh-eL",
      "original_commit_id" : "6cf4809c6b93e1720dfdfe4e3320cfd8939686b6",
      "original_line" : 85,
      "original_position" : 119,
      "original_start_line" : null,
      "path" : "src/mapport.cpp",
      "position" : 119,
      "pull_request_review_id" : 2059790357,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1602742155/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-16T07:13:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1602742155",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1602763394"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1602763394"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Whoops, yes, it's `setEnabled`, not setting the default value ð .",
      "commit_id" : "9e329fccca3ccaa21432a97e0d7eb9d119fcee06",
      "created_at" : "2024-05-16T07:28:29Z",
      "diff_hunk" : "@@ -108,9 +108,7 @@ OptionsDialog::OptionsDialog(QWidget* parent, bool enableWallet)\n #ifndef USE_UPNP\n     ui->mapPortUpnp->setEnabled(false);\n #endif\n-#ifndef USE_NATPMP\n-    ui->mapPortNatpmp->setEnabled(false);\n-#endif\n+    ui->mapPortPCP->setEnabled(false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1602763394",
      "id" : 1602763394,
      "in_reply_to_id" : 1595141704,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585fiDqC",
      "original_commit_id" : "73037f27fc21765414c298b171dfdeee130c549b",
      "original_line" : 111,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/qt/optionsdialog.cpp",
      "position" : null,
      "pull_request_review_id" : 2059823939,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1602763394/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-16T07:28:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1602763394",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1602770267"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1602770267"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Will keep this open but leave it as-is for now. For IPv4 i'm not currently sure how to check if we have (Internet) networking besides checking for a default gateway, and i'd like to keep the two paths reasonably symmetric. Just checking for publicly routable addresses isn't going to cut it for IPv4.",
      "commit_id" : "9e329fccca3ccaa21432a97e0d7eb9d119fcee06",
      "created_at" : "2024-05-16T07:33:03Z",
      "diff_hunk" : "@@ -47,105 +44,73 @@ static std::atomic<MapPortProtoFlag> g_mapport_current_proto{MapPortProtoFlag::N\n using namespace std::chrono_literals;\n static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD{20min};\n static constexpr auto PORT_MAPPING_RETRY_PERIOD{5min};\n+static constexpr auto PORT_MAPPING_REANNOUNCE_MARGIN{60s};\n \n-#ifdef USE_NATPMP\n-static uint16_t g_mapport_external_port = 0;\n-static bool NatpmpInit(natpmp_t* natpmp)\n+static bool ProcessPCP()\n {\n-    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n-    if (r_init == 0) return true;\n-    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n-    return false;\n-}\n+    // The same nonce is used for all mappings, this is allowed by the spec, and simplifies keeping track of them.\n+    PCPMappingNonce pcp_nonce;\n+    GetRandBytes(pcp_nonce);\n \n-static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n-{\n-    const int r_send = sendpublicaddressrequest(natpmp);\n-    if (r_send == 2 /* OK */) {\n-        int r_read;\n-        natpmpresp_t response;\n-        do {\n-            r_read = readnatpmpresponseorretry(natpmp, &response);\n-        } while (r_read == NATPMP_TRYAGAIN);\n-\n-        if (r_read == 0) {\n-            external_ipv4_addr = response.pnu.publicaddress.addr;\n-            return true;\n-        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n-            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+    bool ret = false;\n+    const uint16_t private_port = GetListenPort();\n+    // Request reannounce period plus safety margin.\n+    const uint32_t requested_lifetime = std::chrono::seconds(PORT_MAPPING_REANNOUNCE_PERIOD + PORT_MAPPING_REANNOUNCE_MARGIN).count();\n+    std::chrono::seconds sleep_time;\n+\n+    do {\n+        uint32_t actual_lifetime = requested_lifetime;\n+        ret = false; // Set to true if any mapping succeeds.\n+\n+        // IPv4\n+        std::optional<CNetAddr> gateway4 = QueryDefaultGateway(NET_IPV4);\n+        if (!gateway4) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"pcp: Could not determine IPv4 default gateway\\n\");\n         } else {\n-            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"pcp: gateway [IPv4]: %s\\n\", gateway4->ToStringAddr());\n+\n+            // Open a port mapping on whatever local address we have toward the gateway.\n+            struct in_addr inaddr_any;\n+            inaddr_any.s_addr = htonl(INADDR_ANY);\n+            std::optional<MappingResult> res = PCPRequestPortMap(pcp_nonce, *gateway4, CNetAddr(inaddr_any), private_port, requested_lifetime);\n+            if (res) {\n+                LogPrintLevel(BCLog::NET, BCLog::Level::Info, \"pcp: ExternalIPv4Address:port = %s\\n\", res->external.ToStringAddrPort());\n+                AddLocal(res->external, LOCAL_MAPPED);\n+                ret = true;\n+                actual_lifetime = std::min(actual_lifetime, res->lifetime);\n+            }\n         }\n-    } else {\n-        LogPrintf(\"natpmp: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n-    }\n \n-    return false;\n-}\n-\n-static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n-{\n-    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n-    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n-    if (r_send == 12 /* OK */) {\n-        int r_read;\n-        natpmpresp_t response;\n-        do {\n-            r_read = readnatpmpresponseorretry(natpmp, &response);\n-        } while (r_read == NATPMP_TRYAGAIN);\n-\n-        if (r_read == 0) {\n-            auto pm = response.pnu.newportmapping;\n-            if (private_port == pm.privateport && pm.lifetime > 0) {\n-                g_mapport_external_port = pm.mappedpublicport;\n-                const CService external{external_ipv4_addr, pm.mappedpublicport};\n-                if (!external_ip_discovered && fDiscover) {\n-                    AddLocal(external, LOCAL_MAPPED);\n-                    external_ip_discovered = true;\n+        // IPv6\n+        std::optional<CNetAddr> gateway6 = QueryDefaultGateway(NET_IPV6);\n+        if (!gateway6) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"pcp: Could not determine IPv6 default gateway\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1602770267",
      "id" : 1602770267,
      "in_reply_to_id" : 1595583401,
      "line" : 85,
      "node_id" : "PRRC_kwDOABII585fiFVb",
      "original_commit_id" : "6cf4809c6b93e1720dfdfe4e3320cfd8939686b6",
      "original_line" : 85,
      "original_position" : 119,
      "original_start_line" : null,
      "path" : "src/mapport.cpp",
      "position" : 119,
      "pull_request_review_id" : 2059835406,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1602770267/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-16T07:33:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1602770267",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "- Rebased for a trivial merge conflict related to clang installation in `.github/workflows/ci.yml`.\r\n- Needed to change the use of `bitcoin_config.h` to make the lint pass.\r\n- Split `netif.h` and `netif.cpp` creation into a seperate commit (could be a seperate PR later).\r\n- Addressed a few comments.",
      "created_at" : "2024-05-16T07:43:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2114295253",
      "id" : 2114295253,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII585-BZXV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2114295253/reactions"
      },
      "updated_at" : "2024-05-16T08:22:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2114295253",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1603565742"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603565742"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The following patch uses a netlink socket to get the information from the kernel, that is supported on (at least) Linux and FreeBSD>=13.2:\r\n\r\n<details>\r\n<summary>[patch] get default gateway using a netlink socket</summary>\r\n\r\n```diff\r\n--- a/src/test/netbase_tests.cpp\r\n+++ b/src/test/netbase_tests.cpp\r\n@@ -1,25 +1,34 @@\r\n // Copyright (c) 2012-2022 The Bitcoin Core developers\r\n // Distributed under the MIT software license, see the accompanying\r\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n \r\n+#include <compat/compat.h>\r\n #include <net_permissions.h>\r\n #include <netaddress.h>\r\n #include <netbase.h>\r\n #include <netgroup.h>\r\n #include <protocol.h>\r\n #include <serialize.h>\r\n #include <streams.h>\r\n #include <test/util/setup_common.h>\r\n #include <util/strencodings.h>\r\n+#include <util/syserror.h>\r\n #include <util/translation.h>\r\n \r\n #include <string>\r\n \r\n #include <boost/test/unit_test.hpp>\r\n \r\n+#ifdef __linux__\r\n+#include <linux/rtnetlink.h>\r\n+#elif defined(__FreeBSD__)\r\n+#include <netlink/netlink.h>\r\n+#include <netlink/netlink_route.h>\r\n+#endif\r\n+\r\n using namespace std::literals;\r\n \r\n BOOST_FIXTURE_TEST_SUITE(netbase_tests, BasicTestingSetup)\r\n \r\n static CNetAddr ResolveIP(const std::string& ip)\r\n {\r\n@@ -610,7 +619,100 @@ BOOST_AUTO_TEST_CASE(isbadport)\r\n             ++total_bad_ports;\r\n         }\r\n     }\r\n     BOOST_CHECK_EQUAL(total_bad_ports, 80);\r\n }\r\n \r\n+std::optional<CNetAddr> QueryDefaultGateway(Network network)\r\n+{\r\n+    Assume(network == NET_IPV4 || network == NET_IPV6);\r\n+\r\n+    // Create a netlink socket.\r\n+\r\n+    const int s{socket(AF_NETLINK, SOCK_DGRAM, NETLINK_ROUTE)};\r\n+    if (s < 0) {\r\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"socket(AF_NETLINK): %s\\n\", SysErrorString(errno));\r\n+        return std::nullopt;\r\n+    }\r\n+    Sock sock{static_cast<SOCKET>(s)};\r\n+\r\n+    // Send request.\r\n+\r\n+    struct {\r\n+        nlmsghdr hdr; ///< Request header.\r\n+        rtmsg data; ///< Request data, a \"route message\".\r\n+        nlattr dst_hdr; ///< One attribute, conveying the route destination address.\r\n+        char dst_data[16]; ///< Route destination address. To query the default route we use 0.0.0.0/0 or [::]/0. For IPv4 the first 4 bytes are used.\r\n+    } request;\r\n+\r\n+    // Whether to use the first 4 or 16 bytes from request.attr_dst_data.\r\n+    const size_t dst_data_len = network == NET_IPV4 ? 4 : 16;\r\n+\r\n+    memset(&request, 0x0, sizeof(request));\r\n+\r\n+    request.hdr.nlmsg_type = RTM_GETROUTE;\r\n+    request.hdr.nlmsg_flags = NLM_F_REQUEST;\r\n+#ifdef __linux__\r\n+    request.hdr.nlmsg_flags |= NLM_F_DUMP;\r\n+#endif\r\n+    request.hdr.nlmsg_len = NLMSG_LENGTH(sizeof(rtmsg) + sizeof(nlattr) + dst_data_len);\r\n+    request.hdr.nlmsg_seq = 0; // Sequence number, used to match which reply is to which request. Irrelevant for us because we send just one request.\r\n+    request.data.rtm_family = network == NET_IPV4 ? AF_INET : AF_INET6;\r\n+    request.data.rtm_dst_len = 0; // Prefix length.\r\n+#ifdef __FreeBSD__\r\n+    request.data.rtm_flags = RTM_F_PREFIX;\r\n+#endif\r\n+    request.dst_hdr.nla_type = RTA_DST;\r\n+    request.dst_hdr.nla_len = sizeof(nlattr) + dst_data_len;\r\n+\r\n+    if (sock.Send(&request, sizeof(request), 0) != sizeof(request)) {\r\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"send() to netlink socket: %s\\n\", SysErrorString(errno));\r\n+        return std::nullopt;\r\n+    }\r\n+\r\n+    // Receive response.\r\n+\r\n+    char response[4096];\r\n+    ssize_t response_len;\r\n+    do {\r\n+        response_len = sock.Recv(response, sizeof(response), 0);\r\n+    } while (response_len < 0 && (errno == EINTR || errno == EAGAIN));\r\n+    if (response_len < 0) {\r\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", SysErrorString(errno));\r\n+        return std::nullopt;\r\n+    }\r\n+\r\n+    for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, response_len); hdr = NLMSG_NEXT(hdr, response_len)) {\r\n+        rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\r\n+        int remaining_len = RTM_PAYLOAD(hdr);\r\n+        // Iterate over the attributes.\r\n+        for (rtattr* attr = RTM_RTA(r); RTA_OK(attr, remaining_len); attr = RTA_NEXT(attr, remaining_len)) {\r\n+            if (attr->rta_type == RTA_GATEWAY) {\r\n+                if (network == NET_IPV4) {\r\n+                    Assume(sizeof(in_addr) == RTA_PAYLOAD(attr));\r\n+                    return CNetAddr{in_addr{.s_addr = *static_cast<decltype(in_addr::s_addr)*>(RTA_DATA(attr))}};\r\n+                } else {\r\n+                    Assume(sizeof(in6_addr) == RTA_PAYLOAD(attr));\r\n+                    in6_addr gw;\r\n+                    std::memcpy(&gw, RTA_DATA(attr), sizeof(gw));\r\n+                    return CNetAddr{gw};\r\n+                }\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    return std::nullopt;\r\n+}\r\n+\r\n+BOOST_AUTO_TEST_CASE(netlink)\r\n+{\r\n+    for (const auto net : {NET_IPV4, NET_IPV6}) {\r\n+        const auto gw{QueryDefaultGateway(net)};\r\n+        if (gw.has_value()) {\r\n+            printf(\"Default %s gateway: %s\\n\", GetNetworkName(net).c_str(), gw->ToStringAddr().c_str());\r\n+        } else {\r\n+            printf(\"No %s default gateway.\\n\", GetNetworkName(net).c_str());\r\n+        }\r\n+    }\r\n+}\r\n+\r\n BOOST_AUTO_TEST_SUITE_END()\r\n```\r\n</details>\r\n\r\nI find the netlink interface a somewhat difficult to grasp.\r\n\r\nhttps://man7.org/linux/man-pages/man7/netlink.7.html\r\nhttps://man7.org/linux/man-pages/man7/rtnetlink.7.html\r\nhttps://man7.org/linux/man-pages/man3/rtnetlink.3.html\r\nhttps://stackoverflow.com/questions/11788326/extract-current-route-from-netlink-message-code-attached\r\nhttps://www.rfc-editor.org/rfc/rfc3549",
      "commit_id" : "39933a53f3a3d29cfebd8252a9b4ddcb48d3965c",
      "created_at" : "2024-05-16T15:10:54Z",
      "diff_hunk" : "@@ -0,0 +1,116 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <config/bitcoin-config.h> // IWYU pragma: keep\n+\n+#include <util/netif.h>\n+\n+#include <logging.h>\n+#include <netbase.h>\n+#include <util/readwritefile.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+#ifdef HAVE_LINUX_ROUTE_H\n+\n+#include <linux/route.h>\n+\n+std::optional<CNetAddr> QueryDefaultGateway(Network network)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1603565742",
      "id" : 1603565742,
      "line" : 19,
      "node_id" : "PRRC_kwDOABII585flHiu",
      "original_commit_id" : "39933a53f3a3d29cfebd8252a9b4ddcb48d3965c",
      "original_line" : 19,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/util/netif.cpp",
      "position" : 19,
      "pull_request_review_id" : 2061123015,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603565742/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-16T15:48:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603565742",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1603770501"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603770501"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Huh interesting. i didn't know netlink worked for multiple operating systems, that's much better.",
      "commit_id" : "39933a53f3a3d29cfebd8252a9b4ddcb48d3965c",
      "created_at" : "2024-05-16T17:31:16Z",
      "diff_hunk" : "@@ -0,0 +1,116 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <config/bitcoin-config.h> // IWYU pragma: keep\n+\n+#include <util/netif.h>\n+\n+#include <logging.h>\n+#include <netbase.h>\n+#include <util/readwritefile.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+#ifdef HAVE_LINUX_ROUTE_H\n+\n+#include <linux/route.h>\n+\n+std::optional<CNetAddr> QueryDefaultGateway(Network network)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1603770501",
      "id" : 1603770501,
      "in_reply_to_id" : 1603565742,
      "line" : 19,
      "node_id" : "PRRC_kwDOABII585fl5iF",
      "original_commit_id" : "39933a53f3a3d29cfebd8252a9b4ddcb48d3965c",
      "original_line" : 19,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/util/netif.cpp",
      "position" : 19,
      "pull_request_review_id" : 2061450460,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603770501/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-16T17:31:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603770501",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1603876259"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603876259"
         }
      },
      "author_association" : "MEMBER",
      "body" : "~~Is it possible to get the `scope_id` for IPv6 addresses? At least my router gives me an link-scope address.~~\r\n\r\nEdit: on linux this is `RTA_OIF`, it appears",
      "commit_id" : "bb4eeed169b150b19036756dc0c4f412ae31c1d3",
      "created_at" : "2024-05-16T18:37:25Z",
      "diff_hunk" : "@@ -0,0 +1,116 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <config/bitcoin-config.h> // IWYU pragma: keep\n+\n+#include <util/netif.h>\n+\n+#include <logging.h>\n+#include <netbase.h>\n+#include <util/readwritefile.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+#ifdef HAVE_LINUX_ROUTE_H\n+\n+#include <linux/route.h>\n+\n+std::optional<CNetAddr> QueryDefaultGateway(Network network)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1603876259",
      "id" : 1603876259,
      "in_reply_to_id" : 1603565742,
      "line" : 24,
      "node_id" : "PRRC_kwDOABII585fmTWj",
      "original_commit_id" : "39933a53f3a3d29cfebd8252a9b4ddcb48d3965c",
      "original_line" : 19,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/util/netif.cpp",
      "position" : 24,
      "pull_request_review_id" : 2061615847,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603876259/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-16T19:00:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603876259",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Replaced Linux-specific `QueryDefaultGateway` with @vasild's netlink implementation for Linux and FreeBSD. This may even generalize to more UNIX variants. \r\n\r\nWill tackle Windows next.",
      "created_at" : "2024-05-16T19:04:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2115990626",
      "id" : 2115990626,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII585-H3Ri",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2115990626/reactions"
      },
      "updated_at" : "2024-05-16T19:04:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2115990626",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--85328a0da195eb286784d51f73fa0af9-->\n\nð§ At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/25069227736</sub>",
      "created_at" : "2024-05-16T20:53:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2116158791",
      "id" : 2116158791,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII585-IgVH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2116158791/reactions"
      },
      "updated_at" : "2024-05-16T20:53:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2116158791",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added a (mostly untested for now) Windows implementation of `QueryDefaultGateway`, if someone could test this it'd be very helpful. i will try in WINE later.\r\n\r\nEdit: Wine has only a stub for `GetBestRoute2`, so tested on Amazon EC2 actual windows, can't check PCP due to lack of a suitable router there, but IP address and default gateway finding works:\r\n```\r\n2024-05-17T14:17:48Z [net] pcp: gateway [IPv4]: 172.31.16.1\r\n2024-05-17T14:17:48Z [net] pcp: Requesting port mapping for addr 0.0.0.0 port 18444 from gateway 172.31.16.1                                                                                                                                   \r\n2024-05-17T14:17:48Z [net] pcp: Internal address after connect: 172.31.28.xxx                                                                             \r\n2024-05-17T14:17:51Z [net] pcp: gateway [IPv6]: fe80::58:f4ff:feca:xxxx%7\r\n2024-05-17T14:17:51Z [net] pcp: Requesting port mapping for addr 2600:1f1c:b80:8af0:e073:32d6:80b3:xxxx port 18444 from gateway fe80::58:f4ff:feca:xxxx%7\r\n2024-05-17T14:17:51Z [net] pcp: Internal address after connect: 2600:1f1c:b80:8af0:e073:32d6:80b3:xxxx\r\n```",
      "created_at" : "2024-05-17T08:18:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2117004469",
      "id" : 2117004469,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII585-Luy1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2117004469/reactions"
      },
      "updated_at" : "2024-05-17T14:30:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2117004469",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1604635967"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1604635967"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Here is a standalone program to get the default gateway using a netlink socket:\r\n\r\n<details>\r\n<summary>netlink_get_default_route.cc</summary>\r\n\r\n```cc\r\n#include <arpa/inet.h>\r\n#include <assert.h>\r\n#include <errno.h>\r\n#include <net/if.h>\r\n#include <netinet/in.h>\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n#include <sys/socket.h>\r\n#include <sys/types.h>\r\n#include <unistd.h>\r\n\r\n#ifdef __linux__\r\n#include <linux/rtnetlink.h>\r\n#elif defined(__FreeBSD__)\r\n#include <netlink/netlink.h>\r\n#include <netlink/netlink_route.h>\r\n#endif\r\n\r\nvoid QueryDefaultGateway(sa_family_t family)\r\n{\r\n    // Create a netlink socket.\r\n\r\n    int sock = socket(AF_NETLINK, SOCK_DGRAM, NETLINK_ROUTE);\r\n    if (sock < 0) {\r\n        perror(\"socket(AF_NETLINK)\");\r\n        return;\r\n    }\r\n\r\n    // Send request.\r\n\r\n    struct {\r\n        nlmsghdr hdr; ///< Request header.\r\n        rtmsg data; ///< Request data, a \"route message\".\r\n        nlattr dst_hdr; ///< One attribute, conveying the route destination address.\r\n        char dst_data[16]; ///< Route destination address. To query the default route we use 0.0.0.0/0 or [::]/0. For IPv4 the first 4 bytes are used.\r\n    } request{};\r\n\r\n    // Whether to use the first 4 or 16 bytes from request.attr_dst_data.\r\n    const size_t dst_data_len = family == AF_INET ? 4 : 16;\r\n\r\n    request.hdr.nlmsg_type = RTM_GETROUTE;\r\n    request.hdr.nlmsg_flags = NLM_F_REQUEST;\r\n#ifdef __linux__\r\n    // XXX some strange behavior:\r\n    // Linux IPv4 - this must be present, otherwise no gateway is found\r\n    // Linux IPv6 - this must be present, otherwise no gateway is found\r\n    // FreeBSD IPv4 - does not matter, the gateway is found with or without this\r\n    // FreeBSD IPv6 - this must be absent, otherwise no gateway is found\r\n    request.hdr.nlmsg_flags |= NLM_F_DUMP;\r\n#endif\r\n    request.hdr.nlmsg_len = NLMSG_LENGTH(sizeof(rtmsg) + sizeof(nlattr) + dst_data_len);\r\n    request.hdr.nlmsg_seq = 0; // Sequence number, used to match which reply is to which request. Irrelevant for us because we send just one request.\r\n    request.data.rtm_family = family;\r\n    request.data.rtm_dst_len = 0; // Prefix length.\r\n    //request.data.rtm_table = RT_TABLE_MAIN;\r\n    //request.data.rtm_protocol = RTPROT_STATIC;\r\n    //request.data.rtm_scope = RT_SCOPE_UNIVERSE;\r\n    //request.data.rtm_type = RTN_UNICAST;\r\n#ifdef __FreeBSD__\r\n    // XXX some strange behavior:\r\n    // Linux IPv4 - this must be absent, otherwise no gateway is found\r\n    // Linux IPv6 - this must be absent, otherwise no gateway is found\r\n    // FreeBSD IPv4 - does not matter, the gateway is found with or without this\r\n    // FreeBSD IPv6 - this must be present, otherwise no gateway is found\r\n    request.data.rtm_flags = RTM_F_PREFIX;\r\n#endif\r\n    request.dst_hdr.nla_type = RTA_DST;\r\n    request.dst_hdr.nla_len = sizeof(nlattr) + dst_data_len;\r\n\r\n    if (send(sock, &request, request.hdr.nlmsg_len, 0) != request.hdr.nlmsg_len) {\r\n        fprintf(stderr, \"send() failed to send %u bytes\\n\", request.hdr.nlmsg_len);\r\n        close(sock);\r\n        return;\r\n    }\r\n\r\n    // Receive response.\r\n\r\n    char response[4096];\r\n    ssize_t response_len;\r\n    do {\r\n        response_len = recv(sock, response, sizeof(response), 0);\r\n    } while (response_len < 0 && (errno == EINTR || errno == EAGAIN));\r\n    if (response_len < 0) {\r\n        fprintf(stderr, \"recv(): %s\\n\", strerror(errno));\r\n        close(sock);\r\n        return;\r\n    }\r\n\r\n    for (nlmsghdr *hdr = (nlmsghdr*)response; NLMSG_OK(hdr, response_len); hdr = NLMSG_NEXT(hdr, response_len)) {\r\n        rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\r\n        int remaining_len = RTM_PAYLOAD(hdr);\r\n\r\n        // Iterate over the attributes.\r\n        rtattr* rta_gateway = nullptr;\r\n        int scope_id = 0;\r\n        for (rtattr *attr = RTM_RTA(r); RTA_OK(attr, remaining_len); attr = RTA_NEXT(attr, remaining_len)) {\r\n            if (attr->rta_type == RTA_GATEWAY) {\r\n                rta_gateway = attr;\r\n            } else if (attr->rta_type == RTA_OIF) {\r\n                assert(sizeof(int) == RTA_PAYLOAD(attr));\r\n                memcpy(&scope_id, RTA_DATA(attr), sizeof(scope_id));\r\n            }\r\n        }\r\n\r\n        // Found gateway?\r\n        if (rta_gateway != nullptr) {\r\n            char buf[256];\r\n            printf(\"%s gateway: %s\",\r\n                   family == AF_INET ? \"IPv4\" : \"IPv6\",\r\n                   inet_ntop(r->rtm_family, RTA_DATA(rta_gateway), buf, sizeof(buf)));\r\n            if (family == AF_INET6) {\r\n                printf(\", scope id: %d\\n\", scope_id);\r\n            } else {\r\n                printf(\"\\n\");\r\n            }\r\n        }\r\n    }\r\n\r\n    close(sock);\r\n}\r\n\r\nint main(int argc, char** argv)\r\n{\r\n    QueryDefaultGateway(AF_INET);\r\n    QueryDefaultGateway(AF_INET6);\r\n    return 0;\r\n}\r\n```\r\n</details>\r\n\r\nIdeally the `#ifdef __linux__` / `#ifdef __FreeBSD__` parts should not be needed. I am not sure if this is due to the above program doing something wrong or is due to a difference in Linux vs FreeBSD implementations. @AlexanderChernikov, @markjdb, any ideas?",
      "commit_id" : "841deffd44d7a78452deab39adadbf991249128a",
      "created_at" : "2024-05-17T09:30:22Z",
      "diff_hunk" : "@@ -0,0 +1,116 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <config/bitcoin-config.h> // IWYU pragma: keep\n+\n+#include <util/netif.h>\n+\n+#include <logging.h>\n+#include <netbase.h>\n+#include <util/readwritefile.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+#ifdef HAVE_LINUX_ROUTE_H\n+\n+#include <linux/route.h>\n+\n+std::optional<CNetAddr> QueryDefaultGateway(Network network)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1604635967",
      "id" : 1604635967,
      "in_reply_to_id" : 1603565742,
      "line" : 24,
      "node_id" : "PRRC_kwDOABII585fpM0_",
      "original_commit_id" : "39933a53f3a3d29cfebd8252a9b4ddcb48d3965c",
      "original_line" : 19,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/util/netif.cpp",
      "position" : 24,
      "pull_request_review_id" : 2062804021,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 1,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1604635967/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-17T09:30:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1604635967",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1604672913"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1604672913"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I realized that in the IPv4 case this would send the trailing 16-4=12 bytes from `request.dst_data[]`. This seems harmless, but better send exactly what's needed:\r\n\r\n```suggestion\r\n    if (sock.Send(&request, request.hdr.nlmsg_len, 0) != request.hdr.nlmsg_len) {\r\n        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"send() to netlink socket: %s\\n\", SysErrorString(errno));\r\n```\r\n\r\nAlso, I am not sure if we should worry about partial writes with netlink sockets, maybe the send can be interrupted? There is a convenience method `Sock::SendComplete()`:\r\n\r\n```cc\r\n    try {\r\n        CThreadInterrupt intr;\r\n        sock.SendComplete(Span{reinterpret_cast<const unsigned char*>(&request), request.hdr.nlmsg_len}, 5s, intr);\r\n    } catch (const std::runtime_error& e) {\r\n        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"writing to netlink socket: %s\\n\", e.what());\r\n        return std::nullopt;\r\n    }\r\n```",
      "commit_id" : "841deffd44d7a78452deab39adadbf991249128a",
      "created_at" : "2024-05-17T09:56:08Z",
      "diff_hunk" : "@@ -0,0 +1,206 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <config/bitcoin-config.h> // IWYU pragma: keep\n+\n+#include <util/netif.h>\n+\n+#include <logging.h>\n+#include <netbase.h>\n+#include <util/check.h>\n+#include <util/sock.h>\n+#include <util/syserror.h>\n+\n+#if defined(__linux__) || defined(__FreeBSD__)\n+\n+#if defined(__linux__)\n+#include <linux/rtnetlink.h>\n+#elif defined(__FreeBSD__)\n+#include <netlink/netlink.h>\n+#include <netlink/netlink_route.h>\n+#endif\n+\n+std::optional<CNetAddr> QueryDefaultGateway(Network network)\n+{\n+    Assume(network == NET_IPV4 || network == NET_IPV6);\n+\n+    // Create a netlink socket.\n+    const int s{socket(AF_NETLINK, SOCK_DGRAM, NETLINK_ROUTE)};\n+    if (s < 0) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"socket(AF_NETLINK): %s\\n\", SysErrorString(errno));\n+        return std::nullopt;\n+    }\n+    Sock sock{static_cast<SOCKET>(s)};\n+\n+    // Send request.\n+    struct {\n+        nlmsghdr hdr; ///< Request header.\n+        rtmsg data; ///< Request data, a \"route message\".\n+        nlattr dst_hdr; ///< One attribute, conveying the route destination address.\n+        char dst_data[16]; ///< Route destination address. To query the default route we use 0.0.0.0/0 or [::]/0. For IPv4 the first 4 bytes are used.\n+    } request{};\n+\n+    // Whether to use the first 4 or 16 bytes from request.attr_dst_data.\n+    const size_t dst_data_len = network == NET_IPV4 ? 4 : 16;\n+\n+    request.hdr.nlmsg_type = RTM_GETROUTE;\n+    request.hdr.nlmsg_flags = NLM_F_REQUEST;\n+#ifdef __linux__\n+    request.hdr.nlmsg_flags |= NLM_F_DUMP;\n+#endif\n+    request.hdr.nlmsg_len = NLMSG_LENGTH(sizeof(rtmsg) + sizeof(nlattr) + dst_data_len);\n+    request.hdr.nlmsg_seq = 0; // Sequence number, used to match which reply is to which request. Irrelevant for us because we send just one request.\n+    request.data.rtm_family = network == NET_IPV4 ? AF_INET : AF_INET6;\n+    request.data.rtm_dst_len = 0; // Prefix length.\n+#ifdef __FreeBSD__\n+    request.data.rtm_flags = RTM_F_PREFIX;\n+#endif\n+    request.dst_hdr.nla_type = RTA_DST;\n+    request.dst_hdr.nla_len = sizeof(nlattr) + dst_data_len;\n+\n+    if (sock.Send(&request, sizeof(request), 0) != sizeof(request)) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"send() to netlink socket: %s\\n\", SysErrorString(errno));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1604672913",
      "id" : 1604672913,
      "line" : 63,
      "node_id" : "PRRC_kwDOABII585fpV2R",
      "original_commit_id" : "841deffd44d7a78452deab39adadbf991249128a",
      "original_line" : 63,
      "original_position" : 63,
      "original_start_line" : 62,
      "path" : "src/util/netif.cpp",
      "position" : 63,
      "pull_request_review_id" : 2062857416,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1604672913/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 62,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-17T09:56:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1604672913",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1604736981"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1604736981"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's a datagram (packet socket), so *partial* writes and reads cannot happen. Every send is interpreted as a new packet. Using `SendComplete` would be a bug.\r\n\r\nTruncated and corrupted packets could happen in the case of UDP, but as NETLINK is a communication interface with the kernel, that would be rare. No retries are needed. Would still want to detect it and error out gracefully, though, for robustness.\r\n\r\n> I realized that in the IPv4 case this would send the trailing 16-4=12 bytes from request.dst_data[]. This seems harmless, but better send exactly what's needed\r\n\r\nAgreed, will change that.",
      "commit_id" : "841deffd44d7a78452deab39adadbf991249128a",
      "created_at" : "2024-05-17T10:32:41Z",
      "diff_hunk" : "@@ -0,0 +1,206 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <config/bitcoin-config.h> // IWYU pragma: keep\n+\n+#include <util/netif.h>\n+\n+#include <logging.h>\n+#include <netbase.h>\n+#include <util/check.h>\n+#include <util/sock.h>\n+#include <util/syserror.h>\n+\n+#if defined(__linux__) || defined(__FreeBSD__)\n+\n+#if defined(__linux__)\n+#include <linux/rtnetlink.h>\n+#elif defined(__FreeBSD__)\n+#include <netlink/netlink.h>\n+#include <netlink/netlink_route.h>\n+#endif\n+\n+std::optional<CNetAddr> QueryDefaultGateway(Network network)\n+{\n+    Assume(network == NET_IPV4 || network == NET_IPV6);\n+\n+    // Create a netlink socket.\n+    const int s{socket(AF_NETLINK, SOCK_DGRAM, NETLINK_ROUTE)};\n+    if (s < 0) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"socket(AF_NETLINK): %s\\n\", SysErrorString(errno));\n+        return std::nullopt;\n+    }\n+    Sock sock{static_cast<SOCKET>(s)};\n+\n+    // Send request.\n+    struct {\n+        nlmsghdr hdr; ///< Request header.\n+        rtmsg data; ///< Request data, a \"route message\".\n+        nlattr dst_hdr; ///< One attribute, conveying the route destination address.\n+        char dst_data[16]; ///< Route destination address. To query the default route we use 0.0.0.0/0 or [::]/0. For IPv4 the first 4 bytes are used.\n+    } request{};\n+\n+    // Whether to use the first 4 or 16 bytes from request.attr_dst_data.\n+    const size_t dst_data_len = network == NET_IPV4 ? 4 : 16;\n+\n+    request.hdr.nlmsg_type = RTM_GETROUTE;\n+    request.hdr.nlmsg_flags = NLM_F_REQUEST;\n+#ifdef __linux__\n+    request.hdr.nlmsg_flags |= NLM_F_DUMP;\n+#endif\n+    request.hdr.nlmsg_len = NLMSG_LENGTH(sizeof(rtmsg) + sizeof(nlattr) + dst_data_len);\n+    request.hdr.nlmsg_seq = 0; // Sequence number, used to match which reply is to which request. Irrelevant for us because we send just one request.\n+    request.data.rtm_family = network == NET_IPV4 ? AF_INET : AF_INET6;\n+    request.data.rtm_dst_len = 0; // Prefix length.\n+#ifdef __FreeBSD__\n+    request.data.rtm_flags = RTM_F_PREFIX;\n+#endif\n+    request.dst_hdr.nla_type = RTA_DST;\n+    request.dst_hdr.nla_len = sizeof(nlattr) + dst_data_len;\n+\n+    if (sock.Send(&request, sizeof(request), 0) != sizeof(request)) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"send() to netlink socket: %s\\n\", SysErrorString(errno));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1604736981",
      "id" : 1604736981,
      "in_reply_to_id" : 1604672913,
      "line" : 63,
      "node_id" : "PRRC_kwDOABII585fplfV",
      "original_commit_id" : "841deffd44d7a78452deab39adadbf991249128a",
      "original_line" : 63,
      "original_position" : 63,
      "original_start_line" : 62,
      "path" : "src/util/netif.cpp",
      "position" : 63,
      "pull_request_review_id" : 2062948610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1604736981/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 62,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-17T10:35:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1604736981",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Do we have any information about real-world deployment of PCP vs NAT-PMP? I see PCP dates from 2013, but do we know if it was adopted immediately (and/or, how many older routing devices are in common use)?\r\n\r\nRFC 6887 Appendix A explains how one can be compatible with both, though I don't know how much work it would be to implement.",
      "created_at" : "2024-05-17T14:11:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2117698802",
      "id" : 2117698802,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII585-OYTy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2117698802/reactions"
      },
      "updated_at" : "2024-05-17T14:11:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2117698802",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "i have no idea, also no idea how to get that information; to be honest if we can remotely avoid it, i'd prefer not to implement unnecessary compatibility stuff, with the added complexity that entails, this is already a lot to ask people to review as-is.",
      "created_at" : "2024-05-17T14:22:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2117723501",
      "id" : 2117723501,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII585-OeVt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2117723501/reactions"
      },
      "updated_at" : "2024-05-17T14:23:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2117723501",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj Yeah, fair enough. Absent any reports of \"doesn't work on my router while nat-pmp worked\" (which we're quite unlikely to get) there is really no way to assess that.",
      "created_at" : "2024-05-17T14:28:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2117736423",
      "id" : 2117736423,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII585-Ohfn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2117736423/reactions"
      },
      "updated_at" : "2024-05-17T14:28:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2117736423",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Yeah, fair enough. Absent any reports of \"doesn't work on my router while nat-pmp worked\" (which we're quite unlikely to get) there is really no way to assess that.\r\n\r\nFor what it's worth, initial support for PCP was added in miniupnpd in [2013](https://github.com/miniupnp/miniupnp/commit/9e1ffd5cd9836053cfd83d95014c729ad0e36872). So the implementation wasn't lagging much behind the standard. Of course, not all routers use miniupnpd but it's extremely common.\r\n\r\nIf we get reports like that, we can decide to re-add NAT-PMP in a similar way as the current code., without reintroducing the dependency. It's not that different, it can share the gateway finding code, for one.",
      "created_at" : "2024-05-17T14:35:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2117749832",
      "id" : 2117749832,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII585-OkxI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2117749832/reactions"
      },
      "updated_at" : "2024-05-17T14:43:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2117749832",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "MacOS implementation of default gateway finding was added as well (i've tested it on MacOS Monterey, but could always use more, especially ARM macs would be interesting). This concludes the coverage of default gateway-finding on the major platforms.",
      "created_at" : "2024-05-18T12:15:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2118804764",
      "id" : 2118804764,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII585-SmUc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2118804764/reactions"
      },
      "updated_at" : "2024-05-18T12:24:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2118804764",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Squashed all fixups into their logical commit. This should be in a good state for review now. The only TODO that is left to do is the Qt settings migration (so that if the user had enabled `natpmp`, `pcp` will now be enabled), i could use some help with that because i don't really know the new mechanism.",
      "created_at" : "2024-05-19T08:09:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2119145090",
      "id" : 2119145090,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII585-T5aC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2119145090/reactions"
      },
      "updated_at" : "2024-05-19T08:10:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2119145090",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Trying this with `-pcp=1` on my home internet connection:\r\n```\r\n2024-05-20T23:28:41.625432Z [net] pcp: gateway [IPv4]: 192.168.1.1\r\n2024-05-20T23:28:41.625469Z [net] pcp: Requesting port mapping for addr 0.0.0.0 port 8333 from gateway 192.168.1.1\r\n2024-05-20T23:28:41.625529Z [net] pcp: Internal address after connect: 192.168.1.254\r\n2024-05-20T23:28:41.626388Z [net] pcp: Received response of 8 bytes: 008100010046cfb7\r\n2024-05-20T23:28:41.626404Z [net:warning] pcp: Response too small\r\n2024-05-20T23:28:42.627214Z [net] pcp: Timeout\r\n2024-05-20T23:28:42.627258Z [net] pcp: Retrying (1)\r\n2024-05-20T23:28:42.627870Z [net] pcp: Received response of 8 bytes: 008100010046cfb8\r\n2024-05-20T23:28:42.627901Z [net:warning] pcp: Response too small\r\n2024-05-20T23:28:43.628167Z [net] pcp: Timeout\r\n2024-05-20T23:28:43.628228Z [net] pcp: Retrying (2)\r\n2024-05-20T23:28:43.628976Z [net] pcp: Received response of 8 bytes: 008100010046cfb9\r\n2024-05-20T23:28:43.628999Z [net:warning] pcp: Response too small\r\n2024-05-20T23:28:44.629173Z [net] pcp: Timeout\r\n2024-05-20T23:28:44.629225Z [net] pcp: Giving up after 3 tries\r\n2024-05-20T23:28:44.632097Z [net] pcp: Could not determine IPv6 default gateway\r\n```\r\n",
      "created_at" : "2024-05-20T23:32:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2121393948",
      "id" : 2121393948,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII585-cecc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2121393948/reactions"
      },
      "updated_at" : "2024-05-20T23:32:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2121393948",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Trying this with -pcp=1 on my home internet connection:\r\n\r\nThanks for testing!\r\nThe received packet is not a valid PCP response (too short). But interpreting it as one anyway, the version byte is 0x00, result code is 0x01 (UNSUPP_VERSION). So you might have one of those routers that supports NAT-PMP only.",
      "created_at" : "2024-05-21T07:47:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2121977231",
      "id" : 2121977231,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII585-es2P",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2121977231/reactions"
      },
      "updated_at" : "2024-05-21T07:47:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2121977231",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj This is a router provided by Verizon (a large US ISP) in 2021.",
      "created_at" : "2024-05-21T11:44:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2122446973",
      "id" : 2122446973,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII585-gfh9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2122446973/reactions"
      },
      "updated_at" : "2024-05-21T11:44:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2122446973",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> @laanwj This is a router provided by Verizon (a large US ISP) in 2021.\r\n\r\nThat's curious, especially as NAT-PMP doesn't have any IPv6 support. i'm assuming you don't have any output for IPv6?",
      "created_at" : "2024-05-21T12:39:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2122543090",
      "id" : 2122543090,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII585-g2_y",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2122543090/reactions"
      },
      "updated_at" : "2024-05-21T12:39:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2122543090",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds (on x86_64) [untrusted test-only build, possibly unsafe, not for production use]\n\n| File | commit a786fd2041913d82ca90b561de309421bd24e41b<br>(master) | commit 7718a5c42f086b7c78000770a68170ff83c79038<br>(master and this pull) |\n|--|--|--|\n| SHA256SUMS.part | [`14f282b5bf7ebcd4...`](https://drahtbot.space/guix/bitcoin/bitcoin/a786fd2041913d82ca90b561de309421bd24e41b/SHA256SUMS.part) | [`bde34ea3844bc5a1...`](https://drahtbot.space/guix/bitcoin/bitcoin/7718a5c42f086b7c78000770a68170ff83c79038/SHA256SUMS.part) |\n| *-aarch64-linux-gnu-debug.tar.gz | [`b2364625629230d1...`](https://drahtbot.space/guix/bitcoin/bitcoin/a786fd2041913d82ca90b561de309421bd24e41b/bitcoin-a786fd204191-aarch64-linux-gnu-debug.tar.gz) | [`0ddcad066c06e5b5...`](https://drahtbot.space/guix/bitcoin/bitcoin/7718a5c42f086b7c78000770a68170ff83c79038/bitcoin-7718a5c42f08-aarch64-linux-gnu-debug.tar.gz) |\n| *-aarch64-linux-gnu.tar.gz | [`b05fc0561baa0966...`](https://drahtbot.space/guix/bitcoin/bitcoin/a786fd2041913d82ca90b561de309421bd24e41b/bitcoin-a786fd204191-aarch64-linux-gnu.tar.gz) | [`cefac02d8a5e9782...`](https://drahtbot.space/guix/bitcoin/bitcoin/7718a5c42f086b7c78000770a68170ff83c79038/bitcoin-7718a5c42f08-aarch64-linux-gnu.tar.gz) |\n| *-arm-linux-gnueabihf-debug.tar.gz | [`4545637daf89882c...`](https://drahtbot.space/guix/bitcoin/bitcoin/a786fd2041913d82ca90b561de309421bd24e41b/bitcoin-a786fd204191-arm-linux-gnueabihf-debug.tar.gz) | [`391b99ffa321ccd8...`](https://drahtbot.space/guix/bitcoin/bitcoin/7718a5c42f086b7c78000770a68170ff83c79038/bitcoin-7718a5c42f08-arm-linux-gnueabihf-debug.tar.gz) |\n| *-arm-linux-gnueabihf.tar.gz | [`27115f4c7e251175...`](https://drahtbot.space/guix/bitcoin/bitcoin/a786fd2041913d82ca90b561de309421bd24e41b/bitcoin-a786fd204191-arm-linux-gnueabihf.tar.gz) | [`46f4d4ec47bc6a05...`](https://drahtbot.space/guix/bitcoin/bitcoin/7718a5c42f086b7c78000770a68170ff83c79038/bitcoin-7718a5c42f08-arm-linux-gnueabihf.tar.gz) |\n| *-arm64-apple-darwin-unsigned.tar.gz | [`cf3950f9d05fb1c0...`](https://drahtbot.space/guix/bitcoin/bitcoin/a786fd2041913d82ca90b561de309421bd24e41b/bitcoin-a786fd204191-arm64-apple-darwin-unsigned.tar.gz) | [`436221ec28ee31a4...`](https://drahtbot.space/guix/bitcoin/bitcoin/7718a5c42f086b7c78000770a68170ff83c79038/bitcoin-7718a5c42f08-arm64-apple-darwin-unsigned.tar.gz) |\n| *-arm64-apple-darwin-unsigned.zip | [`b1c32e004722a3b4...`](https://drahtbot.space/guix/bitcoin/bitcoin/a786fd2041913d82ca90b561de309421bd24e41b/bitcoin-a786fd204191-arm64-apple-darwin-unsigned.zip) | [`8c509e13ed24a312...`](https://drahtbot.space/guix/bitcoin/bitcoin/7718a5c42f086b7c78000770a68170ff83c79038/bitcoin-7718a5c42f08-arm64-apple-darwin-unsigned.zip) |\n| *-arm64-apple-darwin.tar.gz | [`f09a38acef4b141b...`](https://drahtbot.space/guix/bitcoin/bitcoin/a786fd2041913d82ca90b561de309421bd24e41b/bitcoin-a786fd204191-arm64-apple-darwin.tar.gz) | [`b769aecd340fd798...`](https://drahtbot.space/guix/bitcoin/bitcoin/7718a5c42f086b7c78000770a68170ff83c79038/bitcoin-7718a5c42f08-arm64-apple-darwin.tar.gz) |\n| *-powerpc64-linux-gnu-debug.tar.gz | [`75cfe8d73120b00d...`](https://drahtbot.space/guix/bitcoin/bitcoin/a786fd2041913d82ca90b561de309421bd24e41b/bitcoin-a786fd204191-powerpc64-linux-gnu-debug.tar.gz) | [`feb0c0e88628b733...`](https://drahtbot.space/guix/bitcoin/bitcoin/7718a5c42f086b7c78000770a68170ff83c79038/bitcoin-7718a5c42f08-powerpc64-linux-gnu-debug.tar.gz) |\n| *-powerpc64-linux-gnu.tar.gz | [`d4f8c1296886fac4...`](https://drahtbot.space/guix/bitcoin/bitcoin/a786fd2041913d82ca90b561de309421bd24e41b/bitcoin-a786fd204191-powerpc64-linux-gnu.tar.gz) | [`2588795e780f8e6c...`](https://drahtbot.space/guix/bitcoin/bitcoin/7718a5c42f086b7c78000770a68170ff83c79038/bitcoin-7718a5c42f08-powerpc64-linux-gnu.tar.gz) |\n| *-riscv64-linux-gnu-debug.tar.gz | [`a8f56aee14e85f29...`](https://drahtbot.space/guix/bitcoin/bitcoin/a786fd2041913d82ca90b561de309421bd24e41b/bitcoin-a786fd204191-riscv64-linux-gnu-debug.tar.gz) | [`2d8829895961918e...`](https://drahtbot.space/guix/bitcoin/bitcoin/7718a5c42f086b7c78000770a68170ff83c79038/bitcoin-7718a5c42f08-riscv64-linux-gnu-debug.tar.gz) |\n| *-riscv64-linux-gnu.tar.gz | [`d8a4ae4295e6aa9f...`](https://drahtbot.space/guix/bitcoin/bitcoin/a786fd2041913d82ca90b561de309421bd24e41b/bitcoin-a786fd204191-riscv64-linux-gnu.tar.gz) | [`94779be512d355c9...`](https://drahtbot.space/guix/bitcoin/bitcoin/7718a5c42f086b7c78000770a68170ff83c79038/bitcoin-7718a5c42f08-riscv64-linux-gnu.tar.gz) |\n| *-x86_64-apple-darwin-unsigned.tar.gz | [`ff9ae232120c85f9...`](https://drahtbot.space/guix/bitcoin/bitcoin/a786fd2041913d82ca90b561de309421bd24e41b/bitcoin-a786fd204191-x86_64-apple-darwin-unsigned.tar.gz) | [`295c1ee6c4dc4526...`](https://drahtbot.space/guix/bitcoin/bitcoin/7718a5c42f086b7c78000770a68170ff83c79038/bitcoin-7718a5c42f08-x86_64-apple-darwin-unsigned.tar.gz) |\n| *-x86_64-apple-darwin-unsigned.zip | [`9917159a6fd59954...`](https://drahtbot.space/guix/bitcoin/bitcoin/a786fd2041913d82ca90b561de309421bd24e41b/bitcoin-a786fd204191-x86_64-apple-darwin-unsigned.zip) | [`9c28f7151880f1f4...`](https://drahtbot.space/guix/bitcoin/bitcoin/7718a5c42f086b7c78000770a68170ff83c79038/bitcoin-7718a5c42f08-x86_64-apple-darwin-unsigned.zip) |\n| *-x86_64-apple-darwin.tar.gz | [`61112274cace86c4...`](https://drahtbot.space/guix/bitcoin/bitcoin/a786fd2041913d82ca90b561de309421bd24e41b/bitcoin-a786fd204191-x86_64-apple-darwin.tar.gz) | [`27bf6a03f1abce44...`](https://drahtbot.space/guix/bitcoin/bitcoin/7718a5c42f086b7c78000770a68170ff83c79038/bitcoin-7718a5c42f08-x86_64-apple-darwin.tar.gz) |\n| *-x86_64-linux-gnu-debug.tar.gz | [`557d05bc585a2910...`](https://drahtbot.space/guix/bitcoin/bitcoin/a786fd2041913d82ca90b561de309421bd24e41b/bitcoin-a786fd204191-x86_64-linux-gnu-debug.tar.gz) | [`36db8ad04f331f36...`](https://drahtbot.space/guix/bitcoin/bitcoin/7718a5c42f086b7c78000770a68170ff83c79038/bitcoin-7718a5c42f08-x86_64-linux-gnu-debug.tar.gz) |\n| *-x86_64-linux-gnu.tar.gz | [`4928355769a494d7...`](https://drahtbot.space/guix/bitcoin/bitcoin/a786fd2041913d82ca90b561de309421bd24e41b/bitcoin-a786fd204191-x86_64-linux-gnu.tar.gz) | [`5365b31596e65699...`](https://drahtbot.space/guix/bitcoin/bitcoin/7718a5c42f086b7c78000770a68170ff83c79038/bitcoin-7718a5c42f08-x86_64-linux-gnu.tar.gz) |\n| *.tar.gz | [`49c2acd89613cf65...`](https://drahtbot.space/guix/bitcoin/bitcoin/a786fd2041913d82ca90b561de309421bd24e41b/bitcoin-a786fd204191.tar.gz) | [`51524f7ae096c36f...`](https://drahtbot.space/guix/bitcoin/bitcoin/7718a5c42f086b7c78000770a68170ff83c79038/bitcoin-7718a5c42f08.tar.gz) |\n| guix_build.log | [`88d5371b29f8bb75...`](https://drahtbot.space/guix/bitcoin/bitcoin/a786fd2041913d82ca90b561de309421bd24e41b/guix_build.log) | [`d18448a1f3d9cc20...`](https://drahtbot.space/guix/bitcoin/bitcoin/7718a5c42f086b7c78000770a68170ff83c79038/guix_build.log) |\n| guix_build.log.diff |  | [`3207cbd48d885913...`](https://drahtbot.space/guix/bitcoin/bitcoin/7718a5c42f086b7c78000770a68170ff83c79038/guix_build.log.diff) |\n\n",
      "created_at" : "2024-05-22T05:55:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2123920625",
      "id" : 2123920625,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII585-mHTx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2123920625/reactions"
      },
      "updated_at" : "2024-05-22T05:55:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2123920625",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The only TODO that is left to do is the Qt settings migration \r\n\r\nAvoiding this complexity is another reason to add a NAT-PMP fallback, then we'd be right to keep the option named the same and only change the descriptions.",
      "created_at" : "2024-05-22T09:04:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2124254747",
      "id" : 2124254747,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII585-nY4b",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2124254747/reactions"
      },
      "updated_at" : "2024-05-22T09:04:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2124254747",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Avoiding this complexity is another reason to add a NAT-PMP fallback, then we'd be right to keep the option named the same and only change the descriptions.\r\n\r\nIf you think such a fallback is easier than dealing with QT settings migration :-)\r\n\r\nWe can just sort them PCP, NAT-PMP, UPNP in the GUI. If we also add the word \"recommended\" to PCP, it should mitigate choice-paralysis. Then in the future we can add a little green dot to indicate that it actually works.\r\n\r\nI can test on Windows, (Intel) macOS and Linux.",
      "created_at" : "2024-05-22T10:47:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2124488325",
      "id" : 2124488325,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII585-oR6F",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2124488325/reactions"
      },
      "updated_at" : "2024-05-22T10:47:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2124488325",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> If you think such a fallback is easier than dealing with QT settings migration :-)\r\n\r\nYes. It also avoids having to rename the command-line option. It would make the new code a drop-in replacement that also supports IPv6, no change for users.\r\n\r\nIt's a matter of handling UNSUPP_VERSION packets (the one @sipa gets), then re-trying through NAT-PMP, for IPv4. i'm already halfway implementing it.\r\n\r\n(see https://datatracker.ietf.org/doc/html/rfc6886#section-3.5 and https://datatracker.ietf.org/doc/html/rfc6887#appendix-A)",
      "created_at" : "2024-05-22T11:34:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30043#issuecomment-2124574440",
      "id" : 2124574440,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30043",
      "node_id" : "IC_kwDOABII585-om7o",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2124574440/reactions"
      },
      "updated_at" : "2024-05-22T11:46:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2124574440",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
