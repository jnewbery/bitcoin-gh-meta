[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30118).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "created_at" : "2024-05-15T20:58:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30118#issuecomment-2113445276",
      "id" : 2113445276,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30118",
      "node_id" : "IC_kwDOABII5859-J2c",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2113445276/reactions"
      },
      "updated_at" : "2024-05-15T20:58:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2113445276",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1603491415"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603491415"
         }
      },
      "author_association" : "NONE",
      "body" : "Looking at the sample output of `subversion` - `\"subversion\": \"\\/Satoshi:25.1.0\\/\"`, it doesn't seem unique enough because multiple nodes can be running the same version. Won't this cause issues in `find_conn` later?\r\n\r\nhttps://chainquery.com/bitcoin-cli/getnetworkinfo",
      "commit_id" : "59ba8735102aebd456bb9dc831759c82e95763c0",
      "created_at" : "2024-05-16T14:31:16Z",
      "diff_hunk" : "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1603491415",
      "id" : 1603491415,
      "line" : 630,
      "node_id" : "PRRC_kwDOABII585fk1ZX",
      "original_commit_id" : "59ba8735102aebd456bb9dc831759c82e95763c0",
      "original_line" : 630,
      "original_position" : 15,
      "original_start_line" : 629,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 15,
      "pull_request_review_id" : 2060988698,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603491415/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 629,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-16T14:37:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603491415",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5960750?v=4",
         "events_url" : "https://api.github.com/users/rkrux/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rkrux/followers",
         "following_url" : "https://api.github.com/users/rkrux/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rkrux/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rkrux",
         "id" : 5960750,
         "login" : "rkrux",
         "node_id" : "MDQ6VXNlcjU5NjA3NTA=",
         "organizations_url" : "https://api.github.com/users/rkrux/orgs",
         "received_events_url" : "https://api.github.com/users/rkrux/received_events",
         "repos_url" : "https://api.github.com/users/rkrux/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rkrux/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rkrux/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rkrux"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1603498152"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603498152"
         }
      },
      "author_association" : "NONE",
      "body" : "`find_conn(from_connection, to_connection_subver, inbound=False)`\r\n\r\nMight as well make these calls once and store in variable instead of finding 3 times? Unless I'm missing something that requires these calls to be made every time. \r\n",
      "commit_id" : "59ba8735102aebd456bb9dc831759c82e95763c0",
      "created_at" : "2024-05-16T14:35:23Z",
      "diff_hunk" : "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying\n         # See comments in net_processing:\n         # * Must have a version message before anything else\n         # * Must have a verack message before anything else\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in to_connection.getpeerinfo()) == to_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in to_connection.getpeerinfo()) == to_num_peers)\n+        self.wait_until(lambda: find_conn(from_connection, to_connection_subver, inbound=False) is not None)\n+        self.wait_until(lambda: find_conn(to_connection, from_connection_subver, inbound=True) is not None)\n+\n+        self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)\n+        self.wait_until(lambda: (peer := find_conn(to_connection, from_connection_subver, inbound=True)) is not None and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)\n+\n         # The message bytes are counted before processing the message, so make\n         # sure it was fully processed by waiting for a ping.\n-        self.wait_until(lambda: sum(peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29 for peer in to_connection.getpeerinfo()) == to_num_peers)\n+        self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None and peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29)\n+        self.wait_until(lambda: (peer := find_conn(to_connection, from_connection_subver, inbound=True)) is not None and peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1603498152",
      "id" : 1603498152,
      "line" : 649,
      "node_id" : "PRRC_kwDOABII585fk3Co",
      "original_commit_id" : "59ba8735102aebd456bb9dc831759c82e95763c0",
      "original_line" : 649,
      "original_position" : 40,
      "original_start_line" : 648,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 40,
      "pull_request_review_id" : 2060988698,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603498152/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 648,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-16T14:37:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603498152",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5960750?v=4",
         "events_url" : "https://api.github.com/users/rkrux/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rkrux/followers",
         "following_url" : "https://api.github.com/users/rkrux/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rkrux/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rkrux",
         "id" : 5960750,
         "login" : "rkrux",
         "node_id" : "MDQ6VXNlcjU5NjA3NTA=",
         "organizations_url" : "https://api.github.com/users/rkrux/orgs",
         "received_events_url" : "https://api.github.com/users/rkrux/received_events",
         "repos_url" : "https://api.github.com/users/rkrux/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rkrux/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rkrux/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rkrux"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1603654247"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603654247"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Looking at the sample output of `subversion` - `\"subversion\": \"\\/Satoshi:25.1.0\\/\"`, it doesn't seem unique enough because multiple nodes can be running the same version. Won't this cause issues in `find_conn` later?\r\n\r\nThe test framework appends the node number to the user agent string. See [test_node](https://github.com/bitcoin/bitcoin/blob/2f53f2273da020d7fabd7c65a1bc7e69a31249b2/test/functional/test_framework/test_node.py#L109).",
      "commit_id" : "59ba8735102aebd456bb9dc831759c82e95763c0",
      "created_at" : "2024-05-16T16:02:53Z",
      "diff_hunk" : "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1603654247",
      "id" : 1603654247,
      "in_reply_to_id" : 1603491415,
      "line" : 630,
      "node_id" : "PRRC_kwDOABII585fldJn",
      "original_commit_id" : "59ba8735102aebd456bb9dc831759c82e95763c0",
      "original_line" : 630,
      "original_position" : 15,
      "original_start_line" : 629,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 15,
      "pull_request_review_id" : 2061247415,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603654247/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 629,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-16T16:19:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603654247",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1603657305"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603657305"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Might as well make these calls once and store in variable instead of finding 3 times? Unless I'm missing something that requires these calls to be made every time.\r\n\r\nThe code waits until the data arrives. These requires polling for updates.\r\nWe could couple the checks in this way:\r\n```python3\r\n self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None\r\n                                and peer['version'] != 0\r\n                                and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)\r\n```\r\n\r\nBut I'm a ~0 here because it would make debugging harder.",
      "commit_id" : "59ba8735102aebd456bb9dc831759c82e95763c0",
      "created_at" : "2024-05-16T16:05:19Z",
      "diff_hunk" : "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying\n         # See comments in net_processing:\n         # * Must have a version message before anything else\n         # * Must have a verack message before anything else\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in to_connection.getpeerinfo()) == to_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in to_connection.getpeerinfo()) == to_num_peers)\n+        self.wait_until(lambda: find_conn(from_connection, to_connection_subver, inbound=False) is not None)\n+        self.wait_until(lambda: find_conn(to_connection, from_connection_subver, inbound=True) is not None)\n+\n+        self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)\n+        self.wait_until(lambda: (peer := find_conn(to_connection, from_connection_subver, inbound=True)) is not None and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)\n+\n         # The message bytes are counted before processing the message, so make\n         # sure it was fully processed by waiting for a ping.\n-        self.wait_until(lambda: sum(peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29 for peer in to_connection.getpeerinfo()) == to_num_peers)\n+        self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None and peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29)\n+        self.wait_until(lambda: (peer := find_conn(to_connection, from_connection_subver, inbound=True)) is not None and peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1603657305",
      "id" : 1603657305,
      "in_reply_to_id" : 1603498152,
      "line" : 649,
      "node_id" : "PRRC_kwDOABII585fld5Z",
      "original_commit_id" : "59ba8735102aebd456bb9dc831759c82e95763c0",
      "original_line" : 649,
      "original_position" : 40,
      "original_start_line" : 648,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 40,
      "pull_request_review_id" : 2061247415,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603657305/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 648,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-16T16:19:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603657305",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605161357"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605161357"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any reason to have a duplicate `None` check for `peer` at this point? Shouldn't it be enough to have the assert in the second-to-previous line?",
      "commit_id" : "59ba8735102aebd456bb9dc831759c82e95763c0",
      "created_at" : "2024-05-17T15:09:36Z",
      "diff_hunk" : "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying\n         # See comments in net_processing:\n         # * Must have a version message before anything else\n         # * Must have a verack message before anything else\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in to_connection.getpeerinfo()) == to_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in to_connection.getpeerinfo()) == to_num_peers)\n+        self.wait_until(lambda: find_conn(from_connection, to_connection_subver, inbound=False) is not None)\n+        self.wait_until(lambda: find_conn(to_connection, from_connection_subver, inbound=True) is not None)\n+\n+        self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605161357",
      "id" : 1605161357,
      "line" : 643,
      "node_id" : "PRRC_kwDOABII585frNGN",
      "original_commit_id" : "59ba8735102aebd456bb9dc831759c82e95763c0",
      "original_line" : 643,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 32,
      "pull_request_review_id" : 2063691972,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605161357/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-17T15:09:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605161357",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605249634"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605249634"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Any reason to have a duplicate None check for peer at this point? Shouldn't it be enough to have the assert in the second-to-previous line?\r\n\r\nNot sure if I fully grasped the question but if the peer gets disconnected for some reason in-between these two checks, this wait_until call would throw an exception as the code would be trying to use the brackets operator on a `None` value to access the \"bytesrecv_per_msg\" value.",
      "commit_id" : "59ba8735102aebd456bb9dc831759c82e95763c0",
      "created_at" : "2024-05-17T16:09:27Z",
      "diff_hunk" : "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying\n         # See comments in net_processing:\n         # * Must have a version message before anything else\n         # * Must have a verack message before anything else\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in to_connection.getpeerinfo()) == to_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in to_connection.getpeerinfo()) == to_num_peers)\n+        self.wait_until(lambda: find_conn(from_connection, to_connection_subver, inbound=False) is not None)\n+        self.wait_until(lambda: find_conn(to_connection, from_connection_subver, inbound=True) is not None)\n+\n+        self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605249634",
      "id" : 1605249634,
      "in_reply_to_id" : 1605161357,
      "line" : 643,
      "node_id" : "PRRC_kwDOABII585fripi",
      "original_commit_id" : "59ba8735102aebd456bb9dc831759c82e95763c0",
      "original_line" : 643,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 32,
      "pull_request_review_id" : 2063847531,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605249634/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-17T16:09:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605249634",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605724296"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605724296"
         }
      },
      "author_association" : "NONE",
      "body" : "Hmm I see now what you mean.",
      "commit_id" : "59ba8735102aebd456bb9dc831759c82e95763c0",
      "created_at" : "2024-05-18T09:06:44Z",
      "diff_hunk" : "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying\n         # See comments in net_processing:\n         # * Must have a version message before anything else\n         # * Must have a verack message before anything else\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in to_connection.getpeerinfo()) == to_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in to_connection.getpeerinfo()) == to_num_peers)\n+        self.wait_until(lambda: find_conn(from_connection, to_connection_subver, inbound=False) is not None)\n+        self.wait_until(lambda: find_conn(to_connection, from_connection_subver, inbound=True) is not None)\n+\n+        self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)\n+        self.wait_until(lambda: (peer := find_conn(to_connection, from_connection_subver, inbound=True)) is not None and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)\n+\n         # The message bytes are counted before processing the message, so make\n         # sure it was fully processed by waiting for a ping.\n-        self.wait_until(lambda: sum(peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29 for peer in to_connection.getpeerinfo()) == to_num_peers)\n+        self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None and peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29)\n+        self.wait_until(lambda: (peer := find_conn(to_connection, from_connection_subver, inbound=True)) is not None and peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605724296",
      "id" : 1605724296,
      "in_reply_to_id" : 1603498152,
      "line" : 649,
      "node_id" : "PRRC_kwDOABII585ftWiI",
      "original_commit_id" : "59ba8735102aebd456bb9dc831759c82e95763c0",
      "original_line" : 649,
      "original_position" : 40,
      "original_start_line" : 648,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 40,
      "pull_request_review_id" : 2064660139,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605724296/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 648,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-18T09:06:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605724296",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5960750?v=4",
         "events_url" : "https://api.github.com/users/rkrux/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rkrux/followers",
         "following_url" : "https://api.github.com/users/rkrux/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rkrux/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rkrux",
         "id" : 5960750,
         "login" : "rkrux",
         "node_id" : "MDQ6VXNlcjU5NjA3NTA=",
         "organizations_url" : "https://api.github.com/users/rkrux/orgs",
         "received_events_url" : "https://api.github.com/users/rkrux/received_events",
         "repos_url" : "https://api.github.com/users/rkrux/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rkrux/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rkrux/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rkrux"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605724571"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605724571"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sure, but then the test will fail regardless. Might as well fail early, if the peer disconnects again, no?",
      "commit_id" : "59ba8735102aebd456bb9dc831759c82e95763c0",
      "created_at" : "2024-05-18T09:09:20Z",
      "diff_hunk" : "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying\n         # See comments in net_processing:\n         # * Must have a version message before anything else\n         # * Must have a verack message before anything else\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in to_connection.getpeerinfo()) == to_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in to_connection.getpeerinfo()) == to_num_peers)\n+        self.wait_until(lambda: find_conn(from_connection, to_connection_subver, inbound=False) is not None)\n+        self.wait_until(lambda: find_conn(to_connection, from_connection_subver, inbound=True) is not None)\n+\n+        self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605724571",
      "id" : 1605724571,
      "in_reply_to_id" : 1605161357,
      "line" : 643,
      "node_id" : "PRRC_kwDOABII585ftWmb",
      "original_commit_id" : "59ba8735102aebd456bb9dc831759c82e95763c0",
      "original_line" : 643,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 32,
      "pull_request_review_id" : 2064660412,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605724571/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-18T09:09:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605724571",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605795010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605795010"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ah ok, yeah. Now we are sync. Pushed. Thanks.",
      "commit_id" : "e9cb1168d144e4f49025b16f472827a9b4e02ca1",
      "created_at" : "2024-05-18T14:03:53Z",
      "diff_hunk" : "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying\n         # See comments in net_processing:\n         # * Must have a version message before anything else\n         # * Must have a verack message before anything else\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in to_connection.getpeerinfo()) == to_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in to_connection.getpeerinfo()) == to_num_peers)\n+        self.wait_until(lambda: find_conn(from_connection, to_connection_subver, inbound=False) is not None)\n+        self.wait_until(lambda: find_conn(to_connection, from_connection_subver, inbound=True) is not None)\n+\n+        self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605795010",
      "id" : 1605795010,
      "in_reply_to_id" : 1605161357,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ftnzC",
      "original_commit_id" : "59ba8735102aebd456bb9dc831759c82e95763c0",
      "original_line" : 643,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 2064765506,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605795010/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-18T14:03:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605795010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605892564"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605892564"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Worth adding a note to the comment?\r\n\r\n```python\r\n        # Use subversion as peer id. Test nodes have their node number appended to the UA\r\n```",
      "commit_id" : "e9cb1168d144e4f49025b16f472827a9b4e02ca1",
      "created_at" : "2024-05-18T20:26:07Z",
      "diff_hunk" : "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605892564",
      "id" : 1605892564,
      "in_reply_to_id" : 1603491415,
      "line" : 630,
      "node_id" : "PRRC_kwDOABII585ft_nU",
      "original_commit_id" : "59ba8735102aebd456bb9dc831759c82e95763c0",
      "original_line" : 630,
      "original_position" : 15,
      "original_start_line" : 629,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 15,
      "pull_request_review_id" : 2064946909,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605892564/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 629,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-18T20:35:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605892564",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1328814?v=4",
         "events_url" : "https://api.github.com/users/AngusP/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AngusP/followers",
         "following_url" : "https://api.github.com/users/AngusP/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AngusP/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AngusP",
         "id" : 1328814,
         "login" : "AngusP",
         "node_id" : "MDQ6VXNlcjEzMjg4MTQ=",
         "organizations_url" : "https://api.github.com/users/AngusP/orgs",
         "received_events_url" : "https://api.github.com/users/AngusP/received_events",
         "repos_url" : "https://api.github.com/users/AngusP/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AngusP/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AngusP/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AngusP"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605893483"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605893483"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This comment now doesn't really make sense to me?\r\n\r\nMaybe\r\n```suggestion\r\n        # wait until peers have completed a version handshake and so match the\r\n        # expected connection subversion\r\n```",
      "commit_id" : "e9cb1168d144e4f49025b16f472827a9b4e02ca1",
      "created_at" : "2024-05-18T20:33:35Z",
      "diff_hunk" : "@@ -627,19 +625,32 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605893483",
      "id" : 1605893483,
      "line" : 636,
      "node_id" : "PRRC_kwDOABII585ft_1r",
      "original_commit_id" : "e9cb1168d144e4f49025b16f472827a9b4e02ca1",
      "original_line" : 636,
      "original_position" : 21,
      "original_start_line" : 635,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 21,
      "pull_request_review_id" : 2064946909,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605893483/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 635,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-18T20:35:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605893483",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1328814?v=4",
         "events_url" : "https://api.github.com/users/AngusP/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AngusP/followers",
         "following_url" : "https://api.github.com/users/AngusP/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AngusP/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AngusP",
         "id" : 1328814,
         "login" : "AngusP",
         "node_id" : "MDQ6VXNlcjEzMjg4MTQ=",
         "organizations_url" : "https://api.github.com/users/AngusP/orgs",
         "received_events_url" : "https://api.github.com/users/AngusP/received_events",
         "repos_url" : "https://api.github.com/users/AngusP/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AngusP/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AngusP/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AngusP"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605903225"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605903225"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> This comment now doesn't really make sense to me?\r\n\r\nWhy? the procedure behavior didn't change.\r\n",
      "commit_id" : "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "created_at" : "2024-05-18T22:06:13Z",
      "diff_hunk" : "@@ -627,19 +625,32 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605903225",
      "id" : 1605903225,
      "in_reply_to_id" : 1605893483,
      "line" : 636,
      "node_id" : "PRRC_kwDOABII585fuCN5",
      "original_commit_id" : "e9cb1168d144e4f49025b16f472827a9b4e02ca1",
      "original_line" : 636,
      "original_position" : 21,
      "original_start_line" : 635,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 21,
      "pull_request_review_id" : 2064954523,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605903225/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 635,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-18T22:07:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605903225",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605903301"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605903301"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Worth adding a note to the comment?\r\n> \r\n> ```python\r\n>         # Use subversion as peer id. Test nodes have their node number appended to the UA\r\n> ```\r\n\r\nsure. Pushed.",
      "commit_id" : "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "created_at" : "2024-05-18T22:07:19Z",
      "diff_hunk" : "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605903301",
      "id" : 1605903301,
      "in_reply_to_id" : 1603491415,
      "line" : 630,
      "node_id" : "PRRC_kwDOABII585fuCPF",
      "original_commit_id" : "59ba8735102aebd456bb9dc831759c82e95763c0",
      "original_line" : 630,
      "original_position" : 15,
      "original_start_line" : 629,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 15,
      "pull_request_review_id" : 2064954603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605903301/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 629,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-18T22:07:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605903301",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1606000057"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606000057"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think just the way it read with the old impl vs the new, \"waiting until we find a peer connection matching some predicate\" rather than \"wait until the peer has a non-zero version\" . But on second thoughts you're right it's not functionally different so disregard my suggestion",
      "commit_id" : "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "created_at" : "2024-05-19T10:33:02Z",
      "diff_hunk" : "@@ -627,19 +625,32 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1606000057",
      "id" : 1606000057,
      "in_reply_to_id" : 1605893483,
      "line" : 636,
      "node_id" : "PRRC_kwDOABII585fuZ25",
      "original_commit_id" : "e9cb1168d144e4f49025b16f472827a9b4e02ca1",
      "original_line" : 636,
      "original_position" : 21,
      "original_start_line" : 635,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 21,
      "pull_request_review_id" : 2065045089,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606000057/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 635,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-19T10:33:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606000057",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1328814?v=4",
         "events_url" : "https://api.github.com/users/AngusP/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AngusP/followers",
         "following_url" : "https://api.github.com/users/AngusP/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AngusP/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AngusP",
         "id" : 1328814,
         "login" : "AngusP",
         "node_id" : "MDQ6VXNlcjEzMjg4MTQ=",
         "organizations_url" : "https://api.github.com/users/AngusP/orgs",
         "received_events_url" : "https://api.github.com/users/AngusP/received_events",
         "repos_url" : "https://api.github.com/users/AngusP/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AngusP/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AngusP/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AngusP"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1606032360"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606032360"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "wondering if we need the inbound check because an inbound and an outbound connection to the same `TestNode` isn't done. or did you keep it for assurance about the connection direction?",
      "commit_id" : "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "created_at" : "2024-05-19T13:26:03Z",
      "diff_hunk" : "@@ -627,19 +625,32 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id. Test nodes have their node number appended to the user agent string\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1606032360",
      "id" : 1606032360,
      "line" : 633,
      "node_id" : "PRRC_kwDOABII585fuhvo",
      "original_commit_id" : "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "original_line" : 633,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 18,
      "pull_request_review_id" : 2065078997,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606032360/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-19T13:35:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606032360",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   }
]
