[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30110).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30214](https://github.com/bitcoin/bitcoin/pull/30214) (refactor: Improve assumeutxo state representation by ryanofsky)\n* [#30186](https://github.com/bitcoin/bitcoin/pull/30186) (fuzz: increase `txorphan` harness stability by marcofleon)\n* [#30116](https://github.com/bitcoin/bitcoin/pull/30116) (p2p: Fill reconciliation sets (Erlay) attempt 2 by sr-gi)\n* [#30111](https://github.com/bitcoin/bitcoin/pull/30111) (locks: introduce mutex for tx download, flush rejection filters on UpdatedBlockTip by glozow)\n* [#30058](https://github.com/bitcoin/bitcoin/pull/30058) (Encapsulate warnings in generalized node::Warnings and remove globals by stickies-v)\n* [#29641](https://github.com/bitcoin/bitcoin/pull/29641) (scripted-diff: Use LogInfo/LogDebug over LogPrintf/LogPrint by maflcko)\n* [#29492](https://github.com/bitcoin/bitcoin/pull/29492) (refactor: Remove redundant definitions by Empact)\n* [#29415](https://github.com/bitcoin/bitcoin/pull/29415) (Broadcast own transactions only via short-lived Tor or I2P connections by vasild)\n* [#27052](https://github.com/bitcoin/bitcoin/pull/27052) (test: rpc: add last block announcement time to getpeerinfo result by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2024-05-15T09:49:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30110#issuecomment-2112063126",
      "id" : 2112063126,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30110",
      "node_id" : "IC_kwDOABII585944aW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2112063126/reactions"
      },
      "updated_at" : "2024-06-01T01:12:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2112063126",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--85328a0da195eb286784d51f73fa0af9-->\n\nð§ At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/24992798939</sub>",
      "created_at" : "2024-05-15T10:56:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30110#issuecomment-2112197018",
      "id" : 2112197018,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30110",
      "node_id" : "IC_kwDOABII58595ZGa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2112197018/reactions"
      },
      "updated_at" : "2024-05-15T10:56:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2112197018",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-05-15T14:29:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30110#issuecomment-2112704874",
      "id" : 2112704874,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30110",
      "node_id" : "IC_kwDOABII58597VFq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2112704874/reactions"
      },
      "updated_at" : "2024-05-15T14:29:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2112704874",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased for #29817 and added a \"ensure we can always download a tx as long as we have 1 good outbound peer\" fuzz test",
      "created_at" : "2024-05-20T10:55:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30110#issuecomment-2120203238",
      "id" : 2120203238,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30110",
      "node_id" : "IC_kwDOABII585-X7vm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2120203238/reactions"
      },
      "updated_at" : "2024-05-20T10:55:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2120203238",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30110#discussion_r1606683947"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30110"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606683947"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Structs that are part of the public interface should probably go into `txdownloadman.h`. Otherwise one needs to include the impl header, e.g. like `txdownloadman.h` does right now, which defeats the purpose of pimpling to some extend.",
      "commit_id" : "b1cc0c3006ca608f9ac3af2c50c4728cbbc07714",
      "created_at" : "2024-05-20T11:55:23Z",
      "diff_hunk" : "@@ -0,0 +1,234 @@\n+// Copyright (c) 2022\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#ifndef BITCOIN_NODE_TXDOWNLOAD_IMPL_H\n+#define BITCOIN_NODE_TXDOWNLOAD_IMPL_H\n+\n+#include <consensus/validation.h>\n+#include <kernel/chain.h>\n+#include <net.h>\n+#include <policy/packages.h>\n+#include <txorphanage.h>\n+#include <txrequest.h>\n+\n+class CTxMemPool;\n+namespace node {\n+/** Maximum number of in-flight transaction requests from a peer. It is not a hard limit, but the threshold at which\n+ *  point the OVERLOADED_PEER_TX_DELAY kicks in. */\n+static constexpr int32_t MAX_PEER_TX_REQUEST_IN_FLIGHT = 100;\n+/** Maximum number of transactions to consider for requesting, per peer. It provides a reasonable DoS limit to\n+ *  per-peer memory usage spent on announcements, while covering peers continuously sending INVs at the maximum\n+ *  rate (by our own policy, see INVENTORY_BROADCAST_PER_SECOND) for several minutes, while not receiving\n+ *  the actual transaction (from any peer) in response to requests for them. */\n+static constexpr int32_t MAX_PEER_TX_ANNOUNCEMENTS = 5000;\n+/** How long to delay requesting transactions via txids, if we have wtxid-relaying peers */\n+static constexpr auto TXID_RELAY_DELAY{2s};\n+/** How long to delay requesting transactions from non-preferred peers */\n+static constexpr auto NONPREF_PEER_TX_DELAY{2s};\n+/** How long to delay requesting transactions from overloaded peers (see MAX_PEER_TX_REQUEST_IN_FLIGHT). */\n+static constexpr auto OVERLOADED_PEER_TX_DELAY{2s};\n+/** How long to wait before downloading a transaction from an additional peer */\n+static constexpr auto GETDATA_TX_INTERVAL{60s};\n+struct TxDownloadOptions {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30110#discussion_r1606683947",
      "id" : 1606683947,
      "line" : 32,
      "node_id" : "PRRC_kwDOABII585fxA0r",
      "original_commit_id" : "b1cc0c3006ca608f9ac3af2c50c4728cbbc07714",
      "original_line" : 32,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/node/txdownload_impl.h",
      "position" : 32,
      "pull_request_review_id" : 2066059450,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30110",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606683947/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-20T12:32:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606683947",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30110#discussion_r1606717505"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30110"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606717505"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Iiuc correctly, clearing the filters here has been removed as we don't want `TxDownloadManager` to depend on `ChainstateManager`.\r\n\r\nAn alternative to the new synchronous validation interface callback could be to preserve the previous behavior (clearing the filters in `AlreadyHaveTx` on a tip change) by introducing an interface for TxDownloadMan to fetch the latest tip hash. For example, `TxDownloadOptions` could be extended to hold a lambda that returns the latest tip hash, which in production simply fetches the hash from the `ChainstateManager` (and for tests it can be mocked). This might be easier to review since it preserves the previous mechanism? Although perhaps also more difficult w.r.t to lock inversion of `cs_main` and `m_tx_download_mutex`.\r\n\r\nAnother alternative could be to directly pass the current block hash as a param into the relevant `TxDownloadManager` methods.",
      "commit_id" : "b1cc0c3006ca608f9ac3af2c50c4728cbbc07714",
      "created_at" : "2024-05-20T12:29:29Z",
      "diff_hunk" : "@@ -0,0 +1,455 @@\n+// Copyright (c) 2023\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/txdownload_impl.h>\n+\n+#include <chain.h>\n+#include <consensus/validation.h>\n+#include <logging.h>\n+#include <txmempool.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+namespace node {\n+void TxDownloadImpl::UpdatedBlockTipSync()\n+{\n+    // If the chain tip has changed, previously rejected transactions might now be invalid, e.g. due\n+    // to a timelock. Reset the rejection filters to give those transactions another chance if we\n+    // see them again.\n+    m_recent_rejects.reset();\n+    m_recent_rejects_reconsiderable.reset();\n+}\n+\n+void TxDownloadImpl::BlockConnected(const std::shared_ptr<const CBlock>& pblock)\n+{\n+    m_orphanage.EraseForBlock(*pblock);\n+\n+    for (const auto& ptx : pblock->vtx) {\n+        m_recent_confirmed_transactions.insert(ptx->GetHash().ToUint256());\n+        if (ptx->HasWitness()) {\n+            m_recent_confirmed_transactions.insert(ptx->GetWitnessHash().ToUint256());\n+        }\n+    }\n+    for (const auto& ptx : pblock->vtx) {\n+        m_txrequest.ForgetTxHash(ptx->GetHash());\n+        m_txrequest.ForgetTxHash(ptx->GetWitnessHash());\n+    }\n+}\n+\n+void TxDownloadImpl::BlockDisconnected()\n+{\n+    // To avoid relay problems with transactions that were previously\n+    // confirmed, clear our filter of recently confirmed transactions whenever\n+    // there's a reorg.\n+    // This means that in a 1-block reorg (where 1 block is disconnected and\n+    // then another block reconnected), our filter will drop to having only one\n+    // block's worth of transactions in it, but that should be fine, since\n+    // presumably the most common case of relaying a confirmed transaction\n+    // should be just after a new block containing it is found.\n+    m_recent_confirmed_transactions.reset();\n+}\n+\n+bool TxDownloadImpl::AlreadyHaveTx(const GenTxid& gtxid, bool include_reconsiderable)\n+{\n+    const uint256& hash = gtxid.GetHash();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30110#discussion_r1606717505",
      "id" : 1606717505,
      "line" : 55,
      "node_id" : "PRRC_kwDOABII585fxJBB",
      "original_commit_id" : "b1cc0c3006ca608f9ac3af2c50c4728cbbc07714",
      "original_line" : 55,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "src/node/txdownload_impl.cpp",
      "position" : 55,
      "pull_request_review_id" : 2066059450,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30110",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606717505/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-20T12:32:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606717505",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30110#discussion_r1608263692"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30110"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608263692"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think we'd ever need to make `TxDownloadManager` depend on `ChainstateManager` as we could just pass in the block hash, i.e.\r\n\r\n> Another alternative could be to directly pass the current block hash as a param into the relevant TxDownloadManager methods.\r\n\r\nThis would avoid the addition of `UpdateBlockTipSync` etc, as it's basically what we do now. I find this way of keeping synchronized with the chain tip pretty ugly - we'd need to hold `cs_main` and pass the blockhash to the `TxDownloadManager` all the time, bloating the interface. Subscribing to the validation interface and updating on every chain tip update seems much more sensible.",
      "commit_id" : "13622fc6b485c9710b466396e63ccbcb0362f471",
      "created_at" : "2024-05-21T12:43:55Z",
      "diff_hunk" : "@@ -0,0 +1,455 @@\n+// Copyright (c) 2023\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/txdownload_impl.h>\n+\n+#include <chain.h>\n+#include <consensus/validation.h>\n+#include <logging.h>\n+#include <txmempool.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+namespace node {\n+void TxDownloadImpl::UpdatedBlockTipSync()\n+{\n+    // If the chain tip has changed, previously rejected transactions might now be invalid, e.g. due\n+    // to a timelock. Reset the rejection filters to give those transactions another chance if we\n+    // see them again.\n+    m_recent_rejects.reset();\n+    m_recent_rejects_reconsiderable.reset();\n+}\n+\n+void TxDownloadImpl::BlockConnected(const std::shared_ptr<const CBlock>& pblock)\n+{\n+    m_orphanage.EraseForBlock(*pblock);\n+\n+    for (const auto& ptx : pblock->vtx) {\n+        m_recent_confirmed_transactions.insert(ptx->GetHash().ToUint256());\n+        if (ptx->HasWitness()) {\n+            m_recent_confirmed_transactions.insert(ptx->GetWitnessHash().ToUint256());\n+        }\n+    }\n+    for (const auto& ptx : pblock->vtx) {\n+        m_txrequest.ForgetTxHash(ptx->GetHash());\n+        m_txrequest.ForgetTxHash(ptx->GetWitnessHash());\n+    }\n+}\n+\n+void TxDownloadImpl::BlockDisconnected()\n+{\n+    // To avoid relay problems with transactions that were previously\n+    // confirmed, clear our filter of recently confirmed transactions whenever\n+    // there's a reorg.\n+    // This means that in a 1-block reorg (where 1 block is disconnected and\n+    // then another block reconnected), our filter will drop to having only one\n+    // block's worth of transactions in it, but that should be fine, since\n+    // presumably the most common case of relaying a confirmed transaction\n+    // should be just after a new block containing it is found.\n+    m_recent_confirmed_transactions.reset();\n+}\n+\n+bool TxDownloadImpl::AlreadyHaveTx(const GenTxid& gtxid, bool include_reconsiderable)\n+{\n+    const uint256& hash = gtxid.GetHash();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30110#discussion_r1608263692",
      "id" : 1608263692,
      "in_reply_to_id" : 1606717505,
      "line" : 56,
      "node_id" : "PRRC_kwDOABII585f3CgM",
      "original_commit_id" : "b1cc0c3006ca608f9ac3af2c50c4728cbbc07714",
      "original_line" : 56,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "src/node/txdownload_impl.cpp",
      "position" : 56,
      "pull_request_review_id" : 2068531687,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30110",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608263692/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T12:43:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608263692",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30110#discussion_r1608272072"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30110"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608272072"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hm, in the previous setup, we can change any of txdownload_impl.cpp without net_processing.cpp noticing, but yeah maybe less clean to depend on txdownload_impl.h.\r\n\r\nI've updated with a new setup where I've added a txdownloadman.cpp depending on txdownload_impl.h, and txdownloadman.h is included by txdownload_impl.h instead of the other way around. And so net_processing.cpp no longer depends on txdownload_impl.h, which makes sense to me. Had to update `lint-circular-dependencies.py` but I do like that we can change txdownload_impl.h without recompiling everything. lmk if this seems better?",
      "commit_id" : "13622fc6b485c9710b466396e63ccbcb0362f471",
      "created_at" : "2024-05-21T12:49:45Z",
      "diff_hunk" : "@@ -0,0 +1,234 @@\n+// Copyright (c) 2022\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#ifndef BITCOIN_NODE_TXDOWNLOAD_IMPL_H\n+#define BITCOIN_NODE_TXDOWNLOAD_IMPL_H\n+\n+#include <consensus/validation.h>\n+#include <kernel/chain.h>\n+#include <net.h>\n+#include <policy/packages.h>\n+#include <txorphanage.h>\n+#include <txrequest.h>\n+\n+class CTxMemPool;\n+namespace node {\n+/** Maximum number of in-flight transaction requests from a peer. It is not a hard limit, but the threshold at which\n+ *  point the OVERLOADED_PEER_TX_DELAY kicks in. */\n+static constexpr int32_t MAX_PEER_TX_REQUEST_IN_FLIGHT = 100;\n+/** Maximum number of transactions to consider for requesting, per peer. It provides a reasonable DoS limit to\n+ *  per-peer memory usage spent on announcements, while covering peers continuously sending INVs at the maximum\n+ *  rate (by our own policy, see INVENTORY_BROADCAST_PER_SECOND) for several minutes, while not receiving\n+ *  the actual transaction (from any peer) in response to requests for them. */\n+static constexpr int32_t MAX_PEER_TX_ANNOUNCEMENTS = 5000;\n+/** How long to delay requesting transactions via txids, if we have wtxid-relaying peers */\n+static constexpr auto TXID_RELAY_DELAY{2s};\n+/** How long to delay requesting transactions from non-preferred peers */\n+static constexpr auto NONPREF_PEER_TX_DELAY{2s};\n+/** How long to delay requesting transactions from overloaded peers (see MAX_PEER_TX_REQUEST_IN_FLIGHT). */\n+static constexpr auto OVERLOADED_PEER_TX_DELAY{2s};\n+/** How long to wait before downloading a transaction from an additional peer */\n+static constexpr auto GETDATA_TX_INTERVAL{60s};\n+struct TxDownloadOptions {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30110#discussion_r1608272072",
      "id" : 1608272072,
      "in_reply_to_id" : 1606683947,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585f3EjI",
      "original_commit_id" : "b1cc0c3006ca608f9ac3af2c50c4728cbbc07714",
      "original_line" : 32,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/node/txdownload_impl.h",
      "position" : null,
      "pull_request_review_id" : 2068544653,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30110",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608272072/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-21T12:49:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1608272072",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-06-03T10:22:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30110#issuecomment-2144833855",
      "id" : 2144833855,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30110",
      "node_id" : "IC_kwDOABII585_15E_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2144833855/reactions"
      },
      "updated_at" : "2024-06-03T10:22:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2144833855",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
