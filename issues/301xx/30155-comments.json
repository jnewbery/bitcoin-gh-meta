[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30155).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "created_at" : "2024-05-22T15:12:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30155#issuecomment-2125052548",
      "id" : 2125052548,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30155",
      "node_id" : "IC_kwDOABII585-qbqE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2125052548/reactions"
      },
      "updated_at" : "2024-05-22T15:12:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2125052548",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30155#discussion_r1610472962"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30155"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1610472962"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n            LogInfo(\"Flushing intermediate state of replay\\n\");\r\n```\r\n\r\nnit: For new code it would be better to use the non-deprecated non-confusing alias `LogInfo` over `LogPrintf`.",
      "commit_id" : "26e78f2ee4a325f20c3b3bfaac5be532ab9e7bac",
      "created_at" : "2024-05-22T18:35:16Z",
      "diff_hunk" : "@@ -4754,6 +4754,12 @@ bool Chainstate::ReplayBlocks()\n         LogPrintf(\"Rolling forward %s (%i)\\n\", pindex.GetBlockHash().ToString(), nHeight);\n         m_chainman.GetNotifications().progress(_(\"Replaying blocksâ¦\"), (int)((nHeight - nForkHeight) * 100.0 / (pindexNew->nHeight - nForkHeight)), false);\n         if (!RollforwardBlock(&pindex, cache)) return false;\n+        if (m_chainman.m_interrupt) {\n+            LogPrintf(\"Flushing intermediate state of replay\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30155#discussion_r1610472962",
      "id" : 1610472962,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585f_d4C",
      "original_commit_id" : "4bd626ec6e35b8cb796d20346d84735df43b27ef",
      "original_line" : 4758,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 2072067116,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30155",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1610472962/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-22T18:35:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1610472962",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30155#discussion_r1610611867"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30155"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1610611867"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "sure - updated.",
      "commit_id" : "26e78f2ee4a325f20c3b3bfaac5be532ab9e7bac",
      "created_at" : "2024-05-22T20:33:42Z",
      "diff_hunk" : "@@ -4754,6 +4754,12 @@ bool Chainstate::ReplayBlocks()\n         LogPrintf(\"Rolling forward %s (%i)\\n\", pindex.GetBlockHash().ToString(), nHeight);\n         m_chainman.GetNotifications().progress(_(\"Replaying blocksâ¦\"), (int)((nHeight - nForkHeight) * 100.0 / (pindexNew->nHeight - nForkHeight)), false);\n         if (!RollforwardBlock(&pindex, cache)) return false;\n+        if (m_chainman.m_interrupt) {\n+            LogPrintf(\"Flushing intermediate state of replay\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30155#discussion_r1610611867",
      "id" : 1610611867,
      "in_reply_to_id" : 1610472962,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585f__yb",
      "original_commit_id" : "4bd626ec6e35b8cb796d20346d84735df43b27ef",
      "original_line" : 4758,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 2072305616,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30155",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1610611867/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-22T20:33:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1610611867",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30155#discussion_r1612059228"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30155"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1612059228"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is it a safe assumption that this cannot happen except an interrupted replay?",
      "commit_id" : "26e78f2ee4a325f20c3b3bfaac5be532ab9e7bac",
      "created_at" : "2024-05-23T17:17:10Z",
      "diff_hunk" : "@@ -93,26 +93,32 @@ bool CCoinsViewDB::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock, boo\n     size_t count = 0;\n     size_t changed = 0;\n     assert(!hashBlock.IsNull());\n+    bool unfinished_replay{false};\n \n     uint256 old_tip = GetBestBlock();\n     if (old_tip.IsNull()) {\n-        // We may be in the middle of replaying.\n+        // We may be in the process of replaying.\n         std::vector<uint256> old_heads = GetHeadBlocks();\n         if (old_heads.size() == 2) {\n             if (old_heads[0] != hashBlock) {\n-                LogPrintLevel(BCLog::COINDB, BCLog::Level::Error, \"The coins database detected an inconsistent state, likely due to a previous crash or shutdown. You will need to restart bitcoind with the -reindex-chainstate or -reindex configuration option.\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30155#discussion_r1612059228",
      "id" : 1612059228,
      "line" : 103,
      "node_id" : "PRRC_kwDOABII585gFhJc",
      "original_commit_id" : "26e78f2ee4a325f20c3b3bfaac5be532ab9e7bac",
      "original_line" : 103,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/txdb.cpp",
      "position" : 13,
      "pull_request_review_id" : 2074598816,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30155",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1612059228/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-23T17:17:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1612059228",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30155#discussion_r1612109695"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30155"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1612109695"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Currently we abort with an assert in the next line after the log, so the expectation in master is that this shouldn't happen outside of db corruption. I couldn't find any reports on the internet of users that have run into this error / assert, so it probably doesn't happen very often in practice.\r\nBut theoretically speaking, if the coins db gets corrupted, I guess anything can happen depending on the specifics of the corruption?\r\n\r\nWhile working on this PR, I initially went with the different approach of adding an explicit `in_replay` flag toÂ `BatchWrite()`, and setting that flag only during the interrupt flush.Â I switched to the current approach of detecting this implicitlyÂ inside `BatchWrite()` because it seemed more elegant and led to less boilerplate code, but it's still an option.",
      "commit_id" : "26e78f2ee4a325f20c3b3bfaac5be532ab9e7bac",
      "created_at" : "2024-05-23T17:59:42Z",
      "diff_hunk" : "@@ -93,26 +93,32 @@ bool CCoinsViewDB::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock, boo\n     size_t count = 0;\n     size_t changed = 0;\n     assert(!hashBlock.IsNull());\n+    bool unfinished_replay{false};\n \n     uint256 old_tip = GetBestBlock();\n     if (old_tip.IsNull()) {\n-        // We may be in the middle of replaying.\n+        // We may be in the process of replaying.\n         std::vector<uint256> old_heads = GetHeadBlocks();\n         if (old_heads.size() == 2) {\n             if (old_heads[0] != hashBlock) {\n-                LogPrintLevel(BCLog::COINDB, BCLog::Level::Error, \"The coins database detected an inconsistent state, likely due to a previous crash or shutdown. You will need to restart bitcoind with the -reindex-chainstate or -reindex configuration option.\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30155#discussion_r1612109695",
      "id" : 1612109695,
      "in_reply_to_id" : 1612059228,
      "line" : 103,
      "node_id" : "PRRC_kwDOABII585gFtd_",
      "original_commit_id" : "26e78f2ee4a325f20c3b3bfaac5be532ab9e7bac",
      "original_line" : 103,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/txdb.cpp",
      "position" : 13,
      "pull_request_review_id" : 2074679730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30155",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1612109695/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-23T18:00:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1612109695",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/30155#discussion_r1629646400"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30155"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629646400"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: Make ReplayBlocks interruptible\" (26e78f2ee4a325f20c3b3bfaac5be532ab9e7bac)\r\n\r\n> I switched to the current approach of detecting this implicitly inside `BatchWrite()` because it seemed more elegant and led to less boilerplate code, but it's still an option.\r\n\r\nI would definitely be curious to see the other approach. Not just because it might be better at detecting inconsistent states like Luke is suggesting, but also because it seems like it would make the code more clear.\r\n\r\nI think it would be pretty hard to look at the code after this PR (without looking at the PR itself), and understand why `old_heads[0] != hashBlock` implies that this BatchWrite call is finalizing a replay that is currently being interrupted.\r\n\r\nI was also confused by the name of the \"unfinished_replay\" variable below, because I thought \"unfinished replay\" was just referring to a replay of an previously unfinished flush. I did not realize it was referring specifically to an *interrupted* replay of an unfinished flush.\r\n\r\nAlso as a possible followup, for future maintainability of this code I think it could be a good idea to remove the replay logic entirely from BatchWrite(), since ReplayBlocks() is the only BatchWrite() caller that should need it. Other BatchWrite calls should be able to assume and assert that GetHeadBlocks() is empty, and this is just a normal write, not a replay.",
      "commit_id" : "26e78f2ee4a325f20c3b3bfaac5be532ab9e7bac",
      "created_at" : "2024-06-06T14:18:20Z",
      "diff_hunk" : "@@ -93,26 +93,32 @@ bool CCoinsViewDB::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock, boo\n     size_t count = 0;\n     size_t changed = 0;\n     assert(!hashBlock.IsNull());\n+    bool unfinished_replay{false};\n \n     uint256 old_tip = GetBestBlock();\n     if (old_tip.IsNull()) {\n-        // We may be in the middle of replaying.\n+        // We may be in the process of replaying.\n         std::vector<uint256> old_heads = GetHeadBlocks();\n         if (old_heads.size() == 2) {\n             if (old_heads[0] != hashBlock) {\n-                LogPrintLevel(BCLog::COINDB, BCLog::Level::Error, \"The coins database detected an inconsistent state, likely due to a previous crash or shutdown. You will need to restart bitcoind with the -reindex-chainstate or -reindex configuration option.\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/30155#discussion_r1629646400",
      "id" : 1629646400,
      "in_reply_to_id" : 1612059228,
      "line" : 103,
      "node_id" : "PRRC_kwDOABII585hIm5A",
      "original_commit_id" : "26e78f2ee4a325f20c3b3bfaac5be532ab9e7bac",
      "original_line" : 103,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/txdb.cpp",
      "position" : 13,
      "pull_request_review_id" : 2102128438,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/30155",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629646400/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-06-06T14:31:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629646400",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
