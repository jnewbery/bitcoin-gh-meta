[
   {
      "author_association" : "MEMBER",
      "body" : "I think `importaddress` and `addmultisigaddress` intents are clear enough and they map well to descriptors. Both specify the address type. Forcing users to learn how to craft a descriptor when they merely want to watch an address seems overwhelming to me. -> #27034 maps `importaddress` to `addr()` and `raw()` descriptors. And #28307 fixes and extends `createmultisig`/`addmultisigaddress`.\r\n\r\nNot sure about `importprivkey` as it would clash with the new `void(KEY)` descriptor (#29136). The intent there isn't clear enough to me. Perhaps we could create a `importkey` or `importwalletkey` command where the user can input any type of key and specify its intent in one of the command arguments. Personally, I think the `combo()` descriptor should be more of a last-resort fallback that requires a warning, rather than the user's first choice, as it does not support newer output types.\r\n\r\n",
      "created_at" : "2024-05-25T14:58:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/30175#issuecomment-2131302391",
      "id" : 2131302391,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30175",
      "node_id" : "IC_kwDOABII585_CRf3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2131302391/reactions"
      },
      "updated_at" : "2024-05-25T14:58:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2131302391",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "`addmultisigaddress` might be a little bit more complicated since users would expect it to behave the same way and be able to have the specific private keys from addresses. Given that we do not want to allow exposing child private keys, retaining that behavior would allow extracting specific child private keys in a rather roundabout way (`addmultisigaddress` which puts creates a descriptor with a child privkey, then `listdescriptors true` which outputs the descriptor with that privkey).\r\n\r\nAlso both `addmultisigaddress` and `createmultisig` should allow xpubs and xprvs, currently only single keys are allowed.\r\n\r\nI'm not sure that allowing `importmulti` is that useful. All of the stuff that you can do with it can be done with `importdescriptors`, and extremely similarly as `importdescriptors`' interface was based off of `importmulti`. In fact, if importing a descriptor with `importmulti`, the same argument can be used with `importdescriptors`. I suppose someone could be used to `importmulti` with importing all of the other stuff that it allows, but it's quite a mess and doesn't seem like it's used that much? I have seem requests for `importprivkey`, `importaddress`, and `importwallet` for descriptor wallets, but never for `importmulti` for things that `importdescriptors` can't do.\r\n\r\n> Not sure about `importprivkey` as it would clash with the new `void(KEY)` descriptor (#29136).\r\n\r\nI think the distinction is clear enough given `importprivkey`'s historical behavior, and that `void(KEY)` and `addhdkey` would be new. Namely, the expectation is that `importprivkey` imports a private key which produces all of the scripts produced by `combo()`. `void(KEY)` and `addhdkey` explicitly are adding a key that can sign but cannot produce any scripts.",
      "created_at" : "2024-06-05T01:26:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/30175#issuecomment-2148691438",
      "id" : 2148691438,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/30175",
      "node_id" : "IC_kwDOABII586AEm3u",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2148691438/reactions"
      },
      "updated_at" : "2024-06-05T01:26:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2148691438",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   }
]
