{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "This reverts commit fa940f41eaffa4b2a28c465a10a4c12d4b8976b8.\r\n\r\nWith this commit produce the following compilation error.\r\n\r\n```\r\nMaking all in src\r\nmake[1]: Entering directory '/home/vincent/Github/bitcoin/src'\r\nmake[2]: Entering directory '/home/vincent/Github/bitcoin/src'\r\nmake[3]: Entering directory '/home/vincent/Github/bitcoin'\r\nmake[3]: Leaving directory '/home/vincent/Github/bitcoin'\r\n  GEN      obj/build.h\r\n  CXX      libbitcoin_util_a-clientversion.o\r\n  AR       libbitcoin_util.a\r\n  CXXLD    bitcoind\r\n  CXXLD    bitcoin-cli\r\n  CXXLD    bitcoin-tx\r\n  CXXLD    bitcoin-wallet\r\n  CXXLD    bitcoin-util\r\n  CXX      test/test_bitcoin-base58_tests.o\r\ntest/base58_tests.cpp: In member function âvoid base58_tests::base58_EncodeBase58::test_method()â:\r\ntest/base58_tests.cpp:26:44: error: invalid initialization of reference of type âconst std::string&â {aka âconst std::__cxx11::basic_string<char>&â} from expression of type âconst unsigned char [1462]â\r\n   26 |     UniValue tests = read_json(json_tests::base58_encode_decode);\r\n      |                                ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~\r\nIn file included from test/base58_tests.cpp:8:\r\n./test/util/json.h:12:39: note: in passing argument 1 of âUniValue read_json(const std::string&)â\r\n   12 | UniValue read_json(const std::string& jsondata);\r\n      |                    ~~~~~~~~~~~~~~~~~~~^~~~~~~~\r\ntest/base58_tests.cpp: In member function âvoid base58_tests::base58_DecodeBase58::test_method()â:\r\ntest/base58_tests.cpp:46:44: error: invalid initialization of reference of type âconst std::string&â {aka âconst std::__cxx11::basic_string<char>&â} from expression of type âconst unsigned char [1462]â\r\n   46 |     UniValue tests = read_json(json_tests::base58_encode_decode);\r\n      |                                ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~\r\n./test/util/json.h:12:39: note: in passing argument 1 of âUniValue read_json(const std::string&)â\r\n   12 | UniValue read_json(const std::string& jsondata);\r\n      |                    ~~~~~~~~~~~~~~~~~~~^~~~~~~~\r\nmake[2]: *** [Makefile:18253: test/test_bitcoin-base58_tests.o] Error 1\r\nmake[2]: Leaving directory '/home/vincent/Github/bitcoin/src'\r\nmake[1]: *** [Makefile:20006: all-recursive] Error 1\r\nmake[1]: Leaving directory '/home/vincent/Github/bitcoin/src'\r\nmake: *** [Makefile:815: all-recursive] Error 1\r\n```\r\n\r\nThe main problem is that we can not auto-convert an unsigned char string to a std::string.\r\n\r\nBut why the CI did not catch this?\r\n\r\ncc: @MarcoFalke, @stickies-v @TheCharlatan\r\n\r\n<!--\r\n*** Please remove the following help text before submitting: ***\r\n\r\nPull requests without a rationale and clear improvement may be closed\r\nimmediately.\r\n\r\nGUI-related pull requests should be opened against\r\nhttps://github.com/bitcoin-core/gui\r\nfirst. See CONTRIBUTING.md\r\n-->\r\n\r\n<!--\r\nPlease provide clear motivation for your patch and explain how it improves\r\nBitcoin Core user experience or Bitcoin Core developer experience\r\nsignificantly:\r\n\r\n* Any test improvements or new tests that improve coverage are always welcome.\r\n* All other changes should have accompanying unit tests (see `src/test/`) or\r\n  functional tests (see `test/`). Contributors should note which tests cover\r\n  modified code. If no tests exist for a region of modified code, new tests\r\n  should accompany the change.\r\n* Bug fixes are most welcome when they come with steps to reproduce or an\r\n  explanation of the potential issue as well as reasoning for the way the bug\r\n  was fixed.\r\n* Features are welcome, but might be rejected due to design or scope issues.\r\n  If a feature is based on a lot of dependencies, contributors should first\r\n  consider building the system outside of Bitcoin Core, if possible.\r\n* Refactoring changes are only accepted if they are required for a feature or\r\n  bug fix or otherwise improve developer experience significantly. For example,\r\n  most \"code style\" refactoring changes require a thorough explanation why they\r\n  are useful, what downsides they have and why they *significantly* improve\r\n  developer experience or avoid serious programming bugs. Note that code style\r\n  is often a subjective matter. Unless they are explicitly mentioned to be\r\n  preferred in the [developer notes](/doc/developer-notes.md), stylistic code\r\n  changes are usually rejected.\r\n-->\r\n\r\n<!--\r\nBitcoin Core has a thorough review process and even the most trivial change\r\nneeds to pass a lot of eyes and requires non-zero or even substantial time\r\neffort to review. There is a huge lack of active reviewers on the project, so\r\npatches often sit for a long time.\r\n-->\r\n",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 3,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28242/comments",
   "created_at" : "2023-08-09T09:55:16Z",
   "draft" : false,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28242/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/28242",
   "id" : 1842886303,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28242/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "PR_kwDOABII585XhHwa",
   "number" : 28242,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/28242.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28242",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/28242.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28242"
   },
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28242/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28242/timeline",
   "title" : "Revert \"Remove unused raw-pointer read helper from univalue\"",
   "updated_at" : "2023-08-09T09:59:40Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28242",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/17150045?v=4",
      "events_url" : "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "followers_url" : "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url" : "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url" : "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/vincenzopalazzo",
      "id" : 17150045,
      "login" : "vincenzopalazzo",
      "node_id" : "MDQ6VXNlcjE3MTUwMDQ1",
      "organizations_url" : "https://api.github.com/users/vincenzopalazzo/orgs",
      "received_events_url" : "https://api.github.com/users/vincenzopalazzo/received_events",
      "repos_url" : "https://api.github.com/users/vincenzopalazzo/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/vincenzopalazzo"
   }
}
