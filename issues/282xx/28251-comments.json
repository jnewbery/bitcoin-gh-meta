[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "created_at" : "2023-08-10T13:04:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#issuecomment-1673181532",
      "id" : 1673181532,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28251",
      "node_id" : "IC_kwDOABII585jurlc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1673181532/reactions"
      },
      "updated_at" : "2023-08-10T13:04:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1673181532",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "cc @instagibbs ",
      "created_at" : "2023-08-10T13:04:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#issuecomment-1673181801",
      "id" : 1673181801,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28251",
      "node_id" : "IC_kwDOABII585jurpp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1673181801/reactions"
      },
      "updated_at" : "2023-08-10T13:04:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1673181801",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa you might want to weigh in as well",
      "created_at" : "2023-08-10T13:17:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#issuecomment-1673202074",
      "id" : 1673202074,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28251",
      "node_id" : "IC_kwDOABII585juwma",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1673202074/reactions"
      },
      "updated_at" : "2023-08-10T13:17:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1673202074",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1290350524"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290350524"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Declaration comments for `SubmitPackage` should reflect that it doesn't limit anymore, or just not mention limiting.",
      "commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "created_at" : "2023-08-10T15:54:30Z",
      "diff_hunk" : "@@ -1184,32 +1184,21 @@ bool MemPoolAccept::SubmitPackage(const ATMPArgs& args, std::vector<Workspace>&\n         }\n     }\n \n-    // It may or may not be the case that all the transactions made it into the mempool. Regardless,\n-    // make sure we haven't exceeded max mempool size.\n-    LimitMempoolSize(m_pool, m_active_chainstate.CoinsTip());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1290350524",
      "id" : 1290350524,
      "line" : 1179,
      "node_id" : "PRRC_kwDOABII585M6S-8",
      "original_commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "original_line" : 1189,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 15,
      "pull_request_review_id" : 1572237699,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290350524/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-10T15:59:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290350524",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1290355065"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290355065"
         }
      },
      "author_association" : "MEMBER",
      "body" : "was this always supposed to be true?",
      "commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "created_at" : "2023-08-10T15:58:04Z",
      "diff_hunk" : "@@ -516,7 +516,7 @@ class MemPoolAccept\n                             /* m_coins_to_uncache */ package_args.m_coins_to_uncache,\n                             /* m_test_accept */ package_args.m_test_accept,\n                             /* m_allow_replacement */ true,\n-                            /* m_package_submission */ false,\n+                            /* m_package_submission */ true, // do not LimitMempool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1290355065",
      "id" : 1290355065,
      "line" : 519,
      "node_id" : "PRRC_kwDOABII585M6UF5",
      "original_commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "original_line" : 519,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 1572237699,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290355065/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-10T15:59:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290355065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1290857304"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290857304"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The âdisabled RBFâ can sound as confusing. There is no nsequence opted-out of the transaction candidate targeted by a replacement, it sounds rather to mean the `m_allow_replacement` of `ATMPArgs` which is true for `SingleInPackageAccept` and false for `PackageChildWithParents`.",
      "commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "created_at" : "2023-08-11T03:21:30Z",
      "diff_hunk" : "@@ -554,6 +554,16 @@ class MemPoolAccept\n     */\n     PackageMempoolAcceptResult AcceptMultipleTransactions(const std::vector<CTransactionRef>& txns, ATMPArgs& args) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Submission of a subpackage.  If only 1 transaction exists in subpackage, calls\n+     * AcceptSingleTransaction() with adjusted ATMPArgs to avoid additional package policy\n+     * restrictions like PackageMempoolChecks() and disabled RBF, and creates a",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1290857304",
      "id" : 1290857304,
      "line" : 560,
      "node_id" : "PRRC_kwDOABII585M8OtY",
      "original_commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "original_line" : 560,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 16,
      "pull_request_review_id" : 1572955374,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290857304/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-11T03:53:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290857304",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1290865427"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290865427"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this could document more where the âdo not LimitMempoolâ is applied, i.e in `Finalize()` L1123 which is itself called by `AcceptSingleTransaction` and the source of the bug. `LimitMempoolSize()` is called few times in validation.",
      "commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "created_at" : "2023-08-11T03:44:13Z",
      "diff_hunk" : "@@ -516,7 +516,7 @@ class MemPoolAccept\n                             /* m_coins_to_uncache */ package_args.m_coins_to_uncache,\n                             /* m_test_accept */ package_args.m_test_accept,\n                             /* m_allow_replacement */ true,\n-                            /* m_package_submission */ false,\n+                            /* m_package_submission */ true, // do not LimitMempool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1290865427",
      "id" : 1290865427,
      "line" : 519,
      "node_id" : "PRRC_kwDOABII585M8QsT",
      "original_commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "original_line" : 519,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 1572955374,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290865427/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-11T03:53:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290865427",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1290866687"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290866687"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this check doesnât have test coverage as tx are individually validated in `AcceptPackage`.",
      "commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "created_at" : "2023-08-11T03:47:42Z",
      "diff_hunk" : "@@ -1326,6 +1325,23 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n     return PackageMempoolAcceptResult(package_state, std::move(results));\n }\n \n+PackageMempoolAcceptResult MemPoolAccept::AcceptSubPackage(const std::vector<CTransactionRef>& subpackage, ATMPArgs& args)\n+{\n+    ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+    AssertLockHeld(::cs_main);\n+    AssertLockHeld(m_pool.cs);\n+    if (subpackage.size() > 1) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1290866687",
      "id" : 1290866687,
      "line" : 1333,
      "node_id" : "PRRC_kwDOABII585M8Q__",
      "original_commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "original_line" : 1333,
      "original_position" : 101,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 101,
      "pull_request_review_id" : 1572955374,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290866687/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-11T03:53:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290866687",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1291488191"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291488191"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, as it means skipping `LimitMempoolSize` within `Finalize` and we're not always guaranteed to call `SubmitPackage` afterwards (e.g. if we quit early). It's safe to make it `true` now because we always do a `LimitMempoolSize` within `AcceptPackage`",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-11T15:18:54Z",
      "diff_hunk" : "@@ -516,7 +516,7 @@ class MemPoolAccept\n                             /* m_coins_to_uncache */ package_args.m_coins_to_uncache,\n                             /* m_test_accept */ package_args.m_test_accept,\n                             /* m_allow_replacement */ true,\n-                            /* m_package_submission */ false,\n+                            /* m_package_submission */ true, // do not LimitMempool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1291488191",
      "id" : 1291488191,
      "in_reply_to_id" : 1290355065,
      "line" : 519,
      "node_id" : "PRRC_kwDOABII585M-ou_",
      "original_commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "original_line" : 519,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 1573909211,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291488191/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-11T15:19:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291488191",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1298712742"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298712742"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In the `AcceptMultipleTransactions` this is unused, to maybe move it down?",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-18T17:53:41Z",
      "diff_hunk" : "@@ -1326,6 +1336,23 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n     return PackageMempoolAcceptResult(package_state, std::move(results));\n }\n \n+PackageMempoolAcceptResult MemPoolAccept::AcceptSubPackage(const std::vector<CTransactionRef>& subpackage, ATMPArgs& args)\n+{\n+    ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1298712742",
      "id" : 1298712742,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585NaMim",
      "original_commit_id" : "0678df31d50d36f92e39a7c709b0e1975695e2e8",
      "original_line" : 1341,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1584983469,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298712742/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-18T18:10:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298712742",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1301942552"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301942552"
         }
      },
      "author_association" : "MEMBER",
      "body" : "should assert all 3 parents are in the mempool",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-22T16:58:30Z",
      "diff_hunk" : "@@ -84,13 +85,105 @@ def fill_mempool(self):\n         assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+    def test_mid_package_eviction(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction\")\n+\n+        self.restart_node(0, extra_args=self.extra_args[0])\n+\n+        # Restarting the node resets mempool minimum feerate\n+        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n+        self.fill_mempool()\n+        current_info = node.getmempoolinfo()\n+        mempoolmin_feerate = current_info[\"mempoolminfee\"]\n+        assert_greater_than(mempoolmin_feerate, get_first_eviction_score(node))\n+\n+        package_hex = []\n+        parent_utxos = []\n+        package_txids = []\n+\n+        evicted_weight = 8000\n+        # Mempool transaction which is evicted due to being at the \"bottom\" of the mempool when the\n+        # mempool overflows and evicts by descendant score. It's important that the eviction doesn't\n+        # happen in the middle of package evaluation, as it can invalidate the coins cache.\n+        mempool_evicted_tx = self.wallet.send_self_transfer(\n+            from_node=node,\n+            fee=(mempoolmin_feerate / 1000) * (evicted_weight // 4) + Decimal('0.000001'),\n+            target_weight=evicted_weight,\n+            confirmed_only=True\n+        )\n+        # Already in mempool when package is submitted.\n+        assert mempool_evicted_tx[\"txid\"] in node.getrawmempool()\n+\n+        # This parent spends the above mempool transaction that exists when its inputs are first\n+        # looked up, but disappears later. It is rejected for being too low fee (but eligible for\n+        # reconsideration), and its inputs are cached. When the mempool transaction is evicted, its\n+        # coin is no longer available, but the cache could still contains the tx.\n+        cpfp_parent = self.wallet.create_self_transfer(\n+            utxo_to_spend=mempool_evicted_tx[\"new_utxo\"],\n+            fee_rate=mempoolmin_feerate - Decimal('0.00001'),\n+            confirmed_only=True)\n+        package_hex.append(cpfp_parent[\"hex\"])\n+        parent_utxos.append(cpfp_parent[\"new_utxo\"])\n+        package_txids.append(cpfp_parent[\"txid\"])\n+        assert_equal(node.testmempoolaccept([cpfp_parent[\"hex\"]])[0][\"reject-reason\"], \"mempool min fee not met\")\n+\n+        self.wallet.rescan_utxos()\n+\n+        # Series of parents that don't need CPFP and are submitted individually. Each one is large and\n+        # high feerate, which means they should trigger eviction but not be evicted.\n+        parent_weight = 100000\n+        num_big_parents = 3\n+        assert_greater_than(parent_weight * num_big_parents, current_info[\"maxmempool\"] - current_info[\"bytes\"])\n+        parent_fee = (100 * mempoolmin_feerate / 1000) * (parent_weight // 4)\n+\n+        for i in range(num_big_parents):\n+            parent = self.wallet.create_self_transfer(fee=parent_fee, target_weight=parent_weight, confirmed_only=True)\n+            parent_utxos.append(parent[\"new_utxo\"])\n+            package_hex.append(parent[\"hex\"])\n+            package_txids.append(parent[\"txid\"])\n+            # There is room for each of these transactions independently\n+            assert node.testmempoolaccept([parent[\"hex\"]])[0][\"allowed\"]\n+\n+        # Create a child spending everything, CPFPing the low-feerate parent just above mempool\n+        # minimum feerate. It's important not to bump too much as otherwise mempool_evicted_tx would\n+        # not be evicted, making this test much less meaningful. Approximate size of cpfp_parent +\n+        # child is.\n+        approx_child_vsize = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos)[\"tx\"].get_vsize()\n+        cpfp_fee = (mempoolmin_feerate / 1000) * (cpfp_parent[\"tx\"].get_vsize() + approx_child_vsize) - cpfp_parent[\"fee\"]\n+        # Specific number of satoshis to fit within a small window. The parent_cpfp + child package needs to be\n+        # - When there is mid-package eviction, high enough feerate to meet the new mempoolminfee\n+        # - When there is no mid-package eviction, low enough feerate to be evicted immediately after submission.\n+        magic_satoshis = 1200\n+        cpfp_satoshis = int(cpfp_fee * COIN) + magic_satoshis\n+\n+        child = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos, fee_per_output=cpfp_satoshis)\n+        package_hex.append(child[\"hex\"])\n+        package_txids.append(child[\"txid\"])\n+\n+        # Package should be submitted, temporarily exceeding maxmempool, and then evicted.\n+        with node.assert_debug_log(expected_msgs=[\"rolling minimum fee bumped\"]):\n+            assert_raises_rpc_error(-26, \"mempool full\", node.submitpackage, package_hex)\n+\n+        # Maximum size must never be exceeded.\n+        assert_greater_than(node.getmempoolinfo()[\"maxmempool\"], node.getmempoolinfo()[\"bytes\"])\n+\n+        # Evicted transaction and its descendants must not be in mempool.\n+        resulting_mempool_txids = node.getrawmempool()\n+        assert mempool_evicted_tx[\"txid\"] not in resulting_mempool_txids\n+        assert cpfp_parent[\"txid\"] not in resulting_mempool_txids\n+        assert child[\"txid\"] not in resulting_mempool_txids",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1301942552",
      "id" : 1301942552,
      "line" : 167,
      "node_id" : "PRRC_kwDOABII585NmhEY",
      "original_commit_id" : "3729ee483688da8427c9228de01407777d4e4691",
      "original_line" : 167,
      "original_position" : 107,
      "original_start_line" : null,
      "path" : "test/functional/mempool_limit.py",
      "position" : 149,
      "pull_request_review_id" : 1589916383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301942552/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-22T17:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301942552",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1301971311"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301971311"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```Suggestion\r\n        # coin is no longer available, but the cache could still contain the tx.\r\n```",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-22T17:26:48Z",
      "diff_hunk" : "@@ -84,13 +85,105 @@ def fill_mempool(self):\n         assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+    def test_mid_package_eviction(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction\")\n+\n+        self.restart_node(0, extra_args=self.extra_args[0])\n+\n+        # Restarting the node resets mempool minimum feerate\n+        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n+        self.fill_mempool()\n+        current_info = node.getmempoolinfo()\n+        mempoolmin_feerate = current_info[\"mempoolminfee\"]\n+        assert_greater_than(mempoolmin_feerate, get_first_eviction_score(node))\n+\n+        package_hex = []\n+        parent_utxos = []\n+        package_txids = []\n+\n+        evicted_weight = 8000\n+        # Mempool transaction which is evicted due to being at the \"bottom\" of the mempool when the\n+        # mempool overflows and evicts by descendant score. It's important that the eviction doesn't\n+        # happen in the middle of package evaluation, as it can invalidate the coins cache.\n+        mempool_evicted_tx = self.wallet.send_self_transfer(\n+            from_node=node,\n+            fee=(mempoolmin_feerate / 1000) * (evicted_weight // 4) + Decimal('0.000001'),\n+            target_weight=evicted_weight,\n+            confirmed_only=True\n+        )\n+        # Already in mempool when package is submitted.\n+        assert mempool_evicted_tx[\"txid\"] in node.getrawmempool()\n+\n+        # This parent spends the above mempool transaction that exists when its inputs are first\n+        # looked up, but disappears later. It is rejected for being too low fee (but eligible for\n+        # reconsideration), and its inputs are cached. When the mempool transaction is evicted, its\n+        # coin is no longer available, but the cache could still contains the tx.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1301971311",
      "id" : 1301971311,
      "line" : 115,
      "node_id" : "PRRC_kwDOABII585NmoFv",
      "original_commit_id" : "3729ee483688da8427c9228de01407777d4e4691",
      "original_line" : 115,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "test/functional/mempool_limit.py",
      "position" : 97,
      "pull_request_review_id" : 1589916383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301971311/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-22T17:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301971311",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1301972717"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301972717"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```Suggestion\r\n        parent_utxos = [] # utxos to be spent by the ultimate child transaction\r\n```",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-22T17:28:11Z",
      "diff_hunk" : "@@ -84,13 +85,105 @@ def fill_mempool(self):\n         assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+    def test_mid_package_eviction(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction\")\n+\n+        self.restart_node(0, extra_args=self.extra_args[0])\n+\n+        # Restarting the node resets mempool minimum feerate\n+        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n+        self.fill_mempool()\n+        current_info = node.getmempoolinfo()\n+        mempoolmin_feerate = current_info[\"mempoolminfee\"]\n+        assert_greater_than(mempoolmin_feerate, get_first_eviction_score(node))\n+\n+        package_hex = []\n+        parent_utxos = []",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1301972717",
      "id" : 1301972717,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII585Nmobt",
      "original_commit_id" : "3729ee483688da8427c9228de01407777d4e4691",
      "original_line" : 97,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "test/functional/mempool_limit.py",
      "position" : 79,
      "pull_request_review_id" : 1589916383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301972717/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-22T17:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301972717",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1301977111"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301977111"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```Suggestion\r\n        # Create a child spending everything, CPFPing the low-feerate cpfp_parent just above mempool\r\n```",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-22T17:32:27Z",
      "diff_hunk" : "@@ -84,13 +85,105 @@ def fill_mempool(self):\n         assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+    def test_mid_package_eviction(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction\")\n+\n+        self.restart_node(0, extra_args=self.extra_args[0])\n+\n+        # Restarting the node resets mempool minimum feerate\n+        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n+        self.fill_mempool()\n+        current_info = node.getmempoolinfo()\n+        mempoolmin_feerate = current_info[\"mempoolminfee\"]\n+        assert_greater_than(mempoolmin_feerate, get_first_eviction_score(node))\n+\n+        package_hex = []\n+        parent_utxos = []\n+        package_txids = []\n+\n+        evicted_weight = 8000\n+        # Mempool transaction which is evicted due to being at the \"bottom\" of the mempool when the\n+        # mempool overflows and evicts by descendant score. It's important that the eviction doesn't\n+        # happen in the middle of package evaluation, as it can invalidate the coins cache.\n+        mempool_evicted_tx = self.wallet.send_self_transfer(\n+            from_node=node,\n+            fee=(mempoolmin_feerate / 1000) * (evicted_weight // 4) + Decimal('0.000001'),\n+            target_weight=evicted_weight,\n+            confirmed_only=True\n+        )\n+        # Already in mempool when package is submitted.\n+        assert mempool_evicted_tx[\"txid\"] in node.getrawmempool()\n+\n+        # This parent spends the above mempool transaction that exists when its inputs are first\n+        # looked up, but disappears later. It is rejected for being too low fee (but eligible for\n+        # reconsideration), and its inputs are cached. When the mempool transaction is evicted, its\n+        # coin is no longer available, but the cache could still contains the tx.\n+        cpfp_parent = self.wallet.create_self_transfer(\n+            utxo_to_spend=mempool_evicted_tx[\"new_utxo\"],\n+            fee_rate=mempoolmin_feerate - Decimal('0.00001'),\n+            confirmed_only=True)\n+        package_hex.append(cpfp_parent[\"hex\"])\n+        parent_utxos.append(cpfp_parent[\"new_utxo\"])\n+        package_txids.append(cpfp_parent[\"txid\"])\n+        assert_equal(node.testmempoolaccept([cpfp_parent[\"hex\"]])[0][\"reject-reason\"], \"mempool min fee not met\")\n+\n+        self.wallet.rescan_utxos()\n+\n+        # Series of parents that don't need CPFP and are submitted individually. Each one is large and\n+        # high feerate, which means they should trigger eviction but not be evicted.\n+        parent_weight = 100000\n+        num_big_parents = 3\n+        assert_greater_than(parent_weight * num_big_parents, current_info[\"maxmempool\"] - current_info[\"bytes\"])\n+        parent_fee = (100 * mempoolmin_feerate / 1000) * (parent_weight // 4)\n+\n+        for i in range(num_big_parents):\n+            parent = self.wallet.create_self_transfer(fee=parent_fee, target_weight=parent_weight, confirmed_only=True)\n+            parent_utxos.append(parent[\"new_utxo\"])\n+            package_hex.append(parent[\"hex\"])\n+            package_txids.append(parent[\"txid\"])\n+            # There is room for each of these transactions independently\n+            assert node.testmempoolaccept([parent[\"hex\"]])[0][\"allowed\"]\n+\n+        # Create a child spending everything, CPFPing the low-feerate parent just above mempool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1301977111",
      "id" : 1301977111,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585NmpgX",
      "original_commit_id" : "3729ee483688da8427c9228de01407777d4e4691",
      "original_line" : 150,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "test/functional/mempool_limit.py",
      "position" : null,
      "pull_request_review_id" : 1589916383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301977111/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-22T17:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301977111",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1301978861"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301978861"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```Suggestion\r\n        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction before package submission terminates\")\r\n```",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-22T17:34:09Z",
      "diff_hunk" : "@@ -84,13 +85,105 @@ def fill_mempool(self):\n         assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+    def test_mid_package_eviction(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1301978861",
      "id" : 1301978861,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Nmp7t",
      "original_commit_id" : "3729ee483688da8427c9228de01407777d4e4691",
      "original_line" : 91,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/mempool_limit.py",
      "position" : null,
      "pull_request_review_id" : 1589916383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301978861/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-22T17:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301978861",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303183629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303183629"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, `AcceptPackage` also calls this for `txns_package_eval` which can have multiple transactions.",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-23T15:21:00Z",
      "diff_hunk" : "@@ -1326,6 +1325,23 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n     return PackageMempoolAcceptResult(package_state, std::move(results));\n }\n \n+PackageMempoolAcceptResult MemPoolAccept::AcceptSubPackage(const std::vector<CTransactionRef>& subpackage, ATMPArgs& args)\n+{\n+    ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+    AssertLockHeld(::cs_main);\n+    AssertLockHeld(m_pool.cs);\n+    if (subpackage.size() > 1) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303183629",
      "id" : 1303183629,
      "in_reply_to_id" : 1290866687,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585NrQEN",
      "original_commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "original_line" : 1333,
      "original_position" : 101,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1591859179,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303183629/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T15:21:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303183629",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303184115"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303184115"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed, thanks",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-23T15:21:20Z",
      "diff_hunk" : "@@ -1184,32 +1184,21 @@ bool MemPoolAccept::SubmitPackage(const ATMPArgs& args, std::vector<Workspace>&\n         }\n     }\n \n-    // It may or may not be the case that all the transactions made it into the mempool. Regardless,\n-    // make sure we haven't exceeded max mempool size.\n-    LimitMempoolSize(m_pool, m_active_chainstate.CoinsTip());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303184115",
      "id" : 1303184115,
      "in_reply_to_id" : 1290350524,
      "line" : 1179,
      "node_id" : "PRRC_kwDOABII585NrQLz",
      "original_commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "original_line" : 1179,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 55,
      "pull_request_review_id" : 1591859933,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303184115/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T15:21:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303184115",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303184486"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303184486"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Moved",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-23T15:21:32Z",
      "diff_hunk" : "@@ -1326,6 +1336,23 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n     return PackageMempoolAcceptResult(package_state, std::move(results));\n }\n \n+PackageMempoolAcceptResult MemPoolAccept::AcceptSubPackage(const std::vector<CTransactionRef>& subpackage, ATMPArgs& args)\n+{\n+    ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303184486",
      "id" : 1303184486,
      "in_reply_to_id" : 1298712742,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585NrQRm",
      "original_commit_id" : "0678df31d50d36f92e39a7c709b0e1975695e2e8",
      "original_line" : 1341,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1591860461,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303184486/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T15:21:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303184486",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303185024"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303185024"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added this and the comment fixups",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-23T15:21:52Z",
      "diff_hunk" : "@@ -84,13 +85,105 @@ def fill_mempool(self):\n         assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+    def test_mid_package_eviction(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction\")\n+\n+        self.restart_node(0, extra_args=self.extra_args[0])\n+\n+        # Restarting the node resets mempool minimum feerate\n+        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n+        self.fill_mempool()\n+        current_info = node.getmempoolinfo()\n+        mempoolmin_feerate = current_info[\"mempoolminfee\"]\n+        assert_greater_than(mempoolmin_feerate, get_first_eviction_score(node))\n+\n+        package_hex = []\n+        parent_utxos = []\n+        package_txids = []\n+\n+        evicted_weight = 8000\n+        # Mempool transaction which is evicted due to being at the \"bottom\" of the mempool when the\n+        # mempool overflows and evicts by descendant score. It's important that the eviction doesn't\n+        # happen in the middle of package evaluation, as it can invalidate the coins cache.\n+        mempool_evicted_tx = self.wallet.send_self_transfer(\n+            from_node=node,\n+            fee=(mempoolmin_feerate / 1000) * (evicted_weight // 4) + Decimal('0.000001'),\n+            target_weight=evicted_weight,\n+            confirmed_only=True\n+        )\n+        # Already in mempool when package is submitted.\n+        assert mempool_evicted_tx[\"txid\"] in node.getrawmempool()\n+\n+        # This parent spends the above mempool transaction that exists when its inputs are first\n+        # looked up, but disappears later. It is rejected for being too low fee (but eligible for\n+        # reconsideration), and its inputs are cached. When the mempool transaction is evicted, its\n+        # coin is no longer available, but the cache could still contains the tx.\n+        cpfp_parent = self.wallet.create_self_transfer(\n+            utxo_to_spend=mempool_evicted_tx[\"new_utxo\"],\n+            fee_rate=mempoolmin_feerate - Decimal('0.00001'),\n+            confirmed_only=True)\n+        package_hex.append(cpfp_parent[\"hex\"])\n+        parent_utxos.append(cpfp_parent[\"new_utxo\"])\n+        package_txids.append(cpfp_parent[\"txid\"])\n+        assert_equal(node.testmempoolaccept([cpfp_parent[\"hex\"]])[0][\"reject-reason\"], \"mempool min fee not met\")\n+\n+        self.wallet.rescan_utxos()\n+\n+        # Series of parents that don't need CPFP and are submitted individually. Each one is large and\n+        # high feerate, which means they should trigger eviction but not be evicted.\n+        parent_weight = 100000\n+        num_big_parents = 3\n+        assert_greater_than(parent_weight * num_big_parents, current_info[\"maxmempool\"] - current_info[\"bytes\"])\n+        parent_fee = (100 * mempoolmin_feerate / 1000) * (parent_weight // 4)\n+\n+        for i in range(num_big_parents):\n+            parent = self.wallet.create_self_transfer(fee=parent_fee, target_weight=parent_weight, confirmed_only=True)\n+            parent_utxos.append(parent[\"new_utxo\"])\n+            package_hex.append(parent[\"hex\"])\n+            package_txids.append(parent[\"txid\"])\n+            # There is room for each of these transactions independently\n+            assert node.testmempoolaccept([parent[\"hex\"]])[0][\"allowed\"]\n+\n+        # Create a child spending everything, CPFPing the low-feerate parent just above mempool\n+        # minimum feerate. It's important not to bump too much as otherwise mempool_evicted_tx would\n+        # not be evicted, making this test much less meaningful. Approximate size of cpfp_parent +\n+        # child is.\n+        approx_child_vsize = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos)[\"tx\"].get_vsize()\n+        cpfp_fee = (mempoolmin_feerate / 1000) * (cpfp_parent[\"tx\"].get_vsize() + approx_child_vsize) - cpfp_parent[\"fee\"]\n+        # Specific number of satoshis to fit within a small window. The parent_cpfp + child package needs to be\n+        # - When there is mid-package eviction, high enough feerate to meet the new mempoolminfee\n+        # - When there is no mid-package eviction, low enough feerate to be evicted immediately after submission.\n+        magic_satoshis = 1200\n+        cpfp_satoshis = int(cpfp_fee * COIN) + magic_satoshis\n+\n+        child = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos, fee_per_output=cpfp_satoshis)\n+        package_hex.append(child[\"hex\"])\n+        package_txids.append(child[\"txid\"])\n+\n+        # Package should be submitted, temporarily exceeding maxmempool, and then evicted.\n+        with node.assert_debug_log(expected_msgs=[\"rolling minimum fee bumped\"]):\n+            assert_raises_rpc_error(-26, \"mempool full\", node.submitpackage, package_hex)\n+\n+        # Maximum size must never be exceeded.\n+        assert_greater_than(node.getmempoolinfo()[\"maxmempool\"], node.getmempoolinfo()[\"bytes\"])\n+\n+        # Evicted transaction and its descendants must not be in mempool.\n+        resulting_mempool_txids = node.getrawmempool()\n+        assert mempool_evicted_tx[\"txid\"] not in resulting_mempool_txids\n+        assert cpfp_parent[\"txid\"] not in resulting_mempool_txids\n+        assert child[\"txid\"] not in resulting_mempool_txids",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303185024",
      "id" : 1303185024,
      "in_reply_to_id" : 1301942552,
      "line" : 167,
      "node_id" : "PRRC_kwDOABII585NrQaA",
      "original_commit_id" : "3729ee483688da8427c9228de01407777d4e4691",
      "original_line" : 167,
      "original_position" : 107,
      "original_start_line" : null,
      "path" : "test/functional/mempool_limit.py",
      "position" : 149,
      "pull_request_review_id" : 1591861267,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303185024/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T15:21:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303185024",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303250157"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303250157"
         }
      },
      "author_association" : "MEMBER",
      "body" : "this side-effect should be noted in the declaration comments",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-23T16:11:37Z",
      "diff_hunk" : "@@ -982,6 +982,7 @@ bool CCoinsViewMemPool::GetCoin(const COutPoint &outpoint, Coin &coin) const {\n     if (ptx) {\n         if (outpoint.n < ptx->vout.size()) {\n             coin = Coin(ptx->vout[outpoint.n], MEMPOOL_HEIGHT, false);\n+            m_non_base_coins.emplace(outpoint);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303250157",
      "id" : 1303250157,
      "line" : 985,
      "node_id" : "PRRC_kwDOABII585NrgTt",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 985,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : 4,
      "pull_request_review_id" : 1591955738,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303250157/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T16:51:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303250157",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303253413"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303253413"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n     * Set of all coins that have been fetched from mempool or package (not base). Used to internally track\r\n```",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-23T16:13:20Z",
      "diff_hunk" : "@@ -839,6 +839,12 @@ class CCoinsViewMemPool : public CCoinsViewBacked\n     * validation, since we can access transaction outputs without submitting them to mempool.\n     */\n     std::unordered_map<COutPoint, Coin, SaltedOutpointHasher> m_temp_added;\n+\n+    /**\n+     * Set of all coins that have been fetched from mempool (not base). Used to internally track",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303253413",
      "id" : 1303253413,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585NrhGl",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 844,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 1591955738,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303253413/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T16:51:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303253413",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303262613"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303262613"
         }
      },
      "author_association" : "MEMBER",
      "body" : "why is this necessary after `PackageAddTransaction` changes https://github.com/bitcoin/bitcoin/pull/28251/files#diff-c065d4cd2398ad0dbcef393c5dfc53f465bf44723348892395fffd2fb3bac522R998 ; shouldn't `non_base_coins` be a superset of `m_temp_added`?",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-23T16:20:51Z",
      "diff_hunk" : "@@ -994,8 +995,22 @@ void CCoinsViewMemPool::PackageAddTransaction(const CTransactionRef& tx)\n {\n     for (unsigned int n = 0; n < tx->vout.size(); ++n) {\n         m_temp_added.emplace(COutPoint(tx->GetHash(), n), Coin(tx->vout[n], MEMPOOL_HEIGHT, false));\n+        m_non_base_coins.emplace(COutPoint(tx->GetHash(), n));\n     }\n }\n+std::unordered_set<COutPoint, SaltedOutpointHasher> CCoinsViewMemPool::GetNonBaseCoins() const\n+{\n+    std::unordered_set<COutPoint, SaltedOutpointHasher> non_base_coins(m_non_base_coins.cbegin(), m_non_base_coins.cend());\n+    for (const auto& [coin, _] : m_temp_added) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303262613",
      "id" : 1303262613,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585NrjWV",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 1004,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1591955738,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303262613/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T16:51:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303262613",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303286812"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303286812"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should have a note that the importance of the submission order is paramount to the test catching the issue. \r\n\r\ni.e. something like this passes without the fix:\r\n```\r\npackage_hex = [replacement_tx[\"hex\"], cpfp_parent[\"hex\"], child[\"hex\"]]\r\n```",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-23T16:42:22Z",
      "diff_hunk" : "@@ -86,13 +86,172 @@ def fill_mempool(self):\n         assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+    def test_mid_package_eviction(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction\")\n+\n+        self.restart_node(0, extra_args=self.extra_args[0])\n+\n+        # Restarting the node resets mempool minimum feerate\n+        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n+        self.fill_mempool()\n+        current_info = node.getmempoolinfo()\n+        mempoolmin_feerate = current_info[\"mempoolminfee\"]\n+        assert_greater_than(mempoolmin_feerate, get_first_eviction_score(node))\n+\n+        package_hex = []\n+        # UTXOs to be spent by the ultimate child transaction\n+        parent_utxos = []\n+\n+        evicted_weight = 8000\n+        # Mempool transaction which is evicted due to being at the \"bottom\" of the mempool when the\n+        # mempool overflows and evicts by descendant score. It's important that the eviction doesn't\n+        # happen in the middle of package evaluation, as it can invalidate the coins cache.\n+        mempool_evicted_tx = self.wallet.send_self_transfer(\n+            from_node=node,\n+            fee=(mempoolmin_feerate / 1000) * (evicted_weight // 4) + Decimal('0.000001'),\n+            target_weight=evicted_weight,\n+            confirmed_only=True\n+        )\n+        # Already in mempool when package is submitted.\n+        assert mempool_evicted_tx[\"txid\"] in node.getrawmempool()\n+\n+        # This parent spends the above mempool transaction that exists when its inputs are first\n+        # looked up, but disappears later. It is rejected for being too low fee (but eligible for\n+        # reconsideration), and its inputs are cached. When the mempool transaction is evicted, its\n+        # coin is no longer available, but the cache could still contains the tx.\n+        cpfp_parent = self.wallet.create_self_transfer(\n+            utxo_to_spend=mempool_evicted_tx[\"new_utxo\"],\n+            fee_rate=mempoolmin_feerate - Decimal('0.00001'),\n+            confirmed_only=True)\n+        package_hex.append(cpfp_parent[\"hex\"])\n+        parent_utxos.append(cpfp_parent[\"new_utxo\"])\n+        assert_equal(node.testmempoolaccept([cpfp_parent[\"hex\"]])[0][\"reject-reason\"], \"mempool min fee not met\")\n+\n+        self.wallet.rescan_utxos()\n+\n+        # Series of parents that don't need CPFP and are submitted individually. Each one is large and\n+        # high feerate, which means they should trigger eviction but not be evicted.\n+        parent_weight = 100000\n+        num_big_parents = 3\n+        assert_greater_than(parent_weight * num_big_parents, current_info[\"maxmempool\"] - current_info[\"bytes\"])\n+        parent_fee = (100 * mempoolmin_feerate / 1000) * (parent_weight // 4)\n+\n+        big_parent_txids = []\n+        for i in range(num_big_parents):\n+            parent = self.wallet.create_self_transfer(fee=parent_fee, target_weight=parent_weight, confirmed_only=True)\n+            parent_utxos.append(parent[\"new_utxo\"])\n+            package_hex.append(parent[\"hex\"])\n+            big_parent_txids.append(parent[\"txid\"])\n+            # There is room for each of these transactions independently\n+            assert node.testmempoolaccept([parent[\"hex\"]])[0][\"allowed\"]\n+\n+        # Create a child spending everything, bumping cpfp_parent just above mempool minimum\n+        # feerate. It's important not to bump too much as otherwise mempool_evicted_tx would not be\n+        # evicted, making this test much less meaningful.\n+        approx_child_vsize = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos)[\"tx\"].get_vsize()\n+        cpfp_fee = (mempoolmin_feerate / 1000) * (cpfp_parent[\"tx\"].get_vsize() + approx_child_vsize) - cpfp_parent[\"fee\"]\n+        # Specific number of satoshis to fit within a small window. The parent_cpfp + child package needs to be\n+        # - When there is mid-package eviction, high enough feerate to meet the new mempoolminfee\n+        # - When there is no mid-package eviction, low enough feerate to be evicted immediately after submission.\n+        magic_satoshis = 1200\n+        cpfp_satoshis = int(cpfp_fee * COIN) + magic_satoshis\n+\n+        child = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos, fee_per_output=cpfp_satoshis)\n+        package_hex.append(child[\"hex\"])\n+\n+        # Package should be submitted, temporarily exceeding maxmempool, and then evicted.\n+        with node.assert_debug_log(expected_msgs=[\"rolling minimum fee bumped\"]):\n+            assert_raises_rpc_error(-26, \"mempool full\", node.submitpackage, package_hex)\n+\n+        # Maximum size must never be exceeded.\n+        assert_greater_than(node.getmempoolinfo()[\"maxmempool\"], node.getmempoolinfo()[\"bytes\"])\n+\n+        # Evicted transaction and its descendants must not be in mempool.\n+        resulting_mempool_txids = node.getrawmempool()\n+        assert mempool_evicted_tx[\"txid\"] not in resulting_mempool_txids\n+        assert cpfp_parent[\"txid\"] not in resulting_mempool_txids\n+        assert child[\"txid\"] not in resulting_mempool_txids\n+        for txid in big_parent_txids:\n+            assert txid in resulting_mempool_txids\n+\n+    def test_mid_package_replacement(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where an early tx depends on a later-replaced mempool tx\")\n+\n+        self.restart_node(0, extra_args=self.extra_args[0])\n+\n+        # Restarting the node resets mempool minimum feerate\n+        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n+        self.fill_mempool()\n+        current_info = node.getmempoolinfo()\n+        mempoolmin_feerate = current_info[\"mempoolminfee\"]\n+        assert_greater_than(mempoolmin_feerate, get_first_eviction_score(node))\n+\n+        # Mempool transaction which is evicted due to being at the \"bottom\" of the mempool when the\n+        # mempool overflows and evicts by descendant score. It's important that the eviction doesn't\n+        # happen in the middle of package evaluation, as it can invalidate the coins cache.\n+        double_spent_utxo = self.wallet.get_utxo(confirmed_only=True)\n+        replaced_tx = self.wallet.send_self_transfer(\n+            from_node=node,\n+            utxo_to_spend=double_spent_utxo,\n+            fee_rate=mempoolmin_feerate,\n+            confirmed_only=True\n+        )\n+        # Already in mempool when package is submitted.\n+        assert replaced_tx[\"txid\"] in node.getrawmempool()\n+\n+        # This parent spends the above mempool transaction that exists when its inputs are first\n+        # looked up, but disappears later. It is rejected for being too low fee (but eligible for\n+        # reconsideration), and its inputs are cached. When the mempool transaction is evicted, its\n+        # coin is no longer available, but the cache could still contain the tx.\n+        cpfp_parent = self.wallet.create_self_transfer(\n+            utxo_to_spend=replaced_tx[\"new_utxo\"],\n+            fee_rate=mempoolmin_feerate - Decimal('0.00001'),\n+            confirmed_only=True)\n+\n+        self.wallet.rescan_utxos()\n+\n+        # Parent that replaces the parent of cpfp_parent.\n+        replacement_tx = self.wallet.create_self_transfer(\n+            utxo_to_spend=double_spent_utxo,\n+            fee_rate=10*mempoolmin_feerate,\n+            confirmed_only=True\n+        )\n+        parent_utxos = [cpfp_parent[\"new_utxo\"], replacement_tx[\"new_utxo\"]]\n+\n+        # Create a child spending everything, CPFPing the low-feerate parent.\n+        approx_child_vsize = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos)[\"tx\"].get_vsize()\n+        cpfp_fee = (2 * mempoolmin_feerate / 1000) * (cpfp_parent[\"tx\"].get_vsize() + approx_child_vsize) - cpfp_parent[\"fee\"]\n+        child = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos, fee_per_output=int(cpfp_fee * COIN))\n+        package_hex = [cpfp_parent[\"hex\"], replacement_tx[\"hex\"], child[\"hex\"]]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303286812",
      "id" : 1303286812,
      "line" : 223,
      "node_id" : "PRRC_kwDOABII585NrpQc",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 223,
      "original_position" : 146,
      "original_start_line" : null,
      "path" : "test/functional/mempool_limit.py",
      "position" : 205,
      "pull_request_review_id" : 1591955738,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303286812/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T16:51:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303286812",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303930607"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303930607"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\nvalidation.cpp:1369:12: error: constness of 'result' prevents automatic move [performance-no-automatic-move,-warnings-as-errors]\r\n    return result;",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-24T07:40:30Z",
      "diff_hunk" : "@@ -1326,6 +1325,47 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n     return PackageMempoolAcceptResult(package_state, std::move(results));\n }\n \n+PackageMempoolAcceptResult MemPoolAccept::AcceptSubPackage(const std::vector<CTransactionRef>& subpackage, ATMPArgs& args)\n+{\n+    AssertLockHeld(::cs_main);\n+    AssertLockHeld(m_pool.cs);\n+    const auto result = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_pool.cs) {\n+        if (subpackage.size() > 1) {\n+            return AcceptMultipleTransactions(subpackage, args);\n+        }\n+        const auto& tx = subpackage.front();\n+        ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+        const auto single_res = AcceptSingleTransaction(tx, single_args);\n+        PackageValidationState package_state_wrapped;\n+        if (single_res.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n+            package_state_wrapped.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+        }\n+        return PackageMempoolAcceptResult(package_state_wrapped, {{tx->GetWitnessHash(), single_res}});\n+    }();\n+    // There are 3 kinds of coins in m_view:\n+    // (1) Temporary coins from the transactions in subpackage, constructed by m_viewmempool.\n+    // (2) Mempool coins from transactions in the mempool, constructed by m_viewmempool.\n+    // (3) Chainstate coins fetched from our current UTXO set.\n+    //\n+    // (1) Temporary coins need to be removed. If transactions were submitted to the mempool,\n+    // m_viewmempool will be able to fetch them from there. If they weren't submitted to\n+    // mempool, it is incorrect to keep them - future calls may try to spend those coins that\n+    // don't actually exist.\n+    // (2) Mempool coins also need to be removed. If the mempool contents have changed, coins\n+    // previously fetched from mempool may now be spent or nonexistent. Those coins need to be\n+    // deleted from m_view.\n+    // (3) Chainstate coins don't need to be removed, as the chainstate has not changed (we are\n+    // holding cs_main and no blocks have been processed). They *should not* be removed, as we\n+    // wouldn't want to fetch them again.\n+    for (const auto& outpoint : m_viewmempool.GetNonBaseCoins()) {\n+        // We also need to manually delete these coins from m_view because it has cached copies\n+        // of the coins it fetched from m_viewmempool when they were connected.\n+        m_view.Uncache(outpoint);\n+    }\n+    m_viewmempool.Reset();\n+    return result;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303930607",
      "id" : 1303930607,
      "line" : 1373,
      "node_id" : "PRRC_kwDOABII585NuGbv",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 1373,
      "original_position" : 139,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 146,
      "pull_request_review_id" : 1592973079,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303930607/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-24T07:40:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303930607",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1304490960"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304490960"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    // This is an optimization to not re-fetch chainstate coins into the cache. There are 3 kinds of coins in m_view:\r\n```",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-24T15:15:14Z",
      "diff_hunk" : "@@ -1326,6 +1325,47 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n     return PackageMempoolAcceptResult(package_state, std::move(results));\n }\n \n+PackageMempoolAcceptResult MemPoolAccept::AcceptSubPackage(const std::vector<CTransactionRef>& subpackage, ATMPArgs& args)\n+{\n+    AssertLockHeld(::cs_main);\n+    AssertLockHeld(m_pool.cs);\n+    const auto result = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_pool.cs) {\n+        if (subpackage.size() > 1) {\n+            return AcceptMultipleTransactions(subpackage, args);\n+        }\n+        const auto& tx = subpackage.front();\n+        ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+        const auto single_res = AcceptSingleTransaction(tx, single_args);\n+        PackageValidationState package_state_wrapped;\n+        if (single_res.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n+            package_state_wrapped.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+        }\n+        return PackageMempoolAcceptResult(package_state_wrapped, {{tx->GetWitnessHash(), single_res}});\n+    }();\n+    // There are 3 kinds of coins in m_view:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1304490960",
      "id" : 1304490960,
      "line" : 1348,
      "node_id" : "PRRC_kwDOABII585NwPPQ",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 1348,
      "original_position" : 118,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 121,
      "pull_request_review_id" : 1593858718,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304490960/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-24T19:20:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304490960",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1304701809"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304701809"
         }
      },
      "author_association" : "MEMBER",
      "body" : "commit message \"[refactor] back-fill m_tx_results in AcceptPackage\" is old; should be `results_final`?",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-24T18:16:02Z",
      "diff_hunk" : "@@ -1505,32 +1505,28 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n         }\n     }\n \n-    // Quit early because package validation won't change the result or the entire package has\n-    // already been submitted.\n-    if (quit_early || txns_package_eval.empty()) {\n-        for (const auto& [wtxid, mempoolaccept_res] : individual_results_nonfinal) {\n-            Assume(results_final.emplace(wtxid, mempoolaccept_res).second);\n-            Assume(mempoolaccept_res.m_result_type == MempoolAcceptResult::ResultType::INVALID);\n-        }\n-        return PackageMempoolAcceptResult(package_state_quit_early, std::move(results_final));\n-    }\n-    // Validate the (deduplicated) transactions as a package. Note that submission_result has its\n-    // own PackageValidationState; package_state_quit_early is unused past this point.\n-    auto submission_result = AcceptSubPackage(txns_package_eval, args);\n-    // Include already-in-mempool transaction results in the final result.\n-    for (const auto& [wtxid, mempoolaccept_res] : results_final) {\n-        Assume(submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res).second);\n-        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n-    }\n-    if (submission_result.m_state.GetResult() == PackageValidationResult::PCKG_TX) {\n-        // Package validation failed because one or more transactions failed. Provide a result for\n-        // each transaction; if a transaction doesn't have an entry in submission_result,\n-        // include the previous individual failure reason.\n-        submission_result.m_tx_results.insert(individual_results_nonfinal.cbegin(),\n-                                              individual_results_nonfinal.cend());\n-        Assume(submission_result.m_tx_results.size() == package.size());\n-    }\n-    return submission_result;\n+    auto final_submission_result = quit_early || txns_package_eval.empty() ? PackageMempoolAcceptResult(package_state_quit_early, {}) :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1304701809",
      "id" : 1304701809,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585NxCtx",
      "original_commit_id" : "a98da1a9844cdbc1cdeeeed9d4d9b80ea0cb7ee6",
      "original_line" : 1508,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1593858718,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304701809/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-24T19:20:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304701809",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1304712148"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304712148"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Looks like we're considering `individual_results_nonfinal` after the subpackage one, contrary to the description of `individual_results_nonfinal` which says that in the event of multiple failures, the individual result is reported. Looks like there's no test coverage of this case; how important is it?",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-24T18:27:23Z",
      "diff_hunk" : "@@ -1505,32 +1505,28 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n         }\n     }\n \n-    // Quit early because package validation won't change the result or the entire package has\n-    // already been submitted.\n-    if (quit_early || txns_package_eval.empty()) {\n-        for (const auto& [wtxid, mempoolaccept_res] : individual_results_nonfinal) {\n-            Assume(results_final.emplace(wtxid, mempoolaccept_res).second);\n-            Assume(mempoolaccept_res.m_result_type == MempoolAcceptResult::ResultType::INVALID);\n-        }\n-        return PackageMempoolAcceptResult(package_state_quit_early, std::move(results_final));\n-    }\n-    // Validate the (deduplicated) transactions as a package. Note that submission_result has its\n-    // own PackageValidationState; package_state_quit_early is unused past this point.\n-    auto submission_result = AcceptSubPackage(txns_package_eval, args);\n-    // Include already-in-mempool transaction results in the final result.\n-    for (const auto& [wtxid, mempoolaccept_res] : results_final) {\n-        Assume(submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res).second);\n-        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n-    }\n-    if (submission_result.m_state.GetResult() == PackageValidationResult::PCKG_TX) {\n-        // Package validation failed because one or more transactions failed. Provide a result for\n-        // each transaction; if a transaction doesn't have an entry in submission_result,\n-        // include the previous individual failure reason.\n-        submission_result.m_tx_results.insert(individual_results_nonfinal.cbegin(),\n-                                              individual_results_nonfinal.cend());\n-        Assume(submission_result.m_tx_results.size() == package.size());\n-    }\n-    return submission_result;\n+    auto final_submission_result = quit_early || txns_package_eval.empty() ? PackageMempoolAcceptResult(package_state_quit_early, {}) :\n+        AcceptSubPackage(txns_package_eval, args);\n+    PackageValidationState& package_state_final = final_submission_result.m_state;\n+\n+    for (const auto& tx : package) {\n+        const auto& wtxid = tx->GetWitnessHash();\n+        if (final_submission_result.m_tx_results.count(wtxid) > 0) {\n+            // We shouldn't have re-submitted if the tx result was already in results_final.\n+            Assume(results_final.count(wtxid) == 0);\n+            results_final.emplace(wtxid, final_submission_result.m_tx_results.at(wtxid));\n+        } else if (const auto it{results_final.find(wtxid)}; it != results_final.end()) {\n+            // Already-in-mempool transaction.\n+            Assume(it->second.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n+            Assume(individual_results_nonfinal.count(wtxid) == 0);\n+        } else if (const auto it{individual_results_nonfinal.find(wtxid)}; it != individual_results_nonfinal.end()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1304712148",
      "id" : 1304712148,
      "line" : 1541,
      "node_id" : "PRRC_kwDOABII585NxFPU",
      "original_commit_id" : "a98da1a9844cdbc1cdeeeed9d4d9b80ea0cb7ee6",
      "original_line" : 1541,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 253,
      "pull_request_review_id" : 1593858718,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304712148/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-24T19:20:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304712148",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1304736690"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304736690"
         }
      },
      "author_association" : "MEMBER",
      "body" : "from commit message in 4cd3b8f2edb3176fef4dbc6109188d62e7dd2ba6\r\n\r\n\"- We cache a coin from a mempool transaction in m_view, but the coin\r\n      disappears due to eviction.\"\r\n\r\nNo longer true with the `AcceptSubPackage` changes in place",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-24T18:52:41Z",
      "diff_hunk" : "@@ -516,7 +516,7 @@ class MemPoolAccept\n                             /* m_coins_to_uncache */ package_args.m_coins_to_uncache,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1304736690",
      "id" : 1304736690,
      "line" : 516,
      "node_id" : "PRRC_kwDOABII585NxLOy",
      "original_commit_id" : "4cd3b8f2edb3176fef4dbc6109188d62e7dd2ba6",
      "original_line" : 516,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 1,
      "pull_request_review_id" : 1593858718,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304736690/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-24T19:20:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304736690",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1304756440"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304756440"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```Suggestion\r\n                package_state_final.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\r\n                results_final.emplace(wtxid, MempoolAcceptResult::Failure(mempool_full_state));\r\n```\r\n?",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-24T19:12:43Z",
      "diff_hunk" : "@@ -1509,16 +1497,36 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n         AcceptSubPackage(txns_package_eval, args);\n     PackageValidationState& package_state_final = final_submission_result.m_state;\n \n+    // Make sure we haven't exceeded max mempool size.\n+    // Package transactions that were submitted to mempool or already in mempool may be evicted.\n+    LimitMempoolSize(m_pool, m_active_chainstate.CoinsTip());\n+\n     for (const auto& tx : package) {\n+        // In case a transaction was in mempool but was evicted in the call to LimitMempoolSize().\n+        TxValidationState mempool_full_state;\n+        mempool_full_state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"mempool full\");\n         const auto& wtxid = tx->GetWitnessHash();\n         if (final_submission_result.m_tx_results.count(wtxid) > 0) {\n             // We shouldn't have re-submitted if the tx result was already in results_final.\n             Assume(results_final.count(wtxid) == 0);\n-            results_final.emplace(wtxid, final_submission_result.m_tx_results.at(wtxid));\n+            // If it was submitted, check to see if the tx is still in the mempool. It could have\n+            // been evicted due to LimitMempoolSize() above.\n+            const auto& txresult = final_submission_result.m_tx_results.at(wtxid);\n+            if (txresult.m_result_type == MempoolAcceptResult::ResultType::VALID && !m_pool.exists(GenTxid::Wtxid(wtxid))) {\n+                package_state_final.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+                results_final.emplace(wtxid, MempoolAcceptResult::Failure(mempool_full_state));\n+            } else {\n+                results_final.emplace(wtxid, txresult);\n+            }\n         } else if (const auto it{results_final.find(wtxid)}; it != results_final.end()) {\n-            // Already-in-mempool transaction.\n+            // Already-in-mempool transaction. Check to see if it's still in the mempool. It could\n+            // have been evicted due to LimitMempoolSize() above. Check by txid to include the\n+            // same-txid-different-witness case.\n             Assume(it->second.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n             Assume(individual_results_nonfinal.count(wtxid) == 0);\n+            if (!m_pool.exists(GenTxid::Txid(tx->GetHash()))) {\n+                package_state_final.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1304756440",
      "id" : 1304756440,
      "line" : 1534,
      "node_id" : "PRRC_kwDOABII585NxQDY",
      "original_commit_id" : "4cd3b8f2edb3176fef4dbc6109188d62e7dd2ba6",
      "original_line" : 1534,
      "original_position" : 92,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 246,
      "pull_request_review_id" : 1593858718,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304756440/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-24T19:20:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304756440",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305441088"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305441088"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T09:44:04Z",
      "diff_hunk" : "@@ -982,6 +982,7 @@ bool CCoinsViewMemPool::GetCoin(const COutPoint &outpoint, Coin &coin) const {\n     if (ptx) {\n         if (outpoint.n < ptx->vout.size()) {\n             coin = Coin(ptx->vout[outpoint.n], MEMPOOL_HEIGHT, false);\n+            m_non_base_coins.emplace(outpoint);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305441088",
      "id" : 1305441088,
      "in_reply_to_id" : 1303250157,
      "line" : 985,
      "node_id" : "PRRC_kwDOABII585Nz3NA",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 985,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : 4,
      "pull_request_review_id" : 1595348940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305441088/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305441088",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305444269"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305444269"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes. I've changed this to just return `m_non_base_coins`.",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T09:46:35Z",
      "diff_hunk" : "@@ -994,8 +995,22 @@ void CCoinsViewMemPool::PackageAddTransaction(const CTransactionRef& tx)\n {\n     for (unsigned int n = 0; n < tx->vout.size(); ++n) {\n         m_temp_added.emplace(COutPoint(tx->GetHash(), n), Coin(tx->vout[n], MEMPOOL_HEIGHT, false));\n+        m_non_base_coins.emplace(COutPoint(tx->GetHash(), n));\n     }\n }\n+std::unordered_set<COutPoint, SaltedOutpointHasher> CCoinsViewMemPool::GetNonBaseCoins() const\n+{\n+    std::unordered_set<COutPoint, SaltedOutpointHasher> non_base_coins(m_non_base_coins.cbegin(), m_non_base_coins.cend());\n+    for (const auto& [coin, _] : m_temp_added) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305444269",
      "id" : 1305444269,
      "in_reply_to_id" : 1303262613,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Nz3-t",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 1004,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1595348940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305444269/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305444269",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305445765"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305445765"
         }
      },
      "author_association" : "MEMBER",
      "body" : "added",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T09:47:49Z",
      "diff_hunk" : "@@ -839,6 +839,12 @@ class CCoinsViewMemPool : public CCoinsViewBacked\n     * validation, since we can access transaction outputs without submitting them to mempool.\n     */\n     std::unordered_map<COutPoint, Coin, SaltedOutpointHasher> m_temp_added;\n+\n+    /**\n+     * Set of all coins that have been fetched from mempool (not base). Used to internally track",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305445765",
      "id" : 1305445765,
      "in_reply_to_id" : 1303253413,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Nz4WF",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 844,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 1595348940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305445765/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305445765",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305500514"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305500514"
         }
      },
      "author_association" : "MEMBER",
      "body" : "added more detail to this comment block",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T10:41:31Z",
      "diff_hunk" : "@@ -1326,6 +1325,47 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n     return PackageMempoolAcceptResult(package_state, std::move(results));\n }\n \n+PackageMempoolAcceptResult MemPoolAccept::AcceptSubPackage(const std::vector<CTransactionRef>& subpackage, ATMPArgs& args)\n+{\n+    AssertLockHeld(::cs_main);\n+    AssertLockHeld(m_pool.cs);\n+    const auto result = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_pool.cs) {\n+        if (subpackage.size() > 1) {\n+            return AcceptMultipleTransactions(subpackage, args);\n+        }\n+        const auto& tx = subpackage.front();\n+        ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+        const auto single_res = AcceptSingleTransaction(tx, single_args);\n+        PackageValidationState package_state_wrapped;\n+        if (single_res.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n+            package_state_wrapped.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+        }\n+        return PackageMempoolAcceptResult(package_state_wrapped, {{tx->GetWitnessHash(), single_res}});\n+    }();\n+    // There are 3 kinds of coins in m_view:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305500514",
      "id" : 1305500514,
      "in_reply_to_id" : 1304490960,
      "line" : 1348,
      "node_id" : "PRRC_kwDOABII585N0Fti",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 1348,
      "original_position" : 118,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 121,
      "pull_request_review_id" : 1595348940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305500514/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305500514",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305500619"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305500619"
         }
      },
      "author_association" : "MEMBER",
      "body" : "thanks, fixed",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T10:41:38Z",
      "diff_hunk" : "@@ -1326,6 +1325,47 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n     return PackageMempoolAcceptResult(package_state, std::move(results));\n }\n \n+PackageMempoolAcceptResult MemPoolAccept::AcceptSubPackage(const std::vector<CTransactionRef>& subpackage, ATMPArgs& args)\n+{\n+    AssertLockHeld(::cs_main);\n+    AssertLockHeld(m_pool.cs);\n+    const auto result = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_pool.cs) {\n+        if (subpackage.size() > 1) {\n+            return AcceptMultipleTransactions(subpackage, args);\n+        }\n+        const auto& tx = subpackage.front();\n+        ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+        const auto single_res = AcceptSingleTransaction(tx, single_args);\n+        PackageValidationState package_state_wrapped;\n+        if (single_res.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n+            package_state_wrapped.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+        }\n+        return PackageMempoolAcceptResult(package_state_wrapped, {{tx->GetWitnessHash(), single_res}});\n+    }();\n+    // There are 3 kinds of coins in m_view:\n+    // (1) Temporary coins from the transactions in subpackage, constructed by m_viewmempool.\n+    // (2) Mempool coins from transactions in the mempool, constructed by m_viewmempool.\n+    // (3) Chainstate coins fetched from our current UTXO set.\n+    //\n+    // (1) Temporary coins need to be removed. If transactions were submitted to the mempool,\n+    // m_viewmempool will be able to fetch them from there. If they weren't submitted to\n+    // mempool, it is incorrect to keep them - future calls may try to spend those coins that\n+    // don't actually exist.\n+    // (2) Mempool coins also need to be removed. If the mempool contents have changed, coins\n+    // previously fetched from mempool may now be spent or nonexistent. Those coins need to be\n+    // deleted from m_view.\n+    // (3) Chainstate coins don't need to be removed, as the chainstate has not changed (we are\n+    // holding cs_main and no blocks have been processed). They *should not* be removed, as we\n+    // wouldn't want to fetch them again.\n+    for (const auto& outpoint : m_viewmempool.GetNonBaseCoins()) {\n+        // We also need to manually delete these coins from m_view because it has cached copies\n+        // of the coins it fetched from m_viewmempool when they were connected.\n+        m_view.Uncache(outpoint);\n+    }\n+    m_viewmempool.Reset();\n+    return result;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305500619",
      "id" : 1305500619,
      "in_reply_to_id" : 1303930607,
      "line" : 1373,
      "node_id" : "PRRC_kwDOABII585N0FvL",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 1373,
      "original_position" : 139,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 146,
      "pull_request_review_id" : 1595348940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305500619/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305500619",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305501594"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305501594"
         }
      },
      "author_association" : "MEMBER",
      "body" : "changed",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T10:42:56Z",
      "diff_hunk" : "@@ -1505,32 +1505,28 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n         }\n     }\n \n-    // Quit early because package validation won't change the result or the entire package has\n-    // already been submitted.\n-    if (quit_early || txns_package_eval.empty()) {\n-        for (const auto& [wtxid, mempoolaccept_res] : individual_results_nonfinal) {\n-            Assume(results_final.emplace(wtxid, mempoolaccept_res).second);\n-            Assume(mempoolaccept_res.m_result_type == MempoolAcceptResult::ResultType::INVALID);\n-        }\n-        return PackageMempoolAcceptResult(package_state_quit_early, std::move(results_final));\n-    }\n-    // Validate the (deduplicated) transactions as a package. Note that submission_result has its\n-    // own PackageValidationState; package_state_quit_early is unused past this point.\n-    auto submission_result = AcceptSubPackage(txns_package_eval, args);\n-    // Include already-in-mempool transaction results in the final result.\n-    for (const auto& [wtxid, mempoolaccept_res] : results_final) {\n-        Assume(submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res).second);\n-        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n-    }\n-    if (submission_result.m_state.GetResult() == PackageValidationResult::PCKG_TX) {\n-        // Package validation failed because one or more transactions failed. Provide a result for\n-        // each transaction; if a transaction doesn't have an entry in submission_result,\n-        // include the previous individual failure reason.\n-        submission_result.m_tx_results.insert(individual_results_nonfinal.cbegin(),\n-                                              individual_results_nonfinal.cend());\n-        Assume(submission_result.m_tx_results.size() == package.size());\n-    }\n-    return submission_result;\n+    auto final_submission_result = quit_early || txns_package_eval.empty() ? PackageMempoolAcceptResult(package_state_quit_early, {}) :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305501594",
      "id" : 1305501594,
      "in_reply_to_id" : 1304701809,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585N0F-a",
      "original_commit_id" : "a98da1a9844cdbc1cdeeeed9d4d9b80ea0cb7ee6",
      "original_line" : 1508,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1595348940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305501594/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305501594",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305501801"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305501801"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Bad rebase. Fixed",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T10:43:12Z",
      "diff_hunk" : "@@ -1509,16 +1497,36 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n         AcceptSubPackage(txns_package_eval, args);\n     PackageValidationState& package_state_final = final_submission_result.m_state;\n \n+    // Make sure we haven't exceeded max mempool size.\n+    // Package transactions that were submitted to mempool or already in mempool may be evicted.\n+    LimitMempoolSize(m_pool, m_active_chainstate.CoinsTip());\n+\n     for (const auto& tx : package) {\n+        // In case a transaction was in mempool but was evicted in the call to LimitMempoolSize().\n+        TxValidationState mempool_full_state;\n+        mempool_full_state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"mempool full\");\n         const auto& wtxid = tx->GetWitnessHash();\n         if (final_submission_result.m_tx_results.count(wtxid) > 0) {\n             // We shouldn't have re-submitted if the tx result was already in results_final.\n             Assume(results_final.count(wtxid) == 0);\n-            results_final.emplace(wtxid, final_submission_result.m_tx_results.at(wtxid));\n+            // If it was submitted, check to see if the tx is still in the mempool. It could have\n+            // been evicted due to LimitMempoolSize() above.\n+            const auto& txresult = final_submission_result.m_tx_results.at(wtxid);\n+            if (txresult.m_result_type == MempoolAcceptResult::ResultType::VALID && !m_pool.exists(GenTxid::Wtxid(wtxid))) {\n+                package_state_final.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+                results_final.emplace(wtxid, MempoolAcceptResult::Failure(mempool_full_state));\n+            } else {\n+                results_final.emplace(wtxid, txresult);\n+            }\n         } else if (const auto it{results_final.find(wtxid)}; it != results_final.end()) {\n-            // Already-in-mempool transaction.\n+            // Already-in-mempool transaction. Check to see if it's still in the mempool. It could\n+            // have been evicted due to LimitMempoolSize() above. Check by txid to include the\n+            // same-txid-different-witness case.\n             Assume(it->second.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n             Assume(individual_results_nonfinal.count(wtxid) == 0);\n+            if (!m_pool.exists(GenTxid::Txid(tx->GetHash()))) {\n+                package_state_final.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305501801",
      "id" : 1305501801,
      "in_reply_to_id" : 1304756440,
      "line" : 1534,
      "node_id" : "PRRC_kwDOABII585N0GBp",
      "original_commit_id" : "4cd3b8f2edb3176fef4dbc6109188d62e7dd2ba6",
      "original_line" : 1534,
      "original_position" : 92,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 246,
      "pull_request_review_id" : 1595348940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305501801/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305501801",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305529484"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305529484"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've changed the comment above `results_final` and `individual_results_nonfinal` to be accurate to this PR and to #26711.\r\n\r\nThis is most relevant when we otherwise don't have a result for this tx. From P2P it will be helpful for rejection caching and `MaybePunish` to know whenever there was a problem with any transaction.\r\nIn this case where we override the result with \"mempool full\", it's the same result anyway (`TX_MEMPOOL_POLICY`).",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T11:16:52Z",
      "diff_hunk" : "@@ -1505,32 +1505,28 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n         }\n     }\n \n-    // Quit early because package validation won't change the result or the entire package has\n-    // already been submitted.\n-    if (quit_early || txns_package_eval.empty()) {\n-        for (const auto& [wtxid, mempoolaccept_res] : individual_results_nonfinal) {\n-            Assume(results_final.emplace(wtxid, mempoolaccept_res).second);\n-            Assume(mempoolaccept_res.m_result_type == MempoolAcceptResult::ResultType::INVALID);\n-        }\n-        return PackageMempoolAcceptResult(package_state_quit_early, std::move(results_final));\n-    }\n-    // Validate the (deduplicated) transactions as a package. Note that submission_result has its\n-    // own PackageValidationState; package_state_quit_early is unused past this point.\n-    auto submission_result = AcceptSubPackage(txns_package_eval, args);\n-    // Include already-in-mempool transaction results in the final result.\n-    for (const auto& [wtxid, mempoolaccept_res] : results_final) {\n-        Assume(submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res).second);\n-        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n-    }\n-    if (submission_result.m_state.GetResult() == PackageValidationResult::PCKG_TX) {\n-        // Package validation failed because one or more transactions failed. Provide a result for\n-        // each transaction; if a transaction doesn't have an entry in submission_result,\n-        // include the previous individual failure reason.\n-        submission_result.m_tx_results.insert(individual_results_nonfinal.cbegin(),\n-                                              individual_results_nonfinal.cend());\n-        Assume(submission_result.m_tx_results.size() == package.size());\n-    }\n-    return submission_result;\n+    auto final_submission_result = quit_early || txns_package_eval.empty() ? PackageMempoolAcceptResult(package_state_quit_early, {}) :\n+        AcceptSubPackage(txns_package_eval, args);\n+    PackageValidationState& package_state_final = final_submission_result.m_state;\n+\n+    for (const auto& tx : package) {\n+        const auto& wtxid = tx->GetWitnessHash();\n+        if (final_submission_result.m_tx_results.count(wtxid) > 0) {\n+            // We shouldn't have re-submitted if the tx result was already in results_final.\n+            Assume(results_final.count(wtxid) == 0);\n+            results_final.emplace(wtxid, final_submission_result.m_tx_results.at(wtxid));\n+        } else if (const auto it{results_final.find(wtxid)}; it != results_final.end()) {\n+            // Already-in-mempool transaction.\n+            Assume(it->second.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n+            Assume(individual_results_nonfinal.count(wtxid) == 0);\n+        } else if (const auto it{individual_results_nonfinal.find(wtxid)}; it != individual_results_nonfinal.end()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305529484",
      "id" : 1305529484,
      "in_reply_to_id" : 1304712148,
      "line" : 1541,
      "node_id" : "PRRC_kwDOABII585N0MyM",
      "original_commit_id" : "a98da1a9844cdbc1cdeeeed9d4d9b80ea0cb7ee6",
      "original_line" : 1541,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 253,
      "pull_request_review_id" : 1595348940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305529484/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305529484",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305531847"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305531847"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a note",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T11:19:36Z",
      "diff_hunk" : "@@ -86,13 +86,172 @@ def fill_mempool(self):\n         assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+    def test_mid_package_eviction(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction\")\n+\n+        self.restart_node(0, extra_args=self.extra_args[0])\n+\n+        # Restarting the node resets mempool minimum feerate\n+        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n+        self.fill_mempool()\n+        current_info = node.getmempoolinfo()\n+        mempoolmin_feerate = current_info[\"mempoolminfee\"]\n+        assert_greater_than(mempoolmin_feerate, get_first_eviction_score(node))\n+\n+        package_hex = []\n+        # UTXOs to be spent by the ultimate child transaction\n+        parent_utxos = []\n+\n+        evicted_weight = 8000\n+        # Mempool transaction which is evicted due to being at the \"bottom\" of the mempool when the\n+        # mempool overflows and evicts by descendant score. It's important that the eviction doesn't\n+        # happen in the middle of package evaluation, as it can invalidate the coins cache.\n+        mempool_evicted_tx = self.wallet.send_self_transfer(\n+            from_node=node,\n+            fee=(mempoolmin_feerate / 1000) * (evicted_weight // 4) + Decimal('0.000001'),\n+            target_weight=evicted_weight,\n+            confirmed_only=True\n+        )\n+        # Already in mempool when package is submitted.\n+        assert mempool_evicted_tx[\"txid\"] in node.getrawmempool()\n+\n+        # This parent spends the above mempool transaction that exists when its inputs are first\n+        # looked up, but disappears later. It is rejected for being too low fee (but eligible for\n+        # reconsideration), and its inputs are cached. When the mempool transaction is evicted, its\n+        # coin is no longer available, but the cache could still contains the tx.\n+        cpfp_parent = self.wallet.create_self_transfer(\n+            utxo_to_spend=mempool_evicted_tx[\"new_utxo\"],\n+            fee_rate=mempoolmin_feerate - Decimal('0.00001'),\n+            confirmed_only=True)\n+        package_hex.append(cpfp_parent[\"hex\"])\n+        parent_utxos.append(cpfp_parent[\"new_utxo\"])\n+        assert_equal(node.testmempoolaccept([cpfp_parent[\"hex\"]])[0][\"reject-reason\"], \"mempool min fee not met\")\n+\n+        self.wallet.rescan_utxos()\n+\n+        # Series of parents that don't need CPFP and are submitted individually. Each one is large and\n+        # high feerate, which means they should trigger eviction but not be evicted.\n+        parent_weight = 100000\n+        num_big_parents = 3\n+        assert_greater_than(parent_weight * num_big_parents, current_info[\"maxmempool\"] - current_info[\"bytes\"])\n+        parent_fee = (100 * mempoolmin_feerate / 1000) * (parent_weight // 4)\n+\n+        big_parent_txids = []\n+        for i in range(num_big_parents):\n+            parent = self.wallet.create_self_transfer(fee=parent_fee, target_weight=parent_weight, confirmed_only=True)\n+            parent_utxos.append(parent[\"new_utxo\"])\n+            package_hex.append(parent[\"hex\"])\n+            big_parent_txids.append(parent[\"txid\"])\n+            # There is room for each of these transactions independently\n+            assert node.testmempoolaccept([parent[\"hex\"]])[0][\"allowed\"]\n+\n+        # Create a child spending everything, bumping cpfp_parent just above mempool minimum\n+        # feerate. It's important not to bump too much as otherwise mempool_evicted_tx would not be\n+        # evicted, making this test much less meaningful.\n+        approx_child_vsize = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos)[\"tx\"].get_vsize()\n+        cpfp_fee = (mempoolmin_feerate / 1000) * (cpfp_parent[\"tx\"].get_vsize() + approx_child_vsize) - cpfp_parent[\"fee\"]\n+        # Specific number of satoshis to fit within a small window. The parent_cpfp + child package needs to be\n+        # - When there is mid-package eviction, high enough feerate to meet the new mempoolminfee\n+        # - When there is no mid-package eviction, low enough feerate to be evicted immediately after submission.\n+        magic_satoshis = 1200\n+        cpfp_satoshis = int(cpfp_fee * COIN) + magic_satoshis\n+\n+        child = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos, fee_per_output=cpfp_satoshis)\n+        package_hex.append(child[\"hex\"])\n+\n+        # Package should be submitted, temporarily exceeding maxmempool, and then evicted.\n+        with node.assert_debug_log(expected_msgs=[\"rolling minimum fee bumped\"]):\n+            assert_raises_rpc_error(-26, \"mempool full\", node.submitpackage, package_hex)\n+\n+        # Maximum size must never be exceeded.\n+        assert_greater_than(node.getmempoolinfo()[\"maxmempool\"], node.getmempoolinfo()[\"bytes\"])\n+\n+        # Evicted transaction and its descendants must not be in mempool.\n+        resulting_mempool_txids = node.getrawmempool()\n+        assert mempool_evicted_tx[\"txid\"] not in resulting_mempool_txids\n+        assert cpfp_parent[\"txid\"] not in resulting_mempool_txids\n+        assert child[\"txid\"] not in resulting_mempool_txids\n+        for txid in big_parent_txids:\n+            assert txid in resulting_mempool_txids\n+\n+    def test_mid_package_replacement(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where an early tx depends on a later-replaced mempool tx\")\n+\n+        self.restart_node(0, extra_args=self.extra_args[0])\n+\n+        # Restarting the node resets mempool minimum feerate\n+        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n+        self.fill_mempool()\n+        current_info = node.getmempoolinfo()\n+        mempoolmin_feerate = current_info[\"mempoolminfee\"]\n+        assert_greater_than(mempoolmin_feerate, get_first_eviction_score(node))\n+\n+        # Mempool transaction which is evicted due to being at the \"bottom\" of the mempool when the\n+        # mempool overflows and evicts by descendant score. It's important that the eviction doesn't\n+        # happen in the middle of package evaluation, as it can invalidate the coins cache.\n+        double_spent_utxo = self.wallet.get_utxo(confirmed_only=True)\n+        replaced_tx = self.wallet.send_self_transfer(\n+            from_node=node,\n+            utxo_to_spend=double_spent_utxo,\n+            fee_rate=mempoolmin_feerate,\n+            confirmed_only=True\n+        )\n+        # Already in mempool when package is submitted.\n+        assert replaced_tx[\"txid\"] in node.getrawmempool()\n+\n+        # This parent spends the above mempool transaction that exists when its inputs are first\n+        # looked up, but disappears later. It is rejected for being too low fee (but eligible for\n+        # reconsideration), and its inputs are cached. When the mempool transaction is evicted, its\n+        # coin is no longer available, but the cache could still contain the tx.\n+        cpfp_parent = self.wallet.create_self_transfer(\n+            utxo_to_spend=replaced_tx[\"new_utxo\"],\n+            fee_rate=mempoolmin_feerate - Decimal('0.00001'),\n+            confirmed_only=True)\n+\n+        self.wallet.rescan_utxos()\n+\n+        # Parent that replaces the parent of cpfp_parent.\n+        replacement_tx = self.wallet.create_self_transfer(\n+            utxo_to_spend=double_spent_utxo,\n+            fee_rate=10*mempoolmin_feerate,\n+            confirmed_only=True\n+        )\n+        parent_utxos = [cpfp_parent[\"new_utxo\"], replacement_tx[\"new_utxo\"]]\n+\n+        # Create a child spending everything, CPFPing the low-feerate parent.\n+        approx_child_vsize = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos)[\"tx\"].get_vsize()\n+        cpfp_fee = (2 * mempoolmin_feerate / 1000) * (cpfp_parent[\"tx\"].get_vsize() + approx_child_vsize) - cpfp_parent[\"fee\"]\n+        child = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos, fee_per_output=int(cpfp_fee * COIN))\n+        package_hex = [cpfp_parent[\"hex\"], replacement_tx[\"hex\"], child[\"hex\"]]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305531847",
      "id" : 1305531847,
      "in_reply_to_id" : 1303286812,
      "line" : 223,
      "node_id" : "PRRC_kwDOABII585N0NXH",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 223,
      "original_position" : 146,
      "original_start_line" : null,
      "path" : "test/functional/mempool_limit.py",
      "position" : 205,
      "pull_request_review_id" : 1595348940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305531847/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305531847",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305631043"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305631043"
         }
      },
      "author_association" : "MEMBER",
      "body" : "removed",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T13:01:14Z",
      "diff_hunk" : "@@ -516,7 +516,7 @@ class MemPoolAccept\n                             /* m_coins_to_uncache */ package_args.m_coins_to_uncache,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305631043",
      "id" : 1305631043,
      "in_reply_to_id" : 1304736690,
      "line" : 516,
      "node_id" : "PRRC_kwDOABII585N0llD",
      "original_commit_id" : "4cd3b8f2edb3176fef4dbc6109188d62e7dd2ba6",
      "original_line" : 516,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 1,
      "pull_request_review_id" : 1595687741,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305631043/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T13:01:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305631043",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305631297"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305631297"
         }
      },
      "author_association" : "MEMBER",
      "body" : "added",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T13:01:28Z",
      "diff_hunk" : "@@ -84,13 +85,105 @@ def fill_mempool(self):\n         assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+    def test_mid_package_eviction(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305631297",
      "id" : 1305631297,
      "in_reply_to_id" : 1301978861,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585N0lpB",
      "original_commit_id" : "3729ee483688da8427c9228de01407777d4e4691",
      "original_line" : 91,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/mempool_limit.py",
      "position" : null,
      "pull_request_review_id" : 1595688112,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305631297/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T13:01:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305631297",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   }
]
