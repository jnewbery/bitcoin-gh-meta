[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [instagibbs](https://github.com/bitcoin/bitcoin/pull/28251#issuecomment-1717948555) |\n| Concept ACK | [fjahr](https://github.com/bitcoin/bitcoin/pull/28251#pullrequestreview-1584983469) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28453](https://github.com/bitcoin/bitcoin/pull/28453) (wallet: Receive silent payment transactions by achow101)\n* [#28450](https://github.com/bitcoin/bitcoin/pull/28450) (WIP: Add package evaluation fuzzer by instagibbs)\n* [#28368](https://github.com/bitcoin/bitcoin/pull/28368) (Fee Estimator updates from Validation Interface/CScheduler thread by ismaelsadeeq)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-08-10T13:04:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#issuecomment-1673181532",
      "id" : 1673181532,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28251",
      "node_id" : "IC_kwDOABII585jurlc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 1,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1673181532/reactions"
      },
      "updated_at" : "2023-09-13T16:49:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1673181532",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "cc @instagibbs ",
      "created_at" : "2023-08-10T13:04:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#issuecomment-1673181801",
      "id" : 1673181801,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28251",
      "node_id" : "IC_kwDOABII585jurpp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1673181801/reactions"
      },
      "updated_at" : "2023-08-10T13:04:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1673181801",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa you might want to weigh in as well",
      "created_at" : "2023-08-10T13:17:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#issuecomment-1673202074",
      "id" : 1673202074,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28251",
      "node_id" : "IC_kwDOABII585juwma",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1673202074/reactions"
      },
      "updated_at" : "2023-08-10T13:17:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1673202074",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1290350524"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290350524"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Declaration comments for `SubmitPackage` should reflect that it doesn't limit anymore, or just not mention limiting.",
      "commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "created_at" : "2023-08-10T15:54:30Z",
      "diff_hunk" : "@@ -1184,32 +1184,21 @@ bool MemPoolAccept::SubmitPackage(const ATMPArgs& args, std::vector<Workspace>&\n         }\n     }\n \n-    // It may or may not be the case that all the transactions made it into the mempool. Regardless,\n-    // make sure we haven't exceeded max mempool size.\n-    LimitMempoolSize(m_pool, m_active_chainstate.CoinsTip());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1290350524",
      "id" : 1290350524,
      "line" : 1179,
      "node_id" : "PRRC_kwDOABII585M6S-8",
      "original_commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "original_line" : 1189,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 15,
      "pull_request_review_id" : 1572237699,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290350524/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-10T15:59:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290350524",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1290355065"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290355065"
         }
      },
      "author_association" : "MEMBER",
      "body" : "was this always supposed to be true?",
      "commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "created_at" : "2023-08-10T15:58:04Z",
      "diff_hunk" : "@@ -516,7 +516,7 @@ class MemPoolAccept\n                             /* m_coins_to_uncache */ package_args.m_coins_to_uncache,\n                             /* m_test_accept */ package_args.m_test_accept,\n                             /* m_allow_replacement */ true,\n-                            /* m_package_submission */ false,\n+                            /* m_package_submission */ true, // do not LimitMempool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1290355065",
      "id" : 1290355065,
      "line" : 519,
      "node_id" : "PRRC_kwDOABII585M6UF5",
      "original_commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "original_line" : 519,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 1572237699,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290355065/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-10T15:59:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290355065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1290857304"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290857304"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The âdisabled RBFâ can sound as confusing. There is no nsequence opted-out of the transaction candidate targeted by a replacement, it sounds rather to mean the `m_allow_replacement` of `ATMPArgs` which is true for `SingleInPackageAccept` and false for `PackageChildWithParents`.",
      "commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "created_at" : "2023-08-11T03:21:30Z",
      "diff_hunk" : "@@ -554,6 +554,16 @@ class MemPoolAccept\n     */\n     PackageMempoolAcceptResult AcceptMultipleTransactions(const std::vector<CTransactionRef>& txns, ATMPArgs& args) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Submission of a subpackage.  If only 1 transaction exists in subpackage, calls\n+     * AcceptSingleTransaction() with adjusted ATMPArgs to avoid additional package policy\n+     * restrictions like PackageMempoolChecks() and disabled RBF, and creates a",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1290857304",
      "id" : 1290857304,
      "line" : 560,
      "node_id" : "PRRC_kwDOABII585M8OtY",
      "original_commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "original_line" : 560,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 16,
      "pull_request_review_id" : 1572955374,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290857304/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-11T03:53:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290857304",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1290865427"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290865427"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this could document more where the âdo not LimitMempoolâ is applied, i.e in `Finalize()` L1123 which is itself called by `AcceptSingleTransaction` and the source of the bug. `LimitMempoolSize()` is called few times in validation.",
      "commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "created_at" : "2023-08-11T03:44:13Z",
      "diff_hunk" : "@@ -516,7 +516,7 @@ class MemPoolAccept\n                             /* m_coins_to_uncache */ package_args.m_coins_to_uncache,\n                             /* m_test_accept */ package_args.m_test_accept,\n                             /* m_allow_replacement */ true,\n-                            /* m_package_submission */ false,\n+                            /* m_package_submission */ true, // do not LimitMempool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1290865427",
      "id" : 1290865427,
      "line" : 519,
      "node_id" : "PRRC_kwDOABII585M8QsT",
      "original_commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "original_line" : 519,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 1572955374,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290865427/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-11T03:53:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290865427",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1290866687"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290866687"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this check doesnât have test coverage as tx are individually validated in `AcceptPackage`.",
      "commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "created_at" : "2023-08-11T03:47:42Z",
      "diff_hunk" : "@@ -1326,6 +1325,23 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n     return PackageMempoolAcceptResult(package_state, std::move(results));\n }\n \n+PackageMempoolAcceptResult MemPoolAccept::AcceptSubPackage(const std::vector<CTransactionRef>& subpackage, ATMPArgs& args)\n+{\n+    ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+    AssertLockHeld(::cs_main);\n+    AssertLockHeld(m_pool.cs);\n+    if (subpackage.size() > 1) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1290866687",
      "id" : 1290866687,
      "line" : 1333,
      "node_id" : "PRRC_kwDOABII585M8Q__",
      "original_commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "original_line" : 1333,
      "original_position" : 101,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 101,
      "pull_request_review_id" : 1572955374,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290866687/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-11T03:53:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290866687",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1291488191"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291488191"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, as it means skipping `LimitMempoolSize` within `Finalize` and we're not always guaranteed to call `SubmitPackage` afterwards (e.g. if we quit early). It's safe to make it `true` now because we always do a `LimitMempoolSize` within `AcceptPackage`",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-11T15:18:54Z",
      "diff_hunk" : "@@ -516,7 +516,7 @@ class MemPoolAccept\n                             /* m_coins_to_uncache */ package_args.m_coins_to_uncache,\n                             /* m_test_accept */ package_args.m_test_accept,\n                             /* m_allow_replacement */ true,\n-                            /* m_package_submission */ false,\n+                            /* m_package_submission */ true, // do not LimitMempool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1291488191",
      "id" : 1291488191,
      "in_reply_to_id" : 1290355065,
      "line" : 519,
      "node_id" : "PRRC_kwDOABII585M-ou_",
      "original_commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "original_line" : 519,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 1573909211,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291488191/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-11T15:19:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291488191",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1298712742"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298712742"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In the `AcceptMultipleTransactions` this is unused, to maybe move it down?",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-18T17:53:41Z",
      "diff_hunk" : "@@ -1326,6 +1336,23 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n     return PackageMempoolAcceptResult(package_state, std::move(results));\n }\n \n+PackageMempoolAcceptResult MemPoolAccept::AcceptSubPackage(const std::vector<CTransactionRef>& subpackage, ATMPArgs& args)\n+{\n+    ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1298712742",
      "id" : 1298712742,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585NaMim",
      "original_commit_id" : "0678df31d50d36f92e39a7c709b0e1975695e2e8",
      "original_line" : 1341,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1584983469,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298712742/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-18T18:10:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298712742",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Pushed a test - it should fail on master with the assertion.\r\n\r\nGenerally, the conditions to hit the case are:\r\n- An almost-full mempool.\r\n- `mempool_evicted_tx` (`parent`) A to-be-evicted tx that is submitted ahead of time. Has a very low feerate and is evicted immediately when mempool overflows. It has an output `coin_to_disappear`\r\n- A package consisting of:\r\n\t- `cpfp_parent` (`child_a`) parent that spends `coin_to_disappear` and fails a check that requires its input to be loaded and makes it eligible for reconsideration (e.g. below mempool minimum feerate).\r\n\t- high-feerate parent (`child_b`), high feerate so that they are submitted individually and trigger eviction.\r\n\t\t- I've used 6 high-feerate parents in this test to make it easy to trigger overflow.\r\n\t\t- In the EA test, `child_b` triggers eviction due to proactive trimming of the sponsorless `parent` instead of mempool overflow.\r\n\t- `package_child` (`child_c`) spending the above parents.\r\n\t\t- The child must pay a fee high enough to CPFP the low-feerate parent. \r\n\t- Additional requirements:\r\n\t\t- The low-feerate parent needs to be checked before the higher-feerate parents so that its inputs are loaded before the eviction happens. Otherwise it will just hit missing-inputs. This also means that as a side effect of the fee-based linearization in #26711 (which would put the low-feerate parent at the end), this test won't trigger. But I don't think the linearization is an adequate solution to this problem.\r\n\t\t- To make the test interesting, it should be low enough that the to-be-evicted tx is evicted regardless of when the eviction happens.\r\n\r\nTimeline of what happens:\r\n1. mempool is almost full\r\n2. `mempool_evicted_tx` is submitted to mempool\r\n3. `AcceptPackage(package)`:\r\n\t1. `AcceptSingleTransaction(cpfp_parent)`. This loads `coin_to_disappear` into `m_view` . After the fee is checked, the tx fails and we continue onto the next transactions.\r\n\t2. for each of the n high-feerate parents, `AcceptSingleTransaction(tx)`. These succeed and, in `Finalize()`, the transactions are submitted.\r\n\t\t1. (Without PR's changes) this also calls `LimitMempool()` which evicts by descendant score until the mempool is within size limits again.\r\n\t\t2. This kicks out `mempool_evicted_tx`, which means the `m_viewmempool` will no longer have a coin for `coin_to_disappear`. However, the coin has already been cached in `m_view` and it doesn't know this.\r\n\t3. `AcceptSingleTransaction(package_child)` fails due to missing inputs.\r\n\t4. `AcceptMultipleTransactions([cpfp_parent, package_child])` \r\n\t\t1. `PreChecks` looks for the inputs of each transaction, including the now-nonexistent `coin_to_disappear`. This succeeds because `m_view` has a coin for it.\r\n\t\t2. The CPFP works, so both transactions are submitted in `SubmitPackage()` , which calls `ConsensusScriptChecks()` which calls `CheckInputsFromMempoolAndCache()` which asserts that the coins all exist.\r\n\t\t\t1. We can't find the coin in the mempool (which is where it used to be).\r\n\t\t\t2. So we assume we will find it in the UTXO set. We call `AccessCoin()`  and assert `!coinFromUTXOSet.IsSpent()`. This fails because the coin does not exist (which is the same as isspent).",
      "created_at" : "2023-08-22T13:16:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#issuecomment-1688170869",
      "id" : 1688170869,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28251",
      "node_id" : "IC_kwDOABII585kn3F1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1688170869/reactions"
      },
      "updated_at" : "2023-08-22T13:19:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1688170869",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "the above test description sounds right. The eldest ancestor gets trimmed due to size limitations, then things go wonky without this change",
      "created_at" : "2023-08-22T14:38:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#issuecomment-1688316931",
      "id" : 1688316931,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28251",
      "node_id" : "IC_kwDOABII585koawD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1688316931/reactions"
      },
      "updated_at" : "2023-08-22T14:38:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1688316931",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1301942552"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301942552"
         }
      },
      "author_association" : "MEMBER",
      "body" : "should assert all 3 parents are in the mempool",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-22T16:58:30Z",
      "diff_hunk" : "@@ -84,13 +85,105 @@ def fill_mempool(self):\n         assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+    def test_mid_package_eviction(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction\")\n+\n+        self.restart_node(0, extra_args=self.extra_args[0])\n+\n+        # Restarting the node resets mempool minimum feerate\n+        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n+        self.fill_mempool()\n+        current_info = node.getmempoolinfo()\n+        mempoolmin_feerate = current_info[\"mempoolminfee\"]\n+        assert_greater_than(mempoolmin_feerate, get_first_eviction_score(node))\n+\n+        package_hex = []\n+        parent_utxos = []\n+        package_txids = []\n+\n+        evicted_weight = 8000\n+        # Mempool transaction which is evicted due to being at the \"bottom\" of the mempool when the\n+        # mempool overflows and evicts by descendant score. It's important that the eviction doesn't\n+        # happen in the middle of package evaluation, as it can invalidate the coins cache.\n+        mempool_evicted_tx = self.wallet.send_self_transfer(\n+            from_node=node,\n+            fee=(mempoolmin_feerate / 1000) * (evicted_weight // 4) + Decimal('0.000001'),\n+            target_weight=evicted_weight,\n+            confirmed_only=True\n+        )\n+        # Already in mempool when package is submitted.\n+        assert mempool_evicted_tx[\"txid\"] in node.getrawmempool()\n+\n+        # This parent spends the above mempool transaction that exists when its inputs are first\n+        # looked up, but disappears later. It is rejected for being too low fee (but eligible for\n+        # reconsideration), and its inputs are cached. When the mempool transaction is evicted, its\n+        # coin is no longer available, but the cache could still contains the tx.\n+        cpfp_parent = self.wallet.create_self_transfer(\n+            utxo_to_spend=mempool_evicted_tx[\"new_utxo\"],\n+            fee_rate=mempoolmin_feerate - Decimal('0.00001'),\n+            confirmed_only=True)\n+        package_hex.append(cpfp_parent[\"hex\"])\n+        parent_utxos.append(cpfp_parent[\"new_utxo\"])\n+        package_txids.append(cpfp_parent[\"txid\"])\n+        assert_equal(node.testmempoolaccept([cpfp_parent[\"hex\"]])[0][\"reject-reason\"], \"mempool min fee not met\")\n+\n+        self.wallet.rescan_utxos()\n+\n+        # Series of parents that don't need CPFP and are submitted individually. Each one is large and\n+        # high feerate, which means they should trigger eviction but not be evicted.\n+        parent_weight = 100000\n+        num_big_parents = 3\n+        assert_greater_than(parent_weight * num_big_parents, current_info[\"maxmempool\"] - current_info[\"bytes\"])\n+        parent_fee = (100 * mempoolmin_feerate / 1000) * (parent_weight // 4)\n+\n+        for i in range(num_big_parents):\n+            parent = self.wallet.create_self_transfer(fee=parent_fee, target_weight=parent_weight, confirmed_only=True)\n+            parent_utxos.append(parent[\"new_utxo\"])\n+            package_hex.append(parent[\"hex\"])\n+            package_txids.append(parent[\"txid\"])\n+            # There is room for each of these transactions independently\n+            assert node.testmempoolaccept([parent[\"hex\"]])[0][\"allowed\"]\n+\n+        # Create a child spending everything, CPFPing the low-feerate parent just above mempool\n+        # minimum feerate. It's important not to bump too much as otherwise mempool_evicted_tx would\n+        # not be evicted, making this test much less meaningful. Approximate size of cpfp_parent +\n+        # child is.\n+        approx_child_vsize = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos)[\"tx\"].get_vsize()\n+        cpfp_fee = (mempoolmin_feerate / 1000) * (cpfp_parent[\"tx\"].get_vsize() + approx_child_vsize) - cpfp_parent[\"fee\"]\n+        # Specific number of satoshis to fit within a small window. The parent_cpfp + child package needs to be\n+        # - When there is mid-package eviction, high enough feerate to meet the new mempoolminfee\n+        # - When there is no mid-package eviction, low enough feerate to be evicted immediately after submission.\n+        magic_satoshis = 1200\n+        cpfp_satoshis = int(cpfp_fee * COIN) + magic_satoshis\n+\n+        child = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos, fee_per_output=cpfp_satoshis)\n+        package_hex.append(child[\"hex\"])\n+        package_txids.append(child[\"txid\"])\n+\n+        # Package should be submitted, temporarily exceeding maxmempool, and then evicted.\n+        with node.assert_debug_log(expected_msgs=[\"rolling minimum fee bumped\"]):\n+            assert_raises_rpc_error(-26, \"mempool full\", node.submitpackage, package_hex)\n+\n+        # Maximum size must never be exceeded.\n+        assert_greater_than(node.getmempoolinfo()[\"maxmempool\"], node.getmempoolinfo()[\"bytes\"])\n+\n+        # Evicted transaction and its descendants must not be in mempool.\n+        resulting_mempool_txids = node.getrawmempool()\n+        assert mempool_evicted_tx[\"txid\"] not in resulting_mempool_txids\n+        assert cpfp_parent[\"txid\"] not in resulting_mempool_txids\n+        assert child[\"txid\"] not in resulting_mempool_txids",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1301942552",
      "id" : 1301942552,
      "line" : 167,
      "node_id" : "PRRC_kwDOABII585NmhEY",
      "original_commit_id" : "3729ee483688da8427c9228de01407777d4e4691",
      "original_line" : 167,
      "original_position" : 107,
      "original_start_line" : null,
      "path" : "test/functional/mempool_limit.py",
      "position" : 149,
      "pull_request_review_id" : 1589916383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301942552/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-22T17:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301942552",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1301971311"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301971311"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```Suggestion\r\n        # coin is no longer available, but the cache could still contain the tx.\r\n```",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-22T17:26:48Z",
      "diff_hunk" : "@@ -84,13 +85,105 @@ def fill_mempool(self):\n         assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+    def test_mid_package_eviction(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction\")\n+\n+        self.restart_node(0, extra_args=self.extra_args[0])\n+\n+        # Restarting the node resets mempool minimum feerate\n+        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n+        self.fill_mempool()\n+        current_info = node.getmempoolinfo()\n+        mempoolmin_feerate = current_info[\"mempoolminfee\"]\n+        assert_greater_than(mempoolmin_feerate, get_first_eviction_score(node))\n+\n+        package_hex = []\n+        parent_utxos = []\n+        package_txids = []\n+\n+        evicted_weight = 8000\n+        # Mempool transaction which is evicted due to being at the \"bottom\" of the mempool when the\n+        # mempool overflows and evicts by descendant score. It's important that the eviction doesn't\n+        # happen in the middle of package evaluation, as it can invalidate the coins cache.\n+        mempool_evicted_tx = self.wallet.send_self_transfer(\n+            from_node=node,\n+            fee=(mempoolmin_feerate / 1000) * (evicted_weight // 4) + Decimal('0.000001'),\n+            target_weight=evicted_weight,\n+            confirmed_only=True\n+        )\n+        # Already in mempool when package is submitted.\n+        assert mempool_evicted_tx[\"txid\"] in node.getrawmempool()\n+\n+        # This parent spends the above mempool transaction that exists when its inputs are first\n+        # looked up, but disappears later. It is rejected for being too low fee (but eligible for\n+        # reconsideration), and its inputs are cached. When the mempool transaction is evicted, its\n+        # coin is no longer available, but the cache could still contains the tx.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1301971311",
      "id" : 1301971311,
      "line" : 115,
      "node_id" : "PRRC_kwDOABII585NmoFv",
      "original_commit_id" : "3729ee483688da8427c9228de01407777d4e4691",
      "original_line" : 115,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "test/functional/mempool_limit.py",
      "position" : 97,
      "pull_request_review_id" : 1589916383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301971311/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-22T17:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301971311",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1301972717"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301972717"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```Suggestion\r\n        parent_utxos = [] # utxos to be spent by the ultimate child transaction\r\n```",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-22T17:28:11Z",
      "diff_hunk" : "@@ -84,13 +85,105 @@ def fill_mempool(self):\n         assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+    def test_mid_package_eviction(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction\")\n+\n+        self.restart_node(0, extra_args=self.extra_args[0])\n+\n+        # Restarting the node resets mempool minimum feerate\n+        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n+        self.fill_mempool()\n+        current_info = node.getmempoolinfo()\n+        mempoolmin_feerate = current_info[\"mempoolminfee\"]\n+        assert_greater_than(mempoolmin_feerate, get_first_eviction_score(node))\n+\n+        package_hex = []\n+        parent_utxos = []",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1301972717",
      "id" : 1301972717,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII585Nmobt",
      "original_commit_id" : "3729ee483688da8427c9228de01407777d4e4691",
      "original_line" : 97,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "test/functional/mempool_limit.py",
      "position" : 79,
      "pull_request_review_id" : 1589916383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301972717/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-22T17:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301972717",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1301977111"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301977111"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```Suggestion\r\n        # Create a child spending everything, CPFPing the low-feerate cpfp_parent just above mempool\r\n```",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-22T17:32:27Z",
      "diff_hunk" : "@@ -84,13 +85,105 @@ def fill_mempool(self):\n         assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+    def test_mid_package_eviction(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction\")\n+\n+        self.restart_node(0, extra_args=self.extra_args[0])\n+\n+        # Restarting the node resets mempool minimum feerate\n+        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n+        self.fill_mempool()\n+        current_info = node.getmempoolinfo()\n+        mempoolmin_feerate = current_info[\"mempoolminfee\"]\n+        assert_greater_than(mempoolmin_feerate, get_first_eviction_score(node))\n+\n+        package_hex = []\n+        parent_utxos = []\n+        package_txids = []\n+\n+        evicted_weight = 8000\n+        # Mempool transaction which is evicted due to being at the \"bottom\" of the mempool when the\n+        # mempool overflows and evicts by descendant score. It's important that the eviction doesn't\n+        # happen in the middle of package evaluation, as it can invalidate the coins cache.\n+        mempool_evicted_tx = self.wallet.send_self_transfer(\n+            from_node=node,\n+            fee=(mempoolmin_feerate / 1000) * (evicted_weight // 4) + Decimal('0.000001'),\n+            target_weight=evicted_weight,\n+            confirmed_only=True\n+        )\n+        # Already in mempool when package is submitted.\n+        assert mempool_evicted_tx[\"txid\"] in node.getrawmempool()\n+\n+        # This parent spends the above mempool transaction that exists when its inputs are first\n+        # looked up, but disappears later. It is rejected for being too low fee (but eligible for\n+        # reconsideration), and its inputs are cached. When the mempool transaction is evicted, its\n+        # coin is no longer available, but the cache could still contains the tx.\n+        cpfp_parent = self.wallet.create_self_transfer(\n+            utxo_to_spend=mempool_evicted_tx[\"new_utxo\"],\n+            fee_rate=mempoolmin_feerate - Decimal('0.00001'),\n+            confirmed_only=True)\n+        package_hex.append(cpfp_parent[\"hex\"])\n+        parent_utxos.append(cpfp_parent[\"new_utxo\"])\n+        package_txids.append(cpfp_parent[\"txid\"])\n+        assert_equal(node.testmempoolaccept([cpfp_parent[\"hex\"]])[0][\"reject-reason\"], \"mempool min fee not met\")\n+\n+        self.wallet.rescan_utxos()\n+\n+        # Series of parents that don't need CPFP and are submitted individually. Each one is large and\n+        # high feerate, which means they should trigger eviction but not be evicted.\n+        parent_weight = 100000\n+        num_big_parents = 3\n+        assert_greater_than(parent_weight * num_big_parents, current_info[\"maxmempool\"] - current_info[\"bytes\"])\n+        parent_fee = (100 * mempoolmin_feerate / 1000) * (parent_weight // 4)\n+\n+        for i in range(num_big_parents):\n+            parent = self.wallet.create_self_transfer(fee=parent_fee, target_weight=parent_weight, confirmed_only=True)\n+            parent_utxos.append(parent[\"new_utxo\"])\n+            package_hex.append(parent[\"hex\"])\n+            package_txids.append(parent[\"txid\"])\n+            # There is room for each of these transactions independently\n+            assert node.testmempoolaccept([parent[\"hex\"]])[0][\"allowed\"]\n+\n+        # Create a child spending everything, CPFPing the low-feerate parent just above mempool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1301977111",
      "id" : 1301977111,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585NmpgX",
      "original_commit_id" : "3729ee483688da8427c9228de01407777d4e4691",
      "original_line" : 150,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "test/functional/mempool_limit.py",
      "position" : null,
      "pull_request_review_id" : 1589916383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301977111/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-22T17:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301977111",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1301978861"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301978861"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```Suggestion\r\n        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction before package submission terminates\")\r\n```",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-22T17:34:09Z",
      "diff_hunk" : "@@ -84,13 +85,105 @@ def fill_mempool(self):\n         assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+    def test_mid_package_eviction(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1301978861",
      "id" : 1301978861,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Nmp7t",
      "original_commit_id" : "3729ee483688da8427c9228de01407777d4e4691",
      "original_line" : 91,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/mempool_limit.py",
      "position" : null,
      "pull_request_review_id" : 1589916383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301978861/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-22T17:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301978861",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303183629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303183629"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, `AcceptPackage` also calls this for `txns_package_eval` which can have multiple transactions.",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-23T15:21:00Z",
      "diff_hunk" : "@@ -1326,6 +1325,23 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n     return PackageMempoolAcceptResult(package_state, std::move(results));\n }\n \n+PackageMempoolAcceptResult MemPoolAccept::AcceptSubPackage(const std::vector<CTransactionRef>& subpackage, ATMPArgs& args)\n+{\n+    ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+    AssertLockHeld(::cs_main);\n+    AssertLockHeld(m_pool.cs);\n+    if (subpackage.size() > 1) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303183629",
      "id" : 1303183629,
      "in_reply_to_id" : 1290866687,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585NrQEN",
      "original_commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "original_line" : 1333,
      "original_position" : 101,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1591859179,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303183629/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T15:21:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303183629",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303184115"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303184115"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed, thanks",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-23T15:21:20Z",
      "diff_hunk" : "@@ -1184,32 +1184,21 @@ bool MemPoolAccept::SubmitPackage(const ATMPArgs& args, std::vector<Workspace>&\n         }\n     }\n \n-    // It may or may not be the case that all the transactions made it into the mempool. Regardless,\n-    // make sure we haven't exceeded max mempool size.\n-    LimitMempoolSize(m_pool, m_active_chainstate.CoinsTip());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303184115",
      "id" : 1303184115,
      "in_reply_to_id" : 1290350524,
      "line" : 1179,
      "node_id" : "PRRC_kwDOABII585NrQLz",
      "original_commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "original_line" : 1179,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 55,
      "pull_request_review_id" : 1591859933,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303184115/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T15:21:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303184115",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303184486"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303184486"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Moved",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-23T15:21:32Z",
      "diff_hunk" : "@@ -1326,6 +1336,23 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n     return PackageMempoolAcceptResult(package_state, std::move(results));\n }\n \n+PackageMempoolAcceptResult MemPoolAccept::AcceptSubPackage(const std::vector<CTransactionRef>& subpackage, ATMPArgs& args)\n+{\n+    ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303184486",
      "id" : 1303184486,
      "in_reply_to_id" : 1298712742,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585NrQRm",
      "original_commit_id" : "0678df31d50d36f92e39a7c709b0e1975695e2e8",
      "original_line" : 1341,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1591860461,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303184486/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T15:21:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303184486",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303185024"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303185024"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added this and the comment fixups",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-23T15:21:52Z",
      "diff_hunk" : "@@ -84,13 +85,105 @@ def fill_mempool(self):\n         assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+    def test_mid_package_eviction(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction\")\n+\n+        self.restart_node(0, extra_args=self.extra_args[0])\n+\n+        # Restarting the node resets mempool minimum feerate\n+        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n+        self.fill_mempool()\n+        current_info = node.getmempoolinfo()\n+        mempoolmin_feerate = current_info[\"mempoolminfee\"]\n+        assert_greater_than(mempoolmin_feerate, get_first_eviction_score(node))\n+\n+        package_hex = []\n+        parent_utxos = []\n+        package_txids = []\n+\n+        evicted_weight = 8000\n+        # Mempool transaction which is evicted due to being at the \"bottom\" of the mempool when the\n+        # mempool overflows and evicts by descendant score. It's important that the eviction doesn't\n+        # happen in the middle of package evaluation, as it can invalidate the coins cache.\n+        mempool_evicted_tx = self.wallet.send_self_transfer(\n+            from_node=node,\n+            fee=(mempoolmin_feerate / 1000) * (evicted_weight // 4) + Decimal('0.000001'),\n+            target_weight=evicted_weight,\n+            confirmed_only=True\n+        )\n+        # Already in mempool when package is submitted.\n+        assert mempool_evicted_tx[\"txid\"] in node.getrawmempool()\n+\n+        # This parent spends the above mempool transaction that exists when its inputs are first\n+        # looked up, but disappears later. It is rejected for being too low fee (but eligible for\n+        # reconsideration), and its inputs are cached. When the mempool transaction is evicted, its\n+        # coin is no longer available, but the cache could still contains the tx.\n+        cpfp_parent = self.wallet.create_self_transfer(\n+            utxo_to_spend=mempool_evicted_tx[\"new_utxo\"],\n+            fee_rate=mempoolmin_feerate - Decimal('0.00001'),\n+            confirmed_only=True)\n+        package_hex.append(cpfp_parent[\"hex\"])\n+        parent_utxos.append(cpfp_parent[\"new_utxo\"])\n+        package_txids.append(cpfp_parent[\"txid\"])\n+        assert_equal(node.testmempoolaccept([cpfp_parent[\"hex\"]])[0][\"reject-reason\"], \"mempool min fee not met\")\n+\n+        self.wallet.rescan_utxos()\n+\n+        # Series of parents that don't need CPFP and are submitted individually. Each one is large and\n+        # high feerate, which means they should trigger eviction but not be evicted.\n+        parent_weight = 100000\n+        num_big_parents = 3\n+        assert_greater_than(parent_weight * num_big_parents, current_info[\"maxmempool\"] - current_info[\"bytes\"])\n+        parent_fee = (100 * mempoolmin_feerate / 1000) * (parent_weight // 4)\n+\n+        for i in range(num_big_parents):\n+            parent = self.wallet.create_self_transfer(fee=parent_fee, target_weight=parent_weight, confirmed_only=True)\n+            parent_utxos.append(parent[\"new_utxo\"])\n+            package_hex.append(parent[\"hex\"])\n+            package_txids.append(parent[\"txid\"])\n+            # There is room for each of these transactions independently\n+            assert node.testmempoolaccept([parent[\"hex\"]])[0][\"allowed\"]\n+\n+        # Create a child spending everything, CPFPing the low-feerate parent just above mempool\n+        # minimum feerate. It's important not to bump too much as otherwise mempool_evicted_tx would\n+        # not be evicted, making this test much less meaningful. Approximate size of cpfp_parent +\n+        # child is.\n+        approx_child_vsize = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos)[\"tx\"].get_vsize()\n+        cpfp_fee = (mempoolmin_feerate / 1000) * (cpfp_parent[\"tx\"].get_vsize() + approx_child_vsize) - cpfp_parent[\"fee\"]\n+        # Specific number of satoshis to fit within a small window. The parent_cpfp + child package needs to be\n+        # - When there is mid-package eviction, high enough feerate to meet the new mempoolminfee\n+        # - When there is no mid-package eviction, low enough feerate to be evicted immediately after submission.\n+        magic_satoshis = 1200\n+        cpfp_satoshis = int(cpfp_fee * COIN) + magic_satoshis\n+\n+        child = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos, fee_per_output=cpfp_satoshis)\n+        package_hex.append(child[\"hex\"])\n+        package_txids.append(child[\"txid\"])\n+\n+        # Package should be submitted, temporarily exceeding maxmempool, and then evicted.\n+        with node.assert_debug_log(expected_msgs=[\"rolling minimum fee bumped\"]):\n+            assert_raises_rpc_error(-26, \"mempool full\", node.submitpackage, package_hex)\n+\n+        # Maximum size must never be exceeded.\n+        assert_greater_than(node.getmempoolinfo()[\"maxmempool\"], node.getmempoolinfo()[\"bytes\"])\n+\n+        # Evicted transaction and its descendants must not be in mempool.\n+        resulting_mempool_txids = node.getrawmempool()\n+        assert mempool_evicted_tx[\"txid\"] not in resulting_mempool_txids\n+        assert cpfp_parent[\"txid\"] not in resulting_mempool_txids\n+        assert child[\"txid\"] not in resulting_mempool_txids",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303185024",
      "id" : 1303185024,
      "in_reply_to_id" : 1301942552,
      "line" : 167,
      "node_id" : "PRRC_kwDOABII585NrQaA",
      "original_commit_id" : "3729ee483688da8427c9228de01407777d4e4691",
      "original_line" : 167,
      "original_position" : 107,
      "original_start_line" : null,
      "path" : "test/functional/mempool_limit.py",
      "position" : 149,
      "pull_request_review_id" : 1591861267,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303185024/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T15:21:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303185024",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated the approach + added a test for replacement case.\r\n\r\nThere are now 2 fixes:\r\n(1) Clear any non-chainstate coins at the end of `AcceptSubPackage` so they can't be used in a different `AcceptSubPackage`.\r\n(2) Don't trim in the middle of package evaluation.\r\n\r\nTechnically (1) is sufficient, but I think (2) is also beneficial as it avoids changing the mempool minimum feerate (which affects how we group transactions) mid-package evaluation. It would be sad if a CPFP package contains a parent that's just barely above mempool minimum feerate, so we submit it, then evict it (due to later parent), then can't submit the child... when we could have just submitted all of them and evicted something else.",
      "created_at" : "2023-08-23T15:29:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#issuecomment-1690174835",
      "id" : 1690174835,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28251",
      "node_id" : "IC_kwDOABII585kvgVz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1690174835/reactions"
      },
      "updated_at" : "2023-08-23T15:29:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1690174835",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303250157"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303250157"
         }
      },
      "author_association" : "MEMBER",
      "body" : "this side-effect should be noted in the declaration comments",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-23T16:11:37Z",
      "diff_hunk" : "@@ -982,6 +982,7 @@ bool CCoinsViewMemPool::GetCoin(const COutPoint &outpoint, Coin &coin) const {\n     if (ptx) {\n         if (outpoint.n < ptx->vout.size()) {\n             coin = Coin(ptx->vout[outpoint.n], MEMPOOL_HEIGHT, false);\n+            m_non_base_coins.emplace(outpoint);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303250157",
      "id" : 1303250157,
      "line" : 985,
      "node_id" : "PRRC_kwDOABII585NrgTt",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 985,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : 4,
      "pull_request_review_id" : 1591955738,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303250157/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T16:51:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303250157",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303253413"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303253413"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n     * Set of all coins that have been fetched from mempool or package (not base). Used to internally track\r\n```",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-23T16:13:20Z",
      "diff_hunk" : "@@ -839,6 +839,12 @@ class CCoinsViewMemPool : public CCoinsViewBacked\n     * validation, since we can access transaction outputs without submitting them to mempool.\n     */\n     std::unordered_map<COutPoint, Coin, SaltedOutpointHasher> m_temp_added;\n+\n+    /**\n+     * Set of all coins that have been fetched from mempool (not base). Used to internally track",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303253413",
      "id" : 1303253413,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585NrhGl",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 844,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 1591955738,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303253413/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T16:51:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303253413",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303262613"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303262613"
         }
      },
      "author_association" : "MEMBER",
      "body" : "why is this necessary after `PackageAddTransaction` changes https://github.com/bitcoin/bitcoin/pull/28251/files#diff-c065d4cd2398ad0dbcef393c5dfc53f465bf44723348892395fffd2fb3bac522R998 ; shouldn't `non_base_coins` be a superset of `m_temp_added`?",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-23T16:20:51Z",
      "diff_hunk" : "@@ -994,8 +995,22 @@ void CCoinsViewMemPool::PackageAddTransaction(const CTransactionRef& tx)\n {\n     for (unsigned int n = 0; n < tx->vout.size(); ++n) {\n         m_temp_added.emplace(COutPoint(tx->GetHash(), n), Coin(tx->vout[n], MEMPOOL_HEIGHT, false));\n+        m_non_base_coins.emplace(COutPoint(tx->GetHash(), n));\n     }\n }\n+std::unordered_set<COutPoint, SaltedOutpointHasher> CCoinsViewMemPool::GetNonBaseCoins() const\n+{\n+    std::unordered_set<COutPoint, SaltedOutpointHasher> non_base_coins(m_non_base_coins.cbegin(), m_non_base_coins.cend());\n+    for (const auto& [coin, _] : m_temp_added) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303262613",
      "id" : 1303262613,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585NrjWV",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 1004,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1591955738,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303262613/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T16:51:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303262613",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303286812"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303286812"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should have a note that the importance of the submission order is paramount to the test catching the issue. \r\n\r\ni.e. something like this passes without the fix:\r\n```\r\npackage_hex = [replacement_tx[\"hex\"], cpfp_parent[\"hex\"], child[\"hex\"]]\r\n```",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-23T16:42:22Z",
      "diff_hunk" : "@@ -86,13 +86,172 @@ def fill_mempool(self):\n         assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+    def test_mid_package_eviction(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction\")\n+\n+        self.restart_node(0, extra_args=self.extra_args[0])\n+\n+        # Restarting the node resets mempool minimum feerate\n+        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n+        self.fill_mempool()\n+        current_info = node.getmempoolinfo()\n+        mempoolmin_feerate = current_info[\"mempoolminfee\"]\n+        assert_greater_than(mempoolmin_feerate, get_first_eviction_score(node))\n+\n+        package_hex = []\n+        # UTXOs to be spent by the ultimate child transaction\n+        parent_utxos = []\n+\n+        evicted_weight = 8000\n+        # Mempool transaction which is evicted due to being at the \"bottom\" of the mempool when the\n+        # mempool overflows and evicts by descendant score. It's important that the eviction doesn't\n+        # happen in the middle of package evaluation, as it can invalidate the coins cache.\n+        mempool_evicted_tx = self.wallet.send_self_transfer(\n+            from_node=node,\n+            fee=(mempoolmin_feerate / 1000) * (evicted_weight // 4) + Decimal('0.000001'),\n+            target_weight=evicted_weight,\n+            confirmed_only=True\n+        )\n+        # Already in mempool when package is submitted.\n+        assert mempool_evicted_tx[\"txid\"] in node.getrawmempool()\n+\n+        # This parent spends the above mempool transaction that exists when its inputs are first\n+        # looked up, but disappears later. It is rejected for being too low fee (but eligible for\n+        # reconsideration), and its inputs are cached. When the mempool transaction is evicted, its\n+        # coin is no longer available, but the cache could still contains the tx.\n+        cpfp_parent = self.wallet.create_self_transfer(\n+            utxo_to_spend=mempool_evicted_tx[\"new_utxo\"],\n+            fee_rate=mempoolmin_feerate - Decimal('0.00001'),\n+            confirmed_only=True)\n+        package_hex.append(cpfp_parent[\"hex\"])\n+        parent_utxos.append(cpfp_parent[\"new_utxo\"])\n+        assert_equal(node.testmempoolaccept([cpfp_parent[\"hex\"]])[0][\"reject-reason\"], \"mempool min fee not met\")\n+\n+        self.wallet.rescan_utxos()\n+\n+        # Series of parents that don't need CPFP and are submitted individually. Each one is large and\n+        # high feerate, which means they should trigger eviction but not be evicted.\n+        parent_weight = 100000\n+        num_big_parents = 3\n+        assert_greater_than(parent_weight * num_big_parents, current_info[\"maxmempool\"] - current_info[\"bytes\"])\n+        parent_fee = (100 * mempoolmin_feerate / 1000) * (parent_weight // 4)\n+\n+        big_parent_txids = []\n+        for i in range(num_big_parents):\n+            parent = self.wallet.create_self_transfer(fee=parent_fee, target_weight=parent_weight, confirmed_only=True)\n+            parent_utxos.append(parent[\"new_utxo\"])\n+            package_hex.append(parent[\"hex\"])\n+            big_parent_txids.append(parent[\"txid\"])\n+            # There is room for each of these transactions independently\n+            assert node.testmempoolaccept([parent[\"hex\"]])[0][\"allowed\"]\n+\n+        # Create a child spending everything, bumping cpfp_parent just above mempool minimum\n+        # feerate. It's important not to bump too much as otherwise mempool_evicted_tx would not be\n+        # evicted, making this test much less meaningful.\n+        approx_child_vsize = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos)[\"tx\"].get_vsize()\n+        cpfp_fee = (mempoolmin_feerate / 1000) * (cpfp_parent[\"tx\"].get_vsize() + approx_child_vsize) - cpfp_parent[\"fee\"]\n+        # Specific number of satoshis to fit within a small window. The parent_cpfp + child package needs to be\n+        # - When there is mid-package eviction, high enough feerate to meet the new mempoolminfee\n+        # - When there is no mid-package eviction, low enough feerate to be evicted immediately after submission.\n+        magic_satoshis = 1200\n+        cpfp_satoshis = int(cpfp_fee * COIN) + magic_satoshis\n+\n+        child = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos, fee_per_output=cpfp_satoshis)\n+        package_hex.append(child[\"hex\"])\n+\n+        # Package should be submitted, temporarily exceeding maxmempool, and then evicted.\n+        with node.assert_debug_log(expected_msgs=[\"rolling minimum fee bumped\"]):\n+            assert_raises_rpc_error(-26, \"mempool full\", node.submitpackage, package_hex)\n+\n+        # Maximum size must never be exceeded.\n+        assert_greater_than(node.getmempoolinfo()[\"maxmempool\"], node.getmempoolinfo()[\"bytes\"])\n+\n+        # Evicted transaction and its descendants must not be in mempool.\n+        resulting_mempool_txids = node.getrawmempool()\n+        assert mempool_evicted_tx[\"txid\"] not in resulting_mempool_txids\n+        assert cpfp_parent[\"txid\"] not in resulting_mempool_txids\n+        assert child[\"txid\"] not in resulting_mempool_txids\n+        for txid in big_parent_txids:\n+            assert txid in resulting_mempool_txids\n+\n+    def test_mid_package_replacement(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where an early tx depends on a later-replaced mempool tx\")\n+\n+        self.restart_node(0, extra_args=self.extra_args[0])\n+\n+        # Restarting the node resets mempool minimum feerate\n+        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n+        self.fill_mempool()\n+        current_info = node.getmempoolinfo()\n+        mempoolmin_feerate = current_info[\"mempoolminfee\"]\n+        assert_greater_than(mempoolmin_feerate, get_first_eviction_score(node))\n+\n+        # Mempool transaction which is evicted due to being at the \"bottom\" of the mempool when the\n+        # mempool overflows and evicts by descendant score. It's important that the eviction doesn't\n+        # happen in the middle of package evaluation, as it can invalidate the coins cache.\n+        double_spent_utxo = self.wallet.get_utxo(confirmed_only=True)\n+        replaced_tx = self.wallet.send_self_transfer(\n+            from_node=node,\n+            utxo_to_spend=double_spent_utxo,\n+            fee_rate=mempoolmin_feerate,\n+            confirmed_only=True\n+        )\n+        # Already in mempool when package is submitted.\n+        assert replaced_tx[\"txid\"] in node.getrawmempool()\n+\n+        # This parent spends the above mempool transaction that exists when its inputs are first\n+        # looked up, but disappears later. It is rejected for being too low fee (but eligible for\n+        # reconsideration), and its inputs are cached. When the mempool transaction is evicted, its\n+        # coin is no longer available, but the cache could still contain the tx.\n+        cpfp_parent = self.wallet.create_self_transfer(\n+            utxo_to_spend=replaced_tx[\"new_utxo\"],\n+            fee_rate=mempoolmin_feerate - Decimal('0.00001'),\n+            confirmed_only=True)\n+\n+        self.wallet.rescan_utxos()\n+\n+        # Parent that replaces the parent of cpfp_parent.\n+        replacement_tx = self.wallet.create_self_transfer(\n+            utxo_to_spend=double_spent_utxo,\n+            fee_rate=10*mempoolmin_feerate,\n+            confirmed_only=True\n+        )\n+        parent_utxos = [cpfp_parent[\"new_utxo\"], replacement_tx[\"new_utxo\"]]\n+\n+        # Create a child spending everything, CPFPing the low-feerate parent.\n+        approx_child_vsize = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos)[\"tx\"].get_vsize()\n+        cpfp_fee = (2 * mempoolmin_feerate / 1000) * (cpfp_parent[\"tx\"].get_vsize() + approx_child_vsize) - cpfp_parent[\"fee\"]\n+        child = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos, fee_per_output=int(cpfp_fee * COIN))\n+        package_hex = [cpfp_parent[\"hex\"], replacement_tx[\"hex\"], child[\"hex\"]]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303286812",
      "id" : 1303286812,
      "line" : 223,
      "node_id" : "PRRC_kwDOABII585NrpQc",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 223,
      "original_position" : 146,
      "original_start_line" : null,
      "path" : "test/functional/mempool_limit.py",
      "position" : 205,
      "pull_request_review_id" : 1591955738,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303286812/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T16:51:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303286812",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303930607"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303930607"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\nvalidation.cpp:1369:12: error: constness of 'result' prevents automatic move [performance-no-automatic-move,-warnings-as-errors]\r\n    return result;",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-24T07:40:30Z",
      "diff_hunk" : "@@ -1326,6 +1325,47 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n     return PackageMempoolAcceptResult(package_state, std::move(results));\n }\n \n+PackageMempoolAcceptResult MemPoolAccept::AcceptSubPackage(const std::vector<CTransactionRef>& subpackage, ATMPArgs& args)\n+{\n+    AssertLockHeld(::cs_main);\n+    AssertLockHeld(m_pool.cs);\n+    const auto result = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_pool.cs) {\n+        if (subpackage.size() > 1) {\n+            return AcceptMultipleTransactions(subpackage, args);\n+        }\n+        const auto& tx = subpackage.front();\n+        ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+        const auto single_res = AcceptSingleTransaction(tx, single_args);\n+        PackageValidationState package_state_wrapped;\n+        if (single_res.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n+            package_state_wrapped.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+        }\n+        return PackageMempoolAcceptResult(package_state_wrapped, {{tx->GetWitnessHash(), single_res}});\n+    }();\n+    // There are 3 kinds of coins in m_view:\n+    // (1) Temporary coins from the transactions in subpackage, constructed by m_viewmempool.\n+    // (2) Mempool coins from transactions in the mempool, constructed by m_viewmempool.\n+    // (3) Chainstate coins fetched from our current UTXO set.\n+    //\n+    // (1) Temporary coins need to be removed. If transactions were submitted to the mempool,\n+    // m_viewmempool will be able to fetch them from there. If they weren't submitted to\n+    // mempool, it is incorrect to keep them - future calls may try to spend those coins that\n+    // don't actually exist.\n+    // (2) Mempool coins also need to be removed. If the mempool contents have changed, coins\n+    // previously fetched from mempool may now be spent or nonexistent. Those coins need to be\n+    // deleted from m_view.\n+    // (3) Chainstate coins don't need to be removed, as the chainstate has not changed (we are\n+    // holding cs_main and no blocks have been processed). They *should not* be removed, as we\n+    // wouldn't want to fetch them again.\n+    for (const auto& outpoint : m_viewmempool.GetNonBaseCoins()) {\n+        // We also need to manually delete these coins from m_view because it has cached copies\n+        // of the coins it fetched from m_viewmempool when they were connected.\n+        m_view.Uncache(outpoint);\n+    }\n+    m_viewmempool.Reset();\n+    return result;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1303930607",
      "id" : 1303930607,
      "line" : 1373,
      "node_id" : "PRRC_kwDOABII585NuGbv",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 1373,
      "original_position" : 139,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 146,
      "pull_request_review_id" : 1592973079,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303930607/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-24T07:40:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303930607",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1304490960"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304490960"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    // This is an optimization to not re-fetch chainstate coins into the cache. There are 3 kinds of coins in m_view:\r\n```",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-24T15:15:14Z",
      "diff_hunk" : "@@ -1326,6 +1325,47 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n     return PackageMempoolAcceptResult(package_state, std::move(results));\n }\n \n+PackageMempoolAcceptResult MemPoolAccept::AcceptSubPackage(const std::vector<CTransactionRef>& subpackage, ATMPArgs& args)\n+{\n+    AssertLockHeld(::cs_main);\n+    AssertLockHeld(m_pool.cs);\n+    const auto result = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_pool.cs) {\n+        if (subpackage.size() > 1) {\n+            return AcceptMultipleTransactions(subpackage, args);\n+        }\n+        const auto& tx = subpackage.front();\n+        ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+        const auto single_res = AcceptSingleTransaction(tx, single_args);\n+        PackageValidationState package_state_wrapped;\n+        if (single_res.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n+            package_state_wrapped.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+        }\n+        return PackageMempoolAcceptResult(package_state_wrapped, {{tx->GetWitnessHash(), single_res}});\n+    }();\n+    // There are 3 kinds of coins in m_view:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1304490960",
      "id" : 1304490960,
      "line" : 1348,
      "node_id" : "PRRC_kwDOABII585NwPPQ",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 1348,
      "original_position" : 118,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 121,
      "pull_request_review_id" : 1593858718,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304490960/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-24T19:20:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304490960",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1304701809"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304701809"
         }
      },
      "author_association" : "MEMBER",
      "body" : "commit message \"[refactor] back-fill m_tx_results in AcceptPackage\" is old; should be `results_final`?",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-24T18:16:02Z",
      "diff_hunk" : "@@ -1505,32 +1505,28 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n         }\n     }\n \n-    // Quit early because package validation won't change the result or the entire package has\n-    // already been submitted.\n-    if (quit_early || txns_package_eval.empty()) {\n-        for (const auto& [wtxid, mempoolaccept_res] : individual_results_nonfinal) {\n-            Assume(results_final.emplace(wtxid, mempoolaccept_res).second);\n-            Assume(mempoolaccept_res.m_result_type == MempoolAcceptResult::ResultType::INVALID);\n-        }\n-        return PackageMempoolAcceptResult(package_state_quit_early, std::move(results_final));\n-    }\n-    // Validate the (deduplicated) transactions as a package. Note that submission_result has its\n-    // own PackageValidationState; package_state_quit_early is unused past this point.\n-    auto submission_result = AcceptSubPackage(txns_package_eval, args);\n-    // Include already-in-mempool transaction results in the final result.\n-    for (const auto& [wtxid, mempoolaccept_res] : results_final) {\n-        Assume(submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res).second);\n-        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n-    }\n-    if (submission_result.m_state.GetResult() == PackageValidationResult::PCKG_TX) {\n-        // Package validation failed because one or more transactions failed. Provide a result for\n-        // each transaction; if a transaction doesn't have an entry in submission_result,\n-        // include the previous individual failure reason.\n-        submission_result.m_tx_results.insert(individual_results_nonfinal.cbegin(),\n-                                              individual_results_nonfinal.cend());\n-        Assume(submission_result.m_tx_results.size() == package.size());\n-    }\n-    return submission_result;\n+    auto final_submission_result = quit_early || txns_package_eval.empty() ? PackageMempoolAcceptResult(package_state_quit_early, {}) :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1304701809",
      "id" : 1304701809,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585NxCtx",
      "original_commit_id" : "a98da1a9844cdbc1cdeeeed9d4d9b80ea0cb7ee6",
      "original_line" : 1508,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1593858718,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304701809/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-24T19:20:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304701809",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1304712148"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304712148"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Looks like we're considering `individual_results_nonfinal` after the subpackage one, contrary to the description of `individual_results_nonfinal` which says that in the event of multiple failures, the individual result is reported. Looks like there's no test coverage of this case; how important is it?",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-24T18:27:23Z",
      "diff_hunk" : "@@ -1505,32 +1505,28 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n         }\n     }\n \n-    // Quit early because package validation won't change the result or the entire package has\n-    // already been submitted.\n-    if (quit_early || txns_package_eval.empty()) {\n-        for (const auto& [wtxid, mempoolaccept_res] : individual_results_nonfinal) {\n-            Assume(results_final.emplace(wtxid, mempoolaccept_res).second);\n-            Assume(mempoolaccept_res.m_result_type == MempoolAcceptResult::ResultType::INVALID);\n-        }\n-        return PackageMempoolAcceptResult(package_state_quit_early, std::move(results_final));\n-    }\n-    // Validate the (deduplicated) transactions as a package. Note that submission_result has its\n-    // own PackageValidationState; package_state_quit_early is unused past this point.\n-    auto submission_result = AcceptSubPackage(txns_package_eval, args);\n-    // Include already-in-mempool transaction results in the final result.\n-    for (const auto& [wtxid, mempoolaccept_res] : results_final) {\n-        Assume(submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res).second);\n-        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n-    }\n-    if (submission_result.m_state.GetResult() == PackageValidationResult::PCKG_TX) {\n-        // Package validation failed because one or more transactions failed. Provide a result for\n-        // each transaction; if a transaction doesn't have an entry in submission_result,\n-        // include the previous individual failure reason.\n-        submission_result.m_tx_results.insert(individual_results_nonfinal.cbegin(),\n-                                              individual_results_nonfinal.cend());\n-        Assume(submission_result.m_tx_results.size() == package.size());\n-    }\n-    return submission_result;\n+    auto final_submission_result = quit_early || txns_package_eval.empty() ? PackageMempoolAcceptResult(package_state_quit_early, {}) :\n+        AcceptSubPackage(txns_package_eval, args);\n+    PackageValidationState& package_state_final = final_submission_result.m_state;\n+\n+    for (const auto& tx : package) {\n+        const auto& wtxid = tx->GetWitnessHash();\n+        if (final_submission_result.m_tx_results.count(wtxid) > 0) {\n+            // We shouldn't have re-submitted if the tx result was already in results_final.\n+            Assume(results_final.count(wtxid) == 0);\n+            results_final.emplace(wtxid, final_submission_result.m_tx_results.at(wtxid));\n+        } else if (const auto it{results_final.find(wtxid)}; it != results_final.end()) {\n+            // Already-in-mempool transaction.\n+            Assume(it->second.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n+            Assume(individual_results_nonfinal.count(wtxid) == 0);\n+        } else if (const auto it{individual_results_nonfinal.find(wtxid)}; it != individual_results_nonfinal.end()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1304712148",
      "id" : 1304712148,
      "line" : 1541,
      "node_id" : "PRRC_kwDOABII585NxFPU",
      "original_commit_id" : "a98da1a9844cdbc1cdeeeed9d4d9b80ea0cb7ee6",
      "original_line" : 1541,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 253,
      "pull_request_review_id" : 1593858718,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304712148/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-24T19:20:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304712148",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1304736690"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304736690"
         }
      },
      "author_association" : "MEMBER",
      "body" : "from commit message in 4cd3b8f2edb3176fef4dbc6109188d62e7dd2ba6\r\n\r\n\"- We cache a coin from a mempool transaction in m_view, but the coin\r\n      disappears due to eviction.\"\r\n\r\nNo longer true with the `AcceptSubPackage` changes in place",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-24T18:52:41Z",
      "diff_hunk" : "@@ -516,7 +516,7 @@ class MemPoolAccept\n                             /* m_coins_to_uncache */ package_args.m_coins_to_uncache,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1304736690",
      "id" : 1304736690,
      "line" : 516,
      "node_id" : "PRRC_kwDOABII585NxLOy",
      "original_commit_id" : "4cd3b8f2edb3176fef4dbc6109188d62e7dd2ba6",
      "original_line" : 516,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 1,
      "pull_request_review_id" : 1593858718,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304736690/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-24T19:20:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304736690",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1304756440"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304756440"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```Suggestion\r\n                package_state_final.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\r\n                results_final.emplace(wtxid, MempoolAcceptResult::Failure(mempool_full_state));\r\n```\r\n?",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-24T19:12:43Z",
      "diff_hunk" : "@@ -1509,16 +1497,36 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n         AcceptSubPackage(txns_package_eval, args);\n     PackageValidationState& package_state_final = final_submission_result.m_state;\n \n+    // Make sure we haven't exceeded max mempool size.\n+    // Package transactions that were submitted to mempool or already in mempool may be evicted.\n+    LimitMempoolSize(m_pool, m_active_chainstate.CoinsTip());\n+\n     for (const auto& tx : package) {\n+        // In case a transaction was in mempool but was evicted in the call to LimitMempoolSize().\n+        TxValidationState mempool_full_state;\n+        mempool_full_state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"mempool full\");\n         const auto& wtxid = tx->GetWitnessHash();\n         if (final_submission_result.m_tx_results.count(wtxid) > 0) {\n             // We shouldn't have re-submitted if the tx result was already in results_final.\n             Assume(results_final.count(wtxid) == 0);\n-            results_final.emplace(wtxid, final_submission_result.m_tx_results.at(wtxid));\n+            // If it was submitted, check to see if the tx is still in the mempool. It could have\n+            // been evicted due to LimitMempoolSize() above.\n+            const auto& txresult = final_submission_result.m_tx_results.at(wtxid);\n+            if (txresult.m_result_type == MempoolAcceptResult::ResultType::VALID && !m_pool.exists(GenTxid::Wtxid(wtxid))) {\n+                package_state_final.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+                results_final.emplace(wtxid, MempoolAcceptResult::Failure(mempool_full_state));\n+            } else {\n+                results_final.emplace(wtxid, txresult);\n+            }\n         } else if (const auto it{results_final.find(wtxid)}; it != results_final.end()) {\n-            // Already-in-mempool transaction.\n+            // Already-in-mempool transaction. Check to see if it's still in the mempool. It could\n+            // have been evicted due to LimitMempoolSize() above. Check by txid to include the\n+            // same-txid-different-witness case.\n             Assume(it->second.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n             Assume(individual_results_nonfinal.count(wtxid) == 0);\n+            if (!m_pool.exists(GenTxid::Txid(tx->GetHash()))) {\n+                package_state_final.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1304756440",
      "id" : 1304756440,
      "line" : 1534,
      "node_id" : "PRRC_kwDOABII585NxQDY",
      "original_commit_id" : "4cd3b8f2edb3176fef4dbc6109188d62e7dd2ba6",
      "original_line" : 1534,
      "original_position" : 92,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 246,
      "pull_request_review_id" : 1593858718,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304756440/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-24T19:20:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304756440",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305441088"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305441088"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T09:44:04Z",
      "diff_hunk" : "@@ -982,6 +982,7 @@ bool CCoinsViewMemPool::GetCoin(const COutPoint &outpoint, Coin &coin) const {\n     if (ptx) {\n         if (outpoint.n < ptx->vout.size()) {\n             coin = Coin(ptx->vout[outpoint.n], MEMPOOL_HEIGHT, false);\n+            m_non_base_coins.emplace(outpoint);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305441088",
      "id" : 1305441088,
      "in_reply_to_id" : 1303250157,
      "line" : 985,
      "node_id" : "PRRC_kwDOABII585Nz3NA",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 985,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : 4,
      "pull_request_review_id" : 1595348940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305441088/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305441088",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305444269"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305444269"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes. I've changed this to just return `m_non_base_coins`.",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T09:46:35Z",
      "diff_hunk" : "@@ -994,8 +995,22 @@ void CCoinsViewMemPool::PackageAddTransaction(const CTransactionRef& tx)\n {\n     for (unsigned int n = 0; n < tx->vout.size(); ++n) {\n         m_temp_added.emplace(COutPoint(tx->GetHash(), n), Coin(tx->vout[n], MEMPOOL_HEIGHT, false));\n+        m_non_base_coins.emplace(COutPoint(tx->GetHash(), n));\n     }\n }\n+std::unordered_set<COutPoint, SaltedOutpointHasher> CCoinsViewMemPool::GetNonBaseCoins() const\n+{\n+    std::unordered_set<COutPoint, SaltedOutpointHasher> non_base_coins(m_non_base_coins.cbegin(), m_non_base_coins.cend());\n+    for (const auto& [coin, _] : m_temp_added) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305444269",
      "id" : 1305444269,
      "in_reply_to_id" : 1303262613,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Nz3-t",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 1004,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1595348940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305444269/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305444269",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305445765"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305445765"
         }
      },
      "author_association" : "MEMBER",
      "body" : "added",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T09:47:49Z",
      "diff_hunk" : "@@ -839,6 +839,12 @@ class CCoinsViewMemPool : public CCoinsViewBacked\n     * validation, since we can access transaction outputs without submitting them to mempool.\n     */\n     std::unordered_map<COutPoint, Coin, SaltedOutpointHasher> m_temp_added;\n+\n+    /**\n+     * Set of all coins that have been fetched from mempool (not base). Used to internally track",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305445765",
      "id" : 1305445765,
      "in_reply_to_id" : 1303253413,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Nz4WF",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 844,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 1595348940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305445765/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305445765",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305500514"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305500514"
         }
      },
      "author_association" : "MEMBER",
      "body" : "added more detail to this comment block",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T10:41:31Z",
      "diff_hunk" : "@@ -1326,6 +1325,47 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n     return PackageMempoolAcceptResult(package_state, std::move(results));\n }\n \n+PackageMempoolAcceptResult MemPoolAccept::AcceptSubPackage(const std::vector<CTransactionRef>& subpackage, ATMPArgs& args)\n+{\n+    AssertLockHeld(::cs_main);\n+    AssertLockHeld(m_pool.cs);\n+    const auto result = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_pool.cs) {\n+        if (subpackage.size() > 1) {\n+            return AcceptMultipleTransactions(subpackage, args);\n+        }\n+        const auto& tx = subpackage.front();\n+        ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+        const auto single_res = AcceptSingleTransaction(tx, single_args);\n+        PackageValidationState package_state_wrapped;\n+        if (single_res.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n+            package_state_wrapped.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+        }\n+        return PackageMempoolAcceptResult(package_state_wrapped, {{tx->GetWitnessHash(), single_res}});\n+    }();\n+    // There are 3 kinds of coins in m_view:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305500514",
      "id" : 1305500514,
      "in_reply_to_id" : 1304490960,
      "line" : 1348,
      "node_id" : "PRRC_kwDOABII585N0Fti",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 1348,
      "original_position" : 118,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 121,
      "pull_request_review_id" : 1595348940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305500514/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305500514",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305500619"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305500619"
         }
      },
      "author_association" : "MEMBER",
      "body" : "thanks, fixed",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T10:41:38Z",
      "diff_hunk" : "@@ -1326,6 +1325,47 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n     return PackageMempoolAcceptResult(package_state, std::move(results));\n }\n \n+PackageMempoolAcceptResult MemPoolAccept::AcceptSubPackage(const std::vector<CTransactionRef>& subpackage, ATMPArgs& args)\n+{\n+    AssertLockHeld(::cs_main);\n+    AssertLockHeld(m_pool.cs);\n+    const auto result = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_pool.cs) {\n+        if (subpackage.size() > 1) {\n+            return AcceptMultipleTransactions(subpackage, args);\n+        }\n+        const auto& tx = subpackage.front();\n+        ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+        const auto single_res = AcceptSingleTransaction(tx, single_args);\n+        PackageValidationState package_state_wrapped;\n+        if (single_res.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n+            package_state_wrapped.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+        }\n+        return PackageMempoolAcceptResult(package_state_wrapped, {{tx->GetWitnessHash(), single_res}});\n+    }();\n+    // There are 3 kinds of coins in m_view:\n+    // (1) Temporary coins from the transactions in subpackage, constructed by m_viewmempool.\n+    // (2) Mempool coins from transactions in the mempool, constructed by m_viewmempool.\n+    // (3) Chainstate coins fetched from our current UTXO set.\n+    //\n+    // (1) Temporary coins need to be removed. If transactions were submitted to the mempool,\n+    // m_viewmempool will be able to fetch them from there. If they weren't submitted to\n+    // mempool, it is incorrect to keep them - future calls may try to spend those coins that\n+    // don't actually exist.\n+    // (2) Mempool coins also need to be removed. If the mempool contents have changed, coins\n+    // previously fetched from mempool may now be spent or nonexistent. Those coins need to be\n+    // deleted from m_view.\n+    // (3) Chainstate coins don't need to be removed, as the chainstate has not changed (we are\n+    // holding cs_main and no blocks have been processed). They *should not* be removed, as we\n+    // wouldn't want to fetch them again.\n+    for (const auto& outpoint : m_viewmempool.GetNonBaseCoins()) {\n+        // We also need to manually delete these coins from m_view because it has cached copies\n+        // of the coins it fetched from m_viewmempool when they were connected.\n+        m_view.Uncache(outpoint);\n+    }\n+    m_viewmempool.Reset();\n+    return result;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305500619",
      "id" : 1305500619,
      "in_reply_to_id" : 1303930607,
      "line" : 1373,
      "node_id" : "PRRC_kwDOABII585N0FvL",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 1373,
      "original_position" : 139,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 146,
      "pull_request_review_id" : 1595348940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305500619/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305500619",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305501594"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305501594"
         }
      },
      "author_association" : "MEMBER",
      "body" : "changed",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T10:42:56Z",
      "diff_hunk" : "@@ -1505,32 +1505,28 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n         }\n     }\n \n-    // Quit early because package validation won't change the result or the entire package has\n-    // already been submitted.\n-    if (quit_early || txns_package_eval.empty()) {\n-        for (const auto& [wtxid, mempoolaccept_res] : individual_results_nonfinal) {\n-            Assume(results_final.emplace(wtxid, mempoolaccept_res).second);\n-            Assume(mempoolaccept_res.m_result_type == MempoolAcceptResult::ResultType::INVALID);\n-        }\n-        return PackageMempoolAcceptResult(package_state_quit_early, std::move(results_final));\n-    }\n-    // Validate the (deduplicated) transactions as a package. Note that submission_result has its\n-    // own PackageValidationState; package_state_quit_early is unused past this point.\n-    auto submission_result = AcceptSubPackage(txns_package_eval, args);\n-    // Include already-in-mempool transaction results in the final result.\n-    for (const auto& [wtxid, mempoolaccept_res] : results_final) {\n-        Assume(submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res).second);\n-        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n-    }\n-    if (submission_result.m_state.GetResult() == PackageValidationResult::PCKG_TX) {\n-        // Package validation failed because one or more transactions failed. Provide a result for\n-        // each transaction; if a transaction doesn't have an entry in submission_result,\n-        // include the previous individual failure reason.\n-        submission_result.m_tx_results.insert(individual_results_nonfinal.cbegin(),\n-                                              individual_results_nonfinal.cend());\n-        Assume(submission_result.m_tx_results.size() == package.size());\n-    }\n-    return submission_result;\n+    auto final_submission_result = quit_early || txns_package_eval.empty() ? PackageMempoolAcceptResult(package_state_quit_early, {}) :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305501594",
      "id" : 1305501594,
      "in_reply_to_id" : 1304701809,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585N0F-a",
      "original_commit_id" : "a98da1a9844cdbc1cdeeeed9d4d9b80ea0cb7ee6",
      "original_line" : 1508,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1595348940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305501594/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305501594",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305501801"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305501801"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Bad rebase. Fixed",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T10:43:12Z",
      "diff_hunk" : "@@ -1509,16 +1497,36 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n         AcceptSubPackage(txns_package_eval, args);\n     PackageValidationState& package_state_final = final_submission_result.m_state;\n \n+    // Make sure we haven't exceeded max mempool size.\n+    // Package transactions that were submitted to mempool or already in mempool may be evicted.\n+    LimitMempoolSize(m_pool, m_active_chainstate.CoinsTip());\n+\n     for (const auto& tx : package) {\n+        // In case a transaction was in mempool but was evicted in the call to LimitMempoolSize().\n+        TxValidationState mempool_full_state;\n+        mempool_full_state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"mempool full\");\n         const auto& wtxid = tx->GetWitnessHash();\n         if (final_submission_result.m_tx_results.count(wtxid) > 0) {\n             // We shouldn't have re-submitted if the tx result was already in results_final.\n             Assume(results_final.count(wtxid) == 0);\n-            results_final.emplace(wtxid, final_submission_result.m_tx_results.at(wtxid));\n+            // If it was submitted, check to see if the tx is still in the mempool. It could have\n+            // been evicted due to LimitMempoolSize() above.\n+            const auto& txresult = final_submission_result.m_tx_results.at(wtxid);\n+            if (txresult.m_result_type == MempoolAcceptResult::ResultType::VALID && !m_pool.exists(GenTxid::Wtxid(wtxid))) {\n+                package_state_final.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+                results_final.emplace(wtxid, MempoolAcceptResult::Failure(mempool_full_state));\n+            } else {\n+                results_final.emplace(wtxid, txresult);\n+            }\n         } else if (const auto it{results_final.find(wtxid)}; it != results_final.end()) {\n-            // Already-in-mempool transaction.\n+            // Already-in-mempool transaction. Check to see if it's still in the mempool. It could\n+            // have been evicted due to LimitMempoolSize() above. Check by txid to include the\n+            // same-txid-different-witness case.\n             Assume(it->second.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n             Assume(individual_results_nonfinal.count(wtxid) == 0);\n+            if (!m_pool.exists(GenTxid::Txid(tx->GetHash()))) {\n+                package_state_final.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305501801",
      "id" : 1305501801,
      "in_reply_to_id" : 1304756440,
      "line" : 1534,
      "node_id" : "PRRC_kwDOABII585N0GBp",
      "original_commit_id" : "4cd3b8f2edb3176fef4dbc6109188d62e7dd2ba6",
      "original_line" : 1534,
      "original_position" : 92,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 246,
      "pull_request_review_id" : 1595348940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305501801/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305501801",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305529484"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305529484"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've changed the comment above `results_final` and `individual_results_nonfinal` to be accurate to this PR and to #26711.\r\n\r\nThis is most relevant when we otherwise don't have a result for this tx. From P2P it will be helpful for rejection caching and `MaybePunish` to know whenever there was a problem with any transaction.\r\nIn this case where we override the result with \"mempool full\", it's the same result anyway (`TX_MEMPOOL_POLICY`).",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T11:16:52Z",
      "diff_hunk" : "@@ -1505,32 +1505,28 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n         }\n     }\n \n-    // Quit early because package validation won't change the result or the entire package has\n-    // already been submitted.\n-    if (quit_early || txns_package_eval.empty()) {\n-        for (const auto& [wtxid, mempoolaccept_res] : individual_results_nonfinal) {\n-            Assume(results_final.emplace(wtxid, mempoolaccept_res).second);\n-            Assume(mempoolaccept_res.m_result_type == MempoolAcceptResult::ResultType::INVALID);\n-        }\n-        return PackageMempoolAcceptResult(package_state_quit_early, std::move(results_final));\n-    }\n-    // Validate the (deduplicated) transactions as a package. Note that submission_result has its\n-    // own PackageValidationState; package_state_quit_early is unused past this point.\n-    auto submission_result = AcceptSubPackage(txns_package_eval, args);\n-    // Include already-in-mempool transaction results in the final result.\n-    for (const auto& [wtxid, mempoolaccept_res] : results_final) {\n-        Assume(submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res).second);\n-        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n-    }\n-    if (submission_result.m_state.GetResult() == PackageValidationResult::PCKG_TX) {\n-        // Package validation failed because one or more transactions failed. Provide a result for\n-        // each transaction; if a transaction doesn't have an entry in submission_result,\n-        // include the previous individual failure reason.\n-        submission_result.m_tx_results.insert(individual_results_nonfinal.cbegin(),\n-                                              individual_results_nonfinal.cend());\n-        Assume(submission_result.m_tx_results.size() == package.size());\n-    }\n-    return submission_result;\n+    auto final_submission_result = quit_early || txns_package_eval.empty() ? PackageMempoolAcceptResult(package_state_quit_early, {}) :\n+        AcceptSubPackage(txns_package_eval, args);\n+    PackageValidationState& package_state_final = final_submission_result.m_state;\n+\n+    for (const auto& tx : package) {\n+        const auto& wtxid = tx->GetWitnessHash();\n+        if (final_submission_result.m_tx_results.count(wtxid) > 0) {\n+            // We shouldn't have re-submitted if the tx result was already in results_final.\n+            Assume(results_final.count(wtxid) == 0);\n+            results_final.emplace(wtxid, final_submission_result.m_tx_results.at(wtxid));\n+        } else if (const auto it{results_final.find(wtxid)}; it != results_final.end()) {\n+            // Already-in-mempool transaction.\n+            Assume(it->second.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n+            Assume(individual_results_nonfinal.count(wtxid) == 0);\n+        } else if (const auto it{individual_results_nonfinal.find(wtxid)}; it != individual_results_nonfinal.end()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305529484",
      "id" : 1305529484,
      "in_reply_to_id" : 1304712148,
      "line" : 1541,
      "node_id" : "PRRC_kwDOABII585N0MyM",
      "original_commit_id" : "a98da1a9844cdbc1cdeeeed9d4d9b80ea0cb7ee6",
      "original_line" : 1541,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 253,
      "pull_request_review_id" : 1595348940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305529484/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305529484",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305531847"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305531847"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a note",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T11:19:36Z",
      "diff_hunk" : "@@ -86,13 +86,172 @@ def fill_mempool(self):\n         assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+    def test_mid_package_eviction(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction\")\n+\n+        self.restart_node(0, extra_args=self.extra_args[0])\n+\n+        # Restarting the node resets mempool minimum feerate\n+        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n+        self.fill_mempool()\n+        current_info = node.getmempoolinfo()\n+        mempoolmin_feerate = current_info[\"mempoolminfee\"]\n+        assert_greater_than(mempoolmin_feerate, get_first_eviction_score(node))\n+\n+        package_hex = []\n+        # UTXOs to be spent by the ultimate child transaction\n+        parent_utxos = []\n+\n+        evicted_weight = 8000\n+        # Mempool transaction which is evicted due to being at the \"bottom\" of the mempool when the\n+        # mempool overflows and evicts by descendant score. It's important that the eviction doesn't\n+        # happen in the middle of package evaluation, as it can invalidate the coins cache.\n+        mempool_evicted_tx = self.wallet.send_self_transfer(\n+            from_node=node,\n+            fee=(mempoolmin_feerate / 1000) * (evicted_weight // 4) + Decimal('0.000001'),\n+            target_weight=evicted_weight,\n+            confirmed_only=True\n+        )\n+        # Already in mempool when package is submitted.\n+        assert mempool_evicted_tx[\"txid\"] in node.getrawmempool()\n+\n+        # This parent spends the above mempool transaction that exists when its inputs are first\n+        # looked up, but disappears later. It is rejected for being too low fee (but eligible for\n+        # reconsideration), and its inputs are cached. When the mempool transaction is evicted, its\n+        # coin is no longer available, but the cache could still contains the tx.\n+        cpfp_parent = self.wallet.create_self_transfer(\n+            utxo_to_spend=mempool_evicted_tx[\"new_utxo\"],\n+            fee_rate=mempoolmin_feerate - Decimal('0.00001'),\n+            confirmed_only=True)\n+        package_hex.append(cpfp_parent[\"hex\"])\n+        parent_utxos.append(cpfp_parent[\"new_utxo\"])\n+        assert_equal(node.testmempoolaccept([cpfp_parent[\"hex\"]])[0][\"reject-reason\"], \"mempool min fee not met\")\n+\n+        self.wallet.rescan_utxos()\n+\n+        # Series of parents that don't need CPFP and are submitted individually. Each one is large and\n+        # high feerate, which means they should trigger eviction but not be evicted.\n+        parent_weight = 100000\n+        num_big_parents = 3\n+        assert_greater_than(parent_weight * num_big_parents, current_info[\"maxmempool\"] - current_info[\"bytes\"])\n+        parent_fee = (100 * mempoolmin_feerate / 1000) * (parent_weight // 4)\n+\n+        big_parent_txids = []\n+        for i in range(num_big_parents):\n+            parent = self.wallet.create_self_transfer(fee=parent_fee, target_weight=parent_weight, confirmed_only=True)\n+            parent_utxos.append(parent[\"new_utxo\"])\n+            package_hex.append(parent[\"hex\"])\n+            big_parent_txids.append(parent[\"txid\"])\n+            # There is room for each of these transactions independently\n+            assert node.testmempoolaccept([parent[\"hex\"]])[0][\"allowed\"]\n+\n+        # Create a child spending everything, bumping cpfp_parent just above mempool minimum\n+        # feerate. It's important not to bump too much as otherwise mempool_evicted_tx would not be\n+        # evicted, making this test much less meaningful.\n+        approx_child_vsize = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos)[\"tx\"].get_vsize()\n+        cpfp_fee = (mempoolmin_feerate / 1000) * (cpfp_parent[\"tx\"].get_vsize() + approx_child_vsize) - cpfp_parent[\"fee\"]\n+        # Specific number of satoshis to fit within a small window. The parent_cpfp + child package needs to be\n+        # - When there is mid-package eviction, high enough feerate to meet the new mempoolminfee\n+        # - When there is no mid-package eviction, low enough feerate to be evicted immediately after submission.\n+        magic_satoshis = 1200\n+        cpfp_satoshis = int(cpfp_fee * COIN) + magic_satoshis\n+\n+        child = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos, fee_per_output=cpfp_satoshis)\n+        package_hex.append(child[\"hex\"])\n+\n+        # Package should be submitted, temporarily exceeding maxmempool, and then evicted.\n+        with node.assert_debug_log(expected_msgs=[\"rolling minimum fee bumped\"]):\n+            assert_raises_rpc_error(-26, \"mempool full\", node.submitpackage, package_hex)\n+\n+        # Maximum size must never be exceeded.\n+        assert_greater_than(node.getmempoolinfo()[\"maxmempool\"], node.getmempoolinfo()[\"bytes\"])\n+\n+        # Evicted transaction and its descendants must not be in mempool.\n+        resulting_mempool_txids = node.getrawmempool()\n+        assert mempool_evicted_tx[\"txid\"] not in resulting_mempool_txids\n+        assert cpfp_parent[\"txid\"] not in resulting_mempool_txids\n+        assert child[\"txid\"] not in resulting_mempool_txids\n+        for txid in big_parent_txids:\n+            assert txid in resulting_mempool_txids\n+\n+    def test_mid_package_replacement(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where an early tx depends on a later-replaced mempool tx\")\n+\n+        self.restart_node(0, extra_args=self.extra_args[0])\n+\n+        # Restarting the node resets mempool minimum feerate\n+        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n+        self.fill_mempool()\n+        current_info = node.getmempoolinfo()\n+        mempoolmin_feerate = current_info[\"mempoolminfee\"]\n+        assert_greater_than(mempoolmin_feerate, get_first_eviction_score(node))\n+\n+        # Mempool transaction which is evicted due to being at the \"bottom\" of the mempool when the\n+        # mempool overflows and evicts by descendant score. It's important that the eviction doesn't\n+        # happen in the middle of package evaluation, as it can invalidate the coins cache.\n+        double_spent_utxo = self.wallet.get_utxo(confirmed_only=True)\n+        replaced_tx = self.wallet.send_self_transfer(\n+            from_node=node,\n+            utxo_to_spend=double_spent_utxo,\n+            fee_rate=mempoolmin_feerate,\n+            confirmed_only=True\n+        )\n+        # Already in mempool when package is submitted.\n+        assert replaced_tx[\"txid\"] in node.getrawmempool()\n+\n+        # This parent spends the above mempool transaction that exists when its inputs are first\n+        # looked up, but disappears later. It is rejected for being too low fee (but eligible for\n+        # reconsideration), and its inputs are cached. When the mempool transaction is evicted, its\n+        # coin is no longer available, but the cache could still contain the tx.\n+        cpfp_parent = self.wallet.create_self_transfer(\n+            utxo_to_spend=replaced_tx[\"new_utxo\"],\n+            fee_rate=mempoolmin_feerate - Decimal('0.00001'),\n+            confirmed_only=True)\n+\n+        self.wallet.rescan_utxos()\n+\n+        # Parent that replaces the parent of cpfp_parent.\n+        replacement_tx = self.wallet.create_self_transfer(\n+            utxo_to_spend=double_spent_utxo,\n+            fee_rate=10*mempoolmin_feerate,\n+            confirmed_only=True\n+        )\n+        parent_utxos = [cpfp_parent[\"new_utxo\"], replacement_tx[\"new_utxo\"]]\n+\n+        # Create a child spending everything, CPFPing the low-feerate parent.\n+        approx_child_vsize = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos)[\"tx\"].get_vsize()\n+        cpfp_fee = (2 * mempoolmin_feerate / 1000) * (cpfp_parent[\"tx\"].get_vsize() + approx_child_vsize) - cpfp_parent[\"fee\"]\n+        child = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos, fee_per_output=int(cpfp_fee * COIN))\n+        package_hex = [cpfp_parent[\"hex\"], replacement_tx[\"hex\"], child[\"hex\"]]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305531847",
      "id" : 1305531847,
      "in_reply_to_id" : 1303286812,
      "line" : 223,
      "node_id" : "PRRC_kwDOABII585N0NXH",
      "original_commit_id" : "a5a029c7799cb1f972e3fddc896bf009068cd8db",
      "original_line" : 223,
      "original_position" : 146,
      "original_start_line" : null,
      "path" : "test/functional/mempool_limit.py",
      "position" : 205,
      "pull_request_review_id" : 1595348940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305531847/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305531847",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305631043"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305631043"
         }
      },
      "author_association" : "MEMBER",
      "body" : "removed",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T13:01:14Z",
      "diff_hunk" : "@@ -516,7 +516,7 @@ class MemPoolAccept\n                             /* m_coins_to_uncache */ package_args.m_coins_to_uncache,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305631043",
      "id" : 1305631043,
      "in_reply_to_id" : 1304736690,
      "line" : 516,
      "node_id" : "PRRC_kwDOABII585N0llD",
      "original_commit_id" : "4cd3b8f2edb3176fef4dbc6109188d62e7dd2ba6",
      "original_line" : 516,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 1,
      "pull_request_review_id" : 1595687741,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305631043/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T13:01:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305631043",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305631297"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305631297"
         }
      },
      "author_association" : "MEMBER",
      "body" : "added",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T13:01:28Z",
      "diff_hunk" : "@@ -84,13 +85,105 @@ def fill_mempool(self):\n         assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+    def test_mid_package_eviction(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305631297",
      "id" : 1305631297,
      "in_reply_to_id" : 1301978861,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585N0lpB",
      "original_commit_id" : "3729ee483688da8427c9228de01407777d4e4691",
      "original_line" : 91,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/mempool_limit.py",
      "position" : null,
      "pull_request_review_id" : 1595688112,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305631297/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T13:01:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305631297",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305838343"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305838343"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: `m_temp_added` isn't involved",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T15:55:30Z",
      "diff_hunk" : "@@ -839,15 +839,27 @@ class CCoinsViewMemPool : public CCoinsViewBacked\n     * validation, since we can access transaction outputs without submitting them to mempool.\n     */\n     std::unordered_map<COutPoint, Coin, SaltedOutpointHasher> m_temp_added;\n+\n+    /**\n+     * Set of all coins that have been fetched from mempool or created using PackageAddTransaction\n+     * (not base). Used to internally track the origin of a coin.\n+     */\n+    mutable std::unordered_set<COutPoint, SaltedOutpointHasher> m_non_base_coins;\n protected:\n     const CTxMemPool& mempool;\n \n public:\n     CCoinsViewMemPool(CCoinsView* baseIn, const CTxMemPool& mempoolIn);\n+    /** GetCoin, returning whether it exists and is not spent. Also updates m_non_base_coins if the\n+     * coin is not fetched from base. */\n     bool GetCoin(const COutPoint &outpoint, Coin &coin) const override;\n     /** Add the coins created by this transaction. These coins are only temporarily stored in\n      * m_temp_added and cannot be flushed to the back end. Only used for package validation. */\n     void PackageAddTransaction(const CTransactionRef& tx);\n+    /** Get all coins in m_non_base_coins and m_temp_added. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305838343",
      "id" : 1305838343,
      "line" : 859,
      "node_id" : "PRRC_kwDOABII585N1YMH",
      "original_commit_id" : "c3b552925d2e5b15ea02e5079d3b82db03d007c9",
      "original_line" : 859,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : 21,
      "pull_request_review_id" : 1596008248,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305838343/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T16:04:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305838343",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305844817"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305844817"
         }
      },
      "author_association" : "MEMBER",
      "body" : "clearer the way it is now, thanks!",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-25T16:00:43Z",
      "diff_hunk" : "@@ -1505,32 +1505,28 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n         }\n     }\n \n-    // Quit early because package validation won't change the result or the entire package has\n-    // already been submitted.\n-    if (quit_early || txns_package_eval.empty()) {\n-        for (const auto& [wtxid, mempoolaccept_res] : individual_results_nonfinal) {\n-            Assume(results_final.emplace(wtxid, mempoolaccept_res).second);\n-            Assume(mempoolaccept_res.m_result_type == MempoolAcceptResult::ResultType::INVALID);\n-        }\n-        return PackageMempoolAcceptResult(package_state_quit_early, std::move(results_final));\n-    }\n-    // Validate the (deduplicated) transactions as a package. Note that submission_result has its\n-    // own PackageValidationState; package_state_quit_early is unused past this point.\n-    auto submission_result = AcceptSubPackage(txns_package_eval, args);\n-    // Include already-in-mempool transaction results in the final result.\n-    for (const auto& [wtxid, mempoolaccept_res] : results_final) {\n-        Assume(submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res).second);\n-        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n-    }\n-    if (submission_result.m_state.GetResult() == PackageValidationResult::PCKG_TX) {\n-        // Package validation failed because one or more transactions failed. Provide a result for\n-        // each transaction; if a transaction doesn't have an entry in submission_result,\n-        // include the previous individual failure reason.\n-        submission_result.m_tx_results.insert(individual_results_nonfinal.cbegin(),\n-                                              individual_results_nonfinal.cend());\n-        Assume(submission_result.m_tx_results.size() == package.size());\n-    }\n-    return submission_result;\n+    auto final_submission_result = quit_early || txns_package_eval.empty() ? PackageMempoolAcceptResult(package_state_quit_early, {}) :\n+        AcceptSubPackage(txns_package_eval, args);\n+    PackageValidationState& package_state_final = final_submission_result.m_state;\n+\n+    for (const auto& tx : package) {\n+        const auto& wtxid = tx->GetWitnessHash();\n+        if (final_submission_result.m_tx_results.count(wtxid) > 0) {\n+            // We shouldn't have re-submitted if the tx result was already in results_final.\n+            Assume(results_final.count(wtxid) == 0);\n+            results_final.emplace(wtxid, final_submission_result.m_tx_results.at(wtxid));\n+        } else if (const auto it{results_final.find(wtxid)}; it != results_final.end()) {\n+            // Already-in-mempool transaction.\n+            Assume(it->second.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n+            Assume(individual_results_nonfinal.count(wtxid) == 0);\n+        } else if (const auto it{individual_results_nonfinal.find(wtxid)}; it != individual_results_nonfinal.end()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1305844817",
      "id" : 1305844817,
      "in_reply_to_id" : 1304712148,
      "line" : 1541,
      "node_id" : "PRRC_kwDOABII585N1ZxR",
      "original_commit_id" : "a98da1a9844cdbc1cdeeeed9d4d9b80ea0cb7ee6",
      "original_line" : 1541,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 253,
      "pull_request_review_id" : 1596008248,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305844817/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T16:04:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305844817",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1309559476"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309559476"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think there is confusion, my comment is about the test coverage of the exact code path in the first half of `AcceptSubPackage` not of the second usage of `AccetSubPackage()`.\r\n\r\nFrom a quick look on the tests at c2c9dfe9, it was uncertain.",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-30T02:44:53Z",
      "diff_hunk" : "@@ -1326,6 +1325,23 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n     return PackageMempoolAcceptResult(package_state, std::move(results));\n }\n \n+PackageMempoolAcceptResult MemPoolAccept::AcceptSubPackage(const std::vector<CTransactionRef>& subpackage, ATMPArgs& args)\n+{\n+    ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+    AssertLockHeld(::cs_main);\n+    AssertLockHeld(m_pool.cs);\n+    if (subpackage.size() > 1) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1309559476",
      "id" : 1309559476,
      "in_reply_to_id" : 1290866687,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ODkq0",
      "original_commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "original_line" : 1333,
      "original_position" : 101,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1601777001,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309559476/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-30T02:44:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309559476",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1309581518"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309581518"
         }
      },
      "author_association" : "MEMBER",
      "body" : "As I understand one of the condition to hit the case is a full mempool and when we call `LimitMempool()`, one interesting variation of the test case could be to limit the mempool size to the _subpackage_ only. It might be a tricky one, though boundary conditions are always nice to exercise.",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-08-30T03:19:45Z",
      "diff_hunk" : "@@ -34,51 +34,224 @@ def set_test_params(self):\n         ]]\n         self.supports_cli = False\n \n-    def run_test(self):\n+    def fill_mempool(self):\n+        \"\"\"Fill mempool until eviction.\"\"\"\n+        self.log.info(\"Fill the mempool until eviction is triggered and the mempoolminfee rises\")\n         txouts = gen_return_txouts()\n         node = self.nodes[0]\n-        miniwallet = MiniWallet(node)\n+        miniwallet = self.wallet\n         relayfee = node.getnetworkinfo()['relayfee']\n \n-        self.log.info('Check that mempoolminfee is minrelaytxfee')\n-        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n-        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n-\n         tx_batch_size = 1\n         num_of_batches = 75\n         # Generate UTXOs to flood the mempool\n         # 1 to create a tx initially that will be evicted from the mempool later\n-        # 3 batches of multiple transactions with a fee rate much higher than the previous UTXO\n+        # 75 transactions each with a fee rate higher than the previous one\n         # And 1 more to verify that this tx does not get added to the mempool with a fee rate less than the mempoolminfee\n         # And 2 more for the package cpfp test\n-        self.generate(miniwallet, 1 + (num_of_batches * tx_batch_size) + 1 + 2)\n+        self.generate(miniwallet, 1 + (num_of_batches * tx_batch_size))\n \n         # Mine 99 blocks so that the UTXOs are allowed to be spent\n         self.generate(node, COINBASE_MATURITY - 1)\n \n-        self.log.info('Create a mempool tx that will be evicted')\n+        self.log.debug(\"Create a mempool tx that will be evicted\")\n         tx_to_be_evicted_id = miniwallet.send_self_transfer(from_node=node, fee_rate=relayfee)[\"txid\"]\n \n         # Increase the tx fee rate to give the subsequent transactions a higher priority in the mempool\n         # The tx has an approx. vsize of 65k, i.e. multiplying the previous fee rate (in sats/kvB)\n         # by 130 should result in a fee that corresponds to 2x of that fee rate\n         base_fee = relayfee * 130\n \n-        self.log.info(\"Fill up the mempool with txs with higher fee rate\")\n-        for batch_of_txid in range(num_of_batches):\n-            fee = (batch_of_txid + 1) * base_fee\n-            create_lots_of_big_transactions(miniwallet, node, fee, tx_batch_size, txouts)\n+        self.log.debug(\"Fill up the mempool with txs with higher fee rate\")\n+        with node.assert_debug_log([\"rolling minimum fee bumped\"]):\n+            for batch_of_txid in range(num_of_batches):\n+                fee = (batch_of_txid + 1) * base_fee\n+                create_lots_of_big_transactions(miniwallet, node, fee, tx_batch_size, txouts)\n \n-        self.log.info('The tx should be evicted by now')\n+        self.log.debug(\"The tx should be evicted by now\")\n         # The number of transactions created should be greater than the ones present in the mempool\n         assert_greater_than(tx_batch_size * num_of_batches, len(node.getrawmempool()))\n         # Initial tx created should not be present in the mempool anymore as it had a lower fee rate\n         assert tx_to_be_evicted_id not in node.getrawmempool()\n \n-        self.log.info('Check that mempoolminfee is larger than minrelaytxfee')\n+        self.log.debug(\"Check that mempoolminfee is larger than minrelaytxfee\")\n         assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+    def test_mid_package_eviction(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction before package submission terminates\")\n+\n+        self.restart_node(0, extra_args=self.extra_args[0])\n+\n+        # Restarting the node resets mempool minimum feerate\n+        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n+        self.fill_mempool()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1309581518",
      "id" : 1309581518,
      "line" : 91,
      "node_id" : "PRRC_kwDOABII585ODqDO",
      "original_commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "original_line" : 91,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "test/functional/mempool_limit.py",
      "position" : 73,
      "pull_request_review_id" : 1601796934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309581518/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-30T03:23:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309581518",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1313672940"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313672940"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: I think it can be commented as `max_size_bytes` to make clear which mempool limits is bypassed, to dissociate from ancestor / descendant one.",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-09-02T01:05:05Z",
      "diff_hunk" : "@@ -639,10 +650,9 @@ class MemPoolAccept\n \n     // Submit all transactions to the mempool and call ConsensusScriptChecks to add to the script\n     // cache - should only be called after successful validation of all transactions in the package.\n-    // The package may end up partially-submitted after size limiting; returns true if all\n-    // transactions are successfully added to the mempool, false otherwise.\n+    // Does not call LimitMempool(), so maximum size may be temporarily exceeded.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1313672940",
      "id" : 1313672940,
      "line" : 653,
      "node_id" : "PRRC_kwDOABII585OTQ7s",
      "original_commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "original_line" : 653,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 33,
      "pull_request_review_id" : 1607809093,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313672940/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-02T02:14:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313672940",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1313674927"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313674927"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Here it can be say âadjusted ATMPArgsâ (`ATMPArgs::SingleInPackageAccept`).",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-09-02T01:20:40Z",
      "diff_hunk" : "@@ -554,6 +554,17 @@ class MemPoolAccept\n     */\n     PackageMempoolAcceptResult AcceptMultipleTransactions(const std::vector<CTransactionRef>& txns, ATMPArgs& args) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Submission of a subpackage. If only 1 transaction exists in subpackage, calls\n+     * AcceptSingleTransaction() with adjusted ATMPArgs to avoid additional package policy",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1313674927",
      "id" : 1313674927,
      "line" : 559,
      "node_id" : "PRRC_kwDOABII585OTRav",
      "original_commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "original_line" : 559,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 15,
      "pull_request_review_id" : 1607809093,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313674927/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-02T02:14:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313674927",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1313679108"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313679108"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`s/LimitMempool()/LimitMempoolSize()/g`",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-09-02T01:27:23Z",
      "diff_hunk" : "@@ -1174,32 +1184,21 @@ bool MemPoolAccept::SubmitPackage(const ATMPArgs& args, std::vector<Workspace>&\n         }\n     }\n \n-    // It may or may not be the case that all the transactions made it into the mempool. Regardless,\n-    // make sure we haven't exceeded max mempool size.\n-    LimitMempoolSize(m_pool, m_active_chainstate.CoinsTip());\n-\n     std::vector<uint256> all_package_wtxids;\n     all_package_wtxids.reserve(workspaces.size());\n     std::transform(workspaces.cbegin(), workspaces.cend(), std::back_inserter(all_package_wtxids),\n                    [](const auto& ws) { return ws.m_ptx->GetWitnessHash(); });\n-    // Find the wtxids of the transactions that made it into the mempool. Allow partial submission,\n-    // but don't report success unless they all made it into the mempool.\n+\n+    // Add successful results. The returned results may change later if LimitMempool() evicts them.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1313679108",
      "id" : 1313679108,
      "line" : 1192,
      "node_id" : "PRRC_kwDOABII585OTScE",
      "original_commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "original_line" : 1192,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 64,
      "pull_request_review_id" : 1607809093,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313679108/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-02T02:14:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313679108",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1313685462"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313685462"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Currently, we take `LOCK(m_pool.cs)` L1431 in `AcceptPackage()` and the two calls to `AcceptSubPackage()` happens L1475 and L1504, where lock should still be held and mempool contents not have changed ?",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-09-02T01:59:06Z",
      "diff_hunk" : "@@ -1326,6 +1325,54 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n     return PackageMempoolAcceptResult(package_state, std::move(results));\n }\n \n+PackageMempoolAcceptResult MemPoolAccept::AcceptSubPackage(const std::vector<CTransactionRef>& subpackage, ATMPArgs& args)\n+{\n+    AssertLockHeld(::cs_main);\n+    AssertLockHeld(m_pool.cs);\n+    auto result = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_pool.cs) {\n+        if (subpackage.size() > 1) {\n+            return AcceptMultipleTransactions(subpackage, args);\n+        }\n+        const auto& tx = subpackage.front();\n+        ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+        const auto single_res = AcceptSingleTransaction(tx, single_args);\n+        PackageValidationState package_state_wrapped;\n+        if (single_res.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n+            package_state_wrapped.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+        }\n+        return PackageMempoolAcceptResult(package_state_wrapped, {{tx->GetWitnessHash(), single_res}});\n+    }();\n+    // Clean up m_view and m_viewmempool so that other subpackage evaluations don't have access to\n+    // coins they shouldn't. Keep some coins in order to minimize re-fetching coins from the UTXO set.\n+    //\n+    // There are 3 kinds of coins in m_view:\n+    // (1) Temporary coins from the transactions in subpackage, constructed by m_viewmempool.\n+    // (2) Mempool coins from transactions in the mempool, constructed by m_viewmempool.\n+    // (3) Confirmed coins fetched from our current UTXO set.\n+    //\n+    // (1) Temporary coins need to be removed, regardless of whether the transaction was submitted.\n+    // If the transaction was submitted to the mempool, m_viewmempool will be able to fetch them from\n+    // there. If it wasn't submitted to mempool, it is incorrect to keep them - future calls may try\n+    // to spend those coins that don't actually exist.\n+    // (2) Mempool coins also need to be removed. If the mempool contents have changed, coins",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1313685462",
      "id" : 1313685462,
      "line" : 1357,
      "node_id" : "PRRC_kwDOABII585OTT_W",
      "original_commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "original_line" : 1357,
      "original_position" : 130,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 130,
      "pull_request_review_id" : 1607809093,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313685462/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-02T02:14:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313685462",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1313686915"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313686915"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Finality is already an existent notion related to transaction validation (`IsFinalTx` in `src/consensus/tx_verify.cpp`). Maybe it can be called `results_nondefinitive` or `results_partial`.",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-09-02T02:07:06Z",
      "diff_hunk" : "@@ -1382,21 +1429,12 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n     m_view.SetBackend(m_dummy);\n \n     LOCK(m_pool.cs);\n-    // Stores final results that won't change\n-    std::map<const uint256, const MempoolAcceptResult> results_final;\n-    // Node operators are free to set their mempool policies however they please, nodes may receive\n-    // transactions in different orders, and malicious counterparties may try to take advantage of\n-    // policy differences to pin or delay propagation of transactions. As such, it's possible for\n-    // some package transaction(s) to already be in the mempool, and we don't want to reject the\n-    // entire package in that case (as that could be a censorship vector). De-duplicate the\n-    // transactions that are already in the mempool, and only call AcceptMultipleTransactions() with\n-    // the new transactions. This ensures we don't double-count transaction counts and sizes when\n-    // checking ancestor/descendant limits, or double-count transaction fees for fee-related policy.\n-    ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n-    // Results from individual validation. \"Nonfinal\" because if a transaction fails by itself but\n-    // succeeds later (i.e. when evaluated with a fee-bumping child), the result changes (though not\n-    // reflected in this map). If a transaction fails more than once, we want to return the first\n-    // result, when it was considered on its own. So changes will only be from invalid -> valid.\n+    // Stores \"final\" results from which we will create the returned PackageMempoolAcceptResult.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1313686915",
      "id" : 1313686915,
      "line" : 1432,
      "node_id" : "PRRC_kwDOABII585OTUWD",
      "original_commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "original_line" : 1432,
      "original_position" : 171,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 171,
      "pull_request_review_id" : 1607809093,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313686915/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-02T02:14:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313686915",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1314728482"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314728482"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I mean the contents have changed because we submitted transaction(s), not due to another thread's actions.",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-09-04T10:10:29Z",
      "diff_hunk" : "@@ -1326,6 +1325,54 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n     return PackageMempoolAcceptResult(package_state, std::move(results));\n }\n \n+PackageMempoolAcceptResult MemPoolAccept::AcceptSubPackage(const std::vector<CTransactionRef>& subpackage, ATMPArgs& args)\n+{\n+    AssertLockHeld(::cs_main);\n+    AssertLockHeld(m_pool.cs);\n+    auto result = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_pool.cs) {\n+        if (subpackage.size() > 1) {\n+            return AcceptMultipleTransactions(subpackage, args);\n+        }\n+        const auto& tx = subpackage.front();\n+        ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+        const auto single_res = AcceptSingleTransaction(tx, single_args);\n+        PackageValidationState package_state_wrapped;\n+        if (single_res.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n+            package_state_wrapped.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+        }\n+        return PackageMempoolAcceptResult(package_state_wrapped, {{tx->GetWitnessHash(), single_res}});\n+    }();\n+    // Clean up m_view and m_viewmempool so that other subpackage evaluations don't have access to\n+    // coins they shouldn't. Keep some coins in order to minimize re-fetching coins from the UTXO set.\n+    //\n+    // There are 3 kinds of coins in m_view:\n+    // (1) Temporary coins from the transactions in subpackage, constructed by m_viewmempool.\n+    // (2) Mempool coins from transactions in the mempool, constructed by m_viewmempool.\n+    // (3) Confirmed coins fetched from our current UTXO set.\n+    //\n+    // (1) Temporary coins need to be removed, regardless of whether the transaction was submitted.\n+    // If the transaction was submitted to the mempool, m_viewmempool will be able to fetch them from\n+    // there. If it wasn't submitted to mempool, it is incorrect to keep them - future calls may try\n+    // to spend those coins that don't actually exist.\n+    // (2) Mempool coins also need to be removed. If the mempool contents have changed, coins",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1314728482",
      "id" : 1314728482,
      "in_reply_to_id" : 1313685462,
      "line" : 1357,
      "node_id" : "PRRC_kwDOABII585OXSoi",
      "original_commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "original_line" : 1357,
      "original_position" : 130,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 130,
      "pull_request_review_id" : 1609214634,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314728482/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-04T10:10:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314728482",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1314729039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314729039"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this is already the case? \"calls AcceptSingleTransaction() with adjusted ATMPArgs\"",
      "commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "created_at" : "2023-09-04T10:11:02Z",
      "diff_hunk" : "@@ -554,6 +554,17 @@ class MemPoolAccept\n     */\n     PackageMempoolAcceptResult AcceptMultipleTransactions(const std::vector<CTransactionRef>& txns, ATMPArgs& args) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Submission of a subpackage. If only 1 transaction exists in subpackage, calls\n+     * AcceptSingleTransaction() with adjusted ATMPArgs to avoid additional package policy",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1314729039",
      "id" : 1314729039,
      "in_reply_to_id" : 1313674927,
      "line" : 559,
      "node_id" : "PRRC_kwDOABII585OXSxP",
      "original_commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "original_line" : 559,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 15,
      "pull_request_review_id" : 1609215485,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314729039/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-04T10:11:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314729039",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Concept ACK, will do a full review once the test has been added.\r\n\r\nping @fjahr :)",
      "created_at" : "2023-09-06T14:29:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#issuecomment-1708485224",
      "id" : 1708485224,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28251",
      "node_id" : "IC_kwDOABII585l1Wpo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1708485224/reactions"
      },
      "updated_at" : "2023-09-06T14:29:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1708485224",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "If one wanna test the crash on master to check new test coverage, skipping the new fix branch here: https://github.com/ariard/bitcoin/commit/cf0b24ce0b7034ac6e344db7b04012f5b430d4a1",
      "created_at" : "2023-09-08T23:41:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#issuecomment-1712338826",
      "id" : 1712338826,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28251",
      "node_id" : "IC_kwDOABII585mEDeK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1712338826/reactions"
      },
      "updated_at" : "2023-09-08T23:41:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1712338826",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Built a fuzzer which also caught this issue very quickly on my wimpy laptop: https://github.com/bitcoin/bitcoin/pull/28450",
      "created_at" : "2023-09-11T14:12:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#issuecomment-1713973851",
      "id" : 1713973851,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28251",
      "node_id" : "IC_kwDOABII585mKSpb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1713973851/reactions"
      },
      "updated_at" : "2023-09-11T14:12:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1713973851",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1322951580"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322951580"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, full mempool is one of the conditions (i.e. the one tested in `test_mid_package_eviction`). It's not strictly necessary though, the coin can also disappear due to replacement.\r\n\r\n> one interesting variation of the test case could be to limit the mempool size to the subpackage only\r\n\r\nDo you mean setting the mempool's maximum memory to something very tiny?",
      "commit_id" : "a929cab981688dae88f1ae692a6a322328da12b0",
      "created_at" : "2023-09-12T12:18:22Z",
      "diff_hunk" : "@@ -34,51 +34,224 @@ def set_test_params(self):\n         ]]\n         self.supports_cli = False\n \n-    def run_test(self):\n+    def fill_mempool(self):\n+        \"\"\"Fill mempool until eviction.\"\"\"\n+        self.log.info(\"Fill the mempool until eviction is triggered and the mempoolminfee rises\")\n         txouts = gen_return_txouts()\n         node = self.nodes[0]\n-        miniwallet = MiniWallet(node)\n+        miniwallet = self.wallet\n         relayfee = node.getnetworkinfo()['relayfee']\n \n-        self.log.info('Check that mempoolminfee is minrelaytxfee')\n-        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n-        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n-\n         tx_batch_size = 1\n         num_of_batches = 75\n         # Generate UTXOs to flood the mempool\n         # 1 to create a tx initially that will be evicted from the mempool later\n-        # 3 batches of multiple transactions with a fee rate much higher than the previous UTXO\n+        # 75 transactions each with a fee rate higher than the previous one\n         # And 1 more to verify that this tx does not get added to the mempool with a fee rate less than the mempoolminfee\n         # And 2 more for the package cpfp test\n-        self.generate(miniwallet, 1 + (num_of_batches * tx_batch_size) + 1 + 2)\n+        self.generate(miniwallet, 1 + (num_of_batches * tx_batch_size))\n \n         # Mine 99 blocks so that the UTXOs are allowed to be spent\n         self.generate(node, COINBASE_MATURITY - 1)\n \n-        self.log.info('Create a mempool tx that will be evicted')\n+        self.log.debug(\"Create a mempool tx that will be evicted\")\n         tx_to_be_evicted_id = miniwallet.send_self_transfer(from_node=node, fee_rate=relayfee)[\"txid\"]\n \n         # Increase the tx fee rate to give the subsequent transactions a higher priority in the mempool\n         # The tx has an approx. vsize of 65k, i.e. multiplying the previous fee rate (in sats/kvB)\n         # by 130 should result in a fee that corresponds to 2x of that fee rate\n         base_fee = relayfee * 130\n \n-        self.log.info(\"Fill up the mempool with txs with higher fee rate\")\n-        for batch_of_txid in range(num_of_batches):\n-            fee = (batch_of_txid + 1) * base_fee\n-            create_lots_of_big_transactions(miniwallet, node, fee, tx_batch_size, txouts)\n+        self.log.debug(\"Fill up the mempool with txs with higher fee rate\")\n+        with node.assert_debug_log([\"rolling minimum fee bumped\"]):\n+            for batch_of_txid in range(num_of_batches):\n+                fee = (batch_of_txid + 1) * base_fee\n+                create_lots_of_big_transactions(miniwallet, node, fee, tx_batch_size, txouts)\n \n-        self.log.info('The tx should be evicted by now')\n+        self.log.debug(\"The tx should be evicted by now\")\n         # The number of transactions created should be greater than the ones present in the mempool\n         assert_greater_than(tx_batch_size * num_of_batches, len(node.getrawmempool()))\n         # Initial tx created should not be present in the mempool anymore as it had a lower fee rate\n         assert tx_to_be_evicted_id not in node.getrawmempool()\n \n-        self.log.info('Check that mempoolminfee is larger than minrelaytxfee')\n+        self.log.debug(\"Check that mempoolminfee is larger than minrelaytxfee\")\n         assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+    def test_mid_package_eviction(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Check a package where each parent passes the current mempoolminfee but would cause eviction before package submission terminates\")\n+\n+        self.restart_node(0, extra_args=self.extra_args[0])\n+\n+        # Restarting the node resets mempool minimum feerate\n+        assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n+        self.fill_mempool()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1322951580",
      "id" : 1322951580,
      "in_reply_to_id" : 1309581518,
      "line" : 91,
      "node_id" : "PRRC_kwDOABII585O2qOc",
      "original_commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "original_line" : 91,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "test/functional/mempool_limit.py",
      "position" : 73,
      "pull_request_review_id" : 1622108517,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322951580/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T12:18:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322951580",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1322955829"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322955829"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed comment",
      "commit_id" : "a929cab981688dae88f1ae692a6a322328da12b0",
      "created_at" : "2023-09-12T12:22:02Z",
      "diff_hunk" : "@@ -839,15 +839,27 @@ class CCoinsViewMemPool : public CCoinsViewBacked\n     * validation, since we can access transaction outputs without submitting them to mempool.\n     */\n     std::unordered_map<COutPoint, Coin, SaltedOutpointHasher> m_temp_added;\n+\n+    /**\n+     * Set of all coins that have been fetched from mempool or created using PackageAddTransaction\n+     * (not base). Used to internally track the origin of a coin.\n+     */\n+    mutable std::unordered_set<COutPoint, SaltedOutpointHasher> m_non_base_coins;\n protected:\n     const CTxMemPool& mempool;\n \n public:\n     CCoinsViewMemPool(CCoinsView* baseIn, const CTxMemPool& mempoolIn);\n+    /** GetCoin, returning whether it exists and is not spent. Also updates m_non_base_coins if the\n+     * coin is not fetched from base. */\n     bool GetCoin(const COutPoint &outpoint, Coin &coin) const override;\n     /** Add the coins created by this transaction. These coins are only temporarily stored in\n      * m_temp_added and cannot be flushed to the back end. Only used for package validation. */\n     void PackageAddTransaction(const CTransactionRef& tx);\n+    /** Get all coins in m_non_base_coins and m_temp_added. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1322955829",
      "id" : 1322955829,
      "in_reply_to_id" : 1305838343,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O2rQ1",
      "original_commit_id" : "c3b552925d2e5b15ea02e5079d3b82db03d007c9",
      "original_line" : 859,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 1622115175,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322955829/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T12:51:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322955829",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1322961191"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322961191"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Edited comment",
      "commit_id" : "a929cab981688dae88f1ae692a6a322328da12b0",
      "created_at" : "2023-09-12T12:26:29Z",
      "diff_hunk" : "@@ -554,6 +554,16 @@ class MemPoolAccept\n     */\n     PackageMempoolAcceptResult AcceptMultipleTransactions(const std::vector<CTransactionRef>& txns, ATMPArgs& args) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Submission of a subpackage.  If only 1 transaction exists in subpackage, calls\n+     * AcceptSingleTransaction() with adjusted ATMPArgs to avoid additional package policy\n+     * restrictions like PackageMempoolChecks() and disabled RBF, and creates a",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1322961191",
      "id" : 1322961191,
      "in_reply_to_id" : 1290857304,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O2skn",
      "original_commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "original_line" : 560,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1622115175,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322961191/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T12:51:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322961191",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1322962329"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322962329"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Clarified this comment",
      "commit_id" : "a929cab981688dae88f1ae692a6a322328da12b0",
      "created_at" : "2023-09-12T12:27:28Z",
      "diff_hunk" : "@@ -1326,6 +1325,54 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n     return PackageMempoolAcceptResult(package_state, std::move(results));\n }\n \n+PackageMempoolAcceptResult MemPoolAccept::AcceptSubPackage(const std::vector<CTransactionRef>& subpackage, ATMPArgs& args)\n+{\n+    AssertLockHeld(::cs_main);\n+    AssertLockHeld(m_pool.cs);\n+    auto result = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_pool.cs) {\n+        if (subpackage.size() > 1) {\n+            return AcceptMultipleTransactions(subpackage, args);\n+        }\n+        const auto& tx = subpackage.front();\n+        ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+        const auto single_res = AcceptSingleTransaction(tx, single_args);\n+        PackageValidationState package_state_wrapped;\n+        if (single_res.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n+            package_state_wrapped.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+        }\n+        return PackageMempoolAcceptResult(package_state_wrapped, {{tx->GetWitnessHash(), single_res}});\n+    }();\n+    // Clean up m_view and m_viewmempool so that other subpackage evaluations don't have access to\n+    // coins they shouldn't. Keep some coins in order to minimize re-fetching coins from the UTXO set.\n+    //\n+    // There are 3 kinds of coins in m_view:\n+    // (1) Temporary coins from the transactions in subpackage, constructed by m_viewmempool.\n+    // (2) Mempool coins from transactions in the mempool, constructed by m_viewmempool.\n+    // (3) Confirmed coins fetched from our current UTXO set.\n+    //\n+    // (1) Temporary coins need to be removed, regardless of whether the transaction was submitted.\n+    // If the transaction was submitted to the mempool, m_viewmempool will be able to fetch them from\n+    // there. If it wasn't submitted to mempool, it is incorrect to keep them - future calls may try\n+    // to spend those coins that don't actually exist.\n+    // (2) Mempool coins also need to be removed. If the mempool contents have changed, coins",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1322962329",
      "id" : 1322962329,
      "in_reply_to_id" : 1313685462,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O2s2Z",
      "original_commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "original_line" : 1357,
      "original_position" : 130,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1622115175,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322962329/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T12:51:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322962329",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1322966394"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322966394"
         }
      },
      "author_association" : "MEMBER",
      "body" : "removed the word \"final\"",
      "commit_id" : "a929cab981688dae88f1ae692a6a322328da12b0",
      "created_at" : "2023-09-12T12:30:51Z",
      "diff_hunk" : "@@ -1382,21 +1429,12 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n     m_view.SetBackend(m_dummy);\n \n     LOCK(m_pool.cs);\n-    // Stores final results that won't change\n-    std::map<const uint256, const MempoolAcceptResult> results_final;\n-    // Node operators are free to set their mempool policies however they please, nodes may receive\n-    // transactions in different orders, and malicious counterparties may try to take advantage of\n-    // policy differences to pin or delay propagation of transactions. As such, it's possible for\n-    // some package transaction(s) to already be in the mempool, and we don't want to reject the\n-    // entire package in that case (as that could be a censorship vector). De-duplicate the\n-    // transactions that are already in the mempool, and only call AcceptMultipleTransactions() with\n-    // the new transactions. This ensures we don't double-count transaction counts and sizes when\n-    // checking ancestor/descendant limits, or double-count transaction fees for fee-related policy.\n-    ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n-    // Results from individual validation. \"Nonfinal\" because if a transaction fails by itself but\n-    // succeeds later (i.e. when evaluated with a fee-bumping child), the result changes (though not\n-    // reflected in this map). If a transaction fails more than once, we want to return the first\n-    // result, when it was considered on its own. So changes will only be from invalid -> valid.\n+    // Stores \"final\" results from which we will create the returned PackageMempoolAcceptResult.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1322966394",
      "id" : 1322966394,
      "in_reply_to_id" : 1313686915,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O2t16",
      "original_commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "original_line" : 1432,
      "original_position" : 171,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1622115175,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322966394/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T12:52:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322966394",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1322984813"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322984813"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added \"in Finalize()\" to the comment",
      "commit_id" : "a929cab981688dae88f1ae692a6a322328da12b0",
      "created_at" : "2023-09-12T12:44:51Z",
      "diff_hunk" : "@@ -516,7 +516,7 @@ class MemPoolAccept\n                             /* m_coins_to_uncache */ package_args.m_coins_to_uncache,\n                             /* m_test_accept */ package_args.m_test_accept,\n                             /* m_allow_replacement */ true,\n-                            /* m_package_submission */ false,\n+                            /* m_package_submission */ true, // do not LimitMempool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1322984813",
      "id" : 1322984813,
      "in_reply_to_id" : 1290865427,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O2yVt",
      "original_commit_id" : "c2c9dfe95b3c5b8332521d9a691725ee55ec3450",
      "original_line" : 519,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1622115175,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322984813/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T12:51:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322984813",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1322989174"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322989174"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, changed",
      "commit_id" : "a929cab981688dae88f1ae692a6a322328da12b0",
      "created_at" : "2023-09-12T12:48:06Z",
      "diff_hunk" : "@@ -1174,32 +1184,21 @@ bool MemPoolAccept::SubmitPackage(const ATMPArgs& args, std::vector<Workspace>&\n         }\n     }\n \n-    // It may or may not be the case that all the transactions made it into the mempool. Regardless,\n-    // make sure we haven't exceeded max mempool size.\n-    LimitMempoolSize(m_pool, m_active_chainstate.CoinsTip());\n-\n     std::vector<uint256> all_package_wtxids;\n     all_package_wtxids.reserve(workspaces.size());\n     std::transform(workspaces.cbegin(), workspaces.cend(), std::back_inserter(all_package_wtxids),\n                    [](const auto& ws) { return ws.m_ptx->GetWitnessHash(); });\n-    // Find the wtxids of the transactions that made it into the mempool. Allow partial submission,\n-    // but don't report success unless they all made it into the mempool.\n+\n+    // Add successful results. The returned results may change later if LimitMempool() evicts them.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1322989174",
      "id" : 1322989174,
      "in_reply_to_id" : 1313679108,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O2zZ2",
      "original_commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "original_line" : 1192,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1622115175,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322989174/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T12:51:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322989174",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1322990745"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322990745"
         }
      },
      "author_association" : "MEMBER",
      "body" : "mentioned",
      "commit_id" : "a929cab981688dae88f1ae692a6a322328da12b0",
      "created_at" : "2023-09-12T12:49:18Z",
      "diff_hunk" : "@@ -639,10 +650,9 @@ class MemPoolAccept\n \n     // Submit all transactions to the mempool and call ConsensusScriptChecks to add to the script\n     // cache - should only be called after successful validation of all transactions in the package.\n-    // The package may end up partially-submitted after size limiting; returns true if all\n-    // transactions are successfully added to the mempool, false otherwise.\n+    // Does not call LimitMempool(), so maximum size may be temporarily exceeded.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1322990745",
      "id" : 1322990745,
      "in_reply_to_id" : 1313672940,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O2zyZ",
      "original_commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "original_line" : 653,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1622115175,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322990745/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T12:51:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322990745",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1322995490"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322995490"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I agree renaming wouldn't be a bad idea, but perhaps the best time to do it is after #26711 (which changes the way this map is used) with a scripted-diff.",
      "commit_id" : "a929cab981688dae88f1ae692a6a322328da12b0",
      "created_at" : "2023-09-12T12:53:09Z",
      "diff_hunk" : "@@ -1382,21 +1429,12 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n     m_view.SetBackend(m_dummy);\n \n     LOCK(m_pool.cs);\n-    // Stores final results that won't change\n-    std::map<const uint256, const MempoolAcceptResult> results_final;\n-    // Node operators are free to set their mempool policies however they please, nodes may receive\n-    // transactions in different orders, and malicious counterparties may try to take advantage of\n-    // policy differences to pin or delay propagation of transactions. As such, it's possible for\n-    // some package transaction(s) to already be in the mempool, and we don't want to reject the\n-    // entire package in that case (as that could be a censorship vector). De-duplicate the\n-    // transactions that are already in the mempool, and only call AcceptMultipleTransactions() with\n-    // the new transactions. This ensures we don't double-count transaction counts and sizes when\n-    // checking ancestor/descendant limits, or double-count transaction fees for fee-related policy.\n-    ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n-    // Results from individual validation. \"Nonfinal\" because if a transaction fails by itself but\n-    // succeeds later (i.e. when evaluated with a fee-bumping child), the result changes (though not\n-    // reflected in this map). If a transaction fails more than once, we want to return the first\n-    // result, when it was considered on its own. So changes will only be from invalid -> valid.\n+    // Stores \"final\" results from which we will create the returned PackageMempoolAcceptResult.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1322995490",
      "id" : 1322995490,
      "in_reply_to_id" : 1313686915,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O208i",
      "original_commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "original_line" : 1432,
      "original_position" : 171,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1622179264,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322995490/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T12:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322995490",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1322996786"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322996786"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Resolving this comment but lmk if you meant something different",
      "commit_id" : "a929cab981688dae88f1ae692a6a322328da12b0",
      "created_at" : "2023-09-12T12:54:09Z",
      "diff_hunk" : "@@ -554,6 +554,17 @@ class MemPoolAccept\n     */\n     PackageMempoolAcceptResult AcceptMultipleTransactions(const std::vector<CTransactionRef>& txns, ATMPArgs& args) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Submission of a subpackage. If only 1 transaction exists in subpackage, calls\n+     * AcceptSingleTransaction() with adjusted ATMPArgs to avoid additional package policy",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#discussion_r1322996786",
      "id" : 1322996786,
      "in_reply_to_id" : 1313674927,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585O21Qy",
      "original_commit_id" : "22fe13e3526b582170c05f823395dba0a3c9c99a",
      "original_line" : 559,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1622181349,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322996786/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-12T12:54:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322996786",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "reACK https://github.com/bitcoin/bitcoin/pull/28251/commits/a929cab981688dae88f1ae692a6a322328da12b0\r\n\r\ntrivial comment updates",
      "created_at" : "2023-09-12T12:55:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#issuecomment-1715672082",
      "id" : 1715672082,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28251",
      "node_id" : "IC_kwDOABII585mQxQS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1715672082/reactions"
      },
      "updated_at" : "2023-09-12T12:55:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1715672082",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "fuzz CI:\r\n\r\n```\r\nvalidation.cpp:1538 AcceptPackage: Assertion `it->second.m_result_type != MempoolAcceptResult::ResultType::INVALID' failed.",
      "created_at" : "2023-09-13T11:53:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#issuecomment-1717481786",
      "id" : 1717481786,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28251",
      "node_id" : "IC_kwDOABII585mXrE6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1717481786/reactions"
      },
      "updated_at" : "2023-09-13T11:53:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1717481786",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks! Reproduced, debugging",
      "created_at" : "2023-09-13T12:24:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#issuecomment-1717526278",
      "id" : 1717526278,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28251",
      "node_id" : "IC_kwDOABII585mX18G",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1717526278/reactions"
      },
      "updated_at" : "2023-09-13T12:24:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1717526278",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "reACK https://github.com/bitcoin/bitcoin/pull/28251/commits/32c1dd1ad65af0ad4d36a56d2ca32a8481237e68\r\n\r\ninclusion of https://github.com/bitcoin/bitcoin/pull/28251/commits/7d7f7a1189432b1b6245ba25df572229870567cb duplicate-txid check in `CheckPackage` which prevents the assertion being hit for the 2nd of the duplicate txids",
      "created_at" : "2023-09-13T16:24:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28251#issuecomment-1717948555",
      "id" : 1717948555,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28251",
      "node_id" : "IC_kwDOABII585mZdCL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 1,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1717948555/reactions"
      },
      "updated_at" : "2023-09-13T16:49:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1717948555",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   }
]
