[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [BrandonOdiwuor](https://github.com/bitcoin/bitcoin/pull/28202#pullrequestreview-1580831598) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28453](https://github.com/bitcoin/bitcoin/pull/28453) (wallet: Receive silent payment transactions by achow101)\n* [#28333](https://github.com/bitcoin/bitcoin/pull/28333) (wallet: Construct ScriptPubKeyMans with all data rather than loaded progressively by achow101)\n* [#28246](https://github.com/bitcoin/bitcoin/pull/28246) (wallet: Use CTxDestination in CRecipient instead of just scriptPubKey by achow101)\n* [#28201](https://github.com/bitcoin/bitcoin/pull/28201) (Silent Payments: sending by josibake)\n* [#28142](https://github.com/bitcoin/bitcoin/pull/28142) (wallet: Allow users to create a wallet that encrypts all database records by achow101)\n* [#28122](https://github.com/bitcoin/bitcoin/pull/28122) (Silent Payments: Implement BIP352 by josibake)\n* [#27788](https://github.com/bitcoin/bitcoin/pull/27788) (rpc: Be able to access RPC parameters by name by achow101)\n* [#27596](https://github.com/bitcoin/bitcoin/pull/27596) (assumeutxo (2) by jamesob)\n* [#27351](https://github.com/bitcoin/bitcoin/pull/27351) (wallet: add `seeds` argument to `importdescriptors` by apoelstra)\n* [#27307](https://github.com/bitcoin/bitcoin/pull/27307) (wallet: track mempool conflicts with wallet transactions by ishaanam)\n* [#26840](https://github.com/bitcoin/bitcoin/pull/26840) (refactor: importpubkey, importprivkey, importaddress, importmulti, and importdescriptors rpc by KolbyML)\n* [#26728](https://github.com/bitcoin/bitcoin/pull/26728) (wallet: Have the wallet store the key for automatically generated descriptors by achow101)\n* [#26008](https://github.com/bitcoin/bitcoin/pull/26008) (wallet: cache IsMine scriptPubKeys to improve performance of descriptor wallets by achow101)\n* [#25907](https://github.com/bitcoin/bitcoin/pull/25907) (wallet: rpc to add automatically generated descriptors by achow101)\n* [#22838](https://github.com/bitcoin/bitcoin/pull/22838) (descriptors: Be able to specify change and receiving in a single descriptor string by achow101)\n* [#22341](https://github.com/bitcoin/bitcoin/pull/22341) (rpc: add getxpub by Sjors)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-08-02T16:42:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28202#issuecomment-1662569098",
      "id" : 1662569098,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28202",
      "node_id" : "IC_kwDOABII585jGMqK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1662569098/reactions"
      },
      "updated_at" : "2023-09-18T01:20:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1662569098",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28202#discussion_r1288396529"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28202"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288396529"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should recurse on `SCRIPTHASH` instead of assuming.",
      "commit_id" : "3f1b810e5d4361ef89be96d427c9c6862892c1ea",
      "created_at" : "2023-08-09T12:19:53Z",
      "diff_hunk" : "@@ -1449,6 +1574,134 @@ void CWallet::transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRe\n     }\n }\n \n+std::map<uint256, CPubKey> CWallet::GetSilentPaymentKeysPerBlock(const uint256& block_hash, const std::vector<CTransactionRef> vtx)\n+{\n+    CBlockUndo blockUndo;\n+    if (!chain().getUndoBlock(block_hash, blockUndo)) {\n+        return {};\n+    }\n+    return GetSilentPaymentKeys(block_hash, blockUndo, vtx);\n+}\n+\n+std::map<uint256, CPubKey> GetSilentPaymentKeys(const uint256& block_hash, const CBlockUndo& blockUndo, const std::vector<CTransactionRef> vtx)\n+{\n+    std::map<uint256, CPubKey>  items; // <tx_hash, sum of public keys of transaction inputs>\n+\n+    for (const auto& tx : vtx) {\n+\n+        if (tx->IsCoinBase()) {\n+            continue;\n+        }\n+\n+        std::unordered_set<TxoutType> tx_vout_types;\n+        for (auto& vout : tx->vout) {\n+            std::vector<std::vector<unsigned char>> solutions;\n+            TxoutType whichType = Solver(vout.scriptPubKey, solutions);\n+            tx_vout_types.insert(whichType);\n+        }\n+\n+        // Silent Payments require that the recipients use Taproot address\n+        // so one output at least must be Taproot\n+        if (tx_vout_types.find(TxoutType::WITNESS_V1_TAPROOT) == tx_vout_types.end()) {\n+            continue;\n+        }\n+\n+        auto it = std::find_if(vtx.cbegin(), vtx.cend(), [tx](CTransactionRef t){ return *t == *tx; });\n+        // TODO: redundant verification ?\n+        if (it == vtx.end()) {\n+            continue;\n+        }\n+\n+        // -1 as blockundo does not have coinbase tx\n+        const auto& undoTX = blockUndo.vtxundo.at(it - vtx.begin() - 1);\n+\n+        assert(tx->vin.size() == undoTX.vprevout.size());\n+\n+        std::vector<Coin> coins;\n+        for (size_t i = 0; i < tx->vin.size(); i++)\n+        {\n+            coins.push_back(undoTX.vprevout[i]);\n+        }\n+\n+        CPubKey sum_tx_pubkeys = SumInputPubKeys(*tx, coins);\n+        if (sum_tx_pubkeys.IsFullyValid()) {\n+            items.emplace(tx->GetHash(), sum_tx_pubkeys);\n+        }\n+    }\n+\n+    return items;\n+}\n+\n+CPubKey SumInputPubKeys(const CTransaction &tx, const std::vector<Coin>& coins)\n+{\n+    CPubKey sum_sender_pubkeys;\n+    std::vector<CPubKey> pubkeys_for_shared_secret;\n+    for (size_t i = 0; i < tx.vin.size(); i++)\n+    {\n+        const auto& spk = coins.at(i).out.scriptPubKey;\n+        const auto& txin = tx.vin.at(i);\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType input = Solver(spk, solutions);\n+\n+        switch (input) {\n+            case TxoutType::WITNESS_UNKNOWN:\n+                // This transaction contains unknown input types, which means it is not\n+                // a Silent Payments v0 transaction\n+                return CPubKey();\n+            case TxoutType::WITNESS_V0_SCRIPTHASH:\n+            case TxoutType::MULTISIG:\n+            case TxoutType::PUBKEY:\n+            case TxoutType::NULL_DATA:\n+                // We don't use any of these input types for calculating the shared secret\n+                // so we skip them\n+                continue;\n+            case TxoutType::NONSTANDARD:\n+            case TxoutType::PUBKEYHASH:\n+                {\n+                    std::vector<std::vector<unsigned char> > stack;\n+                    if (!EvalScript(stack, txin.scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SigVersion::BASE))\n+                        // Something went wrong\n+                        return CPubKey();\n+                    // Probably not a pubkeyhash?\n+                    if (stack.empty()) continue;\n+\n+                    // Get the public key from the back of the stack\n+                    // No need to check if it actually hashes to the hash in the scriptPubKey as\n+                    // this has already been checked\n+                    CPubKey pubkey{stack.back()};\n+                    assert(pubkey.IsFullyValid());\n+                    pubkeys_for_shared_secret.push_back(pubkey);\n+                    continue;\n+                }\n+            case TxoutType::SCRIPTHASH:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28202#discussion_r1288396529",
      "id" : 1288396529,
      "line" : 1676,
      "node_id" : "PRRC_kwDOABII585My17x",
      "original_commit_id" : "703b41615e84163f0bb3c6ca8ce3c1d07ac48cd9",
      "original_line" : 1676,
      "original_position" : 274,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 327,
      "pull_request_review_id" : 1569423403,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28202",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288396529/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-09T12:22:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288396529",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28202#discussion_r1288398953"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28202"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288398953"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This looks in the UTXO set but is called on a transaction that has already been verified and so therefore it's inputs are no longer in the UTXO set. This results in the `Coin` being uninitialized which causes later `Solver` calls to fail unexpectedly.",
      "commit_id" : "3f1b810e5d4361ef89be96d427c9c6862892c1ea",
      "created_at" : "2023-08-09T12:22:07Z",
      "diff_hunk" : "@@ -1852,6 +2128,24 @@ int64_t CWallet::RescanFromTime(int64_t startTime, const WalletRescanReserver& r\n     return startTime;\n }\n \n+Coin CWallet::FindPreviousCoin(const CTxIn& txin) const\n+{\n+    // Find the UTXO being spent in UTXO Set to learn the transaction type\n+    std::map<COutPoint, Coin> coins;\n+    coins[txin.prevout];\n+    chain().findCoins(coins);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28202#discussion_r1288398953",
      "id" : 1288398953,
      "line" : 2136,
      "node_id" : "PRRC_kwDOABII585My2hp",
      "original_commit_id" : "3f1b810e5d4361ef89be96d427c9c6862892c1ea",
      "original_line" : 2136,
      "original_position" : 382,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 382,
      "pull_request_review_id" : 1569423403,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28202",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288398953/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-09T12:22:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288398953",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28202#discussion_r1288438010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28202"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288438010"
         }
      },
      "author_association" : "MEMBER",
      "body" : "As discussed offline, we shouldn't use any view of the UTXO set. Rather we should use the undo data when receiving a `blockConnected`, and modify `TransactionAddedToMempool` to include the previous outputs. This lets us avoid any race conditions with the state of the UTXO set and guarantees that the previous output data will always be available for the silent payments calculations.",
      "commit_id" : "3f1b810e5d4361ef89be96d427c9c6862892c1ea",
      "created_at" : "2023-08-09T12:54:26Z",
      "diff_hunk" : "@@ -1852,6 +2128,24 @@ int64_t CWallet::RescanFromTime(int64_t startTime, const WalletRescanReserver& r\n     return startTime;\n }\n \n+Coin CWallet::FindPreviousCoin(const CTxIn& txin) const\n+{\n+    // Find the UTXO being spent in UTXO Set to learn the transaction type\n+    std::map<COutPoint, Coin> coins;\n+    coins[txin.prevout];\n+    chain().findCoins(coins);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28202#discussion_r1288438010",
      "id" : 1288438010,
      "in_reply_to_id" : 1288398953,
      "line" : 2136,
      "node_id" : "PRRC_kwDOABII585MzAD6",
      "original_commit_id" : "3f1b810e5d4361ef89be96d427c9c6862892c1ea",
      "original_line" : 2136,
      "original_position" : 382,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 382,
      "pull_request_review_id" : 1569488659,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28202",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288438010/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-09T12:54:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288438010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-09-19T18:10:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28202#issuecomment-1726248937",
      "id" : 1726248937,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28202",
      "node_id" : "IC_kwDOABII585m5Hfp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1726248937/reactions"
      },
      "updated_at" : "2023-09-19T18:10:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1726248937",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
