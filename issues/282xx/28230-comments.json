[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/28230#pullrequestreview-1567815521) |\n| Concept ACK | [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/28230#issuecomment-1670237772) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n",
      "created_at" : "2023-08-07T11:14:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#issuecomment-1667663404",
      "id" : 1667663404,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28230",
      "node_id" : "IC_kwDOABII585jZoYs",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1667663404/reactions"
      },
      "updated_at" : "2023-08-08T20:07:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1667663404",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2023-08-07T12:02:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#issuecomment-1667726750",
      "id" : 1667726750,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28230",
      "node_id" : "IC_kwDOABII585jZ32e",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1667726750/reactions"
      },
      "updated_at" : "2023-08-07T12:02:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1667726750",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285806857"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285806857"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: would be helpful to specify what it throws, and perhaps use `@throws` to make it structured?",
      "commit_id" : "fac01960f20598099dd5edf1731b518833759056",
      "created_at" : "2023-08-07T12:38:20Z",
      "diff_hunk" : "@@ -383,6 +383,13 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request param or the default value.\n+     * Throws if the fallback has no default value, or if the return type can",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285806857",
      "id" : 1285806857,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Mo9sJ",
      "original_commit_id" : "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "original_line" : 388,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : null,
      "pull_request_review_id" : 1565233492,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285806857/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T13:14:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285806857",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285831220"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285831220"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: as we're getting the parameter value, would `Arg` be a better name? Perhaps it's too similar to `RPCArg` though (which unfortunately would have been more appropriately named `RPCParam`, I think, but that's not relevant to this PR).",
      "commit_id" : "fac01960f20598099dd5edf1731b518833759056",
      "created_at" : "2023-08-07T12:57:20Z",
      "diff_hunk" : "@@ -383,6 +383,13 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request param or the default value.\n+     * Throws if the fallback has no default value, or if the return type can\n+     * not represent the default value.\n+     */\n+    template <typename R>\n+    R Param(size_t i) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285831220",
      "id" : 1285831220,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MpDo0",
      "original_commit_id" : "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "original_line" : 392,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : null,
      "pull_request_review_id" : 1565233492,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285831220/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T13:14:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285831220",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285838697"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285838697"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think we also want to set this to nullptr in the many cases where we throw early in this function?",
      "commit_id" : "fac01960f20598099dd5edf1731b518833759056",
      "created_at" : "2023-08-07T13:02:01Z",
      "diff_hunk" : "@@ -631,9 +632,25 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n                           PACKAGE_BUGREPORT)};\n         }\n     }\n+    m_req = nullptr;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285838697",
      "id" : 1285838697,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MpFdp",
      "original_commit_id" : "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "original_line" : 635,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : null,
      "pull_request_review_id" : 1565233492,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285838697/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T13:14:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285838697",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285851447"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285851447"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm not sure this is threadsafe with our `g_work_queue`. Will we not have race conditions here when multiple requests on the same `RPCHelpMan` are in the queue at the same time?",
      "commit_id" : "fac01960f20598099dd5edf1731b518833759056",
      "created_at" : "2023-08-07T13:13:42Z",
      "diff_hunk" : "@@ -399,6 +406,7 @@ class RPCHelpMan\n     const std::vector<RPCArg> m_args;\n     const RPCResults m_results;\n     const RPCExamples m_examples;\n+    mutable const JSONRPCRequest* m_req{nullptr}; // A pointer to the request for the duration of HandleRequest()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285851447",
      "id" : 1285851447,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MpIk3",
      "original_commit_id" : "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "original_line" : 409,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : null,
      "pull_request_review_id" : 1565233492,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285851447/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T13:14:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285851447",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285862343"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285862343"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`RPCHelpMan` are constructed and allocated fresh for each RPC call.",
      "commit_id" : "fac01960f20598099dd5edf1731b518833759056",
      "created_at" : "2023-08-07T13:22:59Z",
      "diff_hunk" : "@@ -399,6 +406,7 @@ class RPCHelpMan\n     const std::vector<RPCArg> m_args;\n     const RPCResults m_results;\n     const RPCExamples m_examples;\n+    mutable const JSONRPCRequest* m_req{nullptr}; // A pointer to the request for the duration of HandleRequest()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285862343",
      "id" : 1285862343,
      "in_reply_to_id" : 1285851447,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MpLPH",
      "original_commit_id" : "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "original_line" : 409,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : null,
      "pull_request_review_id" : 1565323369,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285862343/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T13:23:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285862343",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285865972"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285865972"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why? `throw` can only happen on internal bugs. Not sure if it makes sense to write additional code to cover unreachable code.\r\n\r\nAlso, how? This can be done in the destructor, but then the point of setting it is moot.",
      "commit_id" : "fac01960f20598099dd5edf1731b518833759056",
      "created_at" : "2023-08-07T13:25:55Z",
      "diff_hunk" : "@@ -631,9 +632,25 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n                           PACKAGE_BUGREPORT)};\n         }\n     }\n+    m_req = nullptr;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285865972",
      "id" : 1285865972,
      "in_reply_to_id" : 1285838697,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MpMH0",
      "original_commit_id" : "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "original_line" : 635,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : null,
      "pull_request_review_id" : 1565329017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285865972/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T13:25:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285865972",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285870318"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285870318"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I am leaning toward removing the \"throws\". This only happens on internal bugs. For example if a dev writes `self.Param<int>(99999999)` (or switches `int` to `bool` by accident).\r\n\r\nIt is the requirement of the dev to pass the correct index and the tests will check it (if they call the RPC at least once).",
      "commit_id" : "fac01960f20598099dd5edf1731b518833759056",
      "created_at" : "2023-08-07T13:29:20Z",
      "diff_hunk" : "@@ -383,6 +383,13 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request param or the default value.\n+     * Throws if the fallback has no default value, or if the return type can",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285870318",
      "id" : 1285870318,
      "in_reply_to_id" : 1285806857,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MpNLu",
      "original_commit_id" : "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "original_line" : 388,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : null,
      "pull_request_review_id" : 1565335806,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285870318/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T13:29:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285870318",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285892111"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285892111"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thx, done",
      "commit_id" : "fac01960f20598099dd5edf1731b518833759056",
      "created_at" : "2023-08-07T13:47:12Z",
      "diff_hunk" : "@@ -383,6 +383,13 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request param or the default value.\n+     * Throws if the fallback has no default value, or if the return type can\n+     * not represent the default value.\n+     */\n+    template <typename R>\n+    R Param(size_t i) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285892111",
      "id" : 1285892111,
      "in_reply_to_id" : 1285831220,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MpSgP",
      "original_commit_id" : "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "original_line" : 392,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : null,
      "pull_request_review_id" : 1565370659,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285892111/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T13:47:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285892111",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285912365"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285912365"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The only check it does is, that if the default value is used, the return type must be able to represent it. (The other checks were already done before.\r\n\r\nHowever, I think it is an implementation detail of `RPCHelpMan` when to check for internal bugs. Developers should just avoid writing bugs in the first place. And if they do, they'll get a helpful error message (in the tests) and they shouldn't care where it is from.\r\n\r\nThus, I've removed this from the docs completely.",
      "commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "created_at" : "2023-08-07T14:03:02Z",
      "diff_hunk" : "@@ -383,6 +383,13 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request param or the default value.\n+     * Throws if the fallback has no default value, or if the return type can",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285912365",
      "id" : 1285912365,
      "in_reply_to_id" : 1285806857,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MpXct",
      "original_commit_id" : "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "original_line" : 388,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : null,
      "pull_request_review_id" : 1565402763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285912365/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T14:03:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285912365",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286133078"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286133078"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, you're right. I always assumed they were instantiated along with `CRPCTable`, but as you say they're freshly created on every `CRPCTable::execute()` call because of [this line](https://github.com/bitcoin/bitcoin/blob/624333455a5745a7f184d0df531dc348d0ac48dd/src/rpc/server.h#L109d). Can be marked as resolved.",
      "commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "created_at" : "2023-08-07T16:33:01Z",
      "diff_hunk" : "@@ -399,6 +406,7 @@ class RPCHelpMan\n     const std::vector<RPCArg> m_args;\n     const RPCResults m_results;\n     const RPCExamples m_examples;\n+    mutable const JSONRPCRequest* m_req{nullptr}; // A pointer to the request for the duration of HandleRequest()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286133078",
      "id" : 1286133078,
      "in_reply_to_id" : 1285851447,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MqNVW",
      "original_commit_id" : "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "original_line" : 409,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : null,
      "pull_request_review_id" : 1565750058,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286133078/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T18:37:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286133078",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286137440"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286137440"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I like how you changed this in your latest force push, can be marked as resolved",
      "commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "created_at" : "2023-08-07T16:37:01Z",
      "diff_hunk" : "@@ -631,9 +632,25 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n                           PACKAGE_BUGREPORT)};\n         }\n     }\n+    m_req = nullptr;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286137440",
      "id" : 1286137440,
      "in_reply_to_id" : 1285838697,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MqOZg",
      "original_commit_id" : "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "original_line" : 635,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : null,
      "pull_request_review_id" : 1565750058,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286137440/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T18:37:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286137440",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286146628"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286146628"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: While correct, I think this could benefit from a useability hint, e.g.:\r\n\r\n```\r\n     * This function only works during m_fun(), i.e. it should only be used in RPC method implementations.",
      "commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "created_at" : "2023-08-07T16:45:41Z",
      "diff_hunk" : "@@ -383,6 +383,12 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun().",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286146628",
      "id" : 1286146628,
      "line" : 388,
      "node_id" : "PRRC_kwDOABII585MqQpE",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 388,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : 6,
      "pull_request_review_id" : 1565750058,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286146628/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T18:37:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286146628",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286256642"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286256642"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This implementation only supports being called on parameters with a `RPCArg::Default` fallback. Do you envision this being extended to also support `RPCArg::DefaultHint` and `RPCArg::Optional::OMITTED` fallbacks, and if so, how?\r\n\r\nI think one way is with a `std::optional<int> RPCHelpMan::Arg<std::optional<int>>(size_t i) const` specialization. I tinkered around with it a bit and this is what I came up with:\r\n\r\n<details>\r\n<summary>git diff on fa6b2da57ef7ff125a493c7835cb15935255ff8c</summary>\r\n\r\n```diff\r\ndiff --git a/src/rpc/server.cpp b/src/rpc/server.cpp\r\nindex daf751111f..fd1d6c6a63 100644\r\n--- a/src/rpc/server.cpp\r\n+++ b/src/rpc/server.cpp\r\n@@ -180,8 +180,8 @@ static RPCHelpMan stop()\r\n     // Event loop will exit after current HTTP requests have been handled, so\r\n     // this reply will get back to the client.\r\n     StartShutdown();\r\n-    if (jsonRequest.params[0].isNum()) {\r\n-        UninterruptibleSleep(std::chrono::milliseconds{jsonRequest.params[0].getInt<int>()});\r\n+    if (const auto wait{self.Arg<std::optional<int>>(0)}) {\r\n+        UninterruptibleSleep(std::chrono::milliseconds{*wait});\r\n     }\r\n     return RESULT;\r\n },\r\ndiff --git a/src/rpc/util.cpp b/src/rpc/util.cpp\r\nindex 4e0bace96f..c1e626eeaa 100644\r\n--- a/src/rpc/util.cpp\r\n+++ b/src/rpc/util.cpp\r\n@@ -636,19 +636,37 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\r\n     return ret;\r\n }\r\n \r\n-static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\r\n+static const std::optional<UniValue> ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\r\n {\r\n     CHECK_NONFATAL(i < params.size());\r\n     const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\r\n     const RPCArg::Fallback& fallback{params.at(i).m_fallback};\r\n-    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\r\n-    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\r\n+    const bool has_default{std::holds_alternative<RPCArg::Default>(fallback)};\r\n+\r\n+    if (arg.isNull()) {\r\n+        if (has_default) {\r\n+            return std::get<RPCArg::Default>(fallback);\r\n+        } else { \r\n+            return std::nullopt;\r\n+        }\r\n+    }\r\n+    return arg;\r\n }\r\n \r\n template <>\r\n int RPCHelpMan::Arg<int>(size_t i) const\r\n {\r\n-    return ArgOrDefault(m_args, m_req, i).getInt<int>();\r\n+    return CHECK_NONFATAL(ArgOrDefault(m_args, m_req, i)).value().getInt<int>();\r\n+}\r\n+\r\n+template <>\r\n+std::optional<int> RPCHelpMan::Arg<std::optional<int>>(size_t i) const\r\n+{\r\n+    if (const auto result{ArgOrDefault(m_args, m_req, i)}) {\r\n+        return result.value().getInt<int>();\r\n+    } else {\r\n+        return std::nullopt;\r\n+    }\r\n }\r\n \r\n bool RPCHelpMan::IsValidNumArgs(size_t num_args) const\r\n\r\n```\r\n</details>\r\n\r\nI like the limited scope of this PR to implement just `int` types, but perhaps it would be useful to extend it a bit and implement the helper for non-default parameters too? At the very least we get a sense of what we want the interface to look like?\r\n\r\nIf we don't extend it, perhaps the documentation for `template <typename R> R Arg(size_t i) const;` in `rpc/util.h` needs to be updated to reflect where it can safely be used?",
      "commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "created_at" : "2023-08-07T18:29:50Z",
      "diff_hunk" : "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286256642",
      "id" : 1286256642,
      "line" : 649,
      "node_id" : "PRRC_kwDOABII585MqrgC",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 649,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : 24,
      "pull_request_review_id" : 1565750058,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286256642/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T18:37:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286256642",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286262199"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286262199"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Makes sense, thanks for the explanation. Resolved.",
      "commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "created_at" : "2023-08-07T18:35:57Z",
      "diff_hunk" : "@@ -383,6 +383,13 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request param or the default value.\n+     * Throws if the fallback has no default value, or if the return type can",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286262199",
      "id" : 1286262199,
      "in_reply_to_id" : 1285806857,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Mqs23",
      "original_commit_id" : "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "original_line" : 388,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : null,
      "pull_request_review_id" : 1565750058,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286262199/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T18:37:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286262199",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286352893"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286352893"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"rpc: Add Arg() default helper\" (fa6b2da57ef7ff125a493c7835cb15935255ff8c)\r\n\r\nAny reason to not just drop const from `HandleRequest` instead of making this variable mutable? Keeping the const there seems a little misleading",
      "commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "created_at" : "2023-08-07T20:24:33Z",
      "diff_hunk" : "@@ -399,6 +405,7 @@ class RPCHelpMan\n     const std::vector<RPCArg> m_args;\n     const RPCResults m_results;\n     const RPCExamples m_examples;\n+    mutable const JSONRPCRequest* m_req{nullptr}; // A pointer to the request for the duration of m_fun()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286352893",
      "id" : 1286352893,
      "line" : 408,
      "node_id" : "PRRC_kwDOABII585MrC_9",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 408,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : 17,
      "pull_request_review_id" : 1566099524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286352893/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T20:24:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286352893",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286809420"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286809420"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I thought it would be more fun for reviewers if they could ACK the first use of the `mutable const` keyword in this codebase. Also, the value will be `nullptr` before and after the call to `HandleRequest`, so it seems *almost* `const` to me, but happy to change.",
      "commit_id" : "fa5468dcf0109d11ddaeb4b3591e6e04b4ea6125",
      "created_at" : "2023-08-08T08:47:26Z",
      "diff_hunk" : "@@ -399,6 +405,7 @@ class RPCHelpMan\n     const std::vector<RPCArg> m_args;\n     const RPCResults m_results;\n     const RPCExamples m_examples;\n+    mutable const JSONRPCRequest* m_req{nullptr}; // A pointer to the request for the duration of m_fun()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286809420",
      "id" : 1286809420,
      "in_reply_to_id" : 1286352893,
      "line" : 415,
      "node_id" : "PRRC_kwDOABII585MsydM",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 415,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : 24,
      "pull_request_review_id" : 1566813302,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286809420/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-08T08:47:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286809420",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286809802"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286809802"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nice, used your doc string. Thanks",
      "commit_id" : "fa5468dcf0109d11ddaeb4b3591e6e04b4ea6125",
      "created_at" : "2023-08-08T08:47:46Z",
      "diff_hunk" : "@@ -383,6 +383,12 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun().",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286809802",
      "id" : 1286809802,
      "in_reply_to_id" : 1286146628,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MsyjK",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 388,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : null,
      "pull_request_review_id" : 1566813912,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286809802/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-08T08:47:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286809802",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286811085"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286811085"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> This implementation only supports being called on parameters with a RPCArg::Default fallback.\r\n\r\nsorry, I was missing the early return `if (!arg.isNull()) return arg;`. Fixed now. Good catch!",
      "commit_id" : "fa5468dcf0109d11ddaeb4b3591e6e04b4ea6125",
      "created_at" : "2023-08-08T08:48:51Z",
      "diff_hunk" : "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286811085",
      "id" : 1286811085,
      "in_reply_to_id" : 1286256642,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Msy3N",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 649,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : null,
      "pull_request_review_id" : 1566815878,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286811085/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-08T08:48:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286811085",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286815104"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286815104"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> `std::optional`\r\n\r\nNot sure. This requires all args to be copied again, which can be expensive, if the arg is a hex-encoded block. (https://github.com/bitcoin/bitcoin/pull/20017/files) had the same issue, btw.\r\n\r\nI wrote some code to implement `std::string` as well (without a copy).",
      "commit_id" : "fa5468dcf0109d11ddaeb4b3591e6e04b4ea6125",
      "created_at" : "2023-08-08T08:52:05Z",
      "diff_hunk" : "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286815104",
      "id" : 1286815104,
      "in_reply_to_id" : 1286256642,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Msz2A",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 649,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : null,
      "pull_request_review_id" : 1566821993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286815104/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-08T08:52:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286815104",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1287432683"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287432683"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Big fan of this rewrite, makes it pretty extensible without too much code duplication. Nice!\r\n\r\nBuilding on your new approach, the non-default parameters could potentially be handled with pointers, to avoid unnecessary copy operations. For example, I think these 2 lines: https://github.com/bitcoin/bitcoin/blob/b565485c24c0feacae559a7f6f7b83d7516ca58d/src/wallet/rpc/spend.cpp#L274-L275 \r\n\r\ncan be rewritten as: \r\n```cpp\r\n    if (auto comment{self.Arg<const std::string*>(2)}; comment && !(comment->empty())) {\r\n        mapValue[\"comment\"] = *comment;\r\n    }\r\n```\r\n\r\nNot necessarily shorter, but much more idiomatic imo? I've implemented it like this - can probably be cleaned up quite a bit more:\r\n\r\n<details>\r\n<summary>git diff on fa5468dcf0109d11ddaeb4b3591e6e04b4ea6125</summary>\r\n\r\n```diff\r\ndiff --git a/src/rpc/util.cpp b/src/rpc/util.cpp\r\nindex 0db66ec1b1..1f7bdac609 100644\r\n--- a/src/rpc/util.cpp\r\n+++ b/src/rpc/util.cpp\r\n@@ -636,27 +636,47 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\r\n     return ret;\r\n }\r\n \r\n-static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\r\n+static const UniValue* ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\r\n {\r\n     CHECK_NONFATAL(i < params.size());\r\n     const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\r\n-    if (!arg.isNull()) return arg;\r\n+    if (!arg.isNull()) return &arg;\r\n     const RPCArg::Fallback& fallback{params.at(i).m_fallback};\r\n-    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\r\n-    return std::get<RPCArg::Default>(fallback);\r\n+    if (std::holds_alternative<RPCArg::Default>(fallback)) {\r\n+        return &(std::get<RPCArg::Default>(fallback));\r\n+    }\r\n+    return nullptr;\r\n }\r\n \r\n-#define TMPL_INST(ret_type, get_arg, get_type)            \\\r\n-    template <>                                           \\\r\n-    ret_type RPCHelpMan::get_arg(size_t i) const          \\\r\n-    {                                                     \\\r\n-        return ArgOrDefault(m_args, m_req, i).get_type(); \\\r\n-    }                                                     \\\r\n+#define TMPL_INST(ret_type, get_arg, get_type)        \\\r\n+    template <>                                       \\\r\n+    ret_type RPCHelpMan::get_arg(size_t i) const      \\\r\n+    {                                                 \\\r\n+        return CHECK_NONFATAL(ArgOrDefault(m_args, m_req, i))->get_type(); \\\r\n+    }                                                 \\\r\n+    void force_semicolon()\r\n+\r\n+#define TMPL_INST_PTR(ret_type, get_arg, get_type)    \\\r\n+    template <>                                       \\\r\n+    std::shared_ptr<ret_type> RPCHelpMan::get_arg(size_t i) const \\\r\n+    {                                                 \\\r\n+        auto result {ArgOrDefault(m_args, m_req, i)}; \\\r\n+        if (!result) return nullptr;                  \\\r\n+        auto&& ref = result->get_type();               \\\r\n+        if constexpr (std::is_lvalue_reference_v<decltype(ref)>) { \\\r\n+            return std::shared_ptr<ret_type>(&ref, [](ret_type*) {}); \\\r\n+        } else { \\\r\n+            return std::make_shared<ret_type>(std::move(ref)); \\\r\n+        } \\\r\n+    }                                                 \\\r\n     void force_semicolon()\r\n \r\n+\r\n+\r\n TMPL_INST(int, ArgValue<int>, getInt<int>);\r\n TMPL_INST(uint64_t, ArgValue<uint64_t>, getInt<uint64_t>);\r\n TMPL_INST(const std::string&, ArgRef<std::string>, get_str);\r\n+TMPL_INST_PTR(const std::string, ArgPtr<const std::string>, get_str);\r\n \r\n bool RPCHelpMan::IsValidNumArgs(size_t num_args) const\r\n {\r\ndiff --git a/src/rpc/util.h b/src/rpc/util.h\r\nindex 0ef019a780..563a619208 100644\r\n--- a/src/rpc/util.h\r\n+++ b/src/rpc/util.h\r\n@@ -18,6 +18,7 @@\r\n #include <util/check.h>\r\n \r\n #include <string>\r\n+#include <type_traits>\r\n #include <variant>\r\n #include <vector>\r\n \r\n@@ -392,6 +393,8 @@ public:\r\n     {\r\n         if constexpr (std::is_integral_v<R>) {\r\n             return ArgValue<R>(i);\r\n+        } else if constexpr (std::is_pointer_v<R>) {\r\n+            return ArgPtr<std::remove_pointer_t<R>>(i);\r\n         } else {\r\n             return ArgRef<R>(i);\r\n         }\r\n@@ -417,6 +420,8 @@ private:\r\n     R ArgValue(size_t i) const;\r\n     template <typename R>\r\n     const R& ArgRef(size_t i) const;\r\n+    template <typename R>\r\n+    std::shared_ptr<R> ArgPtr(size_t i) const;\r\n };\r\n \r\n /**\r\ndiff --git a/src/wallet/rpc/spend.cpp b/src/wallet/rpc/spend.cpp\r\nindex b695d4bed3..420807bf1d 100644\r\n--- a/src/wallet/rpc/spend.cpp\r\n+++ b/src/wallet/rpc/spend.cpp\r\n@@ -271,8 +271,9 @@ RPCHelpMan sendtoaddress()\r\n \r\n     // Wallet comments\r\n     mapValue_t mapValue;\r\n-    if (!request.params[2].isNull() && !request.params[2].get_str().empty())\r\n-        mapValue[\"comment\"] = request.params[2].get_str();\r\n+    if (auto comment{self.Arg<const std::string*>(2)}; comment && !(comment->empty())) {\r\n+        mapValue[\"comment\"] = *comment;\r\n+    }\r\n     if (!request.params[3].isNull() && !request.params[3].get_str().empty())\r\n         mapValue[\"to\"] = request.params[3].get_str();\r\n\r\n```\r\n</details>\r\n\r\nI'm not married to this approach, and it doesn't need to be added in this PR either. But I think being able to use a consistent interface for `Arg` for all types of parameters would be nice.",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-08T17:16:48Z",
      "diff_hunk" : "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1287432683",
      "id" : 1287432683,
      "in_reply_to_id" : 1286256642,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MvKnr",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 649,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : null,
      "pull_request_review_id" : 1567794071,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287432683/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-09T10:14:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287432683",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1287446839"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287446839"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: using `.at(i)` here and `[i]` just a few lines up, when I think they both have the same preconditions, so staying consistent is probably better",
      "commit_id" : "fa5468dcf0109d11ddaeb4b3591e6e04b4ea6125",
      "created_at" : "2023-08-08T17:31:20Z",
      "diff_hunk" : "@@ -634,6 +636,28 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    if (!arg.isNull()) return arg;\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1287446839",
      "id" : 1287446839,
      "line" : 644,
      "node_id" : "PRRC_kwDOABII585MvOE3",
      "original_commit_id" : "fa5468dcf0109d11ddaeb4b3591e6e04b4ea6125",
      "original_line" : 644,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : 19,
      "pull_request_review_id" : 1567815521,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287446839/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-08T17:34:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287446839",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2023-08-08T20:07:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#issuecomment-1670237772",
      "id" : 1670237772,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28230",
      "node_id" : "IC_kwDOABII585jjc5M",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1670237772/reactions"
      },
      "updated_at" : "2023-08-08T20:07:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1670237772",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1287941903"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287941903"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Building on your new approach, the non-default parameters could potentially be handled with pointers, to avoid unnecessary copy operations.\r\n\r\nI don't think your approach works. It is not possible to \"move\" a const reference into a shared_ptr. It will be a copy again.\r\n\r\nSimply using a raw pointer in your approach seems fine, though.",
      "commit_id" : "fa5468dcf0109d11ddaeb4b3591e6e04b4ea6125",
      "created_at" : "2023-08-09T05:04:07Z",
      "diff_hunk" : "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1287941903",
      "id" : 1287941903,
      "in_reply_to_id" : 1286256642,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MxG8P",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 649,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : null,
      "pull_request_review_id" : 1568724038,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287941903/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-09T05:04:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287941903",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288005314"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288005314"
         }
      },
      "author_association" : "MEMBER",
      "body" : "One is a `std::vector`, the other is `UniValue`, no?",
      "commit_id" : "fa5468dcf0109d11ddaeb4b3591e6e04b4ea6125",
      "created_at" : "2023-08-09T06:25:10Z",
      "diff_hunk" : "@@ -634,6 +636,28 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    if (!arg.isNull()) return arg;\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288005314",
      "id" : 1288005314,
      "in_reply_to_id" : 1287446839,
      "line" : 644,
      "node_id" : "PRRC_kwDOABII585MxWbC",
      "original_commit_id" : "fa5468dcf0109d11ddaeb4b3591e6e04b4ea6125",
      "original_line" : 644,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : 19,
      "pull_request_review_id" : 1568829438,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288005314/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-09T06:25:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288005314",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288037333"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288037333"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Or rather, `std::optional<number>` for stuff that is returned by value and `const String*` for stuff that is returned by reference?",
      "commit_id" : "fa5468dcf0109d11ddaeb4b3591e6e04b4ea6125",
      "created_at" : "2023-08-09T07:01:42Z",
      "diff_hunk" : "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288037333",
      "id" : 1288037333,
      "in_reply_to_id" : 1286256642,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MxePV",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 649,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : null,
      "pull_request_review_id" : 1568877482,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288037333/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-09T07:47:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288037333",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288073911"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288073911"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Whoops yes sorry.",
      "commit_id" : "fa5468dcf0109d11ddaeb4b3591e6e04b4ea6125",
      "created_at" : "2023-08-09T07:36:39Z",
      "diff_hunk" : "@@ -634,6 +636,28 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    if (!arg.isNull()) return arg;\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288073911",
      "id" : 1288073911,
      "in_reply_to_id" : 1287446839,
      "line" : 644,
      "node_id" : "PRRC_kwDOABII585MxnK3",
      "original_commit_id" : "fa5468dcf0109d11ddaeb4b3591e6e04b4ea6125",
      "original_line" : 644,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : 19,
      "pull_request_review_id" : 1568932482,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288073911/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-09T07:36:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288073911",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288266548"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288266548"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> It is not possible to \"move\" a const reference into a shared_ptr. It will be a copy again.\r\n\r\nSorry, I messed up my git diff a bit, posting a slightly older version, `auto& ref = result->get_type();` has to be `auto&& ref = result->get_type();`  (updated in the above diff now). With that, I think `std::move(ref)` is only called in case of an rvalue, and we use the (from what I understand without copy) `std::shared_ptr` constructor in case of an lvalue ref. I think that avoids unnecessary copies?\r\n\r\n> Or rather, std::optional<number> for stuff that is returned by value and const String* for stuff that is returned by reference?\r\n\r\nThat was my initial idea too, but I thought having a uniform interface (i.e. pointer for everything where it's not guaranteed to get a value) is quite a bit nicer than having to switch between std::optional and pointer depending on how we've implemented UniValue to return the value?  Although I suspect most callsites will just be using the boolean and dereference operators, which are the same for both (ignoring optional's commonly used `.value()` and `.value_or()` operators).\r\n\r\n> Simply using a raw pointer in your approach seems fine, though.\r\n\r\nBut if `get_type()` returns by value, how would we use a raw pointer? Who owns the underlying? That's why I went for `shared_ptr`, but I'm still easily confused by memory management so apologies if I'm being dim.",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-09T10:16:08Z",
      "diff_hunk" : "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288266548",
      "id" : 1288266548,
      "in_reply_to_id" : 1286256642,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MyWM0",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 649,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : null,
      "pull_request_review_id" : 1569218744,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288266548/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-09T10:16:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288266548",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288269938"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288269938"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Sorry, I messed up my git diff a bit, posting a slightly older version, `auto& ref = result->get_type();` has to be `auto&& ref = result->get_type();` (updated in the above diff now). With that, I think `std::move(ref)` is only called in case of an rvalue, and we use the (from what I understand without copy) `std::shared_ptr` constructor in case of an lvalue ref. I think that avoids unnecessary copies?\r\n\r\nPretty sure it doesn't, when `get_type()` returns a `const std::string&`, both `auto&` and `auto&&` will just be a `const std::string&` as well. (It is not possible to remove const by using `auto`, `auto&`, or `auto&&`, or `std::move()`)",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-09T10:19:16Z",
      "diff_hunk" : "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288269938",
      "id" : 1288269938,
      "in_reply_to_id" : 1286256642,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MyXBy",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 649,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : null,
      "pull_request_review_id" : 1569223897,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288269938/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-09T10:19:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288269938",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288270672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288270672"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> But if `get_type()` returns by value, how would we use a raw pointer? Who owns the underlying? That's why I went for `shared_ptr`, but I'm still easily confused by memory management so apologies if I'm being dim.\r\n\r\n`std::optional` can be used to own optional memory, see my previous reply to the thread and the current version of the code :)",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-09T10:19:58Z",
      "diff_hunk" : "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288270672",
      "id" : 1288270672,
      "in_reply_to_id" : 1286256642,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MyXNQ",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 649,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : null,
      "pull_request_review_id" : 1569225000,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288270672/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-09T10:19:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288270672",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288286773"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288286773"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Pretty sure it doesn't, when get_type() returns a const std::string&, both auto& and auto&& will just be a const std::string& as well.\r\n\r\nOh yes, I agree. So in that case, `ref` will be ` const std::string&` lvalue, and we'll use `std::shared_ptr<ret_type>(&ref, [](ret_type*) {});` where I don't think any copies happen?\r\n\r\n> `std::optional` can be used to own optional memory\r\n\r\nI know, I was answering your suggestion of using raw pointers instead of shared_ptr. `std::optional` solves the memory management issues, but I was just trying to avoid it to keep the interface consistent (i.e. not use optional for one thing and pointers for another) while avoiding unnecessary copies, which I think is only possible with pointers. ",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-09T10:35:19Z",
      "diff_hunk" : "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288286773",
      "id" : 1288286773,
      "in_reply_to_id" : 1286256642,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MybI1",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 649,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : null,
      "pull_request_review_id" : 1569249677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288286773/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-09T10:35:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288286773",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288299967"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288299967"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ok, I see you are only using shared_ptr to wrap a raw pointer without a deleter.\r\n\r\nHappy to switch to that, but I think it may be unintuitive, if sometimes a dev is allowed to keep the shared pointer around after the RPC, and sometimes not.",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-09T10:48:26Z",
      "diff_hunk" : "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288299967",
      "id" : 1288299967,
      "in_reply_to_id" : 1286256642,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MyeW_",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 649,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : null,
      "pull_request_review_id" : 1569269718,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288299967/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-09T10:48:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288299967",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288309113"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288309113"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Enforcing/Documenting the lifetime behavior seems easier to understand with separate types (at least for me)",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-09T10:57:10Z",
      "diff_hunk" : "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288309113",
      "id" : 1288309113,
      "in_reply_to_id" : 1286256642,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Mygl5",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 649,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : null,
      "pull_request_review_id" : 1569284155,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288309113/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-09T10:57:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288309113",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288338213"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288338213"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That's a good point. To confirm my understanding: the lifecycles are identical for both the (1) hybrid std::optional/pointer and the (2) uniform pointer approach (i.e. in both cases, reference types can only be used during the RPC call, value types can be used whenever), but for (2) the developer (user) would have to dive into the implementation to figure out what the exact lifecycle is, whereas if we use different types it's obvious from just looking at the return type.\r\n\r\nI'm going to think about it a bit more, but currently I'm leaning towards agreeing that the interface \"inconsistency\"  as per the current implementation then actually becomes a good thing. Thanks.",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-09T11:24:39Z",
      "diff_hunk" : "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288338213",
      "id" : 1288338213,
      "in_reply_to_id" : 1286256642,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Mynsl",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 649,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : null,
      "pull_request_review_id" : 1569332626,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288338213/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-09T11:24:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288338213",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288355467"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288355467"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I could also imagine a third alternative (3) std::shared_ptr/raw pointer, so that everything is a pointer, but there are still different types for each lifetime. (Basically only replacing std::optional in the current approach with std::shared_ptr)\r\n\r\nBut this also may be more confusing than it helping.",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-09T11:42:06Z",
      "diff_hunk" : "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288355467",
      "id" : 1288355467,
      "in_reply_to_id" : 1286256642,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Myr6L",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 649,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : null,
      "pull_request_review_id" : 1569360454,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288355467/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-09T11:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288355467",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288565564"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288565564"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"rpc: Add Arg() default helper\" (fa56ad74160ba3c07a16a661fc14cded6deed9eb)\r\n\r\nHaven't really looked at implementation yet, but can documentation be updated to say what happens with type mismatches? E.g. if arg is an int and you request a bool? Is the value just ignored and is a default returned instead? Is there an exception?\r\n\r\nAlso might be nice to add a short examples here showing what equivalent low level code is so developers can know how to use this helper and interpret it. Like `Arg<int>(3)` is equivalent to `request.params[3].isNumber() ? request.params[3].getInt<int>() : default_value` (or whatever the equivalent is)\r\n\r\nOverall this seems like a nice improvement that should cut down on boilerplate. I am wondering if it might be possible later to extend this:\r\n\r\n- to support arrays/objects\r\n- to enforces only expected types are passed at compile time\r\n- to enforce default not requested when there is no default at compile time\r\n- to somehow be compatible with luke's #24963 which allows multiple types per parameter (if that is a good idea)",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-09T14:18:41Z",
      "diff_hunk" : "@@ -383,6 +400,36 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun(), i.e. it should only be used in RPC method implementations.\n+     * Use Arg<Type> to get the argument or its default value.\n+     * Use Arg<Type*> to get the argument or a falsy value.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288565564",
      "id" : 1288565564,
      "line" : 407,
      "node_id" : "PRRC_kwDOABII585MzfM8",
      "original_commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "original_line" : 407,
      "original_position" : 46,
      "original_start_line" : 404,
      "path" : "src/rpc/util.h",
      "position" : 46,
      "pull_request_review_id" : 1569717230,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288565564/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 404,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-08-09T14:18:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288565564",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1289035093"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1289035093"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Also, the value will be nullptr before and after the call to HandleRequest\r\n\r\nDoes this also hold if `m_fun` throws an exception?",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-09T18:35:59Z",
      "diff_hunk" : "@@ -399,6 +405,7 @@ class RPCHelpMan\n     const std::vector<RPCArg> m_args;\n     const RPCResults m_results;\n     const RPCExamples m_examples;\n+    mutable const JSONRPCRequest* m_req{nullptr}; // A pointer to the request for the duration of m_fun()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1289035093",
      "id" : 1289035093,
      "in_reply_to_id" : 1286352893,
      "line" : 449,
      "node_id" : "PRRC_kwDOABII585M1R1V",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 449,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : 79,
      "pull_request_review_id" : 1570311272,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1289035093/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-09T18:36:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1289035093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290694437"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290694437"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: I find affirmative names much easier to understand than negative ones. Event though there's no double negation used here (but it would in another suggestion I made), would you consider changing this to `has_default`? I find that much clearer on the template instantiation calls too.",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-10T21:19:36Z",
      "diff_hunk" : "@@ -634,6 +636,39 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue* MaybeArg(bool no_default, const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290694437",
      "id" : 1290694437,
      "line" : 639,
      "node_id" : "PRRC_kwDOABII585M7m8l",
      "original_commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "original_line" : 639,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : 14,
      "pull_request_review_id" : 1572750860,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290694437/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-10T22:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290694437",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290695286"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290695286"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Since we're calling `std::get<RPCArg::Default>(fallback);` later on, wouldn't it make more sense to call `if (has_default) CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));`?",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-10T21:20:51Z",
      "diff_hunk" : "@@ -634,6 +636,39 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue* MaybeArg(bool no_default, const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    if (no_default) CHECK_NONFATAL(!std::holds_alternative<RPCArg::Default>(fallback));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290695286",
      "id" : 1290695286,
      "line" : 644,
      "node_id" : "PRRC_kwDOABII585M7nJ2",
      "original_commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "original_line" : 644,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : 19,
      "pull_request_review_id" : 1572750860,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290695286/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-10T22:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290695286",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290699614"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290699614"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: This phrasing seems to suggest that the developer is free to choose which `Arg` call to use. I would change that to be more explicit, along the lines of (I think this can be improved):\r\n\r\n```\r\nIf the argument has a `RPCArg::Default` specified, you must use `Arg<Type>` to get the argument or its default value.\r\nOtherwise, you must use Arg<Type*> to get a pointer or std::optional to get the argument, or a falsy value if it was not provided. A pointer is returned if the underlying is a reference type (e.g. std::string), a std::optional is returned if the underlying is a value type (e.g. int).\r\n```",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-10T21:26:32Z",
      "diff_hunk" : "@@ -383,6 +400,36 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun(), i.e. it should only be used in RPC method implementations.\n+     * Use Arg<Type> to get the argument or its default value.\n+     * Use Arg<Type*> to get the argument or a falsy value.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290699614",
      "id" : 1290699614,
      "line" : 407,
      "node_id" : "PRRC_kwDOABII585M7oNe",
      "original_commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "original_line" : 407,
      "original_position" : 46,
      "original_start_line" : 406,
      "path" : "src/rpc/util.h",
      "position" : 46,
      "pull_request_review_id" : 1572750860,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290699614/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 406,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-08-10T22:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290699614",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290703491"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290703491"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "We could remove `no_default` from the function signature here, and deduce it from the `ret_type` being a std::optional or pointer type? I think both approaches have merit, so no very strong preference either way atm, but since we're already doing those deductions in `Arg` I think it would make sense here, too?",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-10T21:31:31Z",
      "diff_hunk" : "@@ -634,6 +636,39 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue* MaybeArg(bool no_default, const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    if (no_default) CHECK_NONFATAL(!std::holds_alternative<RPCArg::Default>(fallback));\n+\n+    if (!arg.isNull()) return &arg;\n+    if (no_default) return nullptr;\n+    return &std::get<RPCArg::Default>(fallback);\n+}\n+\n+#define TMPL_INST(no_default, ret_type, get_arg, return_code) \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290703491",
      "id" : 1290703491,
      "line" : 651,
      "node_id" : "PRRC_kwDOABII585M7pKD",
      "original_commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "original_line" : 651,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : 26,
      "pull_request_review_id" : 1572750860,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290703491/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-10T22:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290703491",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290725116"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290725116"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> But this also may be more confusing than it helping.\r\n\r\nYeah, I don't really think that helps. Still no strong view, I like your current implementation, it's less complex than what I suggested, so barring strong conviction that's good enough reason for me to keep it as is. Perhaps useful to keep this convo open for future reference, but considered resolved from my end.",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-10T22:03:31Z",
      "diff_hunk" : "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290725116",
      "id" : 1290725116,
      "in_reply_to_id" : 1286256642,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585M7ub8",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 649,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/rpc/util.cpp",
      "position" : null,
      "pull_request_review_id" : 1572750860,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290725116/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-10T22:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290725116",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290875538"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290875538"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Saying `Arg<int*>(5)` and getting back a `std::optional<int>` instead of an `int*` seems weird? Why not just have two functions: `ArgOrNot<int>(5)` and `ArgOrDefault<int>(5)` and drop the outer `if constexpr` ?",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-11T04:12:11Z",
      "diff_hunk" : "@@ -383,6 +400,36 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun(), i.e. it should only be used in RPC method implementations.\n+     * Use Arg<Type> to get the argument or its default value.\n+     * Use Arg<Type*> to get the argument or a falsy value.\n+     */\n+    template <typename R>\n+    auto Arg(size_t i) const\n+    {\n+        if constexpr (std::is_pointer_v<R>) {\n+            // Return optional argument (without default).\n+            using U = std::remove_pointer_t<R>;\n+            if constexpr (std::is_integral_v<U> || std::is_floating_point_v<U>) {\n+                // Return numbers by value, wrapped in optional.\n+                return ArgValue<std::optional<U>>(i);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290875538",
      "id" : 1290875538,
      "line" : 417,
      "node_id" : "PRRC_kwDOABII585M8TKS",
      "original_commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "original_line" : 417,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : 56,
      "pull_request_review_id" : 1572976655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290875538/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-11T05:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290875538",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290879367"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290879367"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Isn't this buggy? We can have multiple RPC threads, making multiple requests to the same function, but that function only has a single `RPCHelpMan` which will simultaneously have different things assigned to `m_fun`?",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-11T04:22:53Z",
      "diff_hunk" : "@@ -399,6 +405,7 @@ class RPCHelpMan\n     const std::vector<RPCArg> m_args;\n     const RPCResults m_results;\n     const RPCExamples m_examples;\n+    mutable const JSONRPCRequest* m_req{nullptr}; // A pointer to the request for the duration of m_fun()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290879367",
      "id" : 1290879367,
      "in_reply_to_id" : 1286352893,
      "line" : 449,
      "node_id" : "PRRC_kwDOABII585M8UGH",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 449,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : 79,
      "pull_request_review_id" : 1572976655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290879367/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-11T05:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290879367",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290949477"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290949477"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> to enforces only expected types are passed at compile time\r\n\r\nDo we want to revisit #22978 first before doing compile time type checking for RPC?\r\n\r\nI think compile time RPC type checks would require templatising `RPCArg` by what is currently `m_type` (and `m_inner` perhaps), changing `RPCHelpMan` to be templatised based on a `std::tuple<...>` of `RPCArg<X>`s, and likewise for `RPCMethodImpl` which then gives the actual RPC implementation compile time access to its expected argument types.\r\n\r\nI don't think you could reasonably access params by name and get compile time type checking; for the named-only params via `options`, you *could* turn `options` into an ordered tuple and access named-only params by their position from when you defined the `options` object.\r\n\r\nFor multitype parameters, I think it'd be best to just have a `Type::ANY` placeholder.",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-11T06:39:27Z",
      "diff_hunk" : "@@ -383,6 +400,36 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun(), i.e. it should only be used in RPC method implementations.\n+     * Use Arg<Type> to get the argument or its default value.\n+     * Use Arg<Type*> to get the argument or a falsy value.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290949477",
      "id" : 1290949477,
      "in_reply_to_id" : 1288565564,
      "line" : 407,
      "node_id" : "PRRC_kwDOABII585M8lNl",
      "original_commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "original_line" : 407,
      "original_position" : 46,
      "original_start_line" : 404,
      "path" : "src/rpc/util.h",
      "position" : 46,
      "pull_request_review_id" : 1573074066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290949477/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 404,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-08-11T06:39:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290949477",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1291125153"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291125153"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@ajtowns I raised a similar concern, but it looks like this is safe: https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285851447",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-11T09:40:40Z",
      "diff_hunk" : "@@ -399,6 +405,7 @@ class RPCHelpMan\n     const std::vector<RPCArg> m_args;\n     const RPCResults m_results;\n     const RPCExamples m_examples;\n+    mutable const JSONRPCRequest* m_req{nullptr}; // A pointer to the request for the duration of m_fun()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1291125153",
      "id" : 1291125153,
      "in_reply_to_id" : 1286352893,
      "line" : 449,
      "node_id" : "PRRC_kwDOABII585M9QGh",
      "original_commit_id" : "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "original_line" : 449,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : 79,
      "pull_request_review_id" : 1573336382,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291125153/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-11T09:40:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291125153",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1291163628"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291163628"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'd be on board with that approach, too. A bit more explicit and reduces implementation complexity, while I think usability is as good, since we already require the user to distinguish between the arg having a default or not.\r\n\r\nnit/bikeshed: I'd prefer `Arg` over `ArgOrDefault`.",
      "commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "created_at" : "2023-08-11T10:15:51Z",
      "diff_hunk" : "@@ -383,6 +400,36 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun(), i.e. it should only be used in RPC method implementations.\n+     * Use Arg<Type> to get the argument or its default value.\n+     * Use Arg<Type*> to get the argument or a falsy value.\n+     */\n+    template <typename R>\n+    auto Arg(size_t i) const\n+    {\n+        if constexpr (std::is_pointer_v<R>) {\n+            // Return optional argument (without default).\n+            using U = std::remove_pointer_t<R>;\n+            if constexpr (std::is_integral_v<U> || std::is_floating_point_v<U>) {\n+                // Return numbers by value, wrapped in optional.\n+                return ArgValue<std::optional<U>>(i);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1291163628",
      "id" : 1291163628,
      "in_reply_to_id" : 1290875538,
      "line" : 417,
      "node_id" : "PRRC_kwDOABII585M9Zfs",
      "original_commit_id" : "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "original_line" : 417,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : 56,
      "pull_request_review_id" : 1573392386,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291163628/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-11T10:15:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291163628",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   }
]
