[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [dergoegge](https://github.com/bitcoin/bitcoin/pull/28173#pullrequestreview-1593246984) |\n| Concept ACK | [real-or-random](https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1690152982) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "created_at" : "2023-07-27T21:10:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1654590566",
      "id" : 1654590566,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585inwxm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1654590566/reactions"
      },
      "updated_at" : "2023-08-24T10:12:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1654590566",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Can you remove the Windows Cirrus task here, as it will need to be removed either way? Also, a link to a build would be nice, before this is enabled here.",
      "created_at" : "2023-07-28T05:46:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1655060132",
      "id" : 1655060132,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585ipjak",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1655060132/reactions"
      },
      "updated_at" : "2023-07-28T05:46:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1655060132",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Maybe also print the `GITHUB_TOKEN` permissions at every start of the task, just to double check they are read-only?",
      "created_at" : "2023-07-28T05:47:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1655061310",
      "id" : 1655061310,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585ipjs-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1655061310/reactions"
      },
      "updated_at" : "2023-07-28T05:47:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1655061310",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1277118408"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1277118408"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\non: [pull_request, push]  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore\r\n```\r\n\r\n(Could add a link to the docs)",
      "commit_id" : "315bb383e8f84551ad6b400066b0ac1482f1b6a6",
      "created_at" : "2023-07-28T05:55:15Z",
      "diff_hunk" : "@@ -0,0 +1,190 @@\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+name: bitcoin-core-ci\n+run-name: Bitcoin Core CI\n+on: [pull_request, push]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1277118408",
      "id" : 1277118408,
      "line" : 8,
      "node_id" : "PRRC_kwDOABII585MH0fI",
      "original_commit_id" : "a22565de135cfb9f1c07adff6b1d3dd4f0d99204",
      "original_line" : 8,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 8,
      "pull_request_review_id" : 1551381909,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1277118408/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-28T05:58:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1277118408",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1277398254"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1277398254"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "315bb383e8f84551ad6b400066b0ac1482f1b6a6",
      "created_at" : "2023-07-28T10:48:03Z",
      "diff_hunk" : "@@ -0,0 +1,190 @@\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+name: bitcoin-core-ci\n+run-name: Bitcoin Core CI\n+on: [pull_request, push]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1277398254",
      "id" : 1277398254,
      "in_reply_to_id" : 1277118408,
      "line" : 8,
      "node_id" : "PRRC_kwDOABII585MI4zu",
      "original_commit_id" : "a22565de135cfb9f1c07adff6b1d3dd4f0d99204",
      "original_line" : 8,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 8,
      "pull_request_review_id" : 1551841102,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1277398254/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-28T10:48:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1277398254",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Can you remove the Windows Cirrus task here, as it will need to be removed either way?\r\n\r\nDone.\r\n\r\n> Maybe also print the `GITHUB_TOKEN` permissions at every start of the task, just to double check they are read-only?\r\n\r\nThey are printed by default. To see them, in https://github.com/hebasto/bitcoin/actions/runs/5685393993/job/15410187833, one needs to expand \"Set up job\", then expand \"GIHUB_TOKEN Permissions\".",
      "created_at" : "2023-07-28T10:51:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1655483540",
      "id" : 1655483540,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585irKyU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1655483540/reactions"
      },
      "updated_at" : "2023-07-28T10:51:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1655483540",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ok, so I guess someone needs to enable Actions in both orgs for this to proceed.",
      "created_at" : "2023-07-28T10:55:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1655488587",
      "id" : 1655488587,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585irMBL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1655488587/reactions"
      },
      "updated_at" : "2023-07-28T10:55:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1655488587",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "In the meantime it may be good to do 10 runs and then check how many of them fail",
      "created_at" : "2023-07-28T10:56:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1655489674",
      "id" : 1655489674,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585irMSK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1655489674/reactions"
      },
      "updated_at" : "2023-07-28T10:56:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1655489674",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> In the meantime it may be good to do 10 runs and then check how many of them fail\r\n\r\nObserving intermittent \"Error: no RPC connection\". Converting this PR to a draft for now.\r\n\r\nUPD. Timeout has been adjusted.",
      "created_at" : "2023-07-29T09:10:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1656668537",
      "id" : 1656668537,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585ivsF5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1656668537/reactions"
      },
      "updated_at" : "2023-07-30T14:22:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1656668537",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> In the meantime it may be good to do 10 runs and then check how many of them fail\r\n\r\n10 runs are green for the recent commit:\r\n- https://github.com/hebasto/bitcoin/actions/runs/5701707622/attempts/1\r\n- https://github.com/hebasto/bitcoin/actions/runs/5701707622/attempts/2\r\n- https://github.com/hebasto/bitcoin/actions/runs/5701707622/attempts/3\r\n- https://github.com/hebasto/bitcoin/actions/runs/5701707622/attempts/4\r\n- https://github.com/hebasto/bitcoin/actions/runs/5701707622/attempts/5\r\n- https://github.com/hebasto/bitcoin/actions/runs/5701707622/attempts/6\r\n- https://github.com/hebasto/bitcoin/actions/runs/5701707622/attempts/7\r\n- https://github.com/hebasto/bitcoin/actions/runs/5701707622/attempts/8\r\n- https://github.com/hebasto/bitcoin/actions/runs/5701707622/attempts/9\r\n- https://github.com/hebasto/bitcoin/actions/runs/5701707622/attempts/10\r\n\r\n> Ok, so I guess someone needs to enable Actions in both orgs for this to proceed.\r\n\r\n@sipa @fanquake \r\n\r\nMind enabling GitHub Actions in the https://github.com/bitcoin/bitcoin repository?\r\n\r\nI'm suggesting the repository \"Actions permissions\" as follows:\r\n\r\n![image](https://github.com/bitcoin/bitcoin/assets/32963518/c4ff04f9-2991-4c23-b268-8cffcde03a74)\r\n\r\n![image](https://github.com/bitcoin/bitcoin/assets/32963518/5fe273c2-59d5-4517-b3f5-0ce2ee9f44fd)\r\n",
      "created_at" : "2023-07-30T14:35:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1657189554",
      "id" : 1657189554,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585ixrSy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657189554/reactions"
      },
      "updated_at" : "2023-07-30T14:35:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657189554",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-07-31T11:33:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1658193916",
      "id" : 1658193916,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585i1gf8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658193916/reactions"
      },
      "updated_at" : "2023-07-31T11:33:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658193916",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased on top of the merged #28188.",
      "created_at" : "2023-08-01T09:00:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1659882376",
      "id" : 1659882376,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585i78uI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1659882376/reactions"
      },
      "updated_at" : "2023-08-01T09:00:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1659882376",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Converting this PR to a draft as it conflicts with https://github.com/bitcoin/bitcoin/pull/28187.\r\n\r\nPlease review https://github.com/bitcoin/bitcoin/pull/28187 first.",
      "created_at" : "2023-08-05T07:52:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1666430255",
      "id" : 1666430255,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585jU7Uv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1666430255/reactions"
      },
      "updated_at" : "2023-08-05T07:52:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1666430255",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-08-15T22:27:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1679710711",
      "id" : 1679710711,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585kHln3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1679710711/reactions"
      },
      "updated_at" : "2023-08-15T22:27:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1679710711",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "https://github.com/bitcoin/bitcoin/pull/28292 is a blocker for this PR.",
      "created_at" : "2023-08-19T17:19:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1685055510",
      "id" : 1685055510,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585kb-gW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1685055510/reactions"
      },
      "updated_at" : "2023-08-19T17:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1685055510",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> #28292 is a blocker for this PR.\r\n\r\nIs it? It should only affect the cache hit percentage, no? And the cache hit percentage shouldn't affect the behavior of this pull, except for the cache hit percentage, potentially.",
      "created_at" : "2023-08-21T08:31:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1685889674",
      "id" : 1685889674,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585kfKKK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1685889674/reactions"
      },
      "updated_at" : "2023-08-21T08:31:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1685889674",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > #28292 is a blocker for this PR.\r\n> \r\n> Is it? It should only affect the cache hit percentage, no?\r\n\r\nYes, that is what I mean. Without #28292, caches for the master branch are to be evicted very often. And this PR makes it roughly 2 times more often.",
      "created_at" : "2023-08-21T10:42:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1686085668",
      "id" : 1686085668,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585kf6Ak",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1686085668/reactions"
      },
      "updated_at" : "2023-08-21T10:42:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1686085668",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ok, fair enough. But that shouldn't be a blocker to rebase this, and for code review to happen on the rebase.",
      "created_at" : "2023-08-21T10:51:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1686098037",
      "id" : 1686098037,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585kf9B1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1686098037/reactions"
      },
      "updated_at" : "2023-08-21T10:51:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1686098037",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased.",
      "created_at" : "2023-08-21T11:12:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1686130389",
      "id" : 1686130389,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585kgE7V",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1686130389/reactions"
      },
      "updated_at" : "2023-08-21T11:12:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1686130389",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1299978413"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1299978413"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any reason to remove `--extended --exclude feature_dbcrash`? If yes, create a separate pull/commit. If no, maybe keep as-is?",
      "commit_id" : "753a4af8a2557983fa64ba7591c6079a77bb7c3f",
      "created_at" : "2023-08-21T11:23:04Z",
      "diff_hunk" : "@@ -51,12 +51,206 @@ jobs:\n       - name: Set Ccache directory\n         run: echo \"CCACHE_DIR=${RUNNER_TEMP}/ccache_dir\" >> \"$GITHUB_ENV\"\n \n-      - name: Ccache cache\n-        uses: actions/cache@v3\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n         with:\n           path: ${{ env.CCACHE_DIR }}\n-          key: ${{ github.job }}-ccache-cache-${{ github.run_id }}\n-          restore-keys: ${{ github.job }}-ccache-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n \n       - name: CI script\n         run: ./ci/test_run_all.sh\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ${{ env.CCACHE_DIR }}\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: Win64 native, VS 2022\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ runner.os }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ runner.os }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n+\n+      - name: Using vcpkg with MSBuild\n+        run: |\n+          Set-Location \"$env:VCPKG_INSTALLATION_ROOT\"\n+          Add-Content -Path \"triplets\\x64-windows-static.cmake\" -Value \"set(VCPKG_BUILD_TYPE release)\"\n+          vcpkg --vcpkg-root \"$env:VCPKG_INSTALLATION_ROOT\" integrate install\n+          git rev-parse HEAD | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+\n+      - name: vcpkg tools cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:/vcpkg/downloads/tools\n+          key: ${{ runner.os }}-vcpkg-tools\n+\n+      - name: vcpkg binary cache\n+        uses: actions/cache@v3\n+        with:\n+          path: ~/AppData/Local/vcpkg/archives\n+          key: ${{ runner.os }}-vcpkg-binary-${{ hashFiles('vcpkg_commit', 'msbuild_version', 'build_msvc/vcpkg.json') }}\n+\n+      - name: Generate project files\n+        run: python build_msvc\\msvc-autogen.py\n+\n+      - name: Build\n+        shell: cmd\n+        run: |\n+          ccache --zero-stats\n+          msbuild build_msvc\\bitcoin.sln -property:CLToolPath=C:\\ccache;CLToolExe=cl.exe;UseMultiToolTask=true;Configuration=Release -maxCpuCount -verbosity:minimal -noLogo\n+\n+      - name: Ccache stats\n+        run: ccache --show-stats\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ~/AppData/Local/ccache\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+      - name: Run unit tests\n+        run: src\\test_bitcoin.exe -l test_suite\n+\n+      - name: Run benchmarks\n+        run: src\\bench_bitcoin.exe -sanity-check\n+\n+      - name: Run bitcoin utils tests\n+        run: python test\\util\\test_runner.py\n+\n+      - name: Run rpcauth test\n+        run: python test\\util\\rpcauth-test.py\n+\n+      - name: Run functional tests\n+        env:\n+          PYTHONUTF8: 1\n+        shell: cmd\n+        run: python test\\functional\\test_runner.py --ci --tmpdirprefix=%RUNNER_TEMP% --combinedlogslen=99999999 --timeout-factor=%TEST_RUNNER_TIMEOUT_FACTOR% --quiet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1299978413",
      "id" : 1299978413,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585NfBit",
      "original_commit_id" : "699c941d330bf26d30f06526dc0b7670cd5d891c",
      "original_line" : 256,
      "original_position" : 210,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : null,
      "pull_request_review_id" : 1586775477,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1299978413/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-21T11:23:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1299978413",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1300026268"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1300026268"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style-nit: Any reason to give each step a name? When someone is looking at the debug log, they want to debug, so just using the full command as the name shouldn't have any downside (maybe even benefits) and reduce the bloat here, no?",
      "commit_id" : "753a4af8a2557983fa64ba7591c6079a77bb7c3f",
      "created_at" : "2023-08-21T12:11:41Z",
      "diff_hunk" : "@@ -51,12 +51,206 @@ jobs:\n       - name: Set Ccache directory\n         run: echo \"CCACHE_DIR=${RUNNER_TEMP}/ccache_dir\" >> \"$GITHUB_ENV\"\n \n-      - name: Ccache cache\n-        uses: actions/cache@v3\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n         with:\n           path: ${{ env.CCACHE_DIR }}\n-          key: ${{ github.job }}-ccache-cache-${{ github.run_id }}\n-          restore-keys: ${{ github.job }}-ccache-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n \n       - name: CI script\n         run: ./ci/test_run_all.sh\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ${{ env.CCACHE_DIR }}\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: Win64 native, VS 2022\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ runner.os }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ runner.os }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n+\n+      - name: Using vcpkg with MSBuild\n+        run: |\n+          Set-Location \"$env:VCPKG_INSTALLATION_ROOT\"\n+          Add-Content -Path \"triplets\\x64-windows-static.cmake\" -Value \"set(VCPKG_BUILD_TYPE release)\"\n+          vcpkg --vcpkg-root \"$env:VCPKG_INSTALLATION_ROOT\" integrate install\n+          git rev-parse HEAD | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+\n+      - name: vcpkg tools cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:/vcpkg/downloads/tools\n+          key: ${{ runner.os }}-vcpkg-tools\n+\n+      - name: vcpkg binary cache\n+        uses: actions/cache@v3\n+        with:\n+          path: ~/AppData/Local/vcpkg/archives\n+          key: ${{ runner.os }}-vcpkg-binary-${{ hashFiles('vcpkg_commit', 'msbuild_version', 'build_msvc/vcpkg.json') }}\n+\n+      - name: Generate project files\n+        run: python build_msvc\\msvc-autogen.py\n+\n+      - name: Build\n+        shell: cmd\n+        run: |\n+          ccache --zero-stats\n+          msbuild build_msvc\\bitcoin.sln -property:CLToolPath=C:\\ccache;CLToolExe=cl.exe;UseMultiToolTask=true;Configuration=Release -maxCpuCount -verbosity:minimal -noLogo\n+\n+      - name: Ccache stats\n+        run: ccache --show-stats\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ~/AppData/Local/ccache\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+      - name: Run unit tests\n+        run: src\\test_bitcoin.exe -l test_suite\n+\n+      - name: Run benchmarks\n+        run: src\\bench_bitcoin.exe -sanity-check\n+\n+      - name: Run bitcoin utils tests\n+        run: python test\\util\\test_runner.py\n+\n+      - name: Run rpcauth test\n+        run: python test\\util\\rpcauth-test.py\n+\n+      - name: Run functional tests",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1300026268",
      "id" : 1300026268,
      "line" : 259,
      "node_id" : "PRRC_kwDOABII585NfNOc",
      "original_commit_id" : "699c941d330bf26d30f06526dc0b7670cd5d891c",
      "original_line" : 259,
      "original_position" : 206,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 213,
      "pull_request_review_id" : 1586851285,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1300026268/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-21T12:11:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1300026268",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1300044409"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1300044409"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Now it looks like that:\r\n\r\n![image](https://github.com/bitcoin/bitcoin/assets/32963518/7eefbf99-1f31-41f7-ad16-254dcc567a47)\r\n \r\nand\r\n\r\n![image](https://github.com/bitcoin/bitcoin/assets/32963518/3b5dfbb2-a616-411e-ba38-c0d465dfb6fb)\r\n\r\nSo the command itself is available in the logs.\r\n\r\nBesides, some commands are pretty long, for instance:\r\n```\r\npython test\\functional\\test_runner.py --ci --tmpdirprefix=%RUNNER_TEMP% --combinedlogslen=99999999 --timeout-factor=%TEST_RUNNER_TIMEOUT_FACTOR% --quiet\r\n```\r\n\r\n> Any reason to give each step a name?\r\n\r\nI think, it's a matter of consistency and personal taste.\r\n\r\nIn any case, I'm happy to update this PR and remove the `name` property from specific steps upon your request.",
      "commit_id" : "753a4af8a2557983fa64ba7591c6079a77bb7c3f",
      "created_at" : "2023-08-21T12:28:46Z",
      "diff_hunk" : "@@ -51,12 +51,206 @@ jobs:\n       - name: Set Ccache directory\n         run: echo \"CCACHE_DIR=${RUNNER_TEMP}/ccache_dir\" >> \"$GITHUB_ENV\"\n \n-      - name: Ccache cache\n-        uses: actions/cache@v3\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n         with:\n           path: ${{ env.CCACHE_DIR }}\n-          key: ${{ github.job }}-ccache-cache-${{ github.run_id }}\n-          restore-keys: ${{ github.job }}-ccache-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n \n       - name: CI script\n         run: ./ci/test_run_all.sh\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ${{ env.CCACHE_DIR }}\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: Win64 native, VS 2022\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ runner.os }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ runner.os }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n+\n+      - name: Using vcpkg with MSBuild\n+        run: |\n+          Set-Location \"$env:VCPKG_INSTALLATION_ROOT\"\n+          Add-Content -Path \"triplets\\x64-windows-static.cmake\" -Value \"set(VCPKG_BUILD_TYPE release)\"\n+          vcpkg --vcpkg-root \"$env:VCPKG_INSTALLATION_ROOT\" integrate install\n+          git rev-parse HEAD | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+\n+      - name: vcpkg tools cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:/vcpkg/downloads/tools\n+          key: ${{ runner.os }}-vcpkg-tools\n+\n+      - name: vcpkg binary cache\n+        uses: actions/cache@v3\n+        with:\n+          path: ~/AppData/Local/vcpkg/archives\n+          key: ${{ runner.os }}-vcpkg-binary-${{ hashFiles('vcpkg_commit', 'msbuild_version', 'build_msvc/vcpkg.json') }}\n+\n+      - name: Generate project files\n+        run: python build_msvc\\msvc-autogen.py\n+\n+      - name: Build\n+        shell: cmd\n+        run: |\n+          ccache --zero-stats\n+          msbuild build_msvc\\bitcoin.sln -property:CLToolPath=C:\\ccache;CLToolExe=cl.exe;UseMultiToolTask=true;Configuration=Release -maxCpuCount -verbosity:minimal -noLogo\n+\n+      - name: Ccache stats\n+        run: ccache --show-stats\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ~/AppData/Local/ccache\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+      - name: Run unit tests\n+        run: src\\test_bitcoin.exe -l test_suite\n+\n+      - name: Run benchmarks\n+        run: src\\bench_bitcoin.exe -sanity-check\n+\n+      - name: Run bitcoin utils tests\n+        run: python test\\util\\test_runner.py\n+\n+      - name: Run rpcauth test\n+        run: python test\\util\\rpcauth-test.py\n+\n+      - name: Run functional tests",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1300044409",
      "id" : 1300044409,
      "in_reply_to_id" : 1300026268,
      "line" : 259,
      "node_id" : "PRRC_kwDOABII585NfRp5",
      "original_commit_id" : "699c941d330bf26d30f06526dc0b7670cd5d891c",
      "original_line" : 259,
      "original_position" : 206,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 213,
      "pull_request_review_id" : 1586879475,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1300044409/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-21T12:28:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1300044409",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1300174886"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1300174886"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n      - name: Run util tests\r\n```\r\n\r\nstyle-nit: For consistency with the other names?",
      "commit_id" : "b0e233ba3b61f2ea40b6a5a7534f49a0d4ad4568",
      "created_at" : "2023-08-21T14:15:23Z",
      "diff_hunk" : "@@ -51,12 +51,213 @@ jobs:\n       - name: Set Ccache directory\n         run: echo \"CCACHE_DIR=${RUNNER_TEMP}/ccache_dir\" >> \"$GITHUB_ENV\"\n \n-      - name: Ccache cache\n-        uses: actions/cache@v3\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n         with:\n           path: ${{ env.CCACHE_DIR }}\n-          key: ${{ github.job }}-ccache-cache-${{ github.run_id }}\n-          restore-keys: ${{ github.job }}-ccache-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n \n       - name: CI script\n         run: ./ci/test_run_all.sh\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ${{ env.CCACHE_DIR }}\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: Win64 native, VS 2022\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Restore static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Save static Qt cache\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        uses: actions/cache/save@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ github.job }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n+\n+      - name: Using vcpkg with MSBuild\n+        run: |\n+          Set-Location \"$env:VCPKG_INSTALLATION_ROOT\"\n+          Add-Content -Path \"triplets\\x64-windows-static.cmake\" -Value \"set(VCPKG_BUILD_TYPE release)\"\n+          vcpkg --vcpkg-root \"$env:VCPKG_INSTALLATION_ROOT\" integrate install\n+          git rev-parse HEAD | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+\n+      - name: vcpkg tools cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:/vcpkg/downloads/tools\n+          key: ${{ github.job }}-vcpkg-tools\n+\n+      - name: vcpkg binary cache\n+        uses: actions/cache@v3\n+        with:\n+          path: ~/AppData/Local/vcpkg/archives\n+          key: ${{ github.job }}-vcpkg-binary-${{ hashFiles('vcpkg_commit', 'msbuild_version', 'build_msvc/vcpkg.json') }}\n+\n+      - name: Generate project files\n+        run: py -3 build_msvc\\msvc-autogen.py\n+\n+      - name: Build\n+        shell: cmd\n+        run: |\n+          ccache --zero-stats\n+          msbuild build_msvc\\bitcoin.sln -property:CLToolPath=C:\\ccache;CLToolExe=cl.exe;UseMultiToolTask=true;Configuration=Release -maxCpuCount -verbosity:minimal -noLogo\n+\n+      - name: Ccache stats\n+        run: ccache --show-stats\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ~/AppData/Local/ccache\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+      - name: Run unit tests\n+        run: src\\test_bitcoin.exe -l test_suite\n+\n+      - name: Run benchmarks\n+        run: src\\bench_bitcoin.exe -sanity-check\n+\n+      - name: Run bitcoin utils tests",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1300174886",
      "id" : 1300174886,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Nfxgm",
      "original_commit_id" : "753a4af8a2557983fa64ba7591c6079a77bb7c3f",
      "original_line" : 253,
      "original_position" : 207,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : null,
      "pull_request_review_id" : 1587098202,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1300174886/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-21T14:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1300174886",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1300347561"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1300347561"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Well, a couple of tests run [too long](https://github.com/hebasto/bitcoin/actions/runs/5927065845/job/16069764131):\r\n```\r\nfeature_index_prune.py                                 | â Passed  | 3307 s\r\nfeature_pruning.py                                     | â Passed  | 2845 s\r\n```",
      "commit_id" : "b0e233ba3b61f2ea40b6a5a7534f49a0d4ad4568",
      "created_at" : "2023-08-21T16:17:29Z",
      "diff_hunk" : "@@ -51,12 +51,206 @@ jobs:\n       - name: Set Ccache directory\n         run: echo \"CCACHE_DIR=${RUNNER_TEMP}/ccache_dir\" >> \"$GITHUB_ENV\"\n \n-      - name: Ccache cache\n-        uses: actions/cache@v3\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n         with:\n           path: ${{ env.CCACHE_DIR }}\n-          key: ${{ github.job }}-ccache-cache-${{ github.run_id }}\n-          restore-keys: ${{ github.job }}-ccache-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n \n       - name: CI script\n         run: ./ci/test_run_all.sh\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ${{ env.CCACHE_DIR }}\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: Win64 native, VS 2022\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ runner.os }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ runner.os }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n+\n+      - name: Using vcpkg with MSBuild\n+        run: |\n+          Set-Location \"$env:VCPKG_INSTALLATION_ROOT\"\n+          Add-Content -Path \"triplets\\x64-windows-static.cmake\" -Value \"set(VCPKG_BUILD_TYPE release)\"\n+          vcpkg --vcpkg-root \"$env:VCPKG_INSTALLATION_ROOT\" integrate install\n+          git rev-parse HEAD | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+\n+      - name: vcpkg tools cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:/vcpkg/downloads/tools\n+          key: ${{ runner.os }}-vcpkg-tools\n+\n+      - name: vcpkg binary cache\n+        uses: actions/cache@v3\n+        with:\n+          path: ~/AppData/Local/vcpkg/archives\n+          key: ${{ runner.os }}-vcpkg-binary-${{ hashFiles('vcpkg_commit', 'msbuild_version', 'build_msvc/vcpkg.json') }}\n+\n+      - name: Generate project files\n+        run: python build_msvc\\msvc-autogen.py\n+\n+      - name: Build\n+        shell: cmd\n+        run: |\n+          ccache --zero-stats\n+          msbuild build_msvc\\bitcoin.sln -property:CLToolPath=C:\\ccache;CLToolExe=cl.exe;UseMultiToolTask=true;Configuration=Release -maxCpuCount -verbosity:minimal -noLogo\n+\n+      - name: Ccache stats\n+        run: ccache --show-stats\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ~/AppData/Local/ccache\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+      - name: Run unit tests\n+        run: src\\test_bitcoin.exe -l test_suite\n+\n+      - name: Run benchmarks\n+        run: src\\bench_bitcoin.exe -sanity-check\n+\n+      - name: Run bitcoin utils tests\n+        run: python test\\util\\test_runner.py\n+\n+      - name: Run rpcauth test\n+        run: python test\\util\\rpcauth-test.py\n+\n+      - name: Run functional tests\n+        env:\n+          PYTHONUTF8: 1\n+        shell: cmd\n+        run: python test\\functional\\test_runner.py --ci --tmpdirprefix=%RUNNER_TEMP% --combinedlogslen=99999999 --timeout-factor=%TEST_RUNNER_TIMEOUT_FACTOR% --quiet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1300347561",
      "id" : 1300347561,
      "in_reply_to_id" : 1299978413,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Ngbqp",
      "original_commit_id" : "699c941d330bf26d30f06526dc0b7670cd5d891c",
      "original_line" : 256,
      "original_position" : 210,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : null,
      "pull_request_review_id" : 1587399814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1300347561/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-21T16:17:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1300347561",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1301117471"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301117471"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is that longer than before?",
      "commit_id" : "b0e233ba3b61f2ea40b6a5a7534f49a0d4ad4568",
      "created_at" : "2023-08-22T07:02:55Z",
      "diff_hunk" : "@@ -51,12 +51,206 @@ jobs:\n       - name: Set Ccache directory\n         run: echo \"CCACHE_DIR=${RUNNER_TEMP}/ccache_dir\" >> \"$GITHUB_ENV\"\n \n-      - name: Ccache cache\n-        uses: actions/cache@v3\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n         with:\n           path: ${{ env.CCACHE_DIR }}\n-          key: ${{ github.job }}-ccache-cache-${{ github.run_id }}\n-          restore-keys: ${{ github.job }}-ccache-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n \n       - name: CI script\n         run: ./ci/test_run_all.sh\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ${{ env.CCACHE_DIR }}\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: Win64 native, VS 2022\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ runner.os }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ runner.os }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n+\n+      - name: Using vcpkg with MSBuild\n+        run: |\n+          Set-Location \"$env:VCPKG_INSTALLATION_ROOT\"\n+          Add-Content -Path \"triplets\\x64-windows-static.cmake\" -Value \"set(VCPKG_BUILD_TYPE release)\"\n+          vcpkg --vcpkg-root \"$env:VCPKG_INSTALLATION_ROOT\" integrate install\n+          git rev-parse HEAD | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+\n+      - name: vcpkg tools cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:/vcpkg/downloads/tools\n+          key: ${{ runner.os }}-vcpkg-tools\n+\n+      - name: vcpkg binary cache\n+        uses: actions/cache@v3\n+        with:\n+          path: ~/AppData/Local/vcpkg/archives\n+          key: ${{ runner.os }}-vcpkg-binary-${{ hashFiles('vcpkg_commit', 'msbuild_version', 'build_msvc/vcpkg.json') }}\n+\n+      - name: Generate project files\n+        run: python build_msvc\\msvc-autogen.py\n+\n+      - name: Build\n+        shell: cmd\n+        run: |\n+          ccache --zero-stats\n+          msbuild build_msvc\\bitcoin.sln -property:CLToolPath=C:\\ccache;CLToolExe=cl.exe;UseMultiToolTask=true;Configuration=Release -maxCpuCount -verbosity:minimal -noLogo\n+\n+      - name: Ccache stats\n+        run: ccache --show-stats\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ~/AppData/Local/ccache\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+      - name: Run unit tests\n+        run: src\\test_bitcoin.exe -l test_suite\n+\n+      - name: Run benchmarks\n+        run: src\\bench_bitcoin.exe -sanity-check\n+\n+      - name: Run bitcoin utils tests\n+        run: python test\\util\\test_runner.py\n+\n+      - name: Run rpcauth test\n+        run: python test\\util\\rpcauth-test.py\n+\n+      - name: Run functional tests\n+        env:\n+          PYTHONUTF8: 1\n+        shell: cmd\n+        run: python test\\functional\\test_runner.py --ci --tmpdirprefix=%RUNNER_TEMP% --combinedlogslen=99999999 --timeout-factor=%TEST_RUNNER_TIMEOUT_FACTOR% --quiet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1301117471",
      "id" : 1301117471,
      "in_reply_to_id" : 1299978413,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585NjXof",
      "original_commit_id" : "699c941d330bf26d30f06526dc0b7670cd5d891c",
      "original_line" : 256,
      "original_position" : 210,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : null,
      "pull_request_review_id" : 1588597814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301117471/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-22T07:02:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301117471",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I wonder if it makes sense to document the required permissions inside the file?\r\n\r\nI voted against documenting them [here](https://github.com/bitcoin-core/secp256k1/pull/1408#issuecomment-1687760351).",
      "created_at" : "2023-08-22T11:27:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1688004088",
      "id" : 1688004088,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585knOX4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1688004088/reactions"
      },
      "updated_at" : "2023-08-22T11:27:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1688004088",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1071625?v=4",
         "events_url" : "https://api.github.com/users/real-or-random/events{/privacy}",
         "followers_url" : "https://api.github.com/users/real-or-random/followers",
         "following_url" : "https://api.github.com/users/real-or-random/following{/other_user}",
         "gists_url" : "https://api.github.com/users/real-or-random/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/real-or-random",
         "id" : 1071625,
         "login" : "real-or-random",
         "node_id" : "MDQ6VXNlcjEwNzE2MjU=",
         "organizations_url" : "https://api.github.com/users/real-or-random/orgs",
         "received_events_url" : "https://api.github.com/users/real-or-random/received_events",
         "repos_url" : "https://api.github.com/users/real-or-random/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/real-or-random/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/real-or-random/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/real-or-random"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1301522878"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301522878"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "b0e233ba3b61f2ea40b6a5a7534f49a0d4ad4568",
      "created_at" : "2023-08-22T11:48:03Z",
      "diff_hunk" : "@@ -51,12 +51,213 @@ jobs:\n       - name: Set Ccache directory\n         run: echo \"CCACHE_DIR=${RUNNER_TEMP}/ccache_dir\" >> \"$GITHUB_ENV\"\n \n-      - name: Ccache cache\n-        uses: actions/cache@v3\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n         with:\n           path: ${{ env.CCACHE_DIR }}\n-          key: ${{ github.job }}-ccache-cache-${{ github.run_id }}\n-          restore-keys: ${{ github.job }}-ccache-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n \n       - name: CI script\n         run: ./ci/test_run_all.sh\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ${{ env.CCACHE_DIR }}\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: Win64 native, VS 2022\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Restore static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Save static Qt cache\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        uses: actions/cache/save@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ github.job }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n+\n+      - name: Using vcpkg with MSBuild\n+        run: |\n+          Set-Location \"$env:VCPKG_INSTALLATION_ROOT\"\n+          Add-Content -Path \"triplets\\x64-windows-static.cmake\" -Value \"set(VCPKG_BUILD_TYPE release)\"\n+          vcpkg --vcpkg-root \"$env:VCPKG_INSTALLATION_ROOT\" integrate install\n+          git rev-parse HEAD | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+\n+      - name: vcpkg tools cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:/vcpkg/downloads/tools\n+          key: ${{ github.job }}-vcpkg-tools\n+\n+      - name: vcpkg binary cache\n+        uses: actions/cache@v3\n+        with:\n+          path: ~/AppData/Local/vcpkg/archives\n+          key: ${{ github.job }}-vcpkg-binary-${{ hashFiles('vcpkg_commit', 'msbuild_version', 'build_msvc/vcpkg.json') }}\n+\n+      - name: Generate project files\n+        run: py -3 build_msvc\\msvc-autogen.py\n+\n+      - name: Build\n+        shell: cmd\n+        run: |\n+          ccache --zero-stats\n+          msbuild build_msvc\\bitcoin.sln -property:CLToolPath=C:\\ccache;CLToolExe=cl.exe;UseMultiToolTask=true;Configuration=Release -maxCpuCount -verbosity:minimal -noLogo\n+\n+      - name: Ccache stats\n+        run: ccache --show-stats\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ~/AppData/Local/ccache\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+      - name: Run unit tests\n+        run: src\\test_bitcoin.exe -l test_suite\n+\n+      - name: Run benchmarks\n+        run: src\\bench_bitcoin.exe -sanity-check\n+\n+      - name: Run bitcoin utils tests",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1301522878",
      "id" : 1301522878,
      "in_reply_to_id" : 1300174886,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Nk6m-",
      "original_commit_id" : "753a4af8a2557983fa64ba7591c6079a77bb7c3f",
      "original_line" : 253,
      "original_position" : 207,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : null,
      "pull_request_review_id" : 1589245955,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301522878/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-22T11:48:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301522878",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Looks like CI doesn't run on this?\r\n\r\n@fanquake \r\n\r\nI'm kindly asking you to add [`ilammy/msvc-dev-cmd@*`](https://github.com/marketplace/actions/enable-developer-command-prompt) to the repository's Actions permissions.\r\n\r\n> > I wonder if it makes sense to document the required permissions inside the file?\r\n> \r\n> I voted against documenting them [here](https://github.com/bitcoin-core/secp256k1/pull/1408#issuecomment-1687760351).\r\n\r\nYour opinion about this will be very appreciated as well.",
      "created_at" : "2023-08-22T14:21:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1688284197",
      "id" : 1688284197,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585koSwl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1688284197/reactions"
      },
      "updated_at" : "2023-08-22T14:21:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1688284197",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Looks like CI doesn't run on this?\r\n\r\nIt runs now: https://github.com/bitcoin/bitcoin/actions/runs/5949997773/job/16136915568\r\n\r\n@fanquake Thank you so much!",
      "created_at" : "2023-08-23T10:15:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1689690828",
      "id" : 1689690828,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585ktqLM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1689690828/reactions"
      },
      "updated_at" : "2023-08-23T10:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1689690828",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Please squash your commits according to https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits\r\n\r\nAlso, you'll have to adjust the pull request description to remove no longer applicable `--extended` removal and the TIMEOUT_FACTOR?",
      "created_at" : "2023-08-23T12:07:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1689844506",
      "id" : 1689844506,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585kuPsa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1689844506/reactions"
      },
      "updated_at" : "2023-08-23T12:07:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1689844506",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1302923173"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1302923173"
         }
      },
      "author_association" : "MEMBER",
      "body" : "https://cirrus-ci.com/task/5095403331256320:\r\n```\r\nfeature_index_prune.py                                 | â Passed  | 2695 s\r\nfeature_pruning.py                                     | â Passed  | 2409 s\r\n```",
      "commit_id" : "b0e233ba3b61f2ea40b6a5a7534f49a0d4ad4568",
      "created_at" : "2023-08-23T12:12:14Z",
      "diff_hunk" : "@@ -51,12 +51,206 @@ jobs:\n       - name: Set Ccache directory\n         run: echo \"CCACHE_DIR=${RUNNER_TEMP}/ccache_dir\" >> \"$GITHUB_ENV\"\n \n-      - name: Ccache cache\n-        uses: actions/cache@v3\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n         with:\n           path: ${{ env.CCACHE_DIR }}\n-          key: ${{ github.job }}-ccache-cache-${{ github.run_id }}\n-          restore-keys: ${{ github.job }}-ccache-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n \n       - name: CI script\n         run: ./ci/test_run_all.sh\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ${{ env.CCACHE_DIR }}\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: Win64 native, VS 2022\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ runner.os }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ runner.os }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n+\n+      - name: Using vcpkg with MSBuild\n+        run: |\n+          Set-Location \"$env:VCPKG_INSTALLATION_ROOT\"\n+          Add-Content -Path \"triplets\\x64-windows-static.cmake\" -Value \"set(VCPKG_BUILD_TYPE release)\"\n+          vcpkg --vcpkg-root \"$env:VCPKG_INSTALLATION_ROOT\" integrate install\n+          git rev-parse HEAD | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+\n+      - name: vcpkg tools cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:/vcpkg/downloads/tools\n+          key: ${{ runner.os }}-vcpkg-tools\n+\n+      - name: vcpkg binary cache\n+        uses: actions/cache@v3\n+        with:\n+          path: ~/AppData/Local/vcpkg/archives\n+          key: ${{ runner.os }}-vcpkg-binary-${{ hashFiles('vcpkg_commit', 'msbuild_version', 'build_msvc/vcpkg.json') }}\n+\n+      - name: Generate project files\n+        run: python build_msvc\\msvc-autogen.py\n+\n+      - name: Build\n+        shell: cmd\n+        run: |\n+          ccache --zero-stats\n+          msbuild build_msvc\\bitcoin.sln -property:CLToolPath=C:\\ccache;CLToolExe=cl.exe;UseMultiToolTask=true;Configuration=Release -maxCpuCount -verbosity:minimal -noLogo\n+\n+      - name: Ccache stats\n+        run: ccache --show-stats\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ~/AppData/Local/ccache\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+      - name: Run unit tests\n+        run: src\\test_bitcoin.exe -l test_suite\n+\n+      - name: Run benchmarks\n+        run: src\\bench_bitcoin.exe -sanity-check\n+\n+      - name: Run bitcoin utils tests\n+        run: python test\\util\\test_runner.py\n+\n+      - name: Run rpcauth test\n+        run: python test\\util\\rpcauth-test.py\n+\n+      - name: Run functional tests\n+        env:\n+          PYTHONUTF8: 1\n+        shell: cmd\n+        run: python test\\functional\\test_runner.py --ci --tmpdirprefix=%RUNNER_TEMP% --combinedlogslen=99999999 --timeout-factor=%TEST_RUNNER_TIMEOUT_FACTOR% --quiet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1302923173",
      "id" : 1302923173,
      "in_reply_to_id" : 1299978413,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585NqQel",
      "original_commit_id" : "699c941d330bf26d30f06526dc0b7670cd5d891c",
      "original_line" : 256,
      "original_position" : 210,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : null,
      "pull_request_review_id" : 1591447824,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1302923173/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T12:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1302923173",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1302929493"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1302929493"
         }
      },
      "author_association" : "MEMBER",
      "body" : "An alternative would be to run them on non-pr pushes only. Failures should be rare enough to deal with them post-merge.",
      "commit_id" : "b0e233ba3b61f2ea40b6a5a7534f49a0d4ad4568",
      "created_at" : "2023-08-23T12:17:24Z",
      "diff_hunk" : "@@ -51,12 +51,206 @@ jobs:\n       - name: Set Ccache directory\n         run: echo \"CCACHE_DIR=${RUNNER_TEMP}/ccache_dir\" >> \"$GITHUB_ENV\"\n \n-      - name: Ccache cache\n-        uses: actions/cache@v3\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n         with:\n           path: ${{ env.CCACHE_DIR }}\n-          key: ${{ github.job }}-ccache-cache-${{ github.run_id }}\n-          restore-keys: ${{ github.job }}-ccache-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n \n       - name: CI script\n         run: ./ci/test_run_all.sh\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ${{ env.CCACHE_DIR }}\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: Win64 native, VS 2022\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ runner.os }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ runner.os }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n+\n+      - name: Using vcpkg with MSBuild\n+        run: |\n+          Set-Location \"$env:VCPKG_INSTALLATION_ROOT\"\n+          Add-Content -Path \"triplets\\x64-windows-static.cmake\" -Value \"set(VCPKG_BUILD_TYPE release)\"\n+          vcpkg --vcpkg-root \"$env:VCPKG_INSTALLATION_ROOT\" integrate install\n+          git rev-parse HEAD | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+\n+      - name: vcpkg tools cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:/vcpkg/downloads/tools\n+          key: ${{ runner.os }}-vcpkg-tools\n+\n+      - name: vcpkg binary cache\n+        uses: actions/cache@v3\n+        with:\n+          path: ~/AppData/Local/vcpkg/archives\n+          key: ${{ runner.os }}-vcpkg-binary-${{ hashFiles('vcpkg_commit', 'msbuild_version', 'build_msvc/vcpkg.json') }}\n+\n+      - name: Generate project files\n+        run: python build_msvc\\msvc-autogen.py\n+\n+      - name: Build\n+        shell: cmd\n+        run: |\n+          ccache --zero-stats\n+          msbuild build_msvc\\bitcoin.sln -property:CLToolPath=C:\\ccache;CLToolExe=cl.exe;UseMultiToolTask=true;Configuration=Release -maxCpuCount -verbosity:minimal -noLogo\n+\n+      - name: Ccache stats\n+        run: ccache --show-stats\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ~/AppData/Local/ccache\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+      - name: Run unit tests\n+        run: src\\test_bitcoin.exe -l test_suite\n+\n+      - name: Run benchmarks\n+        run: src\\bench_bitcoin.exe -sanity-check\n+\n+      - name: Run bitcoin utils tests\n+        run: python test\\util\\test_runner.py\n+\n+      - name: Run rpcauth test\n+        run: python test\\util\\rpcauth-test.py\n+\n+      - name: Run functional tests\n+        env:\n+          PYTHONUTF8: 1\n+        shell: cmd\n+        run: python test\\functional\\test_runner.py --ci --tmpdirprefix=%RUNNER_TEMP% --combinedlogslen=99999999 --timeout-factor=%TEST_RUNNER_TIMEOUT_FACTOR% --quiet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1302929493",
      "id" : 1302929493,
      "in_reply_to_id" : 1299978413,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585NqSBV",
      "original_commit_id" : "699c941d330bf26d30f06526dc0b7670cd5d891c",
      "original_line" : 256,
      "original_position" : 210,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : null,
      "pull_request_review_id" : 1591457869,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1302929493/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T12:17:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1302929493",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Please squash your commits according to [`master`/CONTRIBUTING.md#squashing-commits](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md?rgh-link-date=2023-08-23T12%3A07%3A33Z#squashing-commits)\r\n\r\nSquashed your commits according to [`master`/CONTRIBUTING.md#squashing-commits](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md?rgh-link-date=2023-08-23T12%3A07%3A33Z#squashing-commits) :D\r\n\r\n\r\n",
      "created_at" : "2023-08-23T12:54:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1689912420",
      "id" : 1689912420,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585kugRk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1689912420/reactions"
      },
      "updated_at" : "2023-08-23T12:54:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1689912420",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-08-23T14:39:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1690088609",
      "id" : 1690088609,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585kvLSh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1690088609/reactions"
      },
      "updated_at" : "2023-08-23T14:39:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1690088609",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> lgtm ACK\r\n\r\nBy the way, what's an \"lgtm ACK\"? I've seen this a few times in this repo, but its meaning is not explained in https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#conceptual-review",
      "created_at" : "2023-08-23T15:16:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1690152982",
      "id" : 1690152982,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585kvbAW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1690152982/reactions"
      },
      "updated_at" : "2023-08-23T15:16:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1690152982",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1071625?v=4",
         "events_url" : "https://api.github.com/users/real-or-random/events{/privacy}",
         "followers_url" : "https://api.github.com/users/real-or-random/followers",
         "following_url" : "https://api.github.com/users/real-or-random/following{/other_user}",
         "gists_url" : "https://api.github.com/users/real-or-random/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/real-or-random",
         "id" : 1071625,
         "login" : "real-or-random",
         "node_id" : "MDQ6VXNlcjEwNzE2MjU=",
         "organizations_url" : "https://api.github.com/users/real-or-random/orgs",
         "received_events_url" : "https://api.github.com/users/real-or-random/received_events",
         "repos_url" : "https://api.github.com/users/real-or-random/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/real-or-random/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/real-or-random/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/real-or-random"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased on top of the merged #21652.",
      "created_at" : "2023-08-23T15:31:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1690177379",
      "id" : 1690177379,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585kvg9j",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1690177379/reactions"
      },
      "updated_at" : "2023-08-23T15:31:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1690177379",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> By the way, what's an \"lgtm ACK\"?\r\n\r\n(at least for me) it's just a normal ack pre-fixed with \"looks good to me\"",
      "created_at" : "2023-08-24T10:05:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1691391899",
      "id" : 1691391899,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585k0Jeb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1691391899/reactions"
      },
      "updated_at" : "2023-08-24T10:05:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1691391899",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Friendly ping @MarcoFalke :)",
      "created_at" : "2023-08-25T08:25:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1692968183",
      "id" : 1692968183,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28173",
      "node_id" : "IC_kwDOABII585k6KT3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1692968183/reactions"
      },
      "updated_at" : "2023-08-25T08:25:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1692968183",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305368316"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305368316"
         }
      },
      "author_association" : "MEMBER",
      "body" : "why only set this for the fun tests? This should be global",
      "commit_id" : "a3ebaa20eaab37b9ec32d6569fbc63d6216fe1b5",
      "created_at" : "2023-08-25T08:35:48Z",
      "diff_hunk" : "@@ -68,3 +68,200 @@ jobs:\n           path: ${{ env.CCACHE_DIR }}\n           # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n           key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: 'Win64 native, VS 2022'\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+\n+    # No need to run on the read-only mirror, unless it is a PR.\n+    if: github.repository != 'bitcoin-core/gui' || github.event_name == 'pull_request'\n+\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Restore static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Save static Qt cache\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        uses: actions/cache/save@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ github.job }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n+\n+      - name: Using vcpkg with MSBuild\n+        run: |\n+          Set-Location \"$env:VCPKG_INSTALLATION_ROOT\"\n+          Add-Content -Path \"triplets\\x64-windows-static.cmake\" -Value \"set(VCPKG_BUILD_TYPE release)\"\n+          vcpkg --vcpkg-root \"$env:VCPKG_INSTALLATION_ROOT\" integrate install\n+          git rev-parse HEAD | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+\n+      - name: vcpkg tools cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:/vcpkg/downloads/tools\n+          key: ${{ github.job }}-vcpkg-tools\n+\n+      - name: vcpkg binary cache\n+        uses: actions/cache@v3\n+        with:\n+          path: ~/AppData/Local/vcpkg/archives\n+          key: ${{ github.job }}-vcpkg-binary-${{ hashFiles('vcpkg_commit', 'msbuild_version', 'build_msvc/vcpkg.json') }}\n+\n+      - name: Generate project files\n+        run: py -3 build_msvc\\msvc-autogen.py\n+\n+      - name: Build\n+        shell: cmd\n+        run: |\n+          ccache --zero-stats\n+          msbuild build_msvc\\bitcoin.sln -property:CLToolPath=C:\\ccache;CLToolExe=cl.exe;UseMultiToolTask=true;Configuration=Release -maxCpuCount -verbosity:minimal -noLogo\n+\n+      - name: Ccache stats\n+        run: ccache --show-stats\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ~/AppData/Local/ccache\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+      - name: Run unit tests\n+        run: src\\test_bitcoin.exe -l test_suite\n+\n+      - name: Run benchmarks\n+        run: src\\bench_bitcoin.exe -sanity-check\n+\n+      - name: Run util tests\n+        run: py -3 test\\util\\test_runner.py\n+\n+      - name: Run rpcauth test\n+        run: py -3 test\\util\\rpcauth-test.py\n+\n+      - name: Run functional tests\n+        env:\n+          PYTHONUTF8: 1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305368316",
      "id" : 1305368316,
      "line" : 265,
      "node_id" : "PRRC_kwDOABII585Nzlb8",
      "original_commit_id" : "a3ebaa20eaab37b9ec32d6569fbc63d6216fe1b5",
      "original_line" : 265,
      "original_position" : 198,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 198,
      "pull_request_review_id" : 1595227474,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305368316/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T08:35:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305368316",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305370422"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305370422"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This will cycle and evict the caches in pulls, no?",
      "commit_id" : "a3ebaa20eaab37b9ec32d6569fbc63d6216fe1b5",
      "created_at" : "2023-08-25T08:37:48Z",
      "diff_hunk" : "@@ -68,3 +68,200 @@ jobs:\n           path: ${{ env.CCACHE_DIR }}\n           # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n           key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: 'Win64 native, VS 2022'\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+\n+    # No need to run on the read-only mirror, unless it is a PR.\n+    if: github.repository != 'bitcoin-core/gui' || github.event_name == 'pull_request'\n+\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Restore static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Save static Qt cache\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        uses: actions/cache/save@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ github.job }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n+\n+      - name: Using vcpkg with MSBuild\n+        run: |\n+          Set-Location \"$env:VCPKG_INSTALLATION_ROOT\"\n+          Add-Content -Path \"triplets\\x64-windows-static.cmake\" -Value \"set(VCPKG_BUILD_TYPE release)\"\n+          vcpkg --vcpkg-root \"$env:VCPKG_INSTALLATION_ROOT\" integrate install\n+          git rev-parse HEAD | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+\n+      - name: vcpkg tools cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:/vcpkg/downloads/tools\n+          key: ${{ github.job }}-vcpkg-tools\n+\n+      - name: vcpkg binary cache\n+        uses: actions/cache@v3",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305370422",
      "id" : 1305370422,
      "line" : 226,
      "node_id" : "PRRC_kwDOABII585Nzl82",
      "original_commit_id" : "a3ebaa20eaab37b9ec32d6569fbc63d6216fe1b5",
      "original_line" : 226,
      "original_position" : 159,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 159,
      "pull_request_review_id" : 1595230656,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305370422/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T08:37:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305370422",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305392884"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305392884"
         }
      },
      "author_association" : "MEMBER",
      "body" : "While `key` remains the same, pull requests will restore cache from the master branch and make no new saves.",
      "commit_id" : "a3ebaa20eaab37b9ec32d6569fbc63d6216fe1b5",
      "created_at" : "2023-08-25T08:58:40Z",
      "diff_hunk" : "@@ -68,3 +68,200 @@ jobs:\n           path: ${{ env.CCACHE_DIR }}\n           # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n           key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: 'Win64 native, VS 2022'\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+\n+    # No need to run on the read-only mirror, unless it is a PR.\n+    if: github.repository != 'bitcoin-core/gui' || github.event_name == 'pull_request'\n+\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Restore static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Save static Qt cache\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        uses: actions/cache/save@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ github.job }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n+\n+      - name: Using vcpkg with MSBuild\n+        run: |\n+          Set-Location \"$env:VCPKG_INSTALLATION_ROOT\"\n+          Add-Content -Path \"triplets\\x64-windows-static.cmake\" -Value \"set(VCPKG_BUILD_TYPE release)\"\n+          vcpkg --vcpkg-root \"$env:VCPKG_INSTALLATION_ROOT\" integrate install\n+          git rev-parse HEAD | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+\n+      - name: vcpkg tools cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:/vcpkg/downloads/tools\n+          key: ${{ github.job }}-vcpkg-tools\n+\n+      - name: vcpkg binary cache\n+        uses: actions/cache@v3",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305392884",
      "id" : 1305392884,
      "in_reply_to_id" : 1305370422,
      "line" : 226,
      "node_id" : "PRRC_kwDOABII585Nzrb0",
      "original_commit_id" : "a3ebaa20eaab37b9ec32d6569fbc63d6216fe1b5",
      "original_line" : 226,
      "original_position" : 159,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 159,
      "pull_request_review_id" : 1595265090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305392884/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T08:58:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305392884",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305395823"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305395823"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> why only set this for the fun tests?\r\n\r\nBecause only functional tests require it.\r\n\r\n> This should be global\r\n\r\nWhich python scripts for?",
      "commit_id" : "a3ebaa20eaab37b9ec32d6569fbc63d6216fe1b5",
      "created_at" : "2023-08-25T09:01:02Z",
      "diff_hunk" : "@@ -68,3 +68,200 @@ jobs:\n           path: ${{ env.CCACHE_DIR }}\n           # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n           key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: 'Win64 native, VS 2022'\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+\n+    # No need to run on the read-only mirror, unless it is a PR.\n+    if: github.repository != 'bitcoin-core/gui' || github.event_name == 'pull_request'\n+\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Restore static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Save static Qt cache\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        uses: actions/cache/save@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ github.job }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n+\n+      - name: Using vcpkg with MSBuild\n+        run: |\n+          Set-Location \"$env:VCPKG_INSTALLATION_ROOT\"\n+          Add-Content -Path \"triplets\\x64-windows-static.cmake\" -Value \"set(VCPKG_BUILD_TYPE release)\"\n+          vcpkg --vcpkg-root \"$env:VCPKG_INSTALLATION_ROOT\" integrate install\n+          git rev-parse HEAD | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+\n+      - name: vcpkg tools cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:/vcpkg/downloads/tools\n+          key: ${{ github.job }}-vcpkg-tools\n+\n+      - name: vcpkg binary cache\n+        uses: actions/cache@v3\n+        with:\n+          path: ~/AppData/Local/vcpkg/archives\n+          key: ${{ github.job }}-vcpkg-binary-${{ hashFiles('vcpkg_commit', 'msbuild_version', 'build_msvc/vcpkg.json') }}\n+\n+      - name: Generate project files\n+        run: py -3 build_msvc\\msvc-autogen.py\n+\n+      - name: Build\n+        shell: cmd\n+        run: |\n+          ccache --zero-stats\n+          msbuild build_msvc\\bitcoin.sln -property:CLToolPath=C:\\ccache;CLToolExe=cl.exe;UseMultiToolTask=true;Configuration=Release -maxCpuCount -verbosity:minimal -noLogo\n+\n+      - name: Ccache stats\n+        run: ccache --show-stats\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ~/AppData/Local/ccache\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+      - name: Run unit tests\n+        run: src\\test_bitcoin.exe -l test_suite\n+\n+      - name: Run benchmarks\n+        run: src\\bench_bitcoin.exe -sanity-check\n+\n+      - name: Run util tests\n+        run: py -3 test\\util\\test_runner.py\n+\n+      - name: Run rpcauth test\n+        run: py -3 test\\util\\rpcauth-test.py\n+\n+      - name: Run functional tests\n+        env:\n+          PYTHONUTF8: 1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305395823",
      "id" : 1305395823,
      "in_reply_to_id" : 1305368316,
      "line" : 265,
      "node_id" : "PRRC_kwDOABII585NzsJv",
      "original_commit_id" : "a3ebaa20eaab37b9ec32d6569fbc63d6216fe1b5",
      "original_line" : 265,
      "original_position" : 198,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 198,
      "pull_request_review_id" : 1595269591,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305395823/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T09:01:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305395823",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305417463"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305417463"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> This should be global\r\n\r\nWhich level at? The workflow or the Windows job?",
      "commit_id" : "a3ebaa20eaab37b9ec32d6569fbc63d6216fe1b5",
      "created_at" : "2023-08-25T09:21:42Z",
      "diff_hunk" : "@@ -68,3 +68,200 @@ jobs:\n           path: ${{ env.CCACHE_DIR }}\n           # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n           key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: 'Win64 native, VS 2022'\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+\n+    # No need to run on the read-only mirror, unless it is a PR.\n+    if: github.repository != 'bitcoin-core/gui' || github.event_name == 'pull_request'\n+\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Restore static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Save static Qt cache\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        uses: actions/cache/save@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ github.job }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n+\n+      - name: Using vcpkg with MSBuild\n+        run: |\n+          Set-Location \"$env:VCPKG_INSTALLATION_ROOT\"\n+          Add-Content -Path \"triplets\\x64-windows-static.cmake\" -Value \"set(VCPKG_BUILD_TYPE release)\"\n+          vcpkg --vcpkg-root \"$env:VCPKG_INSTALLATION_ROOT\" integrate install\n+          git rev-parse HEAD | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+\n+      - name: vcpkg tools cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:/vcpkg/downloads/tools\n+          key: ${{ github.job }}-vcpkg-tools\n+\n+      - name: vcpkg binary cache\n+        uses: actions/cache@v3\n+        with:\n+          path: ~/AppData/Local/vcpkg/archives\n+          key: ${{ github.job }}-vcpkg-binary-${{ hashFiles('vcpkg_commit', 'msbuild_version', 'build_msvc/vcpkg.json') }}\n+\n+      - name: Generate project files\n+        run: py -3 build_msvc\\msvc-autogen.py\n+\n+      - name: Build\n+        shell: cmd\n+        run: |\n+          ccache --zero-stats\n+          msbuild build_msvc\\bitcoin.sln -property:CLToolPath=C:\\ccache;CLToolExe=cl.exe;UseMultiToolTask=true;Configuration=Release -maxCpuCount -verbosity:minimal -noLogo\n+\n+      - name: Ccache stats\n+        run: ccache --show-stats\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ~/AppData/Local/ccache\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+      - name: Run unit tests\n+        run: src\\test_bitcoin.exe -l test_suite\n+\n+      - name: Run benchmarks\n+        run: src\\bench_bitcoin.exe -sanity-check\n+\n+      - name: Run util tests\n+        run: py -3 test\\util\\test_runner.py\n+\n+      - name: Run rpcauth test\n+        run: py -3 test\\util\\rpcauth-test.py\n+\n+      - name: Run functional tests\n+        env:\n+          PYTHONUTF8: 1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305417463",
      "id" : 1305417463,
      "in_reply_to_id" : 1305368316,
      "line" : 265,
      "node_id" : "PRRC_kwDOABII585Nzxb3",
      "original_commit_id" : "a3ebaa20eaab37b9ec32d6569fbc63d6216fe1b5",
      "original_line" : 265,
      "original_position" : 198,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 198,
      "pull_request_review_id" : 1595305845,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305417463/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T09:21:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305417463",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305498826"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305498826"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\r\n\r\nThis will cycle and evict the caches in pulls, no?\r\n",
      "commit_id" : "6a4337298035683a8748ae446eae90e5c5f41d1b",
      "created_at" : "2023-08-25T10:39:46Z",
      "diff_hunk" : "@@ -68,3 +68,200 @@ jobs:\n           path: ${{ env.CCACHE_DIR }}\n           # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n           key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: 'Win64 native, VS 2022'\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+\n+    # No need to run on the read-only mirror, unless it is a PR.\n+    if: github.repository != 'bitcoin-core/gui' || github.event_name == 'pull_request'\n+\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Restore static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Save static Qt cache\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        uses: actions/cache/save@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ github.job }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305498826",
      "id" : 1305498826,
      "line" : 210,
      "node_id" : "PRRC_kwDOABII585N0FTK",
      "original_commit_id" : "a3ebaa20eaab37b9ec32d6569fbc63d6216fe1b5",
      "original_line" : 210,
      "original_position" : 142,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 143,
      "pull_request_review_id" : 1595435594,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305498826/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T10:39:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305498826",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305502856"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305502856"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any reason to cache this?",
      "commit_id" : "6a4337298035683a8748ae446eae90e5c5f41d1b",
      "created_at" : "2023-08-25T10:44:27Z",
      "diff_hunk" : "@@ -68,3 +68,200 @@ jobs:\n           path: ${{ env.CCACHE_DIR }}\n           # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n           key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: 'Win64 native, VS 2022'\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+\n+    # No need to run on the read-only mirror, unless it is a PR.\n+    if: github.repository != 'bitcoin-core/gui' || github.event_name == 'pull_request'\n+\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Restore static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Save static Qt cache\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        uses: actions/cache/save@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ github.job }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305502856",
      "id" : 1305502856,
      "line" : 196,
      "node_id" : "PRRC_kwDOABII585N0GSI",
      "original_commit_id" : "a3ebaa20eaab37b9ec32d6569fbc63d6216fe1b5",
      "original_line" : 196,
      "original_position" : 128,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 129,
      "pull_request_review_id" : 1595441829,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305502856/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T10:44:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305502856",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305597382"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305597382"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, it won't.\r\n\r\nIt is the \"Restore\" action. The paired \"Save\" action is guarded with https://github.com/bitcoin/bitcoin/blob/a3ebaa20eaab37b9ec32d6569fbc63d6216fe1b5/.github/workflows/ci.yml#L245",
      "commit_id" : "6a4337298035683a8748ae446eae90e5c5f41d1b",
      "created_at" : "2023-08-25T12:27:30Z",
      "diff_hunk" : "@@ -68,3 +68,200 @@ jobs:\n           path: ${{ env.CCACHE_DIR }}\n           # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n           key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: 'Win64 native, VS 2022'\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+\n+    # No need to run on the read-only mirror, unless it is a PR.\n+    if: github.repository != 'bitcoin-core/gui' || github.event_name == 'pull_request'\n+\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Restore static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Save static Qt cache\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        uses: actions/cache/save@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ github.job }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305597382",
      "id" : 1305597382,
      "in_reply_to_id" : 1305498826,
      "line" : 210,
      "node_id" : "PRRC_kwDOABII585N0dXG",
      "original_commit_id" : "a3ebaa20eaab37b9ec32d6569fbc63d6216fe1b5",
      "original_line" : 210,
      "original_position" : 142,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 143,
      "pull_request_review_id" : 1595595617,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305597382/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:27:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305597382",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305601896"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305601896"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah sorry, the GHA syntax is so verbose",
      "commit_id" : "6a4337298035683a8748ae446eae90e5c5f41d1b",
      "created_at" : "2023-08-25T12:32:04Z",
      "diff_hunk" : "@@ -68,3 +68,200 @@ jobs:\n           path: ${{ env.CCACHE_DIR }}\n           # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n           key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: 'Win64 native, VS 2022'\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+\n+    # No need to run on the read-only mirror, unless it is a PR.\n+    if: github.repository != 'bitcoin-core/gui' || github.event_name == 'pull_request'\n+\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Restore static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Save static Qt cache\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        uses: actions/cache/save@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ github.job }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305601896",
      "id" : 1305601896,
      "in_reply_to_id" : 1305498826,
      "line" : 210,
      "node_id" : "PRRC_kwDOABII585N0edo",
      "original_commit_id" : "a3ebaa20eaab37b9ec32d6569fbc63d6216fe1b5",
      "original_line" : 210,
      "original_position" : 142,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 143,
      "pull_request_review_id" : 1595609737,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305601896/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:32:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305601896",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305602588"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305602588"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The same level that was used in Cirrus. No need to change anything here.",
      "commit_id" : "6a4337298035683a8748ae446eae90e5c5f41d1b",
      "created_at" : "2023-08-25T12:32:48Z",
      "diff_hunk" : "@@ -68,3 +68,200 @@ jobs:\n           path: ${{ env.CCACHE_DIR }}\n           # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n           key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: 'Win64 native, VS 2022'\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+\n+    # No need to run on the read-only mirror, unless it is a PR.\n+    if: github.repository != 'bitcoin-core/gui' || github.event_name == 'pull_request'\n+\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Restore static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Save static Qt cache\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        uses: actions/cache/save@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ github.job }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n+\n+      - name: Using vcpkg with MSBuild\n+        run: |\n+          Set-Location \"$env:VCPKG_INSTALLATION_ROOT\"\n+          Add-Content -Path \"triplets\\x64-windows-static.cmake\" -Value \"set(VCPKG_BUILD_TYPE release)\"\n+          vcpkg --vcpkg-root \"$env:VCPKG_INSTALLATION_ROOT\" integrate install\n+          git rev-parse HEAD | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+\n+      - name: vcpkg tools cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:/vcpkg/downloads/tools\n+          key: ${{ github.job }}-vcpkg-tools\n+\n+      - name: vcpkg binary cache\n+        uses: actions/cache@v3\n+        with:\n+          path: ~/AppData/Local/vcpkg/archives\n+          key: ${{ github.job }}-vcpkg-binary-${{ hashFiles('vcpkg_commit', 'msbuild_version', 'build_msvc/vcpkg.json') }}\n+\n+      - name: Generate project files\n+        run: py -3 build_msvc\\msvc-autogen.py\n+\n+      - name: Build\n+        shell: cmd\n+        run: |\n+          ccache --zero-stats\n+          msbuild build_msvc\\bitcoin.sln -property:CLToolPath=C:\\ccache;CLToolExe=cl.exe;UseMultiToolTask=true;Configuration=Release -maxCpuCount -verbosity:minimal -noLogo\n+\n+      - name: Ccache stats\n+        run: ccache --show-stats\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ~/AppData/Local/ccache\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+      - name: Run unit tests\n+        run: src\\test_bitcoin.exe -l test_suite\n+\n+      - name: Run benchmarks\n+        run: src\\bench_bitcoin.exe -sanity-check\n+\n+      - name: Run util tests\n+        run: py -3 test\\util\\test_runner.py\n+\n+      - name: Run rpcauth test\n+        run: py -3 test\\util\\rpcauth-test.py\n+\n+      - name: Run functional tests\n+        env:\n+          PYTHONUTF8: 1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305602588",
      "id" : 1305602588,
      "in_reply_to_id" : 1305368316,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585N0eoc",
      "original_commit_id" : "a3ebaa20eaab37b9ec32d6569fbc63d6216fe1b5",
      "original_line" : 265,
      "original_position" : 198,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : null,
      "pull_request_review_id" : 1595611875,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305602588/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:32:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305602588",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305605141"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305605141"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The \"Install Ccache\" step [takes](https://github.com/bitcoin/bitcoin/actions/runs/5949997773/job/16136915568) 19 seconds only. This time is negligible in comparison to the whole workflow runtime.\r\n\r\nHowever, caching is still useful to avoid networking issues that are possible during `choco install ccache` command execution.",
      "commit_id" : "6a4337298035683a8748ae446eae90e5c5f41d1b",
      "created_at" : "2023-08-25T12:35:41Z",
      "diff_hunk" : "@@ -68,3 +68,200 @@ jobs:\n           path: ${{ env.CCACHE_DIR }}\n           # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n           key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: 'Win64 native, VS 2022'\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+\n+    # No need to run on the read-only mirror, unless it is a PR.\n+    if: github.repository != 'bitcoin-core/gui' || github.event_name == 'pull_request'\n+\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Restore static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Save static Qt cache\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        uses: actions/cache/save@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ github.job }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305605141",
      "id" : 1305605141,
      "in_reply_to_id" : 1305502856,
      "line" : 196,
      "node_id" : "PRRC_kwDOABII585N0fQV",
      "original_commit_id" : "a3ebaa20eaab37b9ec32d6569fbc63d6216fe1b5",
      "original_line" : 196,
      "original_position" : 128,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 129,
      "pull_request_review_id" : 1595620437,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305605141/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:35:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305605141",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305619169"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305619169"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> The same level that was used in Cirrus. No need to change anything here.\r\n\r\n[Done](https://github.com/bitcoin/bitcoin/pull/28173#issuecomment-1693314696).",
      "commit_id" : "6a4337298035683a8748ae446eae90e5c5f41d1b",
      "created_at" : "2023-08-25T12:50:48Z",
      "diff_hunk" : "@@ -68,3 +68,200 @@ jobs:\n           path: ${{ env.CCACHE_DIR }}\n           # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n           key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: 'Win64 native, VS 2022'\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+\n+    # No need to run on the read-only mirror, unless it is a PR.\n+    if: github.repository != 'bitcoin-core/gui' || github.event_name == 'pull_request'\n+\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Restore static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Save static Qt cache\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        uses: actions/cache/save@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ github.job }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n+\n+      - name: Using vcpkg with MSBuild\n+        run: |\n+          Set-Location \"$env:VCPKG_INSTALLATION_ROOT\"\n+          Add-Content -Path \"triplets\\x64-windows-static.cmake\" -Value \"set(VCPKG_BUILD_TYPE release)\"\n+          vcpkg --vcpkg-root \"$env:VCPKG_INSTALLATION_ROOT\" integrate install\n+          git rev-parse HEAD | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+\n+      - name: vcpkg tools cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:/vcpkg/downloads/tools\n+          key: ${{ github.job }}-vcpkg-tools\n+\n+      - name: vcpkg binary cache\n+        uses: actions/cache@v3\n+        with:\n+          path: ~/AppData/Local/vcpkg/archives\n+          key: ${{ github.job }}-vcpkg-binary-${{ hashFiles('vcpkg_commit', 'msbuild_version', 'build_msvc/vcpkg.json') }}\n+\n+      - name: Generate project files\n+        run: py -3 build_msvc\\msvc-autogen.py\n+\n+      - name: Build\n+        shell: cmd\n+        run: |\n+          ccache --zero-stats\n+          msbuild build_msvc\\bitcoin.sln -property:CLToolPath=C:\\ccache;CLToolExe=cl.exe;UseMultiToolTask=true;Configuration=Release -maxCpuCount -verbosity:minimal -noLogo\n+\n+      - name: Ccache stats\n+        run: ccache --show-stats\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ~/AppData/Local/ccache\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+      - name: Run unit tests\n+        run: src\\test_bitcoin.exe -l test_suite\n+\n+      - name: Run benchmarks\n+        run: src\\bench_bitcoin.exe -sanity-check\n+\n+      - name: Run util tests\n+        run: py -3 test\\util\\test_runner.py\n+\n+      - name: Run rpcauth test\n+        run: py -3 test\\util\\rpcauth-test.py\n+\n+      - name: Run functional tests\n+        env:\n+          PYTHONUTF8: 1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305619169",
      "id" : 1305619169,
      "in_reply_to_id" : 1305368316,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585N0irh",
      "original_commit_id" : "a3ebaa20eaab37b9ec32d6569fbc63d6216fe1b5",
      "original_line" : 265,
      "original_position" : 198,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : null,
      "pull_request_review_id" : 1595664142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305619169/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-25T12:55:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305619169",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1307779762"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307779762"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Looks like the cache key will additionally include the branch name / context, so this will cycle the cache. See https://github.com/bitcoin/bitcoin/actions/caches\r\n\r\n```\r\nwin64-native-ccache-installation-4.7.5 2.7 MB cached August 28, 2023 08:55\r\nrefs/pull/27601/merge \r\n\r\n win64-native-ccache-installation-4.7.5 2.7 MB cached August 28, 2023 07:43\r\nrefs/pull/26312/merge ",
      "commit_id" : "6a4337298035683a8748ae446eae90e5c5f41d1b",
      "created_at" : "2023-08-28T18:42:43Z",
      "diff_hunk" : "@@ -68,3 +68,199 @@ jobs:\n           path: ${{ env.CCACHE_DIR }}\n           # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n           key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: 'Win64 native, VS 2022'\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+\n+    # No need to run on the read-only mirror, unless it is a PR.\n+    if: github.repository != 'bitcoin-core/gui' || github.event_name == 'pull_request'\n+\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      PYTHONUTF8: 1\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Restore static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Save static Qt cache\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        uses: actions/cache/save@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ github.job }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1307779762",
      "id" : 1307779762,
      "line" : 196,
      "node_id" : "PRRC_kwDOABII585N8yKy",
      "original_commit_id" : "6a4337298035683a8748ae446eae90e5c5f41d1b",
      "original_line" : 196,
      "original_position" : 129,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 129,
      "pull_request_review_id" : 1598847677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307779762/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-28T18:42:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307779762",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1307780404"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307780404"
         }
      },
      "author_association" : "MEMBER",
      "body" : "same, etc ...",
      "commit_id" : "6a4337298035683a8748ae446eae90e5c5f41d1b",
      "created_at" : "2023-08-28T18:43:27Z",
      "diff_hunk" : "@@ -68,3 +68,199 @@ jobs:\n           path: ${{ env.CCACHE_DIR }}\n           # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n           key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: 'Win64 native, VS 2022'\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+\n+    # No need to run on the read-only mirror, unless it is a PR.\n+    if: github.repository != 'bitcoin-core/gui' || github.event_name == 'pull_request'\n+\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      PYTHONUTF8: 1\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Restore static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Save static Qt cache\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        uses: actions/cache/save@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ github.job }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n+\n+      - name: Using vcpkg with MSBuild\n+        run: |\n+          Set-Location \"$env:VCPKG_INSTALLATION_ROOT\"\n+          Add-Content -Path \"triplets\\x64-windows-static.cmake\" -Value \"set(VCPKG_BUILD_TYPE release)\"\n+          vcpkg --vcpkg-root \"$env:VCPKG_INSTALLATION_ROOT\" integrate install\n+          git rev-parse HEAD | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+\n+      - name: vcpkg tools cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:/vcpkg/downloads/tools\n+          key: ${{ github.job }}-vcpkg-tools",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1307780404",
      "id" : 1307780404,
      "line" : 224,
      "node_id" : "PRRC_kwDOABII585N8yU0",
      "original_commit_id" : "6a4337298035683a8748ae446eae90e5c5f41d1b",
      "original_line" : 224,
      "original_position" : 157,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 157,
      "pull_request_review_id" : 1598849269,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307780404/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-28T18:43:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307780404",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1307907257"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307907257"
         }
      },
      "author_association" : "MEMBER",
      "body" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1305392884:\r\n\r\n> While `key` remains the same, pull requests will restore cache from the master branch and make no new saves.\r\n\r\nA few pull requests created their caches since they had not been created for the master branch yet.\r\n\r\nAll recent pull requests skipped saving their caches because they hit the caches from the master branch.",
      "commit_id" : "6a4337298035683a8748ae446eae90e5c5f41d1b",
      "created_at" : "2023-08-28T20:14:20Z",
      "diff_hunk" : "@@ -68,3 +68,199 @@ jobs:\n           path: ${{ env.CCACHE_DIR }}\n           # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n           key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: 'Win64 native, VS 2022'\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+\n+    # No need to run on the read-only mirror, unless it is a PR.\n+    if: github.repository != 'bitcoin-core/gui' || github.event_name == 'pull_request'\n+\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      PYTHONUTF8: 1\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Restore static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Save static Qt cache\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        uses: actions/cache/save@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ github.job }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1307907257",
      "id" : 1307907257,
      "in_reply_to_id" : 1307779762,
      "line" : 196,
      "node_id" : "PRRC_kwDOABII585N9RS5",
      "original_commit_id" : "6a4337298035683a8748ae446eae90e5c5f41d1b",
      "original_line" : 196,
      "original_position" : 129,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 129,
      "pull_request_review_id" : 1599042570,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307907257/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-28T20:14:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307907257",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1307907379"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307907379"
         }
      },
      "author_association" : "MEMBER",
      "body" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1307907257",
      "commit_id" : "6a4337298035683a8748ae446eae90e5c5f41d1b",
      "created_at" : "2023-08-28T20:14:30Z",
      "diff_hunk" : "@@ -68,3 +68,199 @@ jobs:\n           path: ${{ env.CCACHE_DIR }}\n           # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n           key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: 'Win64 native, VS 2022'\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+\n+    # No need to run on the read-only mirror, unless it is a PR.\n+    if: github.repository != 'bitcoin-core/gui' || github.event_name == 'pull_request'\n+\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      PYTHONUTF8: 1\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Restore static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Save static Qt cache\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        uses: actions/cache/save@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ github.job }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ github.job }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n+\n+      - name: Using vcpkg with MSBuild\n+        run: |\n+          Set-Location \"$env:VCPKG_INSTALLATION_ROOT\"\n+          Add-Content -Path \"triplets\\x64-windows-static.cmake\" -Value \"set(VCPKG_BUILD_TYPE release)\"\n+          vcpkg --vcpkg-root \"$env:VCPKG_INSTALLATION_ROOT\" integrate install\n+          git rev-parse HEAD | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+\n+      - name: vcpkg tools cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:/vcpkg/downloads/tools\n+          key: ${{ github.job }}-vcpkg-tools",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1307907379",
      "id" : 1307907379,
      "in_reply_to_id" : 1307780404,
      "line" : 224,
      "node_id" : "PRRC_kwDOABII585N9RUz",
      "original_commit_id" : "6a4337298035683a8748ae446eae90e5c5f41d1b",
      "original_line" : 224,
      "original_position" : 157,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : 157,
      "pull_request_review_id" : 1599042775,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307907379/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-28T20:14:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307907379",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1308042228"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308042228"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> An alternative would be to run them on non-pr pushes only. Failures should be rare enough to deal with them post-merge.\r\n\r\nDone in https://github.com/bitcoin/bitcoin/pull/28360.",
      "commit_id" : "6a4337298035683a8748ae446eae90e5c5f41d1b",
      "created_at" : "2023-08-28T23:12:11Z",
      "diff_hunk" : "@@ -51,12 +51,206 @@ jobs:\n       - name: Set Ccache directory\n         run: echo \"CCACHE_DIR=${RUNNER_TEMP}/ccache_dir\" >> \"$GITHUB_ENV\"\n \n-      - name: Ccache cache\n-        uses: actions/cache@v3\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n         with:\n           path: ${{ env.CCACHE_DIR }}\n-          key: ${{ github.job }}-ccache-cache-${{ github.run_id }}\n-          restore-keys: ${{ github.job }}-ccache-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n \n       - name: CI script\n         run: ./ci/test_run_all.sh\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ${{ env.CCACHE_DIR }}\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+  win64-native:\n+    name: Win64 native, VS 2022\n+    # Use latest image, but hardcode version to avoid silent upgrades (and breaks).\n+    # See: https://github.com/actions/runner-images#available-images.\n+    runs-on: windows-2022\n+    env:\n+      CCACHE_MAXSIZE: '200M'\n+      CI_CCACHE_VERSION: '4.7.5'\n+      CI_QT_CONF: '-release -silent -opensource -confirm-license -opengl desktop -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -nomake examples -nomake tests -nomake tools -no-angle -no-dbus -no-gif -no-gtk -no-ico -no-icu -no-libjpeg -no-libudev -no-sql-sqlite -no-sql-odbc -no-sqlite -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip doc -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-bearermanagement -no-feature-printdialog -no-feature-printer -no-feature-printpreviewdialog -no-feature-printpreviewwidget -no-feature-sql -no-feature-sqlmodel -no-feature-textbrowser -no-feature-textmarkdownwriter -no-feature-textodfwriter -no-feature-xml'\n+      CI_QT_DIR: 'qt-everywhere-src-5.15.5'\n+      CI_QT_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.5/single/qt-everywhere-opensource-src-5.15.5.zip'\n+      TEST_RUNNER_TIMEOUT_FACTOR: 40\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Fix Visual Studio installation\n+        # See: https://github.com/actions/runner-images/issues/7832#issuecomment-1617585694.\n+        run: |\n+          Set-Location \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\\"\n+          $InstallPath = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\"\n+          $componentsToRemove= @(\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64\"\n+            \"Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre\"\n+          )\n+          [string]$workloadArgs = $componentsToRemove | ForEach-Object {\" --remove \" +  $_}\n+          $Arguments = ('/c', \"vs_installer.exe\", 'modify', '--installPath', \"`\"$InstallPath`\"\",$workloadArgs, '--quiet', '--norestart', '--nocache')\n+          # should be run twice\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden\n+\n+      - name: Configure Developer Command Prompt for Microsoft Visual C++\n+        # Using microsoft/setup-msbuild is not enough.\n+        uses: ilammy/msvc-dev-cmd@v1\n+        with:\n+          arch: x64\n+\n+      - name: Check MSBuild and Qt\n+        run: |\n+          msbuild -version | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\msbuild_version\"\n+          $env:CI_QT_URL | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_url\"\n+          $env:CI_QT_CONF | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\qt_conf\"\n+\n+      - name: Static Qt cache\n+        id: static-qt-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:\\Qt_static\n+          key: ${{ runner.os }}-static-qt-${{ hashFiles('msbuild_version', 'qt_url', 'qt_conf') }}\n+\n+      - name: Build static Qt. Download\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: |\n+          curl --location --output C:\\qt-src.zip %CI_QT_URL%\n+          choco install --yes --no-progress jom\n+\n+      - name: Build static Qt. Expand source archive\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        shell: cmd\n+        run: tar -xf C:\\qt-src.zip -C C:\\\n+\n+      - name: Build static Qt. Create build directory\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        run: |\n+          Rename-Item -Path \"C:\\$env:CI_QT_DIR\" -NewName \"C:\\qt-src\"\n+          New-Item -ItemType Directory -Path \"C:\\qt-src\\build\"\n+\n+      - name: Build static Qt. Configure\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: ..\\configure %CI_QT_CONF% -prefix C:\\Qt_static\n+\n+      - name: Build static Qt. Build\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom\n+\n+      - name: Build static Qt. Install\n+        if: steps.static-qt-cache.outputs.cache-hit != 'true'\n+        working-directory: C:\\qt-src\\build\n+        shell: cmd\n+        run: jom install\n+\n+      - name: Ccache installation cache\n+        id: ccache-installation-cache\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            C:\\ProgramData\\chocolatey\\lib\\ccache\n+            C:\\ProgramData\\chocolatey\\bin\\ccache.exe\n+            C:\\ccache\\cl.exe\n+          key: ${{ runner.os }}-ccache-installation-${{ env.CI_CCACHE_VERSION }}\n+\n+      - name: Install Ccache\n+        if: steps.ccache-installation-cache.outputs.cache-hit != 'true'\n+        run: |\n+          choco install --yes --no-progress ccache --version=$env:CI_CCACHE_VERSION\n+          New-Item -ItemType Directory -Path \"C:\\ccache\"\n+          Copy-Item -Path \"$env:ChocolateyInstall\\lib\\ccache\\tools\\ccache-$env:CI_CCACHE_VERSION-windows-x86_64\\ccache.exe\" -Destination \"C:\\ccache\\cl.exe\"\n+\n+      - name: Restore Ccache cache\n+        uses: actions/cache/restore@v3\n+        with:\n+          path: ~/AppData/Local/ccache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+          restore-keys: ${{ github.job }}-ccache-\n+\n+      - name: Using vcpkg with MSBuild\n+        run: |\n+          Set-Location \"$env:VCPKG_INSTALLATION_ROOT\"\n+          Add-Content -Path \"triplets\\x64-windows-static.cmake\" -Value \"set(VCPKG_BUILD_TYPE release)\"\n+          vcpkg --vcpkg-root \"$env:VCPKG_INSTALLATION_ROOT\" integrate install\n+          git rev-parse HEAD | Out-File -FilePath \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+          Get-Content -Path \"$env:GITHUB_WORKSPACE\\vcpkg_commit\"\n+\n+      - name: vcpkg tools cache\n+        uses: actions/cache@v3\n+        with:\n+          path: C:/vcpkg/downloads/tools\n+          key: ${{ runner.os }}-vcpkg-tools\n+\n+      - name: vcpkg binary cache\n+        uses: actions/cache@v3\n+        with:\n+          path: ~/AppData/Local/vcpkg/archives\n+          key: ${{ runner.os }}-vcpkg-binary-${{ hashFiles('vcpkg_commit', 'msbuild_version', 'build_msvc/vcpkg.json') }}\n+\n+      - name: Generate project files\n+        run: python build_msvc\\msvc-autogen.py\n+\n+      - name: Build\n+        shell: cmd\n+        run: |\n+          ccache --zero-stats\n+          msbuild build_msvc\\bitcoin.sln -property:CLToolPath=C:\\ccache;CLToolExe=cl.exe;UseMultiToolTask=true;Configuration=Release -maxCpuCount -verbosity:minimal -noLogo\n+\n+      - name: Ccache stats\n+        run: ccache --show-stats\n+\n+      - name: Save Ccache cache\n+        uses: actions/cache/save@v3\n+        if: github.event_name != 'pull_request'\n+        with:\n+          path: ~/AppData/Local/ccache\n+          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache\n+          key: ${{ github.job }}-ccache-${{ github.run_id }}\n+\n+      - name: Run unit tests\n+        run: src\\test_bitcoin.exe -l test_suite\n+\n+      - name: Run benchmarks\n+        run: src\\bench_bitcoin.exe -sanity-check\n+\n+      - name: Run bitcoin utils tests\n+        run: python test\\util\\test_runner.py\n+\n+      - name: Run rpcauth test\n+        run: python test\\util\\rpcauth-test.py\n+\n+      - name: Run functional tests\n+        env:\n+          PYTHONUTF8: 1\n+        shell: cmd\n+        run: python test\\functional\\test_runner.py --ci --tmpdirprefix=%RUNNER_TEMP% --combinedlogslen=99999999 --timeout-factor=%TEST_RUNNER_TIMEOUT_FACTOR% --quiet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28173#discussion_r1308042228",
      "id" : 1308042228,
      "in_reply_to_id" : 1299978413,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585N9yP0",
      "original_commit_id" : "699c941d330bf26d30f06526dc0b7670cd5d891c",
      "original_line" : 256,
      "original_position" : 210,
      "original_start_line" : null,
      "path" : ".github/workflows/ci.yml",
      "position" : null,
      "pull_request_review_id" : 1599248028,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28173",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308042228/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-28T23:12:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308042228",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   }
]
