[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28107).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [glozow](https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1643837866), [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1645952454), [luke-jr](https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1650329917), [ismaelsadeeq](https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1747083117), [BrandonOdiwuor](https://github.com/bitcoin/bitcoin/pull/28107#pullrequestreview-1657995121) |\n| Approach ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/28107#pullrequestreview-1661617241) |\n| Ignored review | [instagibbs](https://github.com/bitcoin/bitcoin/pull/28107#pullrequestreview-1555428522) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28481](https://github.com/bitcoin/bitcoin/pull/28481) (txorphanage: add size accounting, use wtxids, support multiple announcers by glozow)\n* [#28438](https://github.com/bitcoin/bitcoin/pull/28438) (Use serialization parameters for CTransaction by ajtowns)\n* [#28031](https://github.com/bitcoin/bitcoin/pull/28031) (Package Relay 1/3: Introduce TxDownloadManager and improve orphan-handling by glozow)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-07-19T14:10:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1642163970",
      "id" : 1642163970,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
      "node_id" : "IC_kwDOABII585h4W8C",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 1,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1642163970/reactions"
      },
      "updated_at" : "2023-10-06T15:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1642163970",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "How is this different from `GenTxid`?",
      "created_at" : "2023-07-19T14:17:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1642175486",
      "id" : 1642175486,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
      "node_id" : "IC_kwDOABII585h4Zv-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1642175486/reactions"
      },
      "updated_at" : "2023-07-19T14:17:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1642175486",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> How is this different from GenTxid?\r\n\r\nI think mostly compile-time vs. runtime checks? `GenTxid` can hold both txid types but doesn't enforce type correctness at compile time. Any type checks would happen at runtime, e.g. `assert(gtxid.IsWtxid())`. Also nothing prevents passing the wrong txid type when constructing a `GenTxid`.\r\n\r\n(I guess with this PR we could consider making `GenTxid` a `std::variant<Txid, Wtxid>`)",
      "created_at" : "2023-07-19T14:28:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1642196812",
      "id" : 1642196812,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
      "node_id" : "IC_kwDOABII585h4e9M",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1642196812/reactions"
      },
      "updated_at" : "2023-07-19T14:28:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1642196812",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've definitely written/seen bugs that could be prevented if Txid and Wtxid were different types. When I review code it's something that I look for and it comes up surprisingly often. Interfaces taking `uint256` often implicitly expect them to be a txid, eg #23325.\r\n\r\nAgree that checking at compile time would be nice and probably prevent bugs / make review easier. Concept ACK assuming we're ok with the amount of code change.",
      "created_at" : "2023-07-20T12:28:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1643837866",
      "id" : 1643837866,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
      "node_id" : "IC_kwDOABII585h-vmq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1643837866/reactions"
      },
      "updated_at" : "2023-07-20T12:28:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1643837866",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> We'll have to be careful for this not to lead to unnecessary refactoring code churn, but that shouldn't be a reason not to make this change imo.\r\n\r\nIn terms of refactoring, this should be similar to the time type-safety PRs in that we can gradually convert our code.",
      "created_at" : "2023-07-20T12:29:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1643838829",
      "id" : 1643838829,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
      "node_id" : "IC_kwDOABII585h-v1t",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1643838829/reactions"
      },
      "updated_at" : "2023-07-20T12:29:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1643838829",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "concept ACK, it comes up pretty [often](https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1261648754)\r\n\r\nto work around this I'm writing `Assume`'s everywhere to make things clearer for me :)",
      "created_at" : "2023-07-20T15:24:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1644129957",
      "id" : 1644129957,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
      "node_id" : "IC_kwDOABII585h_26l",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 1,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1644129957/reactions"
      },
      "updated_at" : "2023-07-20T15:29:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1644129957",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "If helpful, a somewhat similar pros/cons discussion took place in March 2021 in https://github.com/bitcoin/bitcoin/pull/21328.",
      "created_at" : "2023-07-20T16:11:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1644206979",
      "id" : 1644206979,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
      "node_id" : "IC_kwDOABII585iAJuD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1644206979/reactions"
      },
      "updated_at" : "2023-07-20T17:22:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1644206979",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ready for review",
      "created_at" : "2023-07-21T15:31:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1645768047",
      "id" : 1645768047,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
      "node_id" : "IC_kwDOABII585iGG1v",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1645768047/reactions"
      },
      "updated_at" : "2023-07-21T15:31:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1645768047",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2023-07-21T16:30:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1645952454",
      "id" : 1645952454,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
      "node_id" : "IC_kwDOABII585iGz3G",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1645952454/reactions"
      },
      "updated_at" : "2023-07-21T16:30:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1645952454",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, but I'm not too sure about the `Wtxid` type. It's literally just a hash of the transaction, not really an identifier per se.",
      "created_at" : "2023-07-25T18:26:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1650329917",
      "id" : 1650329917,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
      "node_id" : "IC_kwDOABII585iXgk9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1650329917/reactions"
      },
      "updated_at" : "2023-07-25T18:26:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1650329917",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Concept ACK, but I'm not too sure about the Wtxid type.\r\n\r\nCould you clarify your objections about the `Wtxid` type?  This PR aims to catch type confusion bugs (confusion between txids and wtxids) at compile-time and I don't see how to do that without these explicit types.",
      "created_at" : "2023-07-26T12:51:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1651744555",
      "id" : 1651744555,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
      "node_id" : "IC_kwDOABII585ic58r",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1651744555/reactions"
      },
      "updated_at" : "2023-07-26T12:51:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1651744555",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1279068859"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279068859"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is it not possible to replace all of that with just:\r\n\r\n```cpp\r\nclass Txid : public uint256\r\n{\r\n};\r\n\r\nclass Wtxid : public uint256\r\n{\r\n};\r\n```\r\n\r\nIt achieves the purpose of not allowing conversion and comparison between `Txid` and `Wtxid` and each one of them can be treated as `uint256`.",
      "commit_id" : "76fe2c304201646d63b1b01b397e18a99252a2d9",
      "created_at" : "2023-07-31T09:55:41Z",
      "diff_hunk" : "@@ -0,0 +1,54 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;\n+\n+public:\n+    transaction_identifier() : uint256{} {}\n+    explicit transaction_identifier(const uint256& other) : uint256{other} {}\n+    explicit transaction_identifier(const uint256&& other) : uint256{other} {}\n+\n+    // Delete copy/move constructors/assignment for differing transaction_identifier types.\n+    transaction_identifier(const opposite_type&) = delete;\n+    transaction_identifier(opposite_type&&) = delete;\n+    transaction_identifier& operator=(const opposite_type&) = delete;\n+    transaction_identifier& operator=(opposite_type&&) = delete;\n+\n+    // Disallow comparisons between different transaction_identifier types.\n+    friend bool operator==(const transaction_identifier<has_witness>& a,\n+                           const opposite_type& b) = delete;\n+    friend bool operator!=(const transaction_identifier<has_witness>& a,\n+                           const opposite_type& b) = delete;\n+    friend bool operator<(const transaction_identifier<has_witness>& a,\n+                          const opposite_type& b) = delete;\n+    int Compare(const opposite_type&) const = delete;\n+\n+    // Allow comparisons between the same transaction_identifier type.\n+    friend bool operator==(const transaction_identifier<has_witness>& a,\n+                           const transaction_identifier<has_witness>& b) { return a.Compare(b) == 0; }\n+    friend bool operator!=(const transaction_identifier<has_witness>& a,\n+                           const transaction_identifier<has_witness>& b) { return a.Compare(b) != 0; }\n+    friend bool operator<(const transaction_identifier<has_witness>& a,\n+                          const transaction_identifier<has_witness>& b) { return a.Compare(b) < 0; }\n+    constexpr int Compare(const transaction_identifier<has_witness>& other) const { return static_cast<const uint256&>(*this).Compare(other); }\n+};\n+\n+/** Txid commits to all transaction fields except the witness. */\n+using Txid = transaction_identifier<false>;\n+/** Wtxid commits to all transaction fields including the witness. */\n+using Wtxid = transaction_identifier<true>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1279068859",
      "id" : 1279068859,
      "line" : 51,
      "node_id" : "PRRC_kwDOABII585MPQq7",
      "original_commit_id" : "76fe2c304201646d63b1b01b397e18a99252a2d9",
      "original_line" : 51,
      "original_position" : 51,
      "original_start_line" : 8,
      "path" : "src/util/transaction_identifier.h",
      "position" : 51,
      "pull_request_review_id" : 1554400767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279068859/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 8,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-07-31T09:55:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279068859",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1279109114"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279109114"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That is what I originally had in this PR but it actually doesn't achieve the same on all fronts, so I decided to make it explicit to avoid subtle bugs.\r\n\r\ne.g. the following was still permitted:\r\n```c++\r\nTxid txid;\r\nWtxid wtxid{txid};\r\n// or\r\nwtxid.Compare(txid);\r\n// or\r\nbool equal = (wtxid == txid); // same for !=\r\n```",
      "commit_id" : "76fe2c304201646d63b1b01b397e18a99252a2d9",
      "created_at" : "2023-07-31T10:35:17Z",
      "diff_hunk" : "@@ -0,0 +1,54 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;\n+\n+public:\n+    transaction_identifier() : uint256{} {}\n+    explicit transaction_identifier(const uint256& other) : uint256{other} {}\n+    explicit transaction_identifier(const uint256&& other) : uint256{other} {}\n+\n+    // Delete copy/move constructors/assignment for differing transaction_identifier types.\n+    transaction_identifier(const opposite_type&) = delete;\n+    transaction_identifier(opposite_type&&) = delete;\n+    transaction_identifier& operator=(const opposite_type&) = delete;\n+    transaction_identifier& operator=(opposite_type&&) = delete;\n+\n+    // Disallow comparisons between different transaction_identifier types.\n+    friend bool operator==(const transaction_identifier<has_witness>& a,\n+                           const opposite_type& b) = delete;\n+    friend bool operator!=(const transaction_identifier<has_witness>& a,\n+                           const opposite_type& b) = delete;\n+    friend bool operator<(const transaction_identifier<has_witness>& a,\n+                          const opposite_type& b) = delete;\n+    int Compare(const opposite_type&) const = delete;\n+\n+    // Allow comparisons between the same transaction_identifier type.\n+    friend bool operator==(const transaction_identifier<has_witness>& a,\n+                           const transaction_identifier<has_witness>& b) { return a.Compare(b) == 0; }\n+    friend bool operator!=(const transaction_identifier<has_witness>& a,\n+                           const transaction_identifier<has_witness>& b) { return a.Compare(b) != 0; }\n+    friend bool operator<(const transaction_identifier<has_witness>& a,\n+                          const transaction_identifier<has_witness>& b) { return a.Compare(b) < 0; }\n+    constexpr int Compare(const transaction_identifier<has_witness>& other) const { return static_cast<const uint256&>(*this).Compare(other); }\n+};\n+\n+/** Txid commits to all transaction fields except the witness. */\n+using Txid = transaction_identifier<false>;\n+/** Wtxid commits to all transaction fields including the witness. */\n+using Wtxid = transaction_identifier<true>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1279109114",
      "id" : 1279109114,
      "in_reply_to_id" : 1279068859,
      "line" : 51,
      "node_id" : "PRRC_kwDOABII585MPaf6",
      "original_commit_id" : "76fe2c304201646d63b1b01b397e18a99252a2d9",
      "original_line" : 51,
      "original_position" : 51,
      "original_start_line" : 8,
      "path" : "src/util/transaction_identifier.h",
      "position" : 51,
      "pull_request_review_id" : 1554468971,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279109114/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 8,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-07-31T10:35:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279109114",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1279668749"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279668749"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Let's use `Txid` here as well",
      "commit_id" : "76fe2c304201646d63b1b01b397e18a99252a2d9",
      "created_at" : "2023-07-31T17:36:15Z",
      "diff_hunk" : "@@ -20,7 +21,7 @@ bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer)\n {\n     LOCK(m_mutex);\n \n-    const uint256& hash = tx->GetHash();\n+    const auto& hash = tx->GetHash();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1279668749",
      "id" : 1279668749,
      "line" : 24,
      "node_id" : "PRRC_kwDOABII585MRjIN",
      "original_commit_id" : "76fe2c304201646d63b1b01b397e18a99252a2d9",
      "original_line" : 24,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/txorphanage.cpp",
      "position" : 13,
      "pull_request_review_id" : 1555428522,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279668749/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-03T16:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279668749",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke could you give this another look? You've done similar work on our time type-safety, so I'd appreciate your feedback.",
      "created_at" : "2023-08-07T13:40:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1667881786",
      "id" : 1667881786,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
      "node_id" : "IC_kwDOABII585jads6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1667881786/reactions"
      },
      "updated_at" : "2023-08-07T13:40:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1667881786",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1285950696"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285950696"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\n<stdin>:66: new blank line at EOF.\r\n+\r\nwarning: 1 line adds whitespace errors.\r\n",
      "commit_id" : "76fe2c304201646d63b1b01b397e18a99252a2d9",
      "created_at" : "2023-08-07T14:28:29Z",
      "diff_hunk" : "@@ -0,0 +1,54 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;\n+\n+public:\n+    transaction_identifier() : uint256{} {}\n+    explicit transaction_identifier(const uint256& other) : uint256{other} {}\n+    explicit transaction_identifier(const uint256&& other) : uint256{other} {}\n+\n+    // Delete copy/move constructors/assignment for differing transaction_identifier types.\n+    transaction_identifier(const opposite_type&) = delete;\n+    transaction_identifier(opposite_type&&) = delete;\n+    transaction_identifier& operator=(const opposite_type&) = delete;\n+    transaction_identifier& operator=(opposite_type&&) = delete;\n+\n+    // Disallow comparisons between different transaction_identifier types.\n+    friend bool operator==(const transaction_identifier<has_witness>& a,\n+                           const opposite_type& b) = delete;\n+    friend bool operator!=(const transaction_identifier<has_witness>& a,\n+                           const opposite_type& b) = delete;\n+    friend bool operator<(const transaction_identifier<has_witness>& a,\n+                          const opposite_type& b) = delete;\n+    int Compare(const opposite_type&) const = delete;\n+\n+    // Allow comparisons between the same transaction_identifier type.\n+    friend bool operator==(const transaction_identifier<has_witness>& a,\n+                           const transaction_identifier<has_witness>& b) { return a.Compare(b) == 0; }\n+    friend bool operator!=(const transaction_identifier<has_witness>& a,\n+                           const transaction_identifier<has_witness>& b) { return a.Compare(b) != 0; }\n+    friend bool operator<(const transaction_identifier<has_witness>& a,\n+                          const transaction_identifier<has_witness>& b) { return a.Compare(b) < 0; }\n+    constexpr int Compare(const transaction_identifier<has_witness>& other) const { return static_cast<const uint256&>(*this).Compare(other); }\n+};\n+\n+/** Txid commits to all transaction fields except the witness. */\n+using Txid = transaction_identifier<false>;\n+/** Wtxid commits to all transaction fields including the witness. */\n+using Wtxid = transaction_identifier<true>;\n+\n+#endif // BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1285950696",
      "id" : 1285950696,
      "line" : 54,
      "node_id" : "PRRC_kwDOABII585Mpgzo",
      "original_commit_id" : "db8d42b562d24ff01c8ccc6dc9a18630640310f9",
      "original_line" : 54,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : 54,
      "pull_request_review_id" : 1565463240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285950696/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T14:45:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285950696",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1285956464"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285956464"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The \"opposite\" type would be *any* type other than the type itself. For example, currently it is possible to compare `uint256` (a txid) with Wtxid, or `uint256` (a wtxid) with `Txid`.",
      "commit_id" : "76fe2c304201646d63b1b01b397e18a99252a2d9",
      "created_at" : "2023-08-07T14:32:57Z",
      "diff_hunk" : "@@ -0,0 +1,54 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1285956464",
      "id" : 1285956464,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII585MpiNw",
      "original_commit_id" : "db8d42b562d24ff01c8ccc6dc9a18630640310f9",
      "original_line" : 16,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : 16,
      "pull_request_review_id" : 1565463240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285956464/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T14:45:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285956464",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1285964524"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285964524"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What is this and how does this even compile? I presume `const uint256&&` decays into `const uint256&`, but that already exists??\r\n\r\nWould be better to just remove this line, unless there is a reason to do add a line here.",
      "commit_id" : "76fe2c304201646d63b1b01b397e18a99252a2d9",
      "created_at" : "2023-08-07T14:36:41Z",
      "diff_hunk" : "@@ -0,0 +1,54 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;\n+\n+public:\n+    transaction_identifier() : uint256{} {}\n+    explicit transaction_identifier(const uint256& other) : uint256{other} {}\n+    explicit transaction_identifier(const uint256&& other) : uint256{other} {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1285964524",
      "id" : 1285964524,
      "line" : 21,
      "node_id" : "PRRC_kwDOABII585MpkLs",
      "original_commit_id" : "db8d42b562d24ff01c8ccc6dc9a18630640310f9",
      "original_line" : 21,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : 21,
      "pull_request_review_id" : 1565463240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285964524/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T14:45:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285964524",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1285972399"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285972399"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any reason to delete these? The compiler already has them deleted and provides a better error message than yours: `candidate function (the implicit move assignment operator) not viable: no known conversion from 'transaction_identifier<true>' to 'transaction_identifier<false>' for 1st argument`.\r\n\r\nWould be better to just remove those lines, unless there is a reason to do add lines here.",
      "commit_id" : "76fe2c304201646d63b1b01b397e18a99252a2d9",
      "created_at" : "2023-08-07T14:40:32Z",
      "diff_hunk" : "@@ -0,0 +1,54 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;\n+\n+public:\n+    transaction_identifier() : uint256{} {}\n+    explicit transaction_identifier(const uint256& other) : uint256{other} {}\n+    explicit transaction_identifier(const uint256&& other) : uint256{other} {}\n+\n+    // Delete copy/move constructors/assignment for differing transaction_identifier types.\n+    transaction_identifier(const opposite_type&) = delete;\n+    transaction_identifier(opposite_type&&) = delete;\n+    transaction_identifier& operator=(const opposite_type&) = delete;\n+    transaction_identifier& operator=(opposite_type&&) = delete;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1285972399",
      "id" : 1285972399,
      "line" : 27,
      "node_id" : "PRRC_kwDOABII585MpmGv",
      "original_commit_id" : "db8d42b562d24ff01c8ccc6dc9a18630640310f9",
      "original_line" : 27,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : 27,
      "pull_request_review_id" : 1565463240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285972399/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T14:45:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285972399",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1285972674"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285972674"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same?",
      "commit_id" : "76fe2c304201646d63b1b01b397e18a99252a2d9",
      "created_at" : "2023-08-07T14:40:44Z",
      "diff_hunk" : "@@ -0,0 +1,54 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;\n+\n+public:\n+    transaction_identifier() : uint256{} {}\n+    explicit transaction_identifier(const uint256& other) : uint256{other} {}\n+    explicit transaction_identifier(const uint256&& other) : uint256{other} {}\n+\n+    // Delete copy/move constructors/assignment for differing transaction_identifier types.\n+    transaction_identifier(const opposite_type&) = delete;\n+    transaction_identifier(opposite_type&&) = delete;\n+    transaction_identifier& operator=(const opposite_type&) = delete;\n+    transaction_identifier& operator=(opposite_type&&) = delete;\n+\n+    // Disallow comparisons between different transaction_identifier types.\n+    friend bool operator==(const transaction_identifier<has_witness>& a,\n+                           const opposite_type& b) = delete;\n+    friend bool operator!=(const transaction_identifier<has_witness>& a,\n+                           const opposite_type& b) = delete;\n+    friend bool operator<(const transaction_identifier<has_witness>& a,\n+                          const opposite_type& b) = delete;\n+    int Compare(const opposite_type&) const = delete;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1285972674",
      "id" : 1285972674,
      "line" : 36,
      "node_id" : "PRRC_kwDOABII585MpmLC",
      "original_commit_id" : "db8d42b562d24ff01c8ccc6dc9a18630640310f9",
      "original_line" : 36,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : 36,
      "pull_request_review_id" : 1565463240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285972674/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T14:45:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285972674",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1285978619"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285978619"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Any reason to use static_cast when reinterpret_cast can be used? (`reinterpret_cast` is guaranteed to always be compiled to a noop)",
      "commit_id" : "76fe2c304201646d63b1b01b397e18a99252a2d9",
      "created_at" : "2023-08-07T14:44:37Z",
      "diff_hunk" : "@@ -0,0 +1,54 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;\n+\n+public:\n+    transaction_identifier() : uint256{} {}\n+    explicit transaction_identifier(const uint256& other) : uint256{other} {}\n+    explicit transaction_identifier(const uint256&& other) : uint256{other} {}\n+\n+    // Delete copy/move constructors/assignment for differing transaction_identifier types.\n+    transaction_identifier(const opposite_type&) = delete;\n+    transaction_identifier(opposite_type&&) = delete;\n+    transaction_identifier& operator=(const opposite_type&) = delete;\n+    transaction_identifier& operator=(opposite_type&&) = delete;\n+\n+    // Disallow comparisons between different transaction_identifier types.\n+    friend bool operator==(const transaction_identifier<has_witness>& a,\n+                           const opposite_type& b) = delete;\n+    friend bool operator!=(const transaction_identifier<has_witness>& a,\n+                           const opposite_type& b) = delete;\n+    friend bool operator<(const transaction_identifier<has_witness>& a,\n+                          const opposite_type& b) = delete;\n+    int Compare(const opposite_type&) const = delete;\n+\n+    // Allow comparisons between the same transaction_identifier type.\n+    friend bool operator==(const transaction_identifier<has_witness>& a,\n+                           const transaction_identifier<has_witness>& b) { return a.Compare(b) == 0; }\n+    friend bool operator!=(const transaction_identifier<has_witness>& a,\n+                           const transaction_identifier<has_witness>& b) { return a.Compare(b) != 0; }\n+    friend bool operator<(const transaction_identifier<has_witness>& a,\n+                          const transaction_identifier<has_witness>& b) { return a.Compare(b) < 0; }\n+    constexpr int Compare(const transaction_identifier<has_witness>& other) const { return static_cast<const uint256&>(*this).Compare(other); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1285978619",
      "id" : 1285978619,
      "line" : 45,
      "node_id" : "PRRC_kwDOABII585Mpnn7",
      "original_commit_id" : "db8d42b562d24ff01c8ccc6dc9a18630640310f9",
      "original_line" : 45,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : 45,
      "pull_request_review_id" : 1565463240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285978619/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-07T14:45:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285978619",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1286929692"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286929692"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm OK with going either way but disallowing uint256 comparisons in this PR causes a lot of churn, i.e. going around casting all the uint256 to the right type. Most of these casts would later be reverted in follow up PRs that convert more things to use the new types (e.g. mempool, net processing, wallet).\r\n\r\nI think I'd prefer doing the switch to the new type system first and then disallowing uint256 comparisons afterwards. What do you think?",
      "commit_id" : "76fe2c304201646d63b1b01b397e18a99252a2d9",
      "created_at" : "2023-08-08T10:33:01Z",
      "diff_hunk" : "@@ -0,0 +1,54 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1286929692",
      "id" : 1286929692,
      "in_reply_to_id" : 1285956464,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII585MtP0c",
      "original_commit_id" : "db8d42b562d24ff01c8ccc6dc9a18630640310f9",
      "original_line" : 16,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : 16,
      "pull_request_review_id" : 1567000256,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286929692/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-08T10:33:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286929692",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1286931397"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286931397"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No opinion. I just wanted to mention that this is not type safe and maybe other reviewers would want to know too?",
      "commit_id" : "76fe2c304201646d63b1b01b397e18a99252a2d9",
      "created_at" : "2023-08-08T10:34:44Z",
      "diff_hunk" : "@@ -0,0 +1,54 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1286931397",
      "id" : 1286931397,
      "in_reply_to_id" : 1285956464,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII585MtQPF",
      "original_commit_id" : "db8d42b562d24ff01c8ccc6dc9a18630640310f9",
      "original_line" : 16,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : 16,
      "pull_request_review_id" : 1567003069,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286931397/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-08T10:34:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286931397",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1286935288"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286935288"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> The \"opposite\" type would be any type other than the type itself.\r\n\r\nI meant opposite w.r.t `has_witness`, if you have a better name in mind, let me know.\r\n\r\n> I just wanted to mention that this is not type safe and maybe other reviewers would want to know too?\r\n\r\nI'll just add a todo comment about uint256 comparisons.",
      "commit_id" : "76fe2c304201646d63b1b01b397e18a99252a2d9",
      "created_at" : "2023-08-08T10:38:49Z",
      "diff_hunk" : "@@ -0,0 +1,54 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1286935288",
      "id" : 1286935288,
      "in_reply_to_id" : 1285956464,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII585MtRL4",
      "original_commit_id" : "db8d42b562d24ff01c8ccc6dc9a18630640310f9",
      "original_line" : 16,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : 16,
      "pull_request_review_id" : 1567009182,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286935288/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-08T10:38:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286935288",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1286938038"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286938038"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe something like this: (no idea if it compiles):\r\n\r\n```cpp\r\ntemplate<typename Other>\r\nconstexpr int Compare(const Other& other) const {\r\nif contexpr (std::is_same_v<Other, uint256> || \\\\ TODO remove this\r\nstd::is_save_v<Other, transaction_identifier<has_witness>>\r\n){\r\nreturn reinterpret_cast<const uint256&>(*this).Compare(other);\r\n}else{\r\nstatic_assert(ALWAYS_FALSE<Other>, \"Forbidden comparison type\");\r\n}\r\n}",
      "commit_id" : "76fe2c304201646d63b1b01b397e18a99252a2d9",
      "created_at" : "2023-08-08T10:41:40Z",
      "diff_hunk" : "@@ -0,0 +1,54 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1286938038",
      "id" : 1286938038,
      "in_reply_to_id" : 1285956464,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII585MtR22",
      "original_commit_id" : "db8d42b562d24ff01c8ccc6dc9a18630640310f9",
      "original_line" : 16,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : 16,
      "pull_request_review_id" : 1567013453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 1,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286938038/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-08T10:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286938038",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1287123567"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287123567"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yea that works, applied in the latest push",
      "commit_id" : "c1f9c3b28b3d657f56386b9602a33d1a2fc1ed97",
      "created_at" : "2023-08-08T13:30:36Z",
      "diff_hunk" : "@@ -0,0 +1,54 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1287123567",
      "id" : 1287123567,
      "in_reply_to_id" : 1285956464,
      "line" : 18,
      "node_id" : "PRRC_kwDOABII585Mt_Jv",
      "original_commit_id" : "db8d42b562d24ff01c8ccc6dc9a18630640310f9",
      "original_line" : 18,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : 18,
      "pull_request_review_id" : 1567310021,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287123567/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-08T13:30:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287123567",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1287123814"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287123814"
         }
      },
      "author_association" : "MEMBER",
      "body" : "removed",
      "commit_id" : "c1f9c3b28b3d657f56386b9602a33d1a2fc1ed97",
      "created_at" : "2023-08-08T13:30:47Z",
      "diff_hunk" : "@@ -0,0 +1,54 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;\n+\n+public:\n+    transaction_identifier() : uint256{} {}\n+    explicit transaction_identifier(const uint256& other) : uint256{other} {}\n+    explicit transaction_identifier(const uint256&& other) : uint256{other} {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1287123814",
      "id" : 1287123814,
      "in_reply_to_id" : 1285964524,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Mt_Nm",
      "original_commit_id" : "db8d42b562d24ff01c8ccc6dc9a18630640310f9",
      "original_line" : 21,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : null,
      "pull_request_review_id" : 1567310410,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287123814/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-08T13:30:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287123814",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1287124882"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287124882"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I kinda like making this explicit but the assignment operators are not necessary so i removed them",
      "commit_id" : "c1f9c3b28b3d657f56386b9602a33d1a2fc1ed97",
      "created_at" : "2023-08-08T13:31:36Z",
      "diff_hunk" : "@@ -0,0 +1,54 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;\n+\n+public:\n+    transaction_identifier() : uint256{} {}\n+    explicit transaction_identifier(const uint256& other) : uint256{other} {}\n+    explicit transaction_identifier(const uint256&& other) : uint256{other} {}\n+\n+    // Delete copy/move constructors/assignment for differing transaction_identifier types.\n+    transaction_identifier(const opposite_type&) = delete;\n+    transaction_identifier(opposite_type&&) = delete;\n+    transaction_identifier& operator=(const opposite_type&) = delete;\n+    transaction_identifier& operator=(opposite_type&&) = delete;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1287124882",
      "id" : 1287124882,
      "in_reply_to_id" : 1285972399,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Mt_eS",
      "original_commit_id" : "db8d42b562d24ff01c8ccc6dc9a18630640310f9",
      "original_line" : 27,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : null,
      "pull_request_review_id" : 1567312217,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287124882/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-08T13:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287124882",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1287125133"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287125133"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "c1f9c3b28b3d657f56386b9602a33d1a2fc1ed97",
      "created_at" : "2023-08-08T13:31:43Z",
      "diff_hunk" : "@@ -0,0 +1,54 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;\n+\n+public:\n+    transaction_identifier() : uint256{} {}\n+    explicit transaction_identifier(const uint256& other) : uint256{other} {}\n+    explicit transaction_identifier(const uint256&& other) : uint256{other} {}\n+\n+    // Delete copy/move constructors/assignment for differing transaction_identifier types.\n+    transaction_identifier(const opposite_type&) = delete;\n+    transaction_identifier(opposite_type&&) = delete;\n+    transaction_identifier& operator=(const opposite_type&) = delete;\n+    transaction_identifier& operator=(opposite_type&&) = delete;\n+\n+    // Disallow comparisons between different transaction_identifier types.\n+    friend bool operator==(const transaction_identifier<has_witness>& a,\n+                           const opposite_type& b) = delete;\n+    friend bool operator!=(const transaction_identifier<has_witness>& a,\n+                           const opposite_type& b) = delete;\n+    friend bool operator<(const transaction_identifier<has_witness>& a,\n+                          const opposite_type& b) = delete;\n+    int Compare(const opposite_type&) const = delete;\n+\n+    // Allow comparisons between the same transaction_identifier type.\n+    friend bool operator==(const transaction_identifier<has_witness>& a,\n+                           const transaction_identifier<has_witness>& b) { return a.Compare(b) == 0; }\n+    friend bool operator!=(const transaction_identifier<has_witness>& a,\n+                           const transaction_identifier<has_witness>& b) { return a.Compare(b) != 0; }\n+    friend bool operator<(const transaction_identifier<has_witness>& a,\n+                          const transaction_identifier<has_witness>& b) { return a.Compare(b) < 0; }\n+    constexpr int Compare(const transaction_identifier<has_witness>& other) const { return static_cast<const uint256&>(*this).Compare(other); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1287125133",
      "id" : 1287125133,
      "in_reply_to_id" : 1285978619,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Mt_iN",
      "original_commit_id" : "db8d42b562d24ff01c8ccc6dc9a18630640310f9",
      "original_line" : 45,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : null,
      "pull_request_review_id" : 1567312661,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287125133/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-08T13:31:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287125133",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1287125465"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287125465"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "c1f9c3b28b3d657f56386b9602a33d1a2fc1ed97",
      "created_at" : "2023-08-08T13:31:53Z",
      "diff_hunk" : "@@ -0,0 +1,54 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;\n+\n+public:\n+    transaction_identifier() : uint256{} {}\n+    explicit transaction_identifier(const uint256& other) : uint256{other} {}\n+    explicit transaction_identifier(const uint256&& other) : uint256{other} {}\n+\n+    // Delete copy/move constructors/assignment for differing transaction_identifier types.\n+    transaction_identifier(const opposite_type&) = delete;\n+    transaction_identifier(opposite_type&&) = delete;\n+    transaction_identifier& operator=(const opposite_type&) = delete;\n+    transaction_identifier& operator=(opposite_type&&) = delete;\n+\n+    // Disallow comparisons between different transaction_identifier types.\n+    friend bool operator==(const transaction_identifier<has_witness>& a,\n+                           const opposite_type& b) = delete;\n+    friend bool operator!=(const transaction_identifier<has_witness>& a,\n+                           const opposite_type& b) = delete;\n+    friend bool operator<(const transaction_identifier<has_witness>& a,\n+                          const opposite_type& b) = delete;\n+    int Compare(const opposite_type&) const = delete;\n+\n+    // Allow comparisons between the same transaction_identifier type.\n+    friend bool operator==(const transaction_identifier<has_witness>& a,\n+                           const transaction_identifier<has_witness>& b) { return a.Compare(b) == 0; }\n+    friend bool operator!=(const transaction_identifier<has_witness>& a,\n+                           const transaction_identifier<has_witness>& b) { return a.Compare(b) != 0; }\n+    friend bool operator<(const transaction_identifier<has_witness>& a,\n+                          const transaction_identifier<has_witness>& b) { return a.Compare(b) < 0; }\n+    constexpr int Compare(const transaction_identifier<has_witness>& other) const { return static_cast<const uint256&>(*this).Compare(other); }\n+};\n+\n+/** Txid commits to all transaction fields except the witness. */\n+using Txid = transaction_identifier<false>;\n+/** Wtxid commits to all transaction fields including the witness. */\n+using Wtxid = transaction_identifier<true>;\n+\n+#endif // BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1287125465",
      "id" : 1287125465,
      "in_reply_to_id" : 1285950696,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Mt_nZ",
      "original_commit_id" : "db8d42b562d24ff01c8ccc6dc9a18630640310f9",
      "original_line" : 54,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : null,
      "pull_request_review_id" : 1567313341,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287125465/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-08T13:31:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287125465",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1287125880"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287125880"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "c1f9c3b28b3d657f56386b9602a33d1a2fc1ed97",
      "created_at" : "2023-08-08T13:32:04Z",
      "diff_hunk" : "@@ -20,7 +21,7 @@ bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer)\n {\n     LOCK(m_mutex);\n \n-    const uint256& hash = tx->GetHash();\n+    const auto& hash = tx->GetHash();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1287125880",
      "id" : 1287125880,
      "in_reply_to_id" : 1279668749,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Mt_t4",
      "original_commit_id" : "76fe2c304201646d63b1b01b397e18a99252a2d9",
      "original_line" : 24,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/txorphanage.cpp",
      "position" : null,
      "pull_request_review_id" : 1567314110,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287125880/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-08T13:32:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287125880",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1287209576"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287209576"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Apart from compare, assignment isn't type safe either. For example:\r\n\r\n```cpp\r\nuint256 b = Txid{};\r\nWtxid a {b};\r\n```\r\n\r\ncompiles.\r\n\r\nSo my preference would be to add a comment that this is allowed, and remove this code that tries to imply the opposite and could be confusing reviewers.\r\n\r\nAlternatively it could be disallowed properly.",
      "commit_id" : "006c48732da3aa0d1845175cb270a77e04ca1d15",
      "created_at" : "2023-08-08T14:27:54Z",
      "diff_hunk" : "@@ -0,0 +1,53 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    // Opposite type w.r.t. `has_witness`\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;\n+\n+public:\n+    transaction_identifier() : uint256{} {}\n+    explicit transaction_identifier(const uint256& other)\n+        : uint256{other} {}\n+\n+    // Delete copy/move constructors/assignment for differing transaction_identifier types.\n+    transaction_identifier(const opposite_type&) = delete;\n+    transaction_identifier(opposite_type&&) = delete;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1287209576",
      "id" : 1287209576,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MuUJo",
      "original_commit_id" : "c1f9c3b28b3d657f56386b9602a33d1a2fc1ed97",
      "original_line" : 27,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : null,
      "pull_request_review_id" : 1567447383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287209576/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-08T15:56:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287209576",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1288311782"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288311782"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Alternatively it could be disallowed properly.\r\n\r\nconverting from `uint256` can now only be done using `{Txid,Wtxid}::FromUint256`. This required less changes then expected so I think that is actually preferable.",
      "commit_id" : "006c48732da3aa0d1845175cb270a77e04ca1d15",
      "created_at" : "2023-08-09T10:59:39Z",
      "diff_hunk" : "@@ -0,0 +1,53 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    // Opposite type w.r.t. `has_witness`\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;\n+\n+public:\n+    transaction_identifier() : uint256{} {}\n+    explicit transaction_identifier(const uint256& other)\n+        : uint256{other} {}\n+\n+    // Delete copy/move constructors/assignment for differing transaction_identifier types.\n+    transaction_identifier(const opposite_type&) = delete;\n+    transaction_identifier(opposite_type&&) = delete;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1288311782",
      "id" : 1288311782,
      "in_reply_to_id" : 1287209576,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MyhPm",
      "original_commit_id" : "c1f9c3b28b3d657f56386b9602a33d1a2fc1ed97",
      "original_line" : 27,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : null,
      "pull_request_review_id" : 1569288662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288311782/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-09T10:59:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288311782",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1288363762"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288363762"
         }
      },
      "author_association" : "MEMBER",
      "body" : "But `uint256 b = Txid{}` is still allowed? Obviously here it is obvious. However, is it obvious when not on a single line?\r\n\r\n```cpp\r\nstruct A{\r\nuint256 a; // wtxid\r\n}\r\nvoid foo(A&a, Txid&t){\r\na=t;\r\n}\r\n```\r\n",
      "commit_id" : "006c48732da3aa0d1845175cb270a77e04ca1d15",
      "created_at" : "2023-08-09T11:50:07Z",
      "diff_hunk" : "@@ -0,0 +1,53 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    // Opposite type w.r.t. `has_witness`\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;\n+\n+public:\n+    transaction_identifier() : uint256{} {}\n+    explicit transaction_identifier(const uint256& other)\n+        : uint256{other} {}\n+\n+    // Delete copy/move constructors/assignment for differing transaction_identifier types.\n+    transaction_identifier(const opposite_type&) = delete;\n+    transaction_identifier(opposite_type&&) = delete;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1288363762",
      "id" : 1288363762,
      "in_reply_to_id" : 1287209576,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Myt7y",
      "original_commit_id" : "c1f9c3b28b3d657f56386b9602a33d1a2fc1ed97",
      "original_line" : 27,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : null,
      "pull_request_review_id" : 1569372971,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288363762/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-09T11:50:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288363762",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1288386480"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288386480"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yea I think this makes sense while we are converting, otherwise I suspect there'll be more churn (similar to the comparisons).\r\n\r\nBut how would you suggest to forbid this?",
      "commit_id" : "006c48732da3aa0d1845175cb270a77e04ca1d15",
      "created_at" : "2023-08-09T12:10:42Z",
      "diff_hunk" : "@@ -0,0 +1,53 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    // Opposite type w.r.t. `has_witness`\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;\n+\n+public:\n+    transaction_identifier() : uint256{} {}\n+    explicit transaction_identifier(const uint256& other)\n+        : uint256{other} {}\n+\n+    // Delete copy/move constructors/assignment for differing transaction_identifier types.\n+    transaction_identifier(const opposite_type&) = delete;\n+    transaction_identifier(opposite_type&&) = delete;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1288386480",
      "id" : 1288386480,
      "in_reply_to_id" : 1287209576,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Myzew",
      "original_commit_id" : "c1f9c3b28b3d657f56386b9602a33d1a2fc1ed97",
      "original_line" : 27,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : null,
      "pull_request_review_id" : 1569408237,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288386480/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-09T12:10:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288386480",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1294386567"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1294386567"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Yea I think this makes sense while we are converting, otherwise I suspect there'll be more churn (similar to the comparisons).\r\n\r\nIt is fine, if reviewers prefer this. Though, I wouldn't call it \"type-safe\" and it would be better to at least add a comment about the trade-offs you are making.\r\n\r\n> But how would you suggest to forbid this?\r\n\r\nIt can be forbidden by not allowing it. If you are asking how to do it in C++, something like this should work:\r\n\r\n```cpp\r\nclass transaction_identifier{\r\n const uint256 m_data;\r\n public:\r\n // TODO implement methods that are allowed\r\n};",
      "commit_id" : "e74152d5b48bdca8dfc2217f35842dbb24b2746c",
      "created_at" : "2023-08-15T09:36:37Z",
      "diff_hunk" : "@@ -0,0 +1,53 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    // Opposite type w.r.t. `has_witness`\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;\n+\n+public:\n+    transaction_identifier() : uint256{} {}\n+    explicit transaction_identifier(const uint256& other)\n+        : uint256{other} {}\n+\n+    // Delete copy/move constructors/assignment for differing transaction_identifier types.\n+    transaction_identifier(const opposite_type&) = delete;\n+    transaction_identifier(opposite_type&&) = delete;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1294386567",
      "id" : 1294386567,
      "in_reply_to_id" : 1287209576,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585NJsWH",
      "original_commit_id" : "c1f9c3b28b3d657f56386b9602a33d1a2fc1ed97",
      "original_line" : 27,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : null,
      "pull_request_review_id" : 1578247597,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1294386567/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-15T09:36:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1294386567",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Maybe mark as draft as long as CI is red?",
      "created_at" : "2023-08-28T13:49:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1695736654",
      "id" : 1695736654,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
      "node_id" : "IC_kwDOABII585lEuNO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1695736654/reactions"
      },
      "updated_at" : "2023-08-28T13:49:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1695736654",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebase pls?",
      "created_at" : "2023-09-28T13:02:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1739120910",
      "id" : 1739120910,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
      "node_id" : "IC_kwDOABII585nqOEO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1739120910/reactions"
      },
      "updated_at" : "2023-09-28T13:02:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1739120910",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1340165185"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1340165185"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a comment to `transaction_identifier` to note that it is not fully type-safe yet due to allowing implicit conversions to uint256 in the interim.",
      "commit_id" : "e74152d5b48bdca8dfc2217f35842dbb24b2746c",
      "created_at" : "2023-09-28T13:32:43Z",
      "diff_hunk" : "@@ -0,0 +1,53 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid). */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+    static constexpr bool negated_has_witness =\n+        std::negation<std::bool_constant<has_witness>>::value;\n+    // Opposite type w.r.t. `has_witness`\n+    using opposite_type =\n+        transaction_identifier<negated_has_witness>;\n+\n+public:\n+    transaction_identifier() : uint256{} {}\n+    explicit transaction_identifier(const uint256& other)\n+        : uint256{other} {}\n+\n+    // Delete copy/move constructors/assignment for differing transaction_identifier types.\n+    transaction_identifier(const opposite_type&) = delete;\n+    transaction_identifier(opposite_type&&) = delete;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1340165185",
      "id" : 1340165185,
      "in_reply_to_id" : 1287209576,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585P4UxB",
      "original_commit_id" : "c1f9c3b28b3d657f56386b9602a33d1a2fc1ed97",
      "original_line" : 27,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : null,
      "pull_request_review_id" : 1648886565,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1340165185/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-28T13:32:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1340165185",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Can someone restart the win64 job? failure is unrelated",
      "created_at" : "2023-09-28T16:32:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1739659669",
      "id" : 1739659669,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
      "node_id" : "IC_kwDOABII585nsRmV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1739659669/reactions"
      },
      "updated_at" : "2023-09-28T16:32:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1739659669",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-10-02T11:04:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1742814760",
      "id" : 1742814760,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
      "node_id" : "IC_kwDOABII585n4T4o",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1742814760/reactions"
      },
      "updated_at" : "2023-10-02T11:04:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1742814760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased",
      "created_at" : "2023-10-02T11:57:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1742882194",
      "id" : 1742882194,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
      "node_id" : "IC_kwDOABII585n4kWS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1742882194/reactions"
      },
      "updated_at" : "2023-10-02T11:57:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1742882194",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1344520624"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344520624"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n                        const uint256& hash{peer->m_wtxid_relay ? uint256{txinfo.tx->GetWitnessHash()} : uint256{txinfo.tx->GetHash()}};\r\n                        CInv inv{MSG_TX, hash};\r\n```\r\nnit, may be slightly more efficient, since the hash within `inv` wouldn't be getting set and then overwritten in the witness case. Also arguably slightly more readable.",
      "commit_id" : "c4c7b6ea9fe2e7ba89a994127073c54af30d6f88",
      "created_at" : "2023-10-03T18:03:51Z",
      "diff_hunk" : "@@ -5694,17 +5695,20 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                     LOCK(tx_relay->m_bloom_filter_mutex);\n \n                     for (const auto& txinfo : vtxinfo) {\n-                        const uint256& hash = peer->m_wtxid_relay ? txinfo.tx->GetWitnessHash() : txinfo.tx->GetHash();\n-                        CInv inv(peer->m_wtxid_relay ? MSG_WTX : MSG_TX, hash);\n-                        tx_relay->m_tx_inventory_to_send.erase(hash);\n+                        CInv inv{MSG_TX, txinfo.tx->GetHash()};\n+                        if (peer->m_wtxid_relay) {\n+                            inv = CInv{MSG_WTX, txinfo.tx->GetWitnessHash()};\n+                        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1344520624",
      "id" : 1344520624,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585QI8Gw",
      "original_commit_id" : "f3132457220d8b232f0e703a5cddcd5e1f41f214",
      "original_line" : 5701,
      "original_position" : 56,
      "original_start_line" : 5698,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1655824516,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344520624/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-04T18:25:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344520624",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2023-10-04T15:07:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1747083117",
      "id" : 1747083117,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
      "node_id" : "IC_kwDOABII585oIl9t",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1747083117/reactions"
      },
      "updated_at" : "2023-10-04T15:07:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1747083117",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48946461?v=4",
         "events_url" : "https://api.github.com/users/ismaelsadeeq/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ismaelsadeeq/followers",
         "following_url" : "https://api.github.com/users/ismaelsadeeq/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ismaelsadeeq/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ismaelsadeeq",
         "id" : 48946461,
         "login" : "ismaelsadeeq",
         "node_id" : "MDQ6VXNlcjQ4OTQ2NDYx",
         "organizations_url" : "https://api.github.com/users/ismaelsadeeq/orgs",
         "received_events_url" : "https://api.github.com/users/ismaelsadeeq/received_events",
         "repos_url" : "https://api.github.com/users/ismaelsadeeq/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ismaelsadeeq/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ismaelsadeeq/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ismaelsadeeq"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1346280977"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346280977"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This method seems to be unused -- remove for now?\r\n\r\n(Perhaps `FromUint256()` has taken its place?)",
      "commit_id" : "c4c7b6ea9fe2e7ba89a994127073c54af30d6f88",
      "created_at" : "2023-10-04T18:15:22Z",
      "diff_hunk" : "@@ -0,0 +1,61 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).\n+ *\n+ * TODO: This type is not fully type-safe yet as we allow implicit conversion\n+ * to uint256. We should make it impossible to implicitly convert from\n+ * transaction_identifier to uint256 (e.g. by making the base class private).\n+ * This should be easy to do once most of the code base has converted to the\n+ * Txid and Wtxid types to avoid churn. */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+public:\n+    transaction_identifier() : uint256{} {}\n+\n+    template <typename Other>\n+    transaction_identifier(const Other& other)\n+        : uint256{other}\n+    {\n+        static_assert(std::is_same_v<Other, transaction_identifier<has_witness>>,\n+                      \"Forbidden copy type\");\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1346280977",
      "id" : 1346280977,
      "line" : 29,
      "node_id" : "PRRC_kwDOABII585QPp4R",
      "original_commit_id" : "f3132457220d8b232f0e703a5cddcd5e1f41f214",
      "original_line" : 29,
      "original_position" : 29,
      "original_start_line" : 23,
      "path" : "src/util/transaction_identifier.h",
      "position" : 29,
      "pull_request_review_id" : 1655824516,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346280977/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 23,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-04T18:25:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346280977",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1346289618"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346289618"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit\r\n```suggestion\r\n        return reinterpret_cast<const transaction_identifier&>(uint);\r\n```",
      "commit_id" : "c4c7b6ea9fe2e7ba89a994127073c54af30d6f88",
      "created_at" : "2023-10-04T18:23:06Z",
      "diff_hunk" : "@@ -0,0 +1,61 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).\n+ *\n+ * TODO: This type is not fully type-safe yet as we allow implicit conversion\n+ * to uint256. We should make it impossible to implicitly convert from\n+ * transaction_identifier to uint256 (e.g. by making the base class private).\n+ * This should be easy to do once most of the code base has converted to the\n+ * Txid and Wtxid types to avoid churn. */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+public:\n+    transaction_identifier() : uint256{} {}\n+\n+    template <typename Other>\n+    transaction_identifier(const Other& other)\n+        : uint256{other}\n+    {\n+        static_assert(std::is_same_v<Other, transaction_identifier<has_witness>>,\n+                      \"Forbidden copy type\");\n+    }\n+\n+    // Allow comparison with the same transaction_identifier type\n+    template<typename Other>\n+    bool operator==(const Other& other) const { return Compare(other) == 0; }\n+    template<typename Other>\n+    bool operator!=(const Other& other) const { return Compare(other) != 0; }\n+    template<typename Other>\n+    bool operator<(const Other& other) const { return Compare(other) < 0; }\n+    template <typename Other>\n+    constexpr int Compare(const Other& other) const\n+    {\n+        if constexpr (std::is_same_v<Other, uint256> || // TODO forbid uint256 comparisons\n+                      std::is_same_v<Other, transaction_identifier<has_witness>>) {\n+            return reinterpret_cast<const uint256&>(*this).Compare(other);\n+        } else {\n+            static_assert(ALWAYS_FALSE<Other>, \"Forbidden comparison type\");\n+        }\n+    }\n+\n+    static transaction_identifier FromUint256(const uint256& uint)\n+    {\n+        auto id{reinterpret_cast<const transaction_identifier&>(uint)};\n+        return id;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1346289618",
      "id" : 1346289618,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585QPr_S",
      "original_commit_id" : "f3132457220d8b232f0e703a5cddcd5e1f41f214",
      "original_line" : 52,
      "original_position" : 52,
      "original_start_line" : 51,
      "path" : "src/util/transaction_identifier.h",
      "position" : null,
      "pull_request_review_id" : 1655824516,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346289618/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-04T18:25:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346289618",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1346319581"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346319581"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "We need a different inv type `MSG_WTX` for wtxids!\r\nAlthough the order could be switched (first create `MSG_WTX` and maybe overwrite that), since wtxid-based relay should be the standard by now and txid the exception.",
      "commit_id" : "c4c7b6ea9fe2e7ba89a994127073c54af30d6f88",
      "created_at" : "2023-10-04T18:51:24Z",
      "diff_hunk" : "@@ -5694,17 +5695,20 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                     LOCK(tx_relay->m_bloom_filter_mutex);\n \n                     for (const auto& txinfo : vtxinfo) {\n-                        const uint256& hash = peer->m_wtxid_relay ? txinfo.tx->GetWitnessHash() : txinfo.tx->GetHash();\n-                        CInv inv(peer->m_wtxid_relay ? MSG_WTX : MSG_TX, hash);\n-                        tx_relay->m_tx_inventory_to_send.erase(hash);\n+                        CInv inv{MSG_TX, txinfo.tx->GetHash()};\n+                        if (peer->m_wtxid_relay) {\n+                            inv = CInv{MSG_WTX, txinfo.tx->GetWitnessHash()};\n+                        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1346319581",
      "id" : 1346319581,
      "in_reply_to_id" : 1344520624,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585QPzTd",
      "original_commit_id" : "f3132457220d8b232f0e703a5cddcd5e1f41f214",
      "original_line" : 5701,
      "original_position" : 56,
      "original_start_line" : 5698,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1658281634,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346319581/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-04T18:51:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346319581",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1348528501"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348528501"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Switched the order",
      "commit_id" : "c4c7b6ea9fe2e7ba89a994127073c54af30d6f88",
      "created_at" : "2023-10-06T10:19:15Z",
      "diff_hunk" : "@@ -5694,17 +5695,20 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                     LOCK(tx_relay->m_bloom_filter_mutex);\n \n                     for (const auto& txinfo : vtxinfo) {\n-                        const uint256& hash = peer->m_wtxid_relay ? txinfo.tx->GetWitnessHash() : txinfo.tx->GetHash();\n-                        CInv inv(peer->m_wtxid_relay ? MSG_WTX : MSG_TX, hash);\n-                        tx_relay->m_tx_inventory_to_send.erase(hash);\n+                        CInv inv{MSG_TX, txinfo.tx->GetHash()};\n+                        if (peer->m_wtxid_relay) {\n+                            inv = CInv{MSG_WTX, txinfo.tx->GetWitnessHash()};\n+                        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1348528501",
      "id" : 1348528501,
      "in_reply_to_id" : 1344520624,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585QYOl1",
      "original_commit_id" : "f3132457220d8b232f0e703a5cddcd5e1f41f214",
      "original_line" : 5701,
      "original_position" : 56,
      "original_start_line" : 5698,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1661553828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348528501/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-06T10:19:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348528501",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1348530453"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348530453"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I would like to keep this to make the allowed copy types explicit. This can be removed once we disallow `uint256 a = Wtxid/Txid{}`.",
      "commit_id" : "c4c7b6ea9fe2e7ba89a994127073c54af30d6f88",
      "created_at" : "2023-10-06T10:21:07Z",
      "diff_hunk" : "@@ -0,0 +1,61 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).\n+ *\n+ * TODO: This type is not fully type-safe yet as we allow implicit conversion\n+ * to uint256. We should make it impossible to implicitly convert from\n+ * transaction_identifier to uint256 (e.g. by making the base class private).\n+ * This should be easy to do once most of the code base has converted to the\n+ * Txid and Wtxid types to avoid churn. */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+public:\n+    transaction_identifier() : uint256{} {}\n+\n+    template <typename Other>\n+    transaction_identifier(const Other& other)\n+        : uint256{other}\n+    {\n+        static_assert(std::is_same_v<Other, transaction_identifier<has_witness>>,\n+                      \"Forbidden copy type\");\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1348530453",
      "id" : 1348530453,
      "in_reply_to_id" : 1346280977,
      "line" : 29,
      "node_id" : "PRRC_kwDOABII585QYPEV",
      "original_commit_id" : "f3132457220d8b232f0e703a5cddcd5e1f41f214",
      "original_line" : 29,
      "original_position" : 29,
      "original_start_line" : 23,
      "path" : "src/util/transaction_identifier.h",
      "position" : 29,
      "pull_request_review_id" : 1661557157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348530453/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 23,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-06T10:21:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348530453",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Rebase pls?\r\n\r\n@glozow review pls?",
      "created_at" : "2023-10-06T10:22:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1750357137",
      "id" : 1750357137,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
      "node_id" : "IC_kwDOABII585oVFSR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 1,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1750357137/reactions"
      },
      "updated_at" : "2023-10-06T10:22:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1750357137",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1348568713"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348568713"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: `ToUint256()` would be more consistent naming\r\n```suggestion\r\n    uint256 ToUint256() const { return reinterpret_cast<const uint256&>(*this); }\r\n```",
      "commit_id" : "f35638f72ce3f6ba103dbdbfa43fb5d1bcf1ea68",
      "created_at" : "2023-10-06T10:54:26Z",
      "diff_hunk" : "@@ -0,0 +1,69 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).\n+ *\n+ * TODO: This type is not fully type-safe yet as we allow implicit conversion\n+ * to uint256. We should make it impossible to implicitly convert from\n+ * transaction_identifier to uint256 (e.g. by making the base class private).\n+ * This should be easy to do once most of the code base has converted to the\n+ * Txid and Wtxid types to avoid churn. */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+public:\n+    transaction_identifier() : uint256{} {}\n+\n+    template <typename Other>\n+    transaction_identifier(const Other& other)\n+        : uint256{other}\n+    {\n+        static_assert(std::is_same_v<Other, transaction_identifier<has_witness>>,\n+                      \"Forbidden copy type\");\n+    }\n+\n+    // Allow comparison with the same transaction_identifier type\n+    template<typename Other>\n+    bool operator==(const Other& other) const { return Compare(other) == 0; }\n+    template<typename Other>\n+    bool operator!=(const Other& other) const { return Compare(other) != 0; }\n+    template<typename Other>\n+    bool operator<(const Other& other) const { return Compare(other) < 0; }\n+    template <typename Other>\n+    constexpr int Compare(const Other& other) const\n+    {\n+        if constexpr (std::is_same_v<Other, uint256> || // TODO forbid uint256 comparisons\n+                      std::is_same_v<Other, transaction_identifier<has_witness>>) {\n+            return reinterpret_cast<const uint256&>(*this).Compare(other);\n+        } else {\n+            static_assert(ALWAYS_FALSE<Other>, \"Forbidden comparison type\");\n+        }\n+    }\n+\n+    uint256 Uint256() const { return reinterpret_cast<const uint256&>(*this); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1348568713",
      "id" : 1348568713,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585QYYaJ",
      "original_commit_id" : "c4c7b6ea9fe2e7ba89a994127073c54af30d6f88",
      "original_line" : 49,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : null,
      "pull_request_review_id" : 1661617241,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348568713/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-06T15:59:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348568713",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1348691235"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348691235"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why not make it private and add a method `operator uint256`, which can be removed easily?\r\n\r\nOtherwise, making it private could hide other member methods as well, making the transition harder?",
      "commit_id" : "c4c7b6ea9fe2e7ba89a994127073c54af30d6f88",
      "created_at" : "2023-10-06T12:59:19Z",
      "diff_hunk" : "@@ -0,0 +1,69 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).\n+ *\n+ * TODO: This type is not fully type-safe yet as we allow implicit conversion\n+ * to uint256. We should make it impossible to implicitly convert from\n+ * transaction_identifier to uint256 (e.g. by making the base class private).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1348691235",
      "id" : 1348691235,
      "line" : 14,
      "node_id" : "PRRC_kwDOABII585QY2Uj",
      "original_commit_id" : "c4c7b6ea9fe2e7ba89a994127073c54af30d6f88",
      "original_line" : 14,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : 14,
      "pull_request_review_id" : 1661811936,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348691235/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-06T13:03:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348691235",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1348693954"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348693954"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Generally, I think it would be good to be as close as possible to the final result, and only have additional (temporary) lines, which are marked for deletion, with a reason for deletion.",
      "commit_id" : "c4c7b6ea9fe2e7ba89a994127073c54af30d6f88",
      "created_at" : "2023-10-06T13:01:46Z",
      "diff_hunk" : "@@ -0,0 +1,69 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).\n+ *\n+ * TODO: This type is not fully type-safe yet as we allow implicit conversion\n+ * to uint256. We should make it impossible to implicitly convert from\n+ * transaction_identifier to uint256 (e.g. by making the base class private).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1348693954",
      "id" : 1348693954,
      "in_reply_to_id" : 1348691235,
      "line" : 14,
      "node_id" : "PRRC_kwDOABII585QY2_C",
      "original_commit_id" : "c4c7b6ea9fe2e7ba89a994127073c54af30d6f88",
      "original_line" : 14,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : 14,
      "pull_request_review_id" : 1661811936,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348693954/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-06T13:03:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348693954",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1348710670"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348710670"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Why not make it private and add a method operator uint256, which can be removed easily?\r\n\r\nI'm getting the following error for this: `Conversion function converting 'transaction_identifier<has_witness>' to its base class 'uint256' will never be used`\r\n\r\n> Otherwise, making it private could hide other member methods as well, making the transition harder?\r\n\r\nWe can just expose the required methods with `using uint256::begin;` etc.",
      "commit_id" : "c4c7b6ea9fe2e7ba89a994127073c54af30d6f88",
      "created_at" : "2023-10-06T13:17:15Z",
      "diff_hunk" : "@@ -0,0 +1,69 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).\n+ *\n+ * TODO: This type is not fully type-safe yet as we allow implicit conversion\n+ * to uint256. We should make it impossible to implicitly convert from\n+ * transaction_identifier to uint256 (e.g. by making the base class private).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1348710670",
      "id" : 1348710670,
      "in_reply_to_id" : 1348691235,
      "line" : 14,
      "node_id" : "PRRC_kwDOABII585QY7EO",
      "original_commit_id" : "c4c7b6ea9fe2e7ba89a994127073c54af30d6f88",
      "original_line" : 14,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : 14,
      "pull_request_review_id" : 1661846282,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348710670/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-06T13:25:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348710670",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1348742789"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348742789"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Given that `has_witness` is only used for templating, what do you think about this approach? I think it's a bit more straightforward, and as a probably not-very-useful benefit, it also allows for adding more txid types when necessary.\r\n\r\n<details>\r\n<summary>git diff on c4c7b6ea9fe2e7ba89a994127073c54af30d6f88</summary>\r\n\r\n```diff\r\ndiff --git a/src/util/transaction_identifier.h b/src/util/transaction_identifier.h\r\nindex b5c0f25093..a845c5c0f9 100644\r\n--- a/src/util/transaction_identifier.h\r\n+++ b/src/util/transaction_identifier.h\r\n@@ -14,7 +14,7 @@\r\n  * transaction_identifier to uint256 (e.g. by making the base class private).\r\n  * This should be easy to do once most of the code base has converted to the\r\n  * Txid and Wtxid types to avoid churn. */\r\n-template <bool has_witness>\r\n+template <typename Derived>\r\n class transaction_identifier : public uint256\r\n {\r\n public:\r\n@@ -24,8 +24,7 @@ public:\r\n     transaction_identifier(const Other& other)\r\n         : uint256{other}\r\n     {\r\n-        static_assert(std::is_same_v<Other, transaction_identifier<has_witness>>,\r\n-                      \"Forbidden copy type\");\r\n+        static_assert(std::is_same_v<Other, Derived>, \"Forbidden copy type\");\r\n     }\r\n \r\n     // Allow comparison with the same transaction_identifier type\r\n@@ -39,7 +38,7 @@ public:\r\n     constexpr int Compare(const Other& other) const\r\n     {\r\n         if constexpr (std::is_same_v<Other, uint256> || // TODO forbid uint256 comparisons\r\n-                      std::is_same_v<Other, transaction_identifier<has_witness>>) {\r\n+                      std::is_same_v<Other, Derived>) {\r\n             return reinterpret_cast<const uint256&>(*this).Compare(other);\r\n         } else {\r\n             static_assert(ALWAYS_FALSE<Other>, \"Forbidden comparison type\");\r\n@@ -49,12 +48,12 @@ public:\r\n     uint256 Uint256() const { return reinterpret_cast<const uint256&>(*this); }\r\n \r\n     template <typename Other>\r\n-    static transaction_identifier FromUint256(const Other& other)\r\n+    static Derived FromUint256(const Other& other)\r\n     {\r\n         // TODO this does not need to be a template function after we disallow\r\n-        // `uint256 a = transaction_identifier<has_witness>{};`\r\n+        // `uint256 a = Derived{};`\r\n         if constexpr (std::is_same_v<Other, uint256>) {\r\n-            return reinterpret_cast<const transaction_identifier&>(other);\r\n+            return reinterpret_cast<const Derived&>(other);\r\n         } else {\r\n             static_assert(ALWAYS_FALSE<Other>, \"FromUint256 only allows uint256\");\r\n         }\r\n@@ -62,8 +61,8 @@ public:\r\n };\r\n \r\n /** Txid commits to all transaction fields except the witness. */\r\n-using Txid = transaction_identifier<false>;\r\n+class Txid : public transaction_identifier<Txid> {};\r\n /** Wtxid commits to all transaction fields including the witness. */\r\n-using Wtxid = transaction_identifier<true>;\r\n+class Wtxid : public transaction_identifier<Wtxid> {};\r\n \r\n #endif // BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\r\n\r\n```\r\n</details>",
      "commit_id" : "f35638f72ce3f6ba103dbdbfa43fb5d1bcf1ea68",
      "created_at" : "2023-10-06T13:44:43Z",
      "diff_hunk" : "@@ -0,0 +1,69 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).\n+ *\n+ * TODO: This type is not fully type-safe yet as we allow implicit conversion\n+ * to uint256. We should make it impossible to implicitly convert from\n+ * transaction_identifier to uint256 (e.g. by making the base class private).\n+ * This should be easy to do once most of the code base has converted to the\n+ * Txid and Wtxid types to avoid churn. */\n+template <bool has_witness>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1348742789",
      "id" : 1348742789,
      "line" : 11,
      "node_id" : "PRRC_kwDOABII585QZC6F",
      "original_commit_id" : "c4c7b6ea9fe2e7ba89a994127073c54af30d6f88",
      "original_line" : 11,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : 11,
      "pull_request_review_id" : 1661617241,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348742789/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-06T15:59:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348742789",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Changed the approach, so that `Wtxid` and `Txid` are now wrapped `uint256`s. A conversion function to `uint256` was added to allow for smoother transition to these types. Once we have converted most of our code we can simply delete the conversion function for full type-safety. @maflcko this is what you suggested quite early on, what do you think?",
      "created_at" : "2023-10-09T12:29:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#issuecomment-1752920533",
      "id" : 1752920533,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
      "node_id" : "IC_kwDOABII585oe3HV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1752920533/reactions"
      },
      "updated_at" : "2023-10-09T12:29:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1752920533",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350244097"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350244097"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "f35638f72ce3f6ba103dbdbfa43fb5d1bcf1ea68",
      "created_at" : "2023-10-09T12:29:48Z",
      "diff_hunk" : "@@ -0,0 +1,69 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).\n+ *\n+ * TODO: This type is not fully type-safe yet as we allow implicit conversion\n+ * to uint256. We should make it impossible to implicitly convert from\n+ * transaction_identifier to uint256 (e.g. by making the base class private).\n+ * This should be easy to do once most of the code base has converted to the\n+ * Txid and Wtxid types to avoid churn. */\n+template <bool has_witness>\n+class transaction_identifier : public uint256\n+{\n+public:\n+    transaction_identifier() : uint256{} {}\n+\n+    template <typename Other>\n+    transaction_identifier(const Other& other)\n+        : uint256{other}\n+    {\n+        static_assert(std::is_same_v<Other, transaction_identifier<has_witness>>,\n+                      \"Forbidden copy type\");\n+    }\n+\n+    // Allow comparison with the same transaction_identifier type\n+    template<typename Other>\n+    bool operator==(const Other& other) const { return Compare(other) == 0; }\n+    template<typename Other>\n+    bool operator!=(const Other& other) const { return Compare(other) != 0; }\n+    template<typename Other>\n+    bool operator<(const Other& other) const { return Compare(other) < 0; }\n+    template <typename Other>\n+    constexpr int Compare(const Other& other) const\n+    {\n+        if constexpr (std::is_same_v<Other, uint256> || // TODO forbid uint256 comparisons\n+                      std::is_same_v<Other, transaction_identifier<has_witness>>) {\n+            return reinterpret_cast<const uint256&>(*this).Compare(other);\n+        } else {\n+            static_assert(ALWAYS_FALSE<Other>, \"Forbidden comparison type\");\n+        }\n+    }\n+\n+    uint256 Uint256() const { return reinterpret_cast<const uint256&>(*this); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350244097",
      "id" : 1350244097,
      "in_reply_to_id" : 1348568713,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585QexcB",
      "original_commit_id" : "c4c7b6ea9fe2e7ba89a994127073c54af30d6f88",
      "original_line" : 49,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : null,
      "pull_request_review_id" : 1664345366,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350244097/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-09T12:29:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350244097",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350244999"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350244999"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I prefer the bool, allowing for more txid types would trivial in any case.",
      "commit_id" : "f35638f72ce3f6ba103dbdbfa43fb5d1bcf1ea68",
      "created_at" : "2023-10-09T12:30:38Z",
      "diff_hunk" : "@@ -0,0 +1,69 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).\n+ *\n+ * TODO: This type is not fully type-safe yet as we allow implicit conversion\n+ * to uint256. We should make it impossible to implicitly convert from\n+ * transaction_identifier to uint256 (e.g. by making the base class private).\n+ * This should be easy to do once most of the code base has converted to the\n+ * Txid and Wtxid types to avoid churn. */\n+template <bool has_witness>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350244999",
      "id" : 1350244999,
      "in_reply_to_id" : 1348742789,
      "line" : 11,
      "node_id" : "PRRC_kwDOABII585QexqH",
      "original_commit_id" : "c4c7b6ea9fe2e7ba89a994127073c54af30d6f88",
      "original_line" : 11,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : 11,
      "pull_request_review_id" : 1664346836,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350244999/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-09T12:30:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350244999",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350253886"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350253886"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: missing `const`?",
      "commit_id" : "f35638f72ce3f6ba103dbdbfa43fb5d1bcf1ea68",
      "created_at" : "2023-10-09T12:38:48Z",
      "diff_hunk" : "@@ -0,0 +1,71 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).*/\n+template <bool has_witness>\n+class transaction_identifier\n+{\n+    uint256 m_wrapped;\n+\n+    transaction_identifier(const uint256& wrapped) : m_wrapped{wrapped} {}\n+\n+    template <typename Other>\n+    constexpr int Compare(const Other& other) const\n+    {\n+        if constexpr (std::is_same_v<Other, uint256>) {\n+            // TODO: Comparisons with uint256 should be disallowed once we have\n+            // converted most of the code to using the new txid types.\n+            return m_wrapped.Compare(other);\n+        } else if constexpr (std::is_same_v<Other, transaction_identifier<has_witness>>) {\n+            return m_wrapped.Compare(other.m_wrapped);\n+        } else {\n+            static_assert(ALWAYS_FALSE<Other>, \"Forbidden comparison type\");\n+        }\n+    }\n+\n+public:\n+    transaction_identifier() : m_wrapped{} {}\n+\n+    template <typename Other>\n+    bool operator==(const Other& other) const { return Compare(other) == 0; }\n+    template <typename Other>\n+    bool operator!=(const Other& other) const { return Compare(other) != 0; }\n+    template <typename Other>\n+    bool operator<(const Other& other) const { return Compare(other) < 0; }\n+\n+    uint256 ToUint256() const { return m_wrapped; }\n+    static transaction_identifier FromUint256(const uint256& id) { return transaction_identifier{id}; }\n+\n+    /** Wrapped `uint256` methods. */\n+    constexpr bool IsNull() { return m_wrapped.IsNull(); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350253886",
      "id" : 1350253886,
      "line" : 46,
      "node_id" : "PRRC_kwDOABII585Qez0-",
      "original_commit_id" : "f35638f72ce3f6ba103dbdbfa43fb5d1bcf1ea68",
      "original_line" : 46,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : 46,
      "pull_request_review_id" : 1664361404,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350253886/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-09T12:39:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350253886",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350254408"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350254408"
         }
      },
      "author_association" : "MEMBER",
      "body" : "unrelated nit: Would be fun to see what happens if you returned `std::byte*` here?",
      "commit_id" : "f35638f72ce3f6ba103dbdbfa43fb5d1bcf1ea68",
      "created_at" : "2023-10-09T12:39:16Z",
      "diff_hunk" : "@@ -0,0 +1,71 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).*/\n+template <bool has_witness>\n+class transaction_identifier\n+{\n+    uint256 m_wrapped;\n+\n+    transaction_identifier(const uint256& wrapped) : m_wrapped{wrapped} {}\n+\n+    template <typename Other>\n+    constexpr int Compare(const Other& other) const\n+    {\n+        if constexpr (std::is_same_v<Other, uint256>) {\n+            // TODO: Comparisons with uint256 should be disallowed once we have\n+            // converted most of the code to using the new txid types.\n+            return m_wrapped.Compare(other);\n+        } else if constexpr (std::is_same_v<Other, transaction_identifier<has_witness>>) {\n+            return m_wrapped.Compare(other.m_wrapped);\n+        } else {\n+            static_assert(ALWAYS_FALSE<Other>, \"Forbidden comparison type\");\n+        }\n+    }\n+\n+public:\n+    transaction_identifier() : m_wrapped{} {}\n+\n+    template <typename Other>\n+    bool operator==(const Other& other) const { return Compare(other) == 0; }\n+    template <typename Other>\n+    bool operator!=(const Other& other) const { return Compare(other) != 0; }\n+    template <typename Other>\n+    bool operator<(const Other& other) const { return Compare(other) < 0; }\n+\n+    uint256 ToUint256() const { return m_wrapped; }\n+    static transaction_identifier FromUint256(const uint256& id) { return transaction_identifier{id}; }\n+\n+    /** Wrapped `uint256` methods. */\n+    constexpr bool IsNull() { return m_wrapped.IsNull(); }\n+    constexpr void SetNull() { m_wrapped.SetNull(); }\n+    std::string GetHex() const { return m_wrapped.GetHex(); }\n+    std::string ToString() const { return m_wrapped.ToString(); }\n+    constexpr const unsigned char* data() const { return m_wrapped.data(); }\n+    constexpr const unsigned char* begin() const { return m_wrapped.begin(); }\n+    constexpr const unsigned char* end() const { return m_wrapped.end(); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350254408",
      "id" : 1350254408,
      "line" : 52,
      "node_id" : "PRRC_kwDOABII585Qez9I",
      "original_commit_id" : "f35638f72ce3f6ba103dbdbfa43fb5d1bcf1ea68",
      "original_line" : 52,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : 52,
      "pull_request_review_id" : 1664361404,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350254408/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-09T12:39:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350254408",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350398367"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350398367"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The lifetime violation probably originates here?\r\n\r\n",
      "commit_id" : "68b9c2f268e7a924f4c9182ab1b99c30af86f5d7",
      "created_at" : "2023-10-09T14:39:52Z",
      "diff_hunk" : "@@ -0,0 +1,71 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).*/\n+template <bool has_witness>\n+class transaction_identifier\n+{\n+    uint256 m_wrapped;\n+\n+    transaction_identifier(const uint256& wrapped) : m_wrapped{wrapped} {}\n+\n+    template <typename Other>\n+    constexpr int Compare(const Other& other) const\n+    {\n+        if constexpr (std::is_same_v<Other, uint256>) {\n+            // TODO: Comparisons with uint256 should be disallowed once we have\n+            // converted most of the code to using the new txid types.\n+            return m_wrapped.Compare(other);\n+        } else if constexpr (std::is_same_v<Other, transaction_identifier<has_witness>>) {\n+            return m_wrapped.Compare(other.m_wrapped);\n+        } else {\n+            static_assert(ALWAYS_FALSE<Other>, \"Forbidden comparison type\");\n+        }\n+    }\n+\n+public:\n+    transaction_identifier() : m_wrapped{} {}\n+\n+    template <typename Other>\n+    bool operator==(const Other& other) const { return Compare(other) == 0; }\n+    template <typename Other>\n+    bool operator!=(const Other& other) const { return Compare(other) != 0; }\n+    template <typename Other>\n+    bool operator<(const Other& other) const { return Compare(other) < 0; }\n+\n+    uint256 ToUint256() const { return m_wrapped; }\n+    static transaction_identifier FromUint256(const uint256& id) { return transaction_identifier{id}; }\n+\n+    /** Wrapped `uint256` methods. */\n+    constexpr bool IsNull() { return m_wrapped.IsNull(); }\n+    constexpr void SetNull() { m_wrapped.SetNull(); }\n+    std::string GetHex() const { return m_wrapped.GetHex(); }\n+    std::string ToString() const { return m_wrapped.ToString(); }\n+    constexpr const unsigned char* data() const { return m_wrapped.data(); }\n+    constexpr const unsigned char* begin() const { return m_wrapped.begin(); }\n+    constexpr const unsigned char* end() const { return m_wrapped.end(); }\n+    template <typename Stream> void Serialize(Stream& s) const { m_wrapped.Serialize(s); }\n+    template <typename Stream> void Unserialize(Stream& s) { m_wrapped.Unserialize(s); }\n+\n+    /** Conversion function to `uint256`.\n+     *\n+     * Note: new code should use `ToUint256`.\n+     *\n+     * TODO: This should be removed once the majority of the code has switched\n+     * to using the Txid and Wtxid types. Until then it makes for a smoother\n+     * transition to allow this conversion. */\n+    operator const uint256&() const { return m_wrapped; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350398367",
      "id" : 1350398367,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585QfXGf",
      "original_commit_id" : "f35638f72ce3f6ba103dbdbfa43fb5d1bcf1ea68",
      "original_line" : 63,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : null,
      "pull_request_review_id" : 1664624725,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350398367/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-09T14:39:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350398367",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350462852"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350462852"
         }
      },
      "author_association" : "MEMBER",
      "body" : "TIL\r\n\r\n```c++\r\nclass foo {};\r\n\r\nfoo get_foo() { return foo{}; }\r\n\r\nvoid main() {\r\n    const foo& f = get_foo();\r\n}\r\n```\r\n\r\nAssigning to a **const reference** extends the lifetime of a temporary object (in this case the result from `get_foo`) to the end of the function.\r\n\r\nHowever, this is not the case when using conversion functions:\r\n\r\n```c++\r\nclass foo {\r\n    std::string m_str;\r\npublic:\r\n    operator const std::string&() const { return m_str; }\r\n};\r\n\r\nfoo get_foo() { return foo{}; }\r\n\r\nvoid main() {\r\n    const std::string& f = get_foo(); // this is a big no no\r\n}\r\n```\r\n",
      "commit_id" : "68b9c2f268e7a924f4c9182ab1b99c30af86f5d7",
      "created_at" : "2023-10-09T15:32:34Z",
      "diff_hunk" : "@@ -0,0 +1,71 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).*/\n+template <bool has_witness>\n+class transaction_identifier\n+{\n+    uint256 m_wrapped;\n+\n+    transaction_identifier(const uint256& wrapped) : m_wrapped{wrapped} {}\n+\n+    template <typename Other>\n+    constexpr int Compare(const Other& other) const\n+    {\n+        if constexpr (std::is_same_v<Other, uint256>) {\n+            // TODO: Comparisons with uint256 should be disallowed once we have\n+            // converted most of the code to using the new txid types.\n+            return m_wrapped.Compare(other);\n+        } else if constexpr (std::is_same_v<Other, transaction_identifier<has_witness>>) {\n+            return m_wrapped.Compare(other.m_wrapped);\n+        } else {\n+            static_assert(ALWAYS_FALSE<Other>, \"Forbidden comparison type\");\n+        }\n+    }\n+\n+public:\n+    transaction_identifier() : m_wrapped{} {}\n+\n+    template <typename Other>\n+    bool operator==(const Other& other) const { return Compare(other) == 0; }\n+    template <typename Other>\n+    bool operator!=(const Other& other) const { return Compare(other) != 0; }\n+    template <typename Other>\n+    bool operator<(const Other& other) const { return Compare(other) < 0; }\n+\n+    uint256 ToUint256() const { return m_wrapped; }\n+    static transaction_identifier FromUint256(const uint256& id) { return transaction_identifier{id}; }\n+\n+    /** Wrapped `uint256` methods. */\n+    constexpr bool IsNull() { return m_wrapped.IsNull(); }\n+    constexpr void SetNull() { m_wrapped.SetNull(); }\n+    std::string GetHex() const { return m_wrapped.GetHex(); }\n+    std::string ToString() const { return m_wrapped.ToString(); }\n+    constexpr const unsigned char* data() const { return m_wrapped.data(); }\n+    constexpr const unsigned char* begin() const { return m_wrapped.begin(); }\n+    constexpr const unsigned char* end() const { return m_wrapped.end(); }\n+    template <typename Stream> void Serialize(Stream& s) const { m_wrapped.Serialize(s); }\n+    template <typename Stream> void Unserialize(Stream& s) { m_wrapped.Unserialize(s); }\n+\n+    /** Conversion function to `uint256`.\n+     *\n+     * Note: new code should use `ToUint256`.\n+     *\n+     * TODO: This should be removed once the majority of the code has switched\n+     * to using the Txid and Wtxid types. Until then it makes for a smoother\n+     * transition to allow this conversion. */\n+    operator const uint256&() const { return m_wrapped; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350462852",
      "id" : 1350462852,
      "in_reply_to_id" : 1350398367,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Qfm2E",
      "original_commit_id" : "f35638f72ce3f6ba103dbdbfa43fb5d1bcf1ea68",
      "original_line" : 63,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : null,
      "pull_request_review_id" : 1664796829,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350462852/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-09T15:32:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350462852",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350466888"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350466888"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You can try (for fun) `LIEFTIMEBOUND`, to see if it catches this? In any case, you'll probably have to return a copy here, regardless of the approach?",
      "commit_id" : "68b9c2f268e7a924f4c9182ab1b99c30af86f5d7",
      "created_at" : "2023-10-09T15:36:41Z",
      "diff_hunk" : "@@ -0,0 +1,71 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).*/\n+template <bool has_witness>\n+class transaction_identifier\n+{\n+    uint256 m_wrapped;\n+\n+    transaction_identifier(const uint256& wrapped) : m_wrapped{wrapped} {}\n+\n+    template <typename Other>\n+    constexpr int Compare(const Other& other) const\n+    {\n+        if constexpr (std::is_same_v<Other, uint256>) {\n+            // TODO: Comparisons with uint256 should be disallowed once we have\n+            // converted most of the code to using the new txid types.\n+            return m_wrapped.Compare(other);\n+        } else if constexpr (std::is_same_v<Other, transaction_identifier<has_witness>>) {\n+            return m_wrapped.Compare(other.m_wrapped);\n+        } else {\n+            static_assert(ALWAYS_FALSE<Other>, \"Forbidden comparison type\");\n+        }\n+    }\n+\n+public:\n+    transaction_identifier() : m_wrapped{} {}\n+\n+    template <typename Other>\n+    bool operator==(const Other& other) const { return Compare(other) == 0; }\n+    template <typename Other>\n+    bool operator!=(const Other& other) const { return Compare(other) != 0; }\n+    template <typename Other>\n+    bool operator<(const Other& other) const { return Compare(other) < 0; }\n+\n+    uint256 ToUint256() const { return m_wrapped; }\n+    static transaction_identifier FromUint256(const uint256& id) { return transaction_identifier{id}; }\n+\n+    /** Wrapped `uint256` methods. */\n+    constexpr bool IsNull() { return m_wrapped.IsNull(); }\n+    constexpr void SetNull() { m_wrapped.SetNull(); }\n+    std::string GetHex() const { return m_wrapped.GetHex(); }\n+    std::string ToString() const { return m_wrapped.ToString(); }\n+    constexpr const unsigned char* data() const { return m_wrapped.data(); }\n+    constexpr const unsigned char* begin() const { return m_wrapped.begin(); }\n+    constexpr const unsigned char* end() const { return m_wrapped.end(); }\n+    template <typename Stream> void Serialize(Stream& s) const { m_wrapped.Serialize(s); }\n+    template <typename Stream> void Unserialize(Stream& s) { m_wrapped.Unserialize(s); }\n+\n+    /** Conversion function to `uint256`.\n+     *\n+     * Note: new code should use `ToUint256`.\n+     *\n+     * TODO: This should be removed once the majority of the code has switched\n+     * to using the Txid and Wtxid types. Until then it makes for a smoother\n+     * transition to allow this conversion. */\n+    operator const uint256&() const { return m_wrapped; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350466888",
      "id" : 1350466888,
      "in_reply_to_id" : 1350398367,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Qfn1I",
      "original_commit_id" : "f35638f72ce3f6ba103dbdbfa43fb5d1bcf1ea68",
      "original_line" : 63,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : null,
      "pull_request_review_id" : 1664808659,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350466888/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-09T15:37:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350466888",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350468366"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350468366"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It now returns a copy, which results in a few compiler errors/warnings but those were trivial to fix.",
      "commit_id" : "68b9c2f268e7a924f4c9182ab1b99c30af86f5d7",
      "created_at" : "2023-10-09T15:38:08Z",
      "diff_hunk" : "@@ -0,0 +1,71 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).*/\n+template <bool has_witness>\n+class transaction_identifier\n+{\n+    uint256 m_wrapped;\n+\n+    transaction_identifier(const uint256& wrapped) : m_wrapped{wrapped} {}\n+\n+    template <typename Other>\n+    constexpr int Compare(const Other& other) const\n+    {\n+        if constexpr (std::is_same_v<Other, uint256>) {\n+            // TODO: Comparisons with uint256 should be disallowed once we have\n+            // converted most of the code to using the new txid types.\n+            return m_wrapped.Compare(other);\n+        } else if constexpr (std::is_same_v<Other, transaction_identifier<has_witness>>) {\n+            return m_wrapped.Compare(other.m_wrapped);\n+        } else {\n+            static_assert(ALWAYS_FALSE<Other>, \"Forbidden comparison type\");\n+        }\n+    }\n+\n+public:\n+    transaction_identifier() : m_wrapped{} {}\n+\n+    template <typename Other>\n+    bool operator==(const Other& other) const { return Compare(other) == 0; }\n+    template <typename Other>\n+    bool operator!=(const Other& other) const { return Compare(other) != 0; }\n+    template <typename Other>\n+    bool operator<(const Other& other) const { return Compare(other) < 0; }\n+\n+    uint256 ToUint256() const { return m_wrapped; }\n+    static transaction_identifier FromUint256(const uint256& id) { return transaction_identifier{id}; }\n+\n+    /** Wrapped `uint256` methods. */\n+    constexpr bool IsNull() { return m_wrapped.IsNull(); }\n+    constexpr void SetNull() { m_wrapped.SetNull(); }\n+    std::string GetHex() const { return m_wrapped.GetHex(); }\n+    std::string ToString() const { return m_wrapped.ToString(); }\n+    constexpr const unsigned char* data() const { return m_wrapped.data(); }\n+    constexpr const unsigned char* begin() const { return m_wrapped.begin(); }\n+    constexpr const unsigned char* end() const { return m_wrapped.end(); }\n+    template <typename Stream> void Serialize(Stream& s) const { m_wrapped.Serialize(s); }\n+    template <typename Stream> void Unserialize(Stream& s) { m_wrapped.Unserialize(s); }\n+\n+    /** Conversion function to `uint256`.\n+     *\n+     * Note: new code should use `ToUint256`.\n+     *\n+     * TODO: This should be removed once the majority of the code has switched\n+     * to using the Txid and Wtxid types. Until then it makes for a smoother\n+     * transition to allow this conversion. */\n+    operator const uint256&() const { return m_wrapped; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350468366",
      "id" : 1350468366,
      "in_reply_to_id" : 1350398367,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585QfoMO",
      "original_commit_id" : "f35638f72ce3f6ba103dbdbfa43fb5d1bcf1ea68",
      "original_line" : 63,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : null,
      "pull_request_review_id" : 1664812960,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350468366/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-09T15:38:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350468366",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350470366"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350470366"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "68b9c2f268e7a924f4c9182ab1b99c30af86f5d7",
      "created_at" : "2023-10-09T15:40:05Z",
      "diff_hunk" : "@@ -0,0 +1,71 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).*/\n+template <bool has_witness>\n+class transaction_identifier\n+{\n+    uint256 m_wrapped;\n+\n+    transaction_identifier(const uint256& wrapped) : m_wrapped{wrapped} {}\n+\n+    template <typename Other>\n+    constexpr int Compare(const Other& other) const\n+    {\n+        if constexpr (std::is_same_v<Other, uint256>) {\n+            // TODO: Comparisons with uint256 should be disallowed once we have\n+            // converted most of the code to using the new txid types.\n+            return m_wrapped.Compare(other);\n+        } else if constexpr (std::is_same_v<Other, transaction_identifier<has_witness>>) {\n+            return m_wrapped.Compare(other.m_wrapped);\n+        } else {\n+            static_assert(ALWAYS_FALSE<Other>, \"Forbidden comparison type\");\n+        }\n+    }\n+\n+public:\n+    transaction_identifier() : m_wrapped{} {}\n+\n+    template <typename Other>\n+    bool operator==(const Other& other) const { return Compare(other) == 0; }\n+    template <typename Other>\n+    bool operator!=(const Other& other) const { return Compare(other) != 0; }\n+    template <typename Other>\n+    bool operator<(const Other& other) const { return Compare(other) < 0; }\n+\n+    uint256 ToUint256() const { return m_wrapped; }\n+    static transaction_identifier FromUint256(const uint256& id) { return transaction_identifier{id}; }\n+\n+    /** Wrapped `uint256` methods. */\n+    constexpr bool IsNull() { return m_wrapped.IsNull(); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350470366",
      "id" : 1350470366,
      "in_reply_to_id" : 1350253886,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Qfore",
      "original_commit_id" : "f35638f72ce3f6ba103dbdbfa43fb5d1bcf1ea68",
      "original_line" : 46,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : null,
      "pull_request_review_id" : 1664818651,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350470366/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-09T15:40:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350470366",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350474747"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350474747"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> You can try (for fun) LIEFTIMEBOUND, to see if it catches this? \r\n\r\nIt actually does, good stuff!",
      "commit_id" : "68b9c2f268e7a924f4c9182ab1b99c30af86f5d7",
      "created_at" : "2023-10-09T15:44:17Z",
      "diff_hunk" : "@@ -0,0 +1,71 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).*/\n+template <bool has_witness>\n+class transaction_identifier\n+{\n+    uint256 m_wrapped;\n+\n+    transaction_identifier(const uint256& wrapped) : m_wrapped{wrapped} {}\n+\n+    template <typename Other>\n+    constexpr int Compare(const Other& other) const\n+    {\n+        if constexpr (std::is_same_v<Other, uint256>) {\n+            // TODO: Comparisons with uint256 should be disallowed once we have\n+            // converted most of the code to using the new txid types.\n+            return m_wrapped.Compare(other);\n+        } else if constexpr (std::is_same_v<Other, transaction_identifier<has_witness>>) {\n+            return m_wrapped.Compare(other.m_wrapped);\n+        } else {\n+            static_assert(ALWAYS_FALSE<Other>, \"Forbidden comparison type\");\n+        }\n+    }\n+\n+public:\n+    transaction_identifier() : m_wrapped{} {}\n+\n+    template <typename Other>\n+    bool operator==(const Other& other) const { return Compare(other) == 0; }\n+    template <typename Other>\n+    bool operator!=(const Other& other) const { return Compare(other) != 0; }\n+    template <typename Other>\n+    bool operator<(const Other& other) const { return Compare(other) < 0; }\n+\n+    uint256 ToUint256() const { return m_wrapped; }\n+    static transaction_identifier FromUint256(const uint256& id) { return transaction_identifier{id}; }\n+\n+    /** Wrapped `uint256` methods. */\n+    constexpr bool IsNull() { return m_wrapped.IsNull(); }\n+    constexpr void SetNull() { m_wrapped.SetNull(); }\n+    std::string GetHex() const { return m_wrapped.GetHex(); }\n+    std::string ToString() const { return m_wrapped.ToString(); }\n+    constexpr const unsigned char* data() const { return m_wrapped.data(); }\n+    constexpr const unsigned char* begin() const { return m_wrapped.begin(); }\n+    constexpr const unsigned char* end() const { return m_wrapped.end(); }\n+    template <typename Stream> void Serialize(Stream& s) const { m_wrapped.Serialize(s); }\n+    template <typename Stream> void Unserialize(Stream& s) { m_wrapped.Unserialize(s); }\n+\n+    /** Conversion function to `uint256`.\n+     *\n+     * Note: new code should use `ToUint256`.\n+     *\n+     * TODO: This should be removed once the majority of the code has switched\n+     * to using the Txid and Wtxid types. Until then it makes for a smoother\n+     * transition to allow this conversion. */\n+    operator const uint256&() const { return m_wrapped; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350474747",
      "id" : 1350474747,
      "in_reply_to_id" : 1350398367,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Qfpv7",
      "original_commit_id" : "f35638f72ce3f6ba103dbdbfa43fb5d1bcf1ea68",
      "original_line" : 63,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : null,
      "pull_request_review_id" : 1664830832,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350474747/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-09T15:44:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350474747",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350484394"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350484394"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This fails to compile, not sure how many locations would need touching.",
      "commit_id" : "68b9c2f268e7a924f4c9182ab1b99c30af86f5d7",
      "created_at" : "2023-10-09T15:53:44Z",
      "diff_hunk" : "@@ -0,0 +1,71 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).*/\n+template <bool has_witness>\n+class transaction_identifier\n+{\n+    uint256 m_wrapped;\n+\n+    transaction_identifier(const uint256& wrapped) : m_wrapped{wrapped} {}\n+\n+    template <typename Other>\n+    constexpr int Compare(const Other& other) const\n+    {\n+        if constexpr (std::is_same_v<Other, uint256>) {\n+            // TODO: Comparisons with uint256 should be disallowed once we have\n+            // converted most of the code to using the new txid types.\n+            return m_wrapped.Compare(other);\n+        } else if constexpr (std::is_same_v<Other, transaction_identifier<has_witness>>) {\n+            return m_wrapped.Compare(other.m_wrapped);\n+        } else {\n+            static_assert(ALWAYS_FALSE<Other>, \"Forbidden comparison type\");\n+        }\n+    }\n+\n+public:\n+    transaction_identifier() : m_wrapped{} {}\n+\n+    template <typename Other>\n+    bool operator==(const Other& other) const { return Compare(other) == 0; }\n+    template <typename Other>\n+    bool operator!=(const Other& other) const { return Compare(other) != 0; }\n+    template <typename Other>\n+    bool operator<(const Other& other) const { return Compare(other) < 0; }\n+\n+    uint256 ToUint256() const { return m_wrapped; }\n+    static transaction_identifier FromUint256(const uint256& id) { return transaction_identifier{id}; }\n+\n+    /** Wrapped `uint256` methods. */\n+    constexpr bool IsNull() { return m_wrapped.IsNull(); }\n+    constexpr void SetNull() { m_wrapped.SetNull(); }\n+    std::string GetHex() const { return m_wrapped.GetHex(); }\n+    std::string ToString() const { return m_wrapped.ToString(); }\n+    constexpr const unsigned char* data() const { return m_wrapped.data(); }\n+    constexpr const unsigned char* begin() const { return m_wrapped.begin(); }\n+    constexpr const unsigned char* end() const { return m_wrapped.end(); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1350484394",
      "id" : 1350484394,
      "in_reply_to_id" : 1350254408,
      "line" : 52,
      "node_id" : "PRRC_kwDOABII585QfsGq",
      "original_commit_id" : "f35638f72ce3f6ba103dbdbfa43fb5d1bcf1ea68",
      "original_line" : 52,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/util/transaction_identifier.h",
      "position" : 52,
      "pull_request_review_id" : 1664856723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350484394/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-09T15:53:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350484394",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1351874234"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1351874234"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Question about this todo: are we expecting to change everything to Txid or Wtxid? I imagine that something like `m_recent_confirmed_transactions` will always hold both?",
      "commit_id" : "68b9c2f268e7a924f4c9182ab1b99c30af86f5d7",
      "created_at" : "2023-10-10T08:42:37Z",
      "diff_hunk" : "@@ -0,0 +1,71 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).*/\n+template <bool has_witness>\n+class transaction_identifier\n+{\n+    uint256 m_wrapped;\n+\n+    transaction_identifier(const uint256& wrapped) : m_wrapped{wrapped} {}\n+\n+    template <typename Other>\n+    constexpr int Compare(const Other& other) const\n+    {\n+        if constexpr (std::is_same_v<Other, uint256>) {\n+            // TODO: Comparisons with uint256 should be disallowed once we have\n+            // converted most of the code to using the new txid types.\n+            return m_wrapped.Compare(other);\n+        } else if constexpr (std::is_same_v<Other, transaction_identifier<has_witness>>) {\n+            return m_wrapped.Compare(other.m_wrapped);\n+        } else {\n+            static_assert(ALWAYS_FALSE<Other>, \"Forbidden comparison type\");\n+        }\n+    }\n+\n+public:\n+    transaction_identifier() : m_wrapped{} {}\n+\n+    template <typename Other>\n+    bool operator==(const Other& other) const { return Compare(other) == 0; }\n+    template <typename Other>\n+    bool operator!=(const Other& other) const { return Compare(other) != 0; }\n+    template <typename Other>\n+    bool operator<(const Other& other) const { return Compare(other) < 0; }\n+\n+    uint256 ToUint256() const { return m_wrapped; }\n+    static transaction_identifier FromUint256(const uint256& id) { return transaction_identifier{id}; }\n+\n+    /** Wrapped `uint256` methods. */\n+    constexpr bool IsNull() const { return m_wrapped.IsNull(); }\n+    constexpr void SetNull() { m_wrapped.SetNull(); }\n+    std::string GetHex() const { return m_wrapped.GetHex(); }\n+    std::string ToString() const { return m_wrapped.ToString(); }\n+    constexpr const unsigned char* data() const { return m_wrapped.data(); }\n+    constexpr const unsigned char* begin() const { return m_wrapped.begin(); }\n+    constexpr const unsigned char* end() const { return m_wrapped.end(); }\n+    template <typename Stream> void Serialize(Stream& s) const { m_wrapped.Serialize(s); }\n+    template <typename Stream> void Unserialize(Stream& s) { m_wrapped.Unserialize(s); }\n+\n+    /** Conversion function to `uint256`.\n+     *\n+     * Note: new code should use `ToUint256`.\n+     *\n+     * TODO: This should be removed once the majority of the code has switched\n+     * to using the Txid and Wtxid types. Until then it makes for a smoother",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1351874234",
      "id" : 1351874234,
      "line" : 61,
      "node_id" : "PRRC_kwDOABII585Qk_a6",
      "original_commit_id" : "c0e7f86c66265ea16a4f65eb21fc1ed96914392f",
      "original_line" : 61,
      "original_position" : 61,
      "original_start_line" : 60,
      "path" : "src/util/transaction_identifier.h",
      "position" : 61,
      "pull_request_review_id" : 1666839910,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1351874234/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 60,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-10T09:22:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1351874234",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1352221345"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352221345"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> are we expecting to change everything to Txid or Wtxid?\r\n\r\nI think almost everything using uint256 for transaction ids will be converted (including GenTxid which can just be a `std::variant<Txid, Wtxid>`) but there are probably a few exceptions.\r\n\r\nI don't expect `m_recent_confirmed_transactions` or `m_recent_rejects` etc. to change as the underlying data structure (bloom filter) does not deal with txids, it simply accepts some bytes (`Span<const uint8_t>`). So converting the new types to a span (e.g. using `ToUint256`) should be fine.",
      "commit_id" : "68b9c2f268e7a924f4c9182ab1b99c30af86f5d7",
      "created_at" : "2023-10-10T10:51:20Z",
      "diff_hunk" : "@@ -0,0 +1,71 @@\n+#ifndef BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+#define BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\n+\n+#include <uint256.h>\n+#include <util/types.h>\n+\n+#include <type_traits>\n+\n+/** transaction_identifier represents the two canonical transaction identifier\n+ * types (txid, wtxid).*/\n+template <bool has_witness>\n+class transaction_identifier\n+{\n+    uint256 m_wrapped;\n+\n+    transaction_identifier(const uint256& wrapped) : m_wrapped{wrapped} {}\n+\n+    template <typename Other>\n+    constexpr int Compare(const Other& other) const\n+    {\n+        if constexpr (std::is_same_v<Other, uint256>) {\n+            // TODO: Comparisons with uint256 should be disallowed once we have\n+            // converted most of the code to using the new txid types.\n+            return m_wrapped.Compare(other);\n+        } else if constexpr (std::is_same_v<Other, transaction_identifier<has_witness>>) {\n+            return m_wrapped.Compare(other.m_wrapped);\n+        } else {\n+            static_assert(ALWAYS_FALSE<Other>, \"Forbidden comparison type\");\n+        }\n+    }\n+\n+public:\n+    transaction_identifier() : m_wrapped{} {}\n+\n+    template <typename Other>\n+    bool operator==(const Other& other) const { return Compare(other) == 0; }\n+    template <typename Other>\n+    bool operator!=(const Other& other) const { return Compare(other) != 0; }\n+    template <typename Other>\n+    bool operator<(const Other& other) const { return Compare(other) < 0; }\n+\n+    uint256 ToUint256() const { return m_wrapped; }\n+    static transaction_identifier FromUint256(const uint256& id) { return transaction_identifier{id}; }\n+\n+    /** Wrapped `uint256` methods. */\n+    constexpr bool IsNull() const { return m_wrapped.IsNull(); }\n+    constexpr void SetNull() { m_wrapped.SetNull(); }\n+    std::string GetHex() const { return m_wrapped.GetHex(); }\n+    std::string ToString() const { return m_wrapped.ToString(); }\n+    constexpr const unsigned char* data() const { return m_wrapped.data(); }\n+    constexpr const unsigned char* begin() const { return m_wrapped.begin(); }\n+    constexpr const unsigned char* end() const { return m_wrapped.end(); }\n+    template <typename Stream> void Serialize(Stream& s) const { m_wrapped.Serialize(s); }\n+    template <typename Stream> void Unserialize(Stream& s) { m_wrapped.Unserialize(s); }\n+\n+    /** Conversion function to `uint256`.\n+     *\n+     * Note: new code should use `ToUint256`.\n+     *\n+     * TODO: This should be removed once the majority of the code has switched\n+     * to using the Txid and Wtxid types. Until then it makes for a smoother",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28107#discussion_r1352221345",
      "id" : 1352221345,
      "in_reply_to_id" : 1351874234,
      "line" : 61,
      "node_id" : "PRRC_kwDOABII585QmUKh",
      "original_commit_id" : "c0e7f86c66265ea16a4f65eb21fc1ed96914392f",
      "original_line" : 61,
      "original_position" : 61,
      "original_start_line" : 60,
      "path" : "src/util/transaction_identifier.h",
      "position" : 61,
      "pull_request_review_id" : 1667278372,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352221345/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 60,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-10T10:51:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352221345",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   }
]
