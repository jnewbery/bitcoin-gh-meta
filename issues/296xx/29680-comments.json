[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29680).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [josibake](https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2107527748) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30072](https://github.com/bitcoin/bitcoin/pull/30072) (refactor prep for package rbf by instagibbs)\n* [#30019](https://github.com/bitcoin/bitcoin/pull/30019) (test: use assert_greater_than util by kevkevinpal)\n* [#29415](https://github.com/bitcoin/bitcoin/pull/29415) (Broadcast own transactions only via short-lived Tor or I2P connections by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2024-03-20T09:23:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2009106316",
      "id" : 2009106316,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5853wIeM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2009106316/reactions"
      },
      "updated_at" : "2024-05-24T00:20:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2009106316",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--85328a0da195eb286784d51f73fa0af9-->\n\nð§ At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/22873809948</sub>",
      "created_at" : "2024-03-20T10:20:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2009210671",
      "id" : 2009210671,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5853wh8v",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2009210671/reactions"
      },
      "updated_at" : "2024-03-20T10:20:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2009210671",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Draft until I've gotten some more feedback on the approach.",
      "created_at" : "2024-03-26T15:15:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2020711793",
      "id" : 2020711793,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5854cZ1x",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2020711793/reactions"
      },
      "updated_at" : "2024-03-26T15:15:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2020711793",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37949128?v=4",
         "events_url" : "https://api.github.com/users/Eunovo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Eunovo/followers",
         "following_url" : "https://api.github.com/users/Eunovo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Eunovo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Eunovo",
         "id" : 37949128,
         "login" : "Eunovo",
         "node_id" : "MDQ6VXNlcjM3OTQ5MTI4",
         "organizations_url" : "https://api.github.com/users/Eunovo/orgs",
         "received_events_url" : "https://api.github.com/users/Eunovo/received_events",
         "repos_url" : "https://api.github.com/users/Eunovo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Eunovo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Eunovo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Eunovo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "cc @achow101?",
      "created_at" : "2024-03-27T12:12:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2022620497",
      "id" : 2022620497,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5854jr1R",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2022620497/reactions"
      },
      "updated_at" : "2024-03-27T12:12:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2022620497",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-03-27T16:59:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2023316334",
      "id" : 2023316334,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5854mVtu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2023316334/reactions"
      },
      "updated_at" : "2024-03-27T16:59:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2023316334",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm actually wondering now if it would be sufficient to just have the `MemPoolRejectReason` include the replacement txid for replacements, and the conflicting block hash for conflicts. If our tx is in the mempool, we should get these notifications when it is removed which I think would be enough without having to be looking for the parents or looking to see if we have any descendants?",
      "created_at" : "2024-03-27T17:50:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2023420688",
      "id" : 2023420688,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5854mvMQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2023420688/reactions"
      },
      "updated_at" : "2024-03-27T17:50:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2023420688",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> I'm actually wondering now if it would be sufficient to just have the `MemPoolRejectReason` include the replacement txid for replacements, and the conflicting block hash for conflicts. If our tx is in the mempool, we should get these notifications when it is removed which I think would be enough without having to be looking for the parents or looking to see if we have any descendants?\r\n\r\n@achow101 I think this makes sense. Once we add conflicting block hash for conflicts then we can safely mark wallet tx as conflicted which should solve the issue. What would we still need the replacement txid for? \r\n\r\nEDIT\r\nOn second thought, I have realized that the wallet might not get the Conflict `MemPoolRemovalReason` for its tx. The wallet tx may be kicked out of the Mempool early due to replacement so when `CtxMemPool::removeForBlock` is called, the wallet tx will no longer be in the Mempool. Therefore, the issue is not completely solved by adding conflicting block hash to Conflict `MemPoolRemovalReason`, But adding it is still useful for handling cases where a new block is received that conflicts with wallet tx.\r\n\r\nWhen you say \"replacement txid\", are you referring to the txid of the tx causing the wallet tx to kicked out? if so, I believe the current fix implemented here does exactly what you're describing, See https://github.com/bitcoin/bitcoin/pull/29680/commits/635e2e47908cbc443604e388b5a823958e5b5e30",
      "created_at" : "2024-03-28T06:24:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2024487530",
      "id" : 2024487530,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5854qzpq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2024487530/reactions"
      },
      "updated_at" : "2024-03-28T06:39:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2024487530",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37949128?v=4",
         "events_url" : "https://api.github.com/users/Eunovo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Eunovo/followers",
         "following_url" : "https://api.github.com/users/Eunovo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Eunovo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Eunovo",
         "id" : 37949128,
         "login" : "Eunovo",
         "node_id" : "MDQ6VXNlcjM3OTQ5MTI4",
         "organizations_url" : "https://api.github.com/users/Eunovo/orgs",
         "received_events_url" : "https://api.github.com/users/Eunovo/received_events",
         "repos_url" : "https://api.github.com/users/Eunovo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Eunovo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Eunovo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Eunovo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> When you say \"replacement txid\", are you referring to the txid of the tx causing the wallet tx to kicked out?\r\n\r\nYes, we need the replacement txid for instances where the tx is removed by replacement rather than a block conflict.\r\n\r\n> if so, I believe the current fix implemented here does exactly what you're describing, See https://github.com/bitcoin/bitcoin/commit/635e2e47908cbc443604e388b5a823958e5b5e30\r\n\r\nIt appears to also be watching for replacements of those replacements too, and I think that is unnecessary.",
      "created_at" : "2024-03-28T17:24:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2025743476",
      "id" : 2025743476,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5854vmR0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2025743476/reactions"
      },
      "updated_at" : "2024-03-28T17:24:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2025743476",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> It appears to also be watching for replacements of those replacements too, and I think that is unnecessary.\r\n\r\nThanks @achow101. Yes, I added that when I realized that if the replacement is also replaced then the check in the `BlockConnected` callback will fail to mark the wallet tx as conflicted. Unless for some reason, the replacement cannot be replaced?\r\n",
      "created_at" : "2024-03-28T19:44:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2025983054",
      "id" : 2025983054,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5854wgxO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2025983054/reactions"
      },
      "updated_at" : "2024-03-28T19:44:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2025983054",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37949128?v=4",
         "events_url" : "https://api.github.com/users/Eunovo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Eunovo/followers",
         "following_url" : "https://api.github.com/users/Eunovo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Eunovo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Eunovo",
         "id" : 37949128,
         "login" : "Eunovo",
         "node_id" : "MDQ6VXNlcjM3OTQ5MTI4",
         "organizations_url" : "https://api.github.com/users/Eunovo/orgs",
         "received_events_url" : "https://api.github.com/users/Eunovo/received_events",
         "repos_url" : "https://api.github.com/users/Eunovo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Eunovo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Eunovo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Eunovo"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Rebased https://github.com/bitcoin/bitcoin/commit/532d25fb536da953db2b7a6ce7405a4b105c1a56 to https://github.com/bitcoin/bitcoin/pull/29680/commits/8ee9629b51eed250f7b5a8a6644b40ca725f3990 \r\n\r\n> It appears to also be watching for replacements of those replacements too, and I think that is unnecessary.\r\n\r\n@achow101 I took this out because the new replacement is not guaranteed to conflict with the original wallet transaction\r\n\r\nAdded `conflicting_block_hash` and `conflicting_block_height` to `ConflictReason` in https://github.com/bitcoin/bitcoin/pull/29680/commits/8b5d3d72fa54b9e35507739f53d158f5f46f05ac and \r\nused this information to mark wallet tx has conflicted in https://github.com/bitcoin/bitcoin/pull/29680/commits/8ee9629b51eed250f7b5a8a6644b40ca725f3990.\r\n\r\nI had to use `RecursiveUpdateTxState` directly in https://github.com/bitcoin/bitcoin/pull/29680/commits/8ee9629b51eed250f7b5a8a6644b40ca725f3990 because `CWallet::MarkConflicted` checks that the conflicting block height is not more than the `m_last_block_processed` by the wallet but `transactionRemovedFromMempool` is triggered before `blockConnected` so the wallet hasn't had a chance to process the block causing the conflict notification. I had to force the wallet txs update. _I wonder what the repercussions for doing this are_.\r\n\r\nCurious to see what others think.\r\n\r\nEDIT\r\n\r\nThis PR now modifies `AddToWalletIfInovlingMe` to do this for all `TxStateBlockConflicted` transactions. See https://github.com/bitcoin/bitcoin/pull/29680/commits/e868b2d92dd040930ea18a3dcebb81468dc711b9\r\n\r\nNow marking this PR as ready for review. ",
      "created_at" : "2024-04-09T16:52:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2045654198",
      "id" : 2045654198,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII58557jS2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2045654198/reactions"
      },
      "updated_at" : "2024-04-10T17:37:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2045654198",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37949128?v=4",
         "events_url" : "https://api.github.com/users/Eunovo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Eunovo/followers",
         "following_url" : "https://api.github.com/users/Eunovo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Eunovo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Eunovo",
         "id" : 37949128,
         "login" : "Eunovo",
         "node_id" : "MDQ6VXNlcjM3OTQ5MTI4",
         "organizations_url" : "https://api.github.com/users/Eunovo/orgs",
         "received_events_url" : "https://api.github.com/users/Eunovo/received_events",
         "repos_url" : "https://api.github.com/users/Eunovo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Eunovo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Eunovo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Eunovo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--85328a0da195eb286784d51f73fa0af9-->\n\nð§ At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/23623413738</sub>",
      "created_at" : "2024-04-09T18:43:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2045856223",
      "id" : 2045856223,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII58558Unf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2045856223/reactions"
      },
      "updated_at" : "2024-04-09T18:43:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2045856223",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Putting in draft while I fix falling test",
      "created_at" : "2024-04-21T03:43:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2067879382",
      "id" : 2067879382,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5857QVXW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2067879382/reactions"
      },
      "updated_at" : "2024-04-21T03:43:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2067879382",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37949128?v=4",
         "events_url" : "https://api.github.com/users/Eunovo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Eunovo/followers",
         "following_url" : "https://api.github.com/users/Eunovo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Eunovo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Eunovo",
         "id" : 37949128,
         "login" : "Eunovo",
         "node_id" : "MDQ6VXNlcjM3OTQ5MTI4",
         "organizations_url" : "https://api.github.com/users/Eunovo/orgs",
         "received_events_url" : "https://api.github.com/users/Eunovo/received_events",
         "repos_url" : "https://api.github.com/users/Eunovo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Eunovo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Eunovo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Eunovo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nSeems like a reasonable approach to the problem described in #29435 , will dig in more. Using a variant as a replacement for the Enum seems a bit odd at first glance and requires a lot of duplicate code for each struct.  Perhaps another approach could be a class for `RemovalReason`, which contains the Enum as a field and then uses a std::variant to hold the data needed by the wallet, if any. Would be more extensible, and then the to string method could be defined once on the class. Special logic per reason can also be handled all in the same place by switching on the Enum value and taking appropriate action per reason.\r\n\r\nEDIT: this approach might also make it easier to do the first commit as a scripted-diff",
      "created_at" : "2024-05-13T13:05:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2107527748",
      "id" : 2107527748,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5859nlJE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2107527748/reactions"
      },
      "updated_at" : "2024-05-13T13:08:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2107527748",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "NONE",
      "body" : ">  Perhaps another approach could be a class for `RemovalReason`, which contains the Enum as a field and then uses a std::variant to hold the data needed by the wallet, if any. Would be more extensible, and then the to string method could be defined once on the class. Special logic per reason can also be handled all in the same place by switching on the Enum value and taking appropriate action per reason.\r\n\r\nThanks for the review @josibake. Will this approach still require the definition of structs to hold each data for each reason?",
      "created_at" : "2024-05-13T14:25:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2107736166",
      "id" : 2107736166,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5859oYBm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2107736166/reactions"
      },
      "updated_at" : "2024-05-13T14:38:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2107736166",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37949128?v=4",
         "events_url" : "https://api.github.com/users/Eunovo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Eunovo/followers",
         "following_url" : "https://api.github.com/users/Eunovo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Eunovo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Eunovo",
         "id" : 37949128,
         "login" : "Eunovo",
         "node_id" : "MDQ6VXNlcjM3OTQ5MTI4",
         "organizations_url" : "https://api.github.com/users/Eunovo/orgs",
         "received_events_url" : "https://api.github.com/users/Eunovo/received_events",
         "repos_url" : "https://api.github.com/users/Eunovo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Eunovo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Eunovo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Eunovo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Will this approach still require the definition of structs to hold each data for each reason?\r\n\r\nI don't think so: only the Conflict and Replace reasons need extra data, and from what I understand it can only be one reason at any given time. Given that, you could have a field on the new class for removal data which is a std::variant of the possible data types. For example, `std::variant<CTransactionRef, BlockData>`, where block data holds the block hash and block number.",
      "created_at" : "2024-05-13T14:39:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2107797730",
      "id" : 2107797730,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5859onDi",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2107797730/reactions"
      },
      "updated_at" : "2024-05-13T14:39:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2107797730",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> I don't think so: only the Conflict and Replace reasons need extra data, and from what I understand it can only be one reason at any given time. Given that, you could have a field on the new class for removal data which is a std::variant of the possible data types. For example, `std::variant<CTransactionRef, BlockData>`, where block data holds the block hash and block number.\r\n\r\n@josibake Makes sense but I'm skeptical about how this affects the removal reason usage. For example, you can just define `SizeLimitReason()` right now, but with this approach, you'd have to do  `RemovalReason(RemovalReasons::SIZE_LIMIT)` and this new approach still requires the use of `std::variant`, so, I'm worried that the current code in https://github.com/bitcoin/bitcoin/pull/29680/commits/59ee08e43255bf0e96d1fab8eb243a4b8b7864c2 will still be more clear.\r\nWDYT? ",
      "created_at" : "2024-05-13T15:11:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2107935583",
      "id" : 2107935583,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5859pItf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2107935583/reactions"
      },
      "updated_at" : "2024-05-13T15:11:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2107935583",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37949128?v=4",
         "events_url" : "https://api.github.com/users/Eunovo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Eunovo/followers",
         "following_url" : "https://api.github.com/users/Eunovo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Eunovo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Eunovo",
         "id" : 37949128,
         "login" : "Eunovo",
         "node_id" : "MDQ6VXNlcjM3OTQ5MTI4",
         "organizations_url" : "https://api.github.com/users/Eunovo/orgs",
         "received_events_url" : "https://api.github.com/users/Eunovo/received_events",
         "repos_url" : "https://api.github.com/users/Eunovo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Eunovo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Eunovo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Eunovo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The benefits I see are we can keep the existing Enum and code for converting the Enum to a string. This would also allow updating the function signatures with a scripted-diff, which makes larger refactors like this easier to verify as a reviewer.\r\n\r\nIt also feels like a more natural fit to me and my gut feeling is that having a class to encapsulate the removal reasons and necessary data will be more maintainable and extensible going forward.",
      "created_at" : "2024-05-13T15:54:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2108083971",
      "id" : 2108083971,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5859ps8D",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2108083971/reactions"
      },
      "updated_at" : "2024-05-13T15:54:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2108083971",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> The benefits I see are we can keep the existing Enum and code for converting the Enum to a string. This would also allow updating the function signatures with a scripted-diff, which makes larger refactors like this easier to verify as a reviewer.\r\n> \r\n> It also feels like a more natural fit to me and my gut feeling is that having a class to encapsulate the removal reasons and necessary data will be more maintainable and extensible going forward.\r\n\r\n@josibake Makes sense. I'll create a RemovalReason class",
      "created_at" : "2024-05-13T18:47:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2108566561",
      "id" : 2108566561,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5859riwh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2108566561/reactions"
      },
      "updated_at" : "2024-05-13T18:47:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2108566561",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37949128?v=4",
         "events_url" : "https://api.github.com/users/Eunovo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Eunovo/followers",
         "following_url" : "https://api.github.com/users/Eunovo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Eunovo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Eunovo",
         "id" : 37949128,
         "login" : "Eunovo",
         "node_id" : "MDQ6VXNlcjM3OTQ5MTI4",
         "organizations_url" : "https://api.github.com/users/Eunovo/orgs",
         "received_events_url" : "https://api.github.com/users/Eunovo/received_events",
         "repos_url" : "https://api.github.com/users/Eunovo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Eunovo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Eunovo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Eunovo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Given that, you could have a field on the new class for removal data which is a std::variant of the possible data types. For example, `std::variant<CTransactionRef, BlockData>`, where block data holds the block hash and block number.\r\n\r\nThe drawback of a separate data field is that there is no longer a guarantee that data accompanying the reason is always present when the reason is set, and always absent when it is not set. So it is possible for code to only partially initialize the RemovalReason class or initialize it in an inconsistent state.\r\n\r\nIn general I like the idea of replacing enums with variants for more safety, and to be able to express rules about state in type definitions. But variants in c++ are more awkward than sum types in other languages, and I did not look into this specific case, so maybe the tradeoffs in this case are not worth it.",
      "created_at" : "2024-05-13T20:10:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2108712060",
      "id" : 2108712060,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5859sGR8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2108712060/reactions"
      },
      "updated_at" : "2024-05-13T20:10:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2108712060",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The drawback of a separate data field is that there is no longer a guarantee that data accompanying the reason is always present when the reason is set, and always absent when it is not set. So it is possible for code to only partially initialize the RemovalReason class or initialize it in an inconsistent state.\r\n\r\nSeems easily addressed with a constructor, no? Something like:\r\n\r\n```c++\r\nclass RemovedReason {\r\npublic:\r\n    MemPoolRemovalReason m_reason;\r\n    std::variant<std::monostate, CTxReference, BlockData> m_extra_data;\r\n\r\n    // Constructor for reasons that don't require extra data\r\n    RemovedReason(MemPoolRemovalReason r) : reason(r) {\r\n        if (requiresExtraData(r)) {\r\n            throw std::invalid_argument(\"reason X requires data Y etc\");\r\n        }\r\n    }\r\n\r\n    // Constructor needing CTxRef\r\n    RemovedReason(RemovalReason r, const CTxRef& data) : reason(r), extra_data(data) {\r\n        if (!IsA(r)) {\r\n            throw std::invalid_argument(\"CTxRef is required for reason A, got bla\");\r\n        }\r\n    }\r\n\r\n    // Constructor needing BlockData\r\n    RemovedReason(RemovalReason r, const BlockData& data) : reason(r), extra_data(data) {\r\n        if (!IsB(r)) {\r\n            throw std::invalid_argument(\"BlockData is required for reason B, got bla\");\r\n        }\r\n    }\r\n```\r\n\r\nMaybe this is starting to be more complicated than just having a struct per each reason? But I'd still argue this is a better approach in that it keeps all the logic for mempool removal reasons in one place and avoids duplicating code on each struct.",
      "created_at" : "2024-05-14T08:21:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2109571959",
      "id" : 2109571959,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5859vYN3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2109571959/reactions"
      },
      "updated_at" : "2024-05-14T08:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2109571959",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Maybe this is starting to be more complicated than just having a struct per each reason? But I'd still argue this is a better approach in that it keeps all the logic for mempool removal reasons in one place and avoids duplicating code on each struct.\r\n\r\nSame thing I was thinking. Using the class right now looks like it will make things more complicated. Maybe we should leave the class for a future change where it becomes necessary? @josibake @ryanofsky ",
      "created_at" : "2024-05-14T14:26:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2110388198",
      "id" : 2110388198,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5859yffm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2110388198/reactions"
      },
      "updated_at" : "2024-05-14T14:26:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2110388198",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37949128?v=4",
         "events_url" : "https://api.github.com/users/Eunovo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Eunovo/followers",
         "following_url" : "https://api.github.com/users/Eunovo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Eunovo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Eunovo",
         "id" : 37949128,
         "login" : "Eunovo",
         "node_id" : "MDQ6VXNlcjM3OTQ5MTI4",
         "organizations_url" : "https://api.github.com/users/Eunovo/orgs",
         "received_events_url" : "https://api.github.com/users/Eunovo/received_events",
         "repos_url" : "https://api.github.com/users/Eunovo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Eunovo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Eunovo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Eunovo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Seems easily addressed with a constructor, no? Something like:\r\n\r\nYes, but those are manual constraints that you are writing by hand rather than automatic constraints expressed implicitly in the data definition. Depending on the constructors it may also only provide runtime checking rather than compile-time checking like in your example. And if the struct is mutable could allow invalid representations of state after construction.\r\n\r\nI don't know what is best in this particular case, I would just stand up for:\r\n\r\n```c++\r\nstruct MyState1 { int data; };\r\nstruct MyState2 { bool flag; };\r\nstruct MyState3 {};\r\nusing MyState = std::variant<MyState1, MyState2, MyState3>;\r\n```\r\n\r\nas a good alternative to:\r\n\r\n```c++\r\nenum class MyState {\r\n  STATE1,\r\n  STATE2,\r\n  STATE3,\r\n};\r\n\r\nclass MyData {\r\n  MyState m_state,\r\n  // ... more data and methods...\r\n};\r\n```\r\n\r\nin many cases.\r\n\r\n> Maybe we should leave the class for a future change where it becomes necessary?\r\n\r\nI'm not sure the answer to this, but it is probably worth experimenting and choosing the approach that seems simplest.\r\n\r\n",
      "created_at" : "2024-05-14T14:45:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2110436529",
      "id" : 2110436529,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5859yrSx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2110436529/reactions"
      },
      "updated_at" : "2024-05-14T14:46:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2110436529",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Yes, but those are manual constraints that you are writing by hand rather than automatic constraints expressed implicitly in the data definition\r\n\r\nFair point, in that bugs could be introduced by someone not writing these pre-checks correctly / efficiently. I'll admit I'm not fully convinced that the struct per state approach isn't going to be harder to maintain / extend in the future, but given that I haven't convinced you guys on that point and you have convinced me there is an advantage per the struct per state approach, I'll retract my suggestion we change it :smile: ",
      "created_at" : "2024-05-14T14:57:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2110464755",
      "id" : 2110464755,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII5859yyLz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2110464755/reactions"
      },
      "updated_at" : "2024-05-14T14:57:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2110464755",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-05-15T01:30:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2111419053",
      "id" : 2111419053,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII58592bKt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2111419053/reactions"
      },
      "updated_at" : "2024-05-15T01:30:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2111419053",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1606962259"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606962259"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```\r\n node0 2024-05-20T11:47:13.485435Z [httpworker.2] [rpc/request.cpp:222] [parse] [rpc] ThreadRPCServer method=walletcreatefundedpsbt user=__cookie__ \r\n test  2024-05-20T11:47:13.486000Z TestFramework (ERROR): JSONRPC error \r\n                                   Traceback (most recent call last):\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 132, in main\r\n                                       self.run_test()\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/wallet_conflicts.py\", line 41, in run_test\r\n                                       self.test_unknown_parent_conflict()\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/wallet_conflicts.py\", line 486, in test_unknown_parent_conflict\r\n                                       conflict_psbt = def_wallet.walletcreatefundedpsbt(inputs=[gp_utxo], outputs=[{def_wallet.getnewaddress(): 2}], fee_rate=parent_feerate*3)[\"psbt\"]\r\n                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/coverage.py\", line 50, in __call__\r\n                                       return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/authproxy.py\", line 129, in __call__\r\n                                       raise JSONRPCException(response['error'], status)\r\n                                   test_framework.authproxy.JSONRPCException: Invalid amount (-3)\r\n```\r\n\r\nhttps://cirrus-ci.com/task/5869965947961344?logs=ci#L3151",
      "commit_id" : "7da8f981eb122735d7c1e5e600c543b45a8925f7",
      "created_at" : "2024-05-20T15:57:49Z",
      "diff_hunk" : "@@ -424,5 +426,79 @@ def test_descendants_with_mempool_conflicts(self):\n         bob.unloadwallet()\n         carol.unloadwallet()\n \n+    def test_unknown_parent_conflict(self):\n+        self.log.info(\"Test that a conflict with parent not belonging to the wallet causes in-wallet children to also conflict\")\n+\n+        self.nodes[0].createwallet(\"parent_conflict\")\n+        self.nodes[1].createwallet(\"external_wallet_conflict\")\n+        wallet = self.nodes[0].get_wallet_rpc(\"parent_conflict\")\n+        external_wallet = self.nodes[1].get_wallet_rpc(\"external_wallet_conflict\")\n+        def_wallet = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        child_txids = []\n+        for current_wallet in [wallet, external_wallet]:\n+            # one utxo to target wallet\n+            addr = current_wallet.getnewaddress()\n+            addr_desc = current_wallet.getaddressinfo(addr)[\"desc\"]\n+            def_wallet.sendtoaddress(addr, 10)\n+\n+            self.generate(self.nodes[0], 1)\n+\n+            utxo = current_wallet.listunspent()[0]\n+\n+            # Make utxo in grandparent that will be double spent\n+            gp_addr = def_wallet.getnewaddress()\n+            gp_txid = def_wallet.sendtoaddress(gp_addr, 7)\n+            gp_utxo = {\"txid\": gp_txid, \"vout\": find_vout_for_address(self.nodes[0], gp_txid, gp_addr)}\n+\n+            self.generate(self.nodes[0], 1)\n+            assert_equal(self.nodes[0].getrawmempool(), [])\n+            assert_equal(self.nodes[1].getrawmempool(), [])\n+\n+            # make unconfirmed parent tx\n+            parent_addr = def_wallet.getnewaddress()\n+            parent_txid = def_wallet.send(outputs=[{parent_addr: 5}], inputs=[gp_utxo])[\"txid\"]\n+            parent_utxo = {\"txid\": parent_txid, \"vout\": find_vout_for_address(self.nodes[0], parent_txid, parent_addr)}\n+            parent_me = self.nodes[0].getmempoolentry(parent_txid)\n+            parent_feerate = parent_me[\"fees\"][\"base\"] * 100000000 / parent_me[\"vsize\"]\n+            self.nodes[1].sendrawtransaction(def_wallet.gettransaction(parent_txid)[\"hex\"])\n+\n+            assert_equal(self.nodes[0].getrawmempool(), [parent_txid])\n+            assert_equal(self.nodes[1].getrawmempool(), [parent_txid])\n+\n+            # make child tx that has one input belonging to target wallet, and one input not\n+            psbt = def_wallet.walletcreatefundedpsbt(inputs=[utxo, parent_utxo], outputs=[{def_wallet.getnewaddress(): 13}], solving_data={\"descriptors\":[addr_desc]})[\"psbt\"]\n+            psbt = def_wallet.walletprocesspsbt(psbt)[\"psbt\"]\n+            psbt_proc = current_wallet.walletprocesspsbt(psbt)\n+            psbt = psbt_proc[\"psbt\"]\n+            assert_equal(psbt_proc[\"complete\"], True)\n+            child_txid = self.nodes[0].sendrawtransaction(psbt_proc[\"hex\"])\n+            self.nodes[1].sendrawtransaction(psbt_proc[\"hex\"])\n+            child_txids.append(child_txid)\n+\n+            assert_equal(set(self.nodes[0].getrawmempool()), {child_txid, parent_txid})\n+            assert_equal(set(self.nodes[1].getrawmempool()), {child_txid, parent_txid})\n+\n+            assert_equal(def_wallet.gettransaction(parent_txid)[\"confirmations\"], 0)\n+            assert_equal(current_wallet.gettransaction(child_txid)[\"confirmations\"], 0)\n+\n+            # Make a conflict spending parent\n+            conflict_psbt = def_wallet.walletcreatefundedpsbt(inputs=[gp_utxo], outputs=[{def_wallet.getnewaddress(): 2}], fee_rate=parent_feerate*3)[\"psbt\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1606962259",
      "id" : 1606962259,
      "line" : 486,
      "node_id" : "PRRC_kwDOABII585fyExT",
      "original_commit_id" : "7da8f981eb122735d7c1e5e600c543b45a8925f7",
      "original_line" : 486,
      "original_position" : 79,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : 79,
      "pull_request_review_id" : 2066523735,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606962259/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-20T15:57:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606962259",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1609556427"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609556427"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in https://github.com/bitcoin/bitcoin/pull/29680/commits/7debac0b09faf051229a4ead0b57e6658e00ac11 (\"Change MemPoolRemovalReason to variant type\"):\r\n\r\nnit: I think it's more correct to leave this as \"Reason.\" \"Reasons\" implies a single transaction can have multiple reasons for being removed at the same time.",
      "commit_id" : "f7ec03ebe5d186007d49b40cadf6bd58eacd3646",
      "created_at" : "2024-05-22T08:46:23Z",
      "diff_hunk" : "@@ -5,20 +5,61 @@\n #ifndef BITCOIN_KERNEL_MEMPOOL_REMOVAL_REASON_H\n #define BITCOIN_KERNEL_MEMPOOL_REMOVAL_REASON_H\n \n+#include <primitives/transaction.h>\n+#include <uint256.h>\n+\n #include <string>\n+#include <variant>\n \n-/** Reason why a transaction was removed from the mempool,\n+/** Reasons why a transaction was removed from the mempool,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1609556427",
      "id" : 1609556427,
      "line" : 14,
      "node_id" : "PRRC_kwDOABII585f7-HL",
      "original_commit_id" : "7debac0b09faf051229a4ead0b57e6658e00ac11",
      "original_line" : 14,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/kernel/mempool_removal_reason.h",
      "position" : 11,
      "pull_request_review_id" : 2070549155,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609556427/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-22T10:02:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609556427",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1609568747"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609568747"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in https://github.com/bitcoin/bitcoin/pull/29680/commits/7debac0b09faf051229a4ead0b57e6658e00ac11 (\"Change MemPoolRemovalReason to variant type\"):\r\n\r\nCan remove this line.",
      "commit_id" : "f7ec03ebe5d186007d49b40cadf6bd58eacd3646",
      "created_at" : "2024-05-22T08:54:43Z",
      "diff_hunk" : "@@ -19,7 +19,7 @@\n #include <unordered_map>\n #include <utility>\n \n-std::string RemovalReasonToString(const MemPoolRemovalReason& r) noexcept;\n+// std::string RemovalReasonToString(const MemPoolRemovalReason& r) noexcept;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1609568747",
      "id" : 1609568747,
      "line" : 22,
      "node_id" : "PRRC_kwDOABII585f8BHr",
      "original_commit_id" : "7debac0b09faf051229a4ead0b57e6658e00ac11",
      "original_line" : 22,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validationinterface.cpp",
      "position" : 5,
      "pull_request_review_id" : 2070549155,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609568747/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-22T10:02:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609568747",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1609571510"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609571510"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in https://github.com/bitcoin/bitcoin/pull/29680/commits/7debac0b09faf051229a4ead0b57e6658e00ac11 (\"Change MemPoolRemovalReason to variant type\"):\r\n\r\nAFAICT, these are unused (I was able to compile this commit fine without them). Maybe leftover from a different approach?",
      "commit_id" : "f7ec03ebe5d186007d49b40cadf6bd58eacd3646",
      "created_at" : "2024-05-22T08:56:31Z",
      "diff_hunk" : "@@ -25,7 +26,8 @@ class BlockValidationState;\n class CBlock;\n class CBlockIndex;\n struct CBlockLocator;\n-enum class MemPoolRemovalReason;\n+class CValidationInterface;\n+class CScheduler;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1609571510",
      "id" : 1609571510,
      "line" : 30,
      "node_id" : "PRRC_kwDOABII585f8By2",
      "original_commit_id" : "7debac0b09faf051229a4ead0b57e6658e00ac11",
      "original_line" : 30,
      "original_position" : 14,
      "original_start_line" : 29,
      "path" : "src/validationinterface.h",
      "position" : 14,
      "pull_request_review_id" : 2070549155,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609571510/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 29,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-22T10:02:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609571510",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1609583688"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609583688"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in https://github.com/bitcoin/bitcoin/pull/29680/commits/7debac0b09faf051229a4ead0b57e6658e00ac11 (\"Change MemPoolRemovalReason to variant type\"):\r\n\r\nDon't we also need to `#include kernel/mempool_removal_reasons.h` , for Include What You Use (IWYU)? I'll admit, I'm totally sure what our conventions are on this. cc @TheCharlatan or @maflcko ",
      "commit_id" : "f7ec03ebe5d186007d49b40cadf6bd58eacd3646",
      "created_at" : "2024-05-22T09:05:06Z",
      "diff_hunk" : "@@ -56,7 +56,6 @@ class CKeyID;\n class CPubKey;\n class Coin;\n class SigningProvider;\n-enum class MemPoolRemovalReason;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1609583688",
      "id" : 1609583688,
      "line" : 59,
      "node_id" : "PRRC_kwDOABII585f8ExI",
      "original_commit_id" : "7debac0b09faf051229a4ead0b57e6658e00ac11",
      "original_line" : 59,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 4,
      "pull_request_review_id" : 2070549155,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609583688/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-22T10:02:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609583688",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1609617090"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609617090"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in https://github.com/bitcoin/bitcoin/pull/29680/commits/7debac0b09faf051229a4ead0b57e6658e00ac11 (\"Change MemPoolRemovalReason to variant type\"):\r\n\r\nWas a bit surprised that `pthisBlock->GetHash()` isn't returning a member variable and instead is calculating the hash each time its called. Worth mentioning we are adding an extra hash to `ConnectTip`. Probably negligible but wanted to mention it.",
      "commit_id" : "f7ec03ebe5d186007d49b40cadf6bd58eacd3646",
      "created_at" : "2024-05-22T09:26:47Z",
      "diff_hunk" : "@@ -3057,7 +3057,7 @@ bool Chainstate::ConnectTip(BlockValidationState& state, CBlockIndex* pindexNew,\n              Ticks<MillisecondsDouble>(time_chainstate) / num_blocks_total);\n     // Remove conflicting transactions from the mempool.;\n     if (m_mempool) {\n-        m_mempool->removeForBlock(blockConnecting.vtx, pindexNew->nHeight);\n+        m_mempool->removeForBlock(blockConnecting.vtx, pthisBlock->GetHash(), pindexNew->nHeight);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1609617090",
      "id" : 1609617090,
      "line" : 3060,
      "node_id" : "PRRC_kwDOABII585f8M7C",
      "original_commit_id" : "7debac0b09faf051229a4ead0b57e6658e00ac11",
      "original_line" : 3060,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 32,
      "pull_request_review_id" : 2070549155,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609617090/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-22T10:02:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609617090",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1609633243"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609633243"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in https://github.com/bitcoin/bitcoin/pull/29680/commits/7debac0b09faf051229a4ead0b57e6658e00ac11 (\"Change MemPoolRemovalReason to variant type\"):\r\n\r\nI think it would be better to pass a dummy `CTxRef` here instead of nullptr.",
      "commit_id" : "f7ec03ebe5d186007d49b40cadf6bd58eacd3646",
      "created_at" : "2024-05-22T09:37:57Z",
      "diff_hunk" : "@@ -15,7 +16,7 @@\n \n BOOST_FIXTURE_TEST_SUITE(mempool_tests, TestingSetup)\n \n-static constexpr auto REMOVAL_REASON_DUMMY = MemPoolRemovalReason::REPLACED;\n+static const auto REMOVAL_REASON_DUMMY = ReplacedReason(nullptr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1609633243",
      "id" : 1609633243,
      "line" : 19,
      "node_id" : "PRRC_kwDOABII585f8Q3b",
      "original_commit_id" : "7debac0b09faf051229a4ead0b57e6658e00ac11",
      "original_line" : 19,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/test/mempool_tests.cpp",
      "position" : 13,
      "pull_request_review_id" : 2070549155,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609633243/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-22T10:02:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609633243",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1609644369"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609644369"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in https://github.com/bitcoin/bitcoin/pull/29680/commits/7debac0b09faf051229a4ead0b57e6658e00ac11 (\"Change MemPoolRemovalReason to variant type\"): \r\n\r\nAny reason why `conflicting_block_hash` is passed by reference but `replacement_tx` isn't?\r\n\r\nWould also be nice if we prevented these objects from be constructed with `nullptrs`. I'm not sure if we have a convention in our codebase around this or other examples to point to, but would be worth looking into.",
      "commit_id" : "f7ec03ebe5d186007d49b40cadf6bd58eacd3646",
      "created_at" : "2024-05-22T09:46:07Z",
      "diff_hunk" : "@@ -5,20 +5,61 @@\n #ifndef BITCOIN_KERNEL_MEMPOOL_REMOVAL_REASON_H\n #define BITCOIN_KERNEL_MEMPOOL_REMOVAL_REASON_H\n \n+#include <primitives/transaction.h>\n+#include <uint256.h>\n+\n #include <string>\n+#include <variant>\n \n-/** Reason why a transaction was removed from the mempool,\n+/** Reasons why a transaction was removed from the mempool,\n  * this is passed to the notification signal.\n  */\n-enum class MemPoolRemovalReason {\n-    EXPIRY,      //!< Expired from mempool\n-    SIZELIMIT,   //!< Removed in size limiting\n-    REORG,       //!< Removed for reorganization\n-    BLOCK,       //!< Removed for block\n-    CONFLICT,    //!< Removed for conflict with in-block transaction\n-    REPLACED,    //!< Removed for replacement\n+\n+struct ExpiryReason {\n+    std::string toString() const noexcept {\n+        return \"expiry\";\n+    }\n+};\n+\n+struct SizeLimitReason {\n+    std::string toString() const noexcept {\n+        return \"sizelimit\";\n+    }\n+};\n+\n+struct ReorgReason {\n+    std::string toString() const noexcept {\n+        return \"reorg\";\n+    }\n+};\n+\n+struct BlockReason {\n+    std::string toString() const noexcept {\n+        return \"block\";\n+    }\n };\n \n+struct ConflictReason {\n+    uint256 conflicting_block_hash;\n+    unsigned int conflicting_block_height;\n+\n+    explicit ConflictReason(const uint256& conflicting_block_hash, int conflicting_block_height) : conflicting_block_hash(conflicting_block_hash), conflicting_block_height(conflicting_block_height) {}\n+    std::string toString() const noexcept {\n+        return \"conflict\";\n+    }\n+};\n+\n+struct ReplacedReason {\n+    CTransactionRef replacement_tx;\n+\n+    explicit ReplacedReason(const CTransactionRef replacement_tx) : replacement_tx(replacement_tx) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1609644369",
      "id" : 1609644369,
      "line" : 55,
      "node_id" : "PRRC_kwDOABII585f8TlR",
      "original_commit_id" : "7debac0b09faf051229a4ead0b57e6658e00ac11",
      "original_line" : 55,
      "original_position" : 59,
      "original_start_line" : 46,
      "path" : "src/kernel/mempool_removal_reason.h",
      "position" : 59,
      "pull_request_review_id" : 2070549155,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609644369/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 46,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-22T10:02:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609644369",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1609666831"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609666831"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in https://github.com/bitcoin/bitcoin/pull/29680/commits/7debac0b09faf051229a4ead0b57e6658e00ac11 (\"Change MemPoolRemovalReason to variant type\"):\r\n\r\nI haven't finished reviewing the later commits yet, but seems odd to pass both `conflicting_block_hash` and `conflicting_block_height`. Seems like we should be able to only use `conflicting_block_hash`? ",
      "commit_id" : "f7ec03ebe5d186007d49b40cadf6bd58eacd3646",
      "created_at" : "2024-05-22T10:01:39Z",
      "diff_hunk" : "@@ -5,20 +5,61 @@\n #ifndef BITCOIN_KERNEL_MEMPOOL_REMOVAL_REASON_H\n #define BITCOIN_KERNEL_MEMPOOL_REMOVAL_REASON_H\n \n+#include <primitives/transaction.h>\n+#include <uint256.h>\n+\n #include <string>\n+#include <variant>\n \n-/** Reason why a transaction was removed from the mempool,\n+/** Reasons why a transaction was removed from the mempool,\n  * this is passed to the notification signal.\n  */\n-enum class MemPoolRemovalReason {\n-    EXPIRY,      //!< Expired from mempool\n-    SIZELIMIT,   //!< Removed in size limiting\n-    REORG,       //!< Removed for reorganization\n-    BLOCK,       //!< Removed for block\n-    CONFLICT,    //!< Removed for conflict with in-block transaction\n-    REPLACED,    //!< Removed for replacement\n+\n+struct ExpiryReason {\n+    std::string toString() const noexcept {\n+        return \"expiry\";\n+    }\n+};\n+\n+struct SizeLimitReason {\n+    std::string toString() const noexcept {\n+        return \"sizelimit\";\n+    }\n+};\n+\n+struct ReorgReason {\n+    std::string toString() const noexcept {\n+        return \"reorg\";\n+    }\n+};\n+\n+struct BlockReason {\n+    std::string toString() const noexcept {\n+        return \"block\";\n+    }\n };\n \n+struct ConflictReason {\n+    uint256 conflicting_block_hash;\n+    unsigned int conflicting_block_height;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1609666831",
      "id" : 1609666831,
      "line" : 44,
      "node_id" : "PRRC_kwDOABII585f8ZEP",
      "original_commit_id" : "7debac0b09faf051229a4ead0b57e6658e00ac11",
      "original_line" : 44,
      "original_position" : 48,
      "original_start_line" : 43,
      "path" : "src/kernel/mempool_removal_reason.h",
      "position" : 48,
      "pull_request_review_id" : 2070549155,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609666831/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 43,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-22T10:02:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1609666831",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1611830313"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1611830313"
         }
      },
      "author_association" : "NONE",
      "body" : "@josibake I looked around a bit and there might be something here.  `GetHash()` is called before this point\r\n- when we read the block from disk https://github.com/bitcoin/bitcoin/blob/e163d864d380956a4c0f89a4d80a76f5aefc9a08/src/node/blockstorage.cpp#L1092\r\n- when `ActivateBestChain` is called https://github.com/bitcoin/bitcoin/blob/e163d864d380956a4c0f89a4d80a76f5aefc9a08/src/validation.cpp#L3354\r\n\r\nThere might be some gain in caching GetHash() but I think that has to be addressed on its own. I'll have to measure the runtimes and see its worth a PR.\r\n\r\nI did also discover that `pindexNew` which is a `CBlockIndex` does store the `blockhash`, see https://github.com/bitcoin/bitcoin/blob/e163d864d380956a4c0f89a4d80a76f5aefc9a08/src/chain.h#L244 Looks like I can use that here to prevent recalculating the blockhash.\r\n",
      "commit_id" : "f7ec03ebe5d186007d49b40cadf6bd58eacd3646",
      "created_at" : "2024-05-23T14:42:53Z",
      "diff_hunk" : "@@ -3057,7 +3057,7 @@ bool Chainstate::ConnectTip(BlockValidationState& state, CBlockIndex* pindexNew,\n              Ticks<MillisecondsDouble>(time_chainstate) / num_blocks_total);\n     // Remove conflicting transactions from the mempool.;\n     if (m_mempool) {\n-        m_mempool->removeForBlock(blockConnecting.vtx, pindexNew->nHeight);\n+        m_mempool->removeForBlock(blockConnecting.vtx, pthisBlock->GetHash(), pindexNew->nHeight);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1611830313",
      "id" : 1611830313,
      "in_reply_to_id" : 1609617090,
      "line" : 3060,
      "node_id" : "PRRC_kwDOABII585gEpQp",
      "original_commit_id" : "7debac0b09faf051229a4ead0b57e6658e00ac11",
      "original_line" : 3060,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 32,
      "pull_request_review_id" : 2074196232,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1611830313/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-05-23T14:42:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1611830313",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37949128?v=4",
         "events_url" : "https://api.github.com/users/Eunovo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Eunovo/followers",
         "following_url" : "https://api.github.com/users/Eunovo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Eunovo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Eunovo",
         "id" : 37949128,
         "login" : "Eunovo",
         "node_id" : "MDQ6VXNlcjM3OTQ5MTI4",
         "organizations_url" : "https://api.github.com/users/Eunovo/orgs",
         "received_events_url" : "https://api.github.com/users/Eunovo/received_events",
         "repos_url" : "https://api.github.com/users/Eunovo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Eunovo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Eunovo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Eunovo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1611833798"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1611833798"
         }
      },
      "author_association" : "NONE",
      "body" : "The `TxStateBlockConflicted` requires both that's why I added the both of them",
      "commit_id" : "f7ec03ebe5d186007d49b40cadf6bd58eacd3646",
      "created_at" : "2024-05-23T14:45:09Z",
      "diff_hunk" : "@@ -5,20 +5,61 @@\n #ifndef BITCOIN_KERNEL_MEMPOOL_REMOVAL_REASON_H\n #define BITCOIN_KERNEL_MEMPOOL_REMOVAL_REASON_H\n \n+#include <primitives/transaction.h>\n+#include <uint256.h>\n+\n #include <string>\n+#include <variant>\n \n-/** Reason why a transaction was removed from the mempool,\n+/** Reasons why a transaction was removed from the mempool,\n  * this is passed to the notification signal.\n  */\n-enum class MemPoolRemovalReason {\n-    EXPIRY,      //!< Expired from mempool\n-    SIZELIMIT,   //!< Removed in size limiting\n-    REORG,       //!< Removed for reorganization\n-    BLOCK,       //!< Removed for block\n-    CONFLICT,    //!< Removed for conflict with in-block transaction\n-    REPLACED,    //!< Removed for replacement\n+\n+struct ExpiryReason {\n+    std::string toString() const noexcept {\n+        return \"expiry\";\n+    }\n+};\n+\n+struct SizeLimitReason {\n+    std::string toString() const noexcept {\n+        return \"sizelimit\";\n+    }\n+};\n+\n+struct ReorgReason {\n+    std::string toString() const noexcept {\n+        return \"reorg\";\n+    }\n+};\n+\n+struct BlockReason {\n+    std::string toString() const noexcept {\n+        return \"block\";\n+    }\n };\n \n+struct ConflictReason {\n+    uint256 conflicting_block_hash;\n+    unsigned int conflicting_block_height;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1611833798",
      "id" : 1611833798,
      "in_reply_to_id" : 1609666831,
      "line" : 44,
      "node_id" : "PRRC_kwDOABII585gEqHG",
      "original_commit_id" : "7debac0b09faf051229a4ead0b57e6658e00ac11",
      "original_line" : 44,
      "original_position" : 48,
      "original_start_line" : 43,
      "path" : "src/kernel/mempool_removal_reason.h",
      "position" : 48,
      "pull_request_review_id" : 2074202531,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1611833798/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 43,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-23T14:45:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1611833798",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37949128?v=4",
         "events_url" : "https://api.github.com/users/Eunovo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Eunovo/followers",
         "following_url" : "https://api.github.com/users/Eunovo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Eunovo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Eunovo",
         "id" : 37949128,
         "login" : "Eunovo",
         "node_id" : "MDQ6VXNlcjM3OTQ5MTI4",
         "organizations_url" : "https://api.github.com/users/Eunovo/orgs",
         "received_events_url" : "https://api.github.com/users/Eunovo/received_events",
         "repos_url" : "https://api.github.com/users/Eunovo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Eunovo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Eunovo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Eunovo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1611846940"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1611846940"
         }
      },
      "author_association" : "NONE",
      "body" : "> Any reason why `conflicting_block_hash` is passed by reference but `replacement_tx` isn't?\r\n\r\n`CTransactionRef` is already a pointer https://github.com/bitcoin/bitcoin/blob/e163d864d380956a4c0f89a4d80a76f5aefc9a08/src/primitives/transaction.h#L423-L424\r\n",
      "commit_id" : "f7ec03ebe5d186007d49b40cadf6bd58eacd3646",
      "created_at" : "2024-05-23T14:53:18Z",
      "diff_hunk" : "@@ -5,20 +5,61 @@\n #ifndef BITCOIN_KERNEL_MEMPOOL_REMOVAL_REASON_H\n #define BITCOIN_KERNEL_MEMPOOL_REMOVAL_REASON_H\n \n+#include <primitives/transaction.h>\n+#include <uint256.h>\n+\n #include <string>\n+#include <variant>\n \n-/** Reason why a transaction was removed from the mempool,\n+/** Reasons why a transaction was removed from the mempool,\n  * this is passed to the notification signal.\n  */\n-enum class MemPoolRemovalReason {\n-    EXPIRY,      //!< Expired from mempool\n-    SIZELIMIT,   //!< Removed in size limiting\n-    REORG,       //!< Removed for reorganization\n-    BLOCK,       //!< Removed for block\n-    CONFLICT,    //!< Removed for conflict with in-block transaction\n-    REPLACED,    //!< Removed for replacement\n+\n+struct ExpiryReason {\n+    std::string toString() const noexcept {\n+        return \"expiry\";\n+    }\n+};\n+\n+struct SizeLimitReason {\n+    std::string toString() const noexcept {\n+        return \"sizelimit\";\n+    }\n+};\n+\n+struct ReorgReason {\n+    std::string toString() const noexcept {\n+        return \"reorg\";\n+    }\n+};\n+\n+struct BlockReason {\n+    std::string toString() const noexcept {\n+        return \"block\";\n+    }\n };\n \n+struct ConflictReason {\n+    uint256 conflicting_block_hash;\n+    unsigned int conflicting_block_height;\n+\n+    explicit ConflictReason(const uint256& conflicting_block_hash, int conflicting_block_height) : conflicting_block_hash(conflicting_block_hash), conflicting_block_height(conflicting_block_height) {}\n+    std::string toString() const noexcept {\n+        return \"conflict\";\n+    }\n+};\n+\n+struct ReplacedReason {\n+    CTransactionRef replacement_tx;\n+\n+    explicit ReplacedReason(const CTransactionRef replacement_tx) : replacement_tx(replacement_tx) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1611846940",
      "id" : 1611846940,
      "in_reply_to_id" : 1609644369,
      "line" : 55,
      "node_id" : "PRRC_kwDOABII585gEtUc",
      "original_commit_id" : "7debac0b09faf051229a4ead0b57e6658e00ac11",
      "original_line" : 55,
      "original_position" : 59,
      "original_start_line" : 46,
      "path" : "src/kernel/mempool_removal_reason.h",
      "position" : 59,
      "pull_request_review_id" : 2074225665,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1611846940/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 46,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-23T14:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1611846940",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37949128?v=4",
         "events_url" : "https://api.github.com/users/Eunovo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Eunovo/followers",
         "following_url" : "https://api.github.com/users/Eunovo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Eunovo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Eunovo",
         "id" : 37949128,
         "login" : "Eunovo",
         "node_id" : "MDQ6VXNlcjM3OTQ5MTI4",
         "organizations_url" : "https://api.github.com/users/Eunovo/orgs",
         "received_events_url" : "https://api.github.com/users/Eunovo/received_events",
         "repos_url" : "https://api.github.com/users/Eunovo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Eunovo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Eunovo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Eunovo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1611850253"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1611850253"
         }
      },
      "author_association" : "NONE",
      "body" : "Same here. I'll take them out",
      "commit_id" : "f7ec03ebe5d186007d49b40cadf6bd58eacd3646",
      "created_at" : "2024-05-23T14:54:51Z",
      "diff_hunk" : "@@ -25,7 +26,8 @@ class BlockValidationState;\n class CBlock;\n class CBlockIndex;\n struct CBlockLocator;\n-enum class MemPoolRemovalReason;\n+class CValidationInterface;\n+class CScheduler;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1611850253",
      "id" : 1611850253,
      "in_reply_to_id" : 1609571510,
      "line" : 30,
      "node_id" : "PRRC_kwDOABII585gEuIN",
      "original_commit_id" : "7debac0b09faf051229a4ead0b57e6658e00ac11",
      "original_line" : 30,
      "original_position" : 14,
      "original_start_line" : 29,
      "path" : "src/validationinterface.h",
      "position" : 14,
      "pull_request_review_id" : 2074231300,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1611850253/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 29,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-23T14:54:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1611850253",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37949128?v=4",
         "events_url" : "https://api.github.com/users/Eunovo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Eunovo/followers",
         "following_url" : "https://api.github.com/users/Eunovo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Eunovo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Eunovo",
         "id" : 37949128,
         "login" : "Eunovo",
         "node_id" : "MDQ6VXNlcjM3OTQ5MTI4",
         "organizations_url" : "https://api.github.com/users/Eunovo/orgs",
         "received_events_url" : "https://api.github.com/users/Eunovo/received_events",
         "repos_url" : "https://api.github.com/users/Eunovo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Eunovo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Eunovo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Eunovo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1611867224"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1611867224"
         }
      },
      "author_association" : "NONE",
      "body" : "> Would also be nice if we prevented these objects from be constructed with `nullptrs`. I'm not sure if we have a convention in our codebase around this or other examples to point to, but would be worth looking into.\r\n\r\nIt looks like I may be able to do this by deleting the constructor\r\n```\r\n// Deleted constructor\r\nReplacedReason(std::nullptr_t) = delete;\r\n```\r\nI'll test it",
      "commit_id" : "f7ec03ebe5d186007d49b40cadf6bd58eacd3646",
      "created_at" : "2024-05-23T15:03:43Z",
      "diff_hunk" : "@@ -5,20 +5,61 @@\n #ifndef BITCOIN_KERNEL_MEMPOOL_REMOVAL_REASON_H\n #define BITCOIN_KERNEL_MEMPOOL_REMOVAL_REASON_H\n \n+#include <primitives/transaction.h>\n+#include <uint256.h>\n+\n #include <string>\n+#include <variant>\n \n-/** Reason why a transaction was removed from the mempool,\n+/** Reasons why a transaction was removed from the mempool,\n  * this is passed to the notification signal.\n  */\n-enum class MemPoolRemovalReason {\n-    EXPIRY,      //!< Expired from mempool\n-    SIZELIMIT,   //!< Removed in size limiting\n-    REORG,       //!< Removed for reorganization\n-    BLOCK,       //!< Removed for block\n-    CONFLICT,    //!< Removed for conflict with in-block transaction\n-    REPLACED,    //!< Removed for replacement\n+\n+struct ExpiryReason {\n+    std::string toString() const noexcept {\n+        return \"expiry\";\n+    }\n+};\n+\n+struct SizeLimitReason {\n+    std::string toString() const noexcept {\n+        return \"sizelimit\";\n+    }\n+};\n+\n+struct ReorgReason {\n+    std::string toString() const noexcept {\n+        return \"reorg\";\n+    }\n+};\n+\n+struct BlockReason {\n+    std::string toString() const noexcept {\n+        return \"block\";\n+    }\n };\n \n+struct ConflictReason {\n+    uint256 conflicting_block_hash;\n+    unsigned int conflicting_block_height;\n+\n+    explicit ConflictReason(const uint256& conflicting_block_hash, int conflicting_block_height) : conflicting_block_hash(conflicting_block_hash), conflicting_block_height(conflicting_block_height) {}\n+    std::string toString() const noexcept {\n+        return \"conflict\";\n+    }\n+};\n+\n+struct ReplacedReason {\n+    CTransactionRef replacement_tx;\n+\n+    explicit ReplacedReason(const CTransactionRef replacement_tx) : replacement_tx(replacement_tx) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#discussion_r1611867224",
      "id" : 1611867224,
      "in_reply_to_id" : 1609644369,
      "line" : 55,
      "node_id" : "PRRC_kwDOABII585gEyRY",
      "original_commit_id" : "7debac0b09faf051229a4ead0b57e6658e00ac11",
      "original_line" : 55,
      "original_position" : 59,
      "original_start_line" : 46,
      "path" : "src/kernel/mempool_removal_reason.h",
      "position" : 59,
      "pull_request_review_id" : 2074258462,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29680",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1611867224/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 46,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-05-23T15:03:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1611867224",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37949128?v=4",
         "events_url" : "https://api.github.com/users/Eunovo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Eunovo/followers",
         "following_url" : "https://api.github.com/users/Eunovo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Eunovo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Eunovo",
         "id" : 37949128,
         "login" : "Eunovo",
         "node_id" : "MDQ6VXNlcjM3OTQ5MTI4",
         "organizations_url" : "https://api.github.com/users/Eunovo/orgs",
         "received_events_url" : "https://api.github.com/users/Eunovo/received_events",
         "repos_url" : "https://api.github.com/users/Eunovo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Eunovo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Eunovo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Eunovo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-05-24T09:37:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29680#issuecomment-2129082697",
      "id" : 2129082697,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29680",
      "node_id" : "IC_kwDOABII585-5zlJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2129082697/reactions"
      },
      "updated_at" : "2024-05-24T09:37:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2129082697",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
