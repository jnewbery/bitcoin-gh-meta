[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29642).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/29642#issuecomment-1999854726), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/29642#issuecomment-2007906431) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29672](https://github.com/bitcoin/bitcoin/pull/29672) (validation: Make translations of fatal errors consistent by TheCharlatan)\n* [#29641](https://github.com/bitcoin/bitcoin/pull/29641) (scripted-diff: Use LogInfo/LogDebug over LogPrintf/LogPrint by maflcko)\n* [#29553](https://github.com/bitcoin/bitcoin/pull/29553) (assumeutxo: Add dumptxoutset height param, remove shell scripts by fjahr)\n* [#29415](https://github.com/bitcoin/bitcoin/pull/29415) (Broadcast own transactions only via short-lived Tor or I2P connections by vasild)\n* [#29402](https://github.com/bitcoin/bitcoin/pull/29402) (mempool: Log added for dumping mempool transactions to disk by kevkevinpal)\n* [#29278](https://github.com/bitcoin/bitcoin/pull/29278) (Wallet:  Add `maxfeerate` wallet startup option by ismaelsadeeq)\n* [#29231](https://github.com/bitcoin/bitcoin/pull/29231) (logging: Update to new logging API by ajtowns)\n* [#28843](https://github.com/bitcoin/bitcoin/pull/28843) ([refactor] Remove BlockAssembler m_mempool member by TheCharlatan)\n* [#28687](https://github.com/bitcoin/bitcoin/pull/28687) (C++20 std::views::reverse by stickies-v)\n* [#28280](https://github.com/bitcoin/bitcoin/pull/28280) (Don't empty dbcache on prune flushes: >30% faster IBD by andrewtoth)\n* [#28233](https://github.com/bitcoin/bitcoin/pull/28233) (validation: don't clear cache on periodic flush by andrewtoth)\n* [#27039](https://github.com/bitcoin/bitcoin/pull/27039) (blockstorage: do not flush block to disk if it is already there by pinheadmz)\n* [#27006](https://github.com/bitcoin/bitcoin/pull/27006) (reduce cs_main scope, guard block index 'nFile' under a local mutex by furszy)\n* [#26593](https://github.com/bitcoin/bitcoin/pull/26593) (tracing: Only prepare tracepoint arguments when actually tracing by 0xB10C)\n* [#26022](https://github.com/bitcoin/bitcoin/pull/26022) (Add util::ResultPtr class by ryanofsky)\n* [#25722](https://github.com/bitcoin/bitcoin/pull/25722) (refactor: Use util::Result class for wallet loading by ryanofsky)\n* [#25665](https://github.com/bitcoin/bitcoin/pull/25665) (refactor: Add util::Result failure values, multiple error and warning messages by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2024-03-12T21:34:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29642#issuecomment-1992625857",
      "id" : 1992625857,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29642",
      "node_id" : "IC_kwDOABII5852xQ7B",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1992625857/reactions"
      },
      "updated_at" : "2024-03-20T00:25:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1992625857",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK, nice one. Will first re-review #25665",
      "created_at" : "2024-03-15T15:01:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29642#issuecomment-1999854726",
      "id" : 1999854726,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29642",
      "node_id" : "IC_kwDOABII5853M1yG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1999854726/reactions"
      },
      "updated_at" : "2024-03-15T15:01:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1999854726",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-03-18T18:30:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29642#issuecomment-2004649663",
      "id" : 2004649663,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29642",
      "node_id" : "IC_kwDOABII5853fIa_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2004649663/reactions"
      },
      "updated_at" : "2024-03-18T18:30:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2004649663",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK, it is better for a function to return an error status than set a flag, initiate a global shutdown, and not return a success or failure value.\r\n\r\nBut the [FatalError](https://github.com/TheCharlatan/bitcoin/blob/f251761036231fe0c6f92d5af75f6507a17408a4/src/kernel/fatal_error.h#L12-L35) enum and [HandleFatalError](https://github.com/TheCharlatan/bitcoin/blob/f251761036231fe0c6f92d5af75f6507a17408a4/src/node/abort.h#L24-L32) / [CheckFatal](https://github.com/TheCharlatan/bitcoin/blob/f251761036231fe0c6f92d5af75f6507a17408a4/src/node/abort.h#L34-L46) / [clang-tidy](https://github.com/TheCharlatan/bitcoin/blob/f251761036231fe0c6f92d5af75f6507a17408a4/contrib/devtools/bitcoin-tidy/fatal_error.cpp) machinery do not seem very friendly to use, and I don't see what benefits they offer over just using `util::Result` and `[[nodiscard]]`.\r\n\r\nIt also seems like it would be nice to have local enums for functions like `ProcessTransaction` and `ActivateBestChain` that just have 2 or 3 error codes instead of 22 error codes like `FatalError`.\r\n\r\nAlso, I understand the goal of this is to improve the libbitcoinkernel interface, but I'm not sure this should mean moving AbortNode calls out of kernel code into net_processing code. I think it would be probably be better if the net_processing functions could return success/failure as well, and AbortNode calls could move to an even higher level. Or if AbortNode calls could just be left where they are and this could be a pure refactoring that just adds missing return values.\r\n\r\nI guess my main question is would it be possible to make a stripped down version of this PR that just adds `[[nodiscard]]` to all functions where `fatalError`/`flushError` are called, and bubbles up `util::Result` values, and is just a plain refactoring that doesn't change behavior, and doesn't add the FatalError type and handlers? It seems like could make the PR smaller, and make libbitcoinkernel act like a normal library that can return errors, without changing other things.",
      "created_at" : "2024-03-19T18:53:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29642#issuecomment-2007906431",
      "id" : 2007906431,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29642",
      "node_id" : "IC_kwDOABII5853rjh_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2007906431/reactions"
      },
      "updated_at" : "2024-03-19T18:53:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2007906431",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I don't see what benefits they offer over just using `util::Result` and `[[nodiscard]]`\r\n\r\nI guess I figured out the answer to this question while I was writing the rest of the rest of my comment. The benefit of adding all the [FatalError](https://github.com/TheCharlatan/bitcoin/blob/f251761036231fe0c6f92d5af75f6507a17408a4/src/kernel/fatal_error.h#L12-L35)/[HandleFatalError](https://github.com/TheCharlatan/bitcoin/blob/f251761036231fe0c6f92d5af75f6507a17408a4/src/node/abort.h#L24-L32)/[CheckFatal](https://github.com/TheCharlatan/bitcoin/blob/f251761036231fe0c6f92d5af75f6507a17408a4/src/node/abort.h#L34-L46)/[clang-tidy](https://github.com/TheCharlatan/bitcoin/blob/f251761036231fe0c6f92d5af75f6507a17408a4/contrib/devtools/bitcoin-tidy/fatal_error.cpp) stuff is that it can replace the [fatalError and flushError](https://github.com/bitcoin/bitcoin/blob/3d216baf91ca754e46e89788205513a956ec6d0a/src/kernel/notifications_interface.h#L45-L60) notifications and ensure that new kernel code nevers trigger a shutdown without also returning an error code.\r\n\r\nBut IMO the benefit of enforcing that errors are always returned doesn't clearly outweigh the costs, so am wondering about about a more lightweight approach that just bubbles up errors from existing fatalError/flushError calls.",
      "created_at" : "2024-03-19T19:40:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29642#issuecomment-2007981964",
      "id" : 2007981964,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29642",
      "node_id" : "IC_kwDOABII5853r1-M",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2007981964/reactions"
      },
      "updated_at" : "2024-03-19T19:40:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2007981964",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Re https://github.com/bitcoin/bitcoin/pull/29642#issuecomment-2007906431 and https://github.com/bitcoin/bitcoin/pull/29642#issuecomment-2007981964\r\n\r\n> ensure that new kernel code nevers trigger a shutdown without also returning an error code.\r\n\r\nYes, that is the goal of this pull request. I first wrote the error handling and then the tidy plugin. The plugin helped uncover a handful of bugs that were not immediately obvious to me, so I do think it is useful beyond `[[nodiscard]]`. It also uncovered some cases where the current handling of the fatal errors is questionable. I don't think the helper functions are all that complicated, though their naming sure could be improved to make it more obvious what they do. They also only form a small part of what the linter enforces. If reviewers view the linter as too specialized, it could be dropped from the PR, but still used to validate the work.\r\n\r\n> The benefit of adding all the [FatalError](https://github.com/TheCharlatan/bitcoin/blob/f251761036231fe0c6f92d5af75f6507a17408a4/src/kernel/fatal_error.h#L12-L35)/[HandleFatalError](https://github.com/TheCharlatan/bitcoin/blob/f251761036231fe0c6f92d5af75f6507a17408a4/src/node/abort.h#L24-L32)/[CheckFatal](https://github.com/TheCharlatan/bitcoin/blob/f251761036231fe0c6f92d5af75f6507a17408a4/src/node/abort.h#L34-L46)/[clang-tidy](https://github.com/TheCharlatan/bitcoin/blob/f251761036231fe0c6f92d5af75f6507a17408a4/contrib/devtools/bitcoin-tidy/fatal_error.cpp) stuff is that it can replace the [fatalError and flushError](https://github.com/bitcoin/bitcoin/blob/3d216baf91ca754e46e89788205513a956ec6d0a/src/kernel/notifications_interface.h#L45-L60) notifications\r\n\r\nTo me this is more the logical conclusion of the PR than its goal. The goal is to bubble up an error code. Adding an error code next to the existing fatalError and flushError notifications in validation that is not used by production code for the sake of not changing things too much seems unfortunate though. The PR already tries hard to keep the rest of the behavior when a fatal error is encountered the same. Having three different fatal mechanisms seems more confusing than one consistent one that is enforced with a linter and is very mechanical. I also feel like having multiple ways to achieve the same outcome is bad API design. Removing the notifications could be done at a later point, but I don't think it makes this PR significantly harder to review and it would leave things in an inconclusive state.\r\n\r\n> It also seems like it would be nice to have local enums for functions like ProcessTransaction and ActivateBestChain that just have 2 or 3 error codes instead of 22 error codes like FatalError.\r\n\r\nThe code has always treated fatal errors as their own weird separate thing, so putting them in a a single enum does not really feel that unnatural to me. However this PR could also be realized with more specialized types. What benefit do you see with such an approach?",
      "created_at" : "2024-03-20T11:27:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29642#issuecomment-2009349275",
      "id" : 2009349275,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29642",
      "node_id" : "IC_kwDOABII5853xDyb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2009349275/reactions"
      },
      "updated_at" : "2024-03-20T11:27:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2009349275",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-03-20T17:08:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29642#issuecomment-2010092887",
      "id" : 2010092887,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29642",
      "node_id" : "IC_kwDOABII5853z5VX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2010092887/reactions"
      },
      "updated_at" : "2024-03-20T17:08:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2010092887",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for explanations. So as I understand it, this PR is trying to do 3 things:\r\n\r\n(1) Ensure that if an error happens while calling a function, the error is returned to the caller.\r\n(2) Ensure if that if an error happens while calling a function, and the node will be shutting down as a result of that error, the fact node is shutting down will be returned to the caller.\r\n(3) Fix a \"handful of bugs\" in error handling.\r\n\r\nI think (1) is great and definitely worth doing, but I don't think this PR is doing an ideal job in its implementation. I can describe the specific problems I see there currently below.\r\n\r\nI don't really think (2) is a worthwhile goal, because it should have no effect on libbitcoinkernel users and I don't really see how it could catch any significant internal bugs. But if there is a way to implement it without negatively impacting libbitcoinkernel API, I think it would be fine to pursue.\r\n\r\nI'm extremely wary of (3). I fully believe there are bugs in error handling and many things that could be improved, but I don't think those changes can be effectively reviewed as part of a big refactoring PR like this. I think it can be ok to combine behavior changes with refactoring when the combining these simplifies things, but in this case I only see adding return information at the same time as changing error handling making things more complicated. (If there are counterexamples, though, I could be convinced otherwise.)\r\n\r\n---\r\n\r\nThe specific problems I see with error reporting in this PR have to do with the `FatalError` enum. I think it is a bad developer experience to have a bunch of functions returning an enum with 20 possible error values, and not knowing which functions might return which values, and not having a suggestion of how different values need to be handled. I'm also skeptical that \"fatal errors\" are a concept that should be exposed to libbitcoinkernel callers, since not all callers will be implementing nodes that need to shut down, and normally library functions should be able to report errors without requiring they be handled in a certain way. Also, I think the fact that error type is an enum type rather than something more general like a std::variant means that it might be hard to return add useful metadata to the result value (like which block could not be read if a block read failed).\r\n\r\nI was experimenting today with a change to just return \\[\\[nodiscard]] util::Result from every function calling fatalError or flushError, and I think is mostly complete (validation.cpp and blockstorage.cpp compile) which I think could be a simpler approach, providing a better API for libbitcoinkernel callers, and also being easier to review. I think other improvements could be made on top of it but maybe it is a simpler starting point. Commit is bc1055157b2e6458683953a41a7b243f27f77d98 and I can work on getting the rest of it compiling and then splitting it up.",
      "created_at" : "2024-03-20T21:22:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29642#issuecomment-2010662998",
      "id" : 2010662998,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29642",
      "node_id" : "IC_kwDOABII58532EhW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2010662998/reactions"
      },
      "updated_at" : "2024-03-20T21:22:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2010662998",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Re https://github.com/bitcoin/bitcoin/pull/29642#issuecomment-2009349275\r\n\r\n> I'm extremely wary of (3).\r\n\r\nJust for clarity, we are completely on the same page here. The bugs I was referring to before were all in how I was introducing the bubbling up of the errors and not with when or how an error is being issued currently. To reiterate, this patch set does not change when errors are being issued, nor should it influence the control flow. I'm not fixing bugs in error handling here.\r\n\r\n> I'm also skeptical that \"fatal errors\" are a concept that should be exposed to libbitcoinkernel callers, since not all callers will be implementing nodes that need to shut down, and normally library functions should be able to report errors without requiring they be handled in a certain way.\r\n\r\nThat is a fair point. I think in that case a more granular approach may be warranted. \r\n\r\n> Also, I think the fact that error type is an enum type rather than something more general like a std::variant means that it might be hard to return add useful metadata to the result value (like which block could not be read if a block read failed).\r\n\r\nThere is always the util::Result error string that describes where the error is coming from and what caused it, but I agree that a richer error type could be useful here. The reason I was using `util::Result` was that it provides a single, predictable way to handle the errors. An approach with a variant or tuple type would be able to return richer information, but also be less predictable.\r\n",
      "created_at" : "2024-03-20T22:23:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29642#issuecomment-2010753063",
      "id" : 2010753063,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29642",
      "node_id" : "IC_kwDOABII58532agn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2010753063/reactions"
      },
      "updated_at" : "2024-03-20T22:23:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2010753063",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   }
]
