[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "created_at" : "2023-09-14T20:47:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#issuecomment-1720131657",
      "id" : 1720131657,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28485",
      "node_id" : "IC_kwDOABII585mhyBJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1720131657/reactions"
      },
      "updated_at" : "2023-09-14T20:47:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1720131657",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1327085783"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327085783"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I wonder why, given that this test uses immediate tx-relay. Shouldn't this check fail?",
      "commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "created_at" : "2023-09-15T10:06:17Z",
      "diff_hunk" : "@@ -135,14 +136,29 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)[\"txid\"]\n+        irr_wtxid = self.nodes[0].getmempoolentry(irr_txid)[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is received\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n-        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n-        filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.send_message(filter_peer.watch_filter_init)\n+        filter_peer.send_and_ping(msg_mempool())\n+        filter_peer.wait_for_tx(rel_txid)\n+\n+        self.log.info(\"Request the irrelevant transaction even though it has not being offered to us\")\n+        filter_peer.tx_received = False\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(irr_wtxid, 16))]))\n+        self.log.info(\"We should get it anyway given it was on the mempool when the MEMPOOL message was sent\")\n+        assert filter_peer.tx_received\n+\n+        self.log.info(\"Create a third transaction (that was therefore not part of the mempool message) and try to retrieve it\")\n+        filter_peer.tx_received = False\n+        add_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=3 * COIN)[\"txid\"]\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(self.nodes[0].getmempoolentry(add_txid)[\"wtxid\"], 16))]))\n+        self.log.info(\"We won't be able to request this one given and INV was not sent since it entered the mempool\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1327085783",
      "id" : 1327085783,
      "line" : 160,
      "node_id" : "PRRC_kwDOABII585PGbjX",
      "original_commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "original_line" : 160,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : 39,
      "pull_request_review_id" : 1628630549,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 1,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327085783/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-15T10:06:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327085783",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1327101950"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327101950"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe there hasn't been a `SendMessages` yet?",
      "commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "created_at" : "2023-09-15T10:22:28Z",
      "diff_hunk" : "@@ -135,14 +136,29 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)[\"txid\"]\n+        irr_wtxid = self.nodes[0].getmempoolentry(irr_txid)[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is received\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n-        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n-        filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.send_message(filter_peer.watch_filter_init)\n+        filter_peer.send_and_ping(msg_mempool())\n+        filter_peer.wait_for_tx(rel_txid)\n+\n+        self.log.info(\"Request the irrelevant transaction even though it has not being offered to us\")\n+        filter_peer.tx_received = False\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(irr_wtxid, 16))]))\n+        self.log.info(\"We should get it anyway given it was on the mempool when the MEMPOOL message was sent\")\n+        assert filter_peer.tx_received\n+\n+        self.log.info(\"Create a third transaction (that was therefore not part of the mempool message) and try to retrieve it\")\n+        filter_peer.tx_received = False\n+        add_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=3 * COIN)[\"txid\"]\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(self.nodes[0].getmempoolentry(add_txid)[\"wtxid\"], 16))]))\n+        self.log.info(\"We won't be able to request this one given and INV was not sent since it entered the mempool\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1327101950",
      "id" : 1327101950,
      "in_reply_to_id" : 1327085783,
      "line" : 160,
      "node_id" : "PRRC_kwDOABII585PGff-",
      "original_commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "original_line" : 160,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : 39,
      "pull_request_review_id" : 1628655240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327101950/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-15T10:22:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327101950",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1327105421"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327105421"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IIRC `send_and_ping` should force a `SendMessages` now (on current master)",
      "commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "created_at" : "2023-09-15T10:26:06Z",
      "diff_hunk" : "@@ -135,14 +136,29 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)[\"txid\"]\n+        irr_wtxid = self.nodes[0].getmempoolentry(irr_txid)[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is received\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n-        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n-        filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.send_message(filter_peer.watch_filter_init)\n+        filter_peer.send_and_ping(msg_mempool())\n+        filter_peer.wait_for_tx(rel_txid)\n+\n+        self.log.info(\"Request the irrelevant transaction even though it has not being offered to us\")\n+        filter_peer.tx_received = False\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(irr_wtxid, 16))]))\n+        self.log.info(\"We should get it anyway given it was on the mempool when the MEMPOOL message was sent\")\n+        assert filter_peer.tx_received\n+\n+        self.log.info(\"Create a third transaction (that was therefore not part of the mempool message) and try to retrieve it\")\n+        filter_peer.tx_received = False\n+        add_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=3 * COIN)[\"txid\"]\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(self.nodes[0].getmempoolentry(add_txid)[\"wtxid\"], 16))]))\n+        self.log.info(\"We won't be able to request this one given and INV was not sent since it entered the mempool\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1327105421",
      "id" : 1327105421,
      "in_reply_to_id" : 1327085783,
      "line" : 160,
      "node_id" : "PRRC_kwDOABII585PGgWN",
      "original_commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "original_line" : 160,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : 39,
      "pull_request_review_id" : 1628660501,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327105421/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-15T10:26:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327105421",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
